// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.SymmetricTransform
#include "Mono/Security/Cryptography/SymmetricTransform.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.SymmetricAlgorithm algo
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::SymmetricAlgorithm*& Mono::Security::Cryptography::SymmetricTransform::dyn_algo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_algo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "algo"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::SymmetricAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean encrypt
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::SymmetricTransform::dyn_encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_encrypt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encrypt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 BlockSizeByte
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::SymmetricTransform::dyn_BlockSizeByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_BlockSizeByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlockSizeByte"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] temp
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_temp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "temp"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] temp2
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_temp2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_temp2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "temp2"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] workBuff
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_workBuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_workBuff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workBuff"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] workout
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_workout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_workout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workout"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.PaddingMode padmode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::PaddingMode& Mono::Security::Cryptography::SymmetricTransform::dyn_padmode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_padmode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "padmode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::PaddingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 FeedBackByte
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::SymmetricTransform::dyn_FeedBackByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_FeedBackByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FeedBackByte"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::SymmetricTransform::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean lastBlock
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::SymmetricTransform::dyn_lastBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_lastBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBlock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator _rng
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RandomNumberGenerator*& Mono::Security::Cryptography::SymmetricTransform::dyn__rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn__rng");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rng"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.System.IDisposable.Dispose
void Mono::Security::Cryptography::SymmetricTransform::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Dispose
void Mono::Security::Cryptography::SymmetricTransform::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_CanTransformMultipleBlocks
bool Mono::Security::Cryptography::SymmetricTransform::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_CanReuseTransform
bool Mono::Security::Cryptography::SymmetricTransform::get_CanReuseTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::get_CanReuseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_InputBlockSize
int Mono::Security::Cryptography::SymmetricTransform::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_OutputBlockSize
int Mono::Security::Cryptography::SymmetricTransform::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Transform
void Mono::Security::Cryptography::SymmetricTransform::Transform(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.ECB
void Mono::Security::Cryptography::SymmetricTransform::ECB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::ECB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CBC
void Mono::Security::Cryptography::SymmetricTransform::CBC(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::CBC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CFB
void Mono::Security::Cryptography::SymmetricTransform::CFB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::CFB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.OFB
void Mono::Security::Cryptography::SymmetricTransform::OFB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::OFB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CTS
void Mono::Security::Cryptography::SymmetricTransform::CTS(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::CTS");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CheckInput
void Mono::Security::Cryptography::SymmetricTransform::CheckInput(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::CheckInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.TransformBlock
int Mono::Security::Cryptography::SymmetricTransform::TransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::TransformBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_KeepLastBlock
bool Mono::Security::Cryptography::SymmetricTransform::get_KeepLastBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::get_KeepLastBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeepLastBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.InternalTransformBlock
int Mono::Security::Cryptography::SymmetricTransform::InternalTransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::InternalTransformBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalTransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Random
void Mono::Security::Cryptography::SymmetricTransform::Random(::ArrayW<uint8_t> buffer, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::Random");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Random", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, start, length);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.ThrowBadPaddingException
void Mono::Security::Cryptography::SymmetricTransform::ThrowBadPaddingException(::System::Security::Cryptography::PaddingMode padding, int length, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::ThrowBadPaddingException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowBadPaddingException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, padding, length, position);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.FinalEncrypt
::ArrayW<uint8_t> Mono::Security::Cryptography::SymmetricTransform::FinalEncrypt(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::FinalEncrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.FinalDecrypt
::ArrayW<uint8_t> Mono::Security::Cryptography::SymmetricTransform::FinalDecrypt(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::FinalDecrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.TransformFinalBlock
::ArrayW<uint8_t> Mono::Security::Cryptography::SymmetricTransform::TransformFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Finalize
void Mono::Security::Cryptography::SymmetricTransform::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.DSAManaged
#include "Mono/Security/Cryptography/DSAManaged.hpp"
// Including type: Mono.Security.Cryptography.DSAManaged/KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/DSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean keypairGenerated
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::DSAManaged::dyn_keypairGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_keypairGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keypairGenerated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::DSAManaged::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger p
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger q
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "q"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger g
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_g");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger x
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger y
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger j
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_j() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_j");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "j"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger seed
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_seed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_seed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seed"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 counter
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::DSAManaged::dyn_counter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_counter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean j_missing
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::DSAManaged::dyn_j_missing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_j_missing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "j_missing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator rng
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RandomNumberGenerator*& Mono::Security::Cryptography::DSAManaged::dyn_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_rng");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rng"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.DSAManaged/KeyGeneratedEventHandler KeyGenerated
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler*& Mono::Security::Cryptography::DSAManaged::dyn_KeyGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_KeyGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyGenerated"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Generate
void Mono::Security::Cryptography::DSAManaged::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.GenerateKeyPair
void Mono::Security::Cryptography::DSAManaged::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::GenerateKeyPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.add
void Mono::Security::Cryptography::DSAManaged::add(::ArrayW<uint8_t> a, ::ArrayW<uint8_t> b, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.GenerateParams
void Mono::Security::Cryptography::DSAManaged::GenerateParams(int keyLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::GenerateParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyLength);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_Random
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::DSAManaged::get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::get_Random");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Random", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_PublicOnly
bool Mono::Security::Cryptography::DSAManaged::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.NormalizeArray
::ArrayW<uint8_t> Mono::Security::Cryptography::DSAManaged::NormalizeArray(::ArrayW<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::NormalizeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, array);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.add_KeyGenerated
void Mono::Security::Cryptography::DSAManaged::add_KeyGenerated(::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::add_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_KeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.remove_KeyGenerated
void Mono::Security::Cryptography::DSAManaged::remove_KeyGenerated(::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::remove_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_KeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Finalize
void Mono::Security::Cryptography::DSAManaged::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_KeySize
int Mono::Security::Cryptography::DSAManaged::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_KeyExchangeAlgorithm
::StringW Mono::Security::Cryptography::DSAManaged::get_KeyExchangeAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::get_KeyExchangeAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_SignatureAlgorithm
::StringW Mono::Security::Cryptography::DSAManaged::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.ExportParameters
::System::Security::Cryptography::DSAParameters Mono::Security::Cryptography::DSAManaged::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::ExportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.ImportParameters
void Mono::Security::Cryptography::DSAManaged::ImportParameters(::System::Security::Cryptography::DSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::ImportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.CreateSignature
::ArrayW<uint8_t> Mono::Security::Cryptography::DSAManaged::CreateSignature(::ArrayW<uint8_t> rgbHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::CreateSignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbHash);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.VerifySignature
bool Mono::Security::Cryptography::DSAManaged::VerifySignature(::ArrayW<uint8_t> rgbHash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::VerifySignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Dispose
void Mono::Security::Cryptography::DSAManaged::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.DSAManaged/KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/DSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.DSAManaged/KeyGeneratedEventHandler.Invoke
void Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::Invoke(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
// Including type: Mono.Math.BigInteger/ModulusRing
#include "Mono/Math/BigInteger__ModulusRing.hpp"
// Including type: Mono.Math.BigInteger/Kernel
#include "Mono/Math/BigInteger__Kernel.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] smallPrimes
::ArrayW<uint> Mono::Math::BigInteger_::_get_smallPrimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::_get_smallPrimes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("Mono.Math", "BigInteger", "smallPrimes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] smallPrimes
void Mono::Math::BigInteger_::_set_smallPrimes(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::_set_smallPrimes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "smallPrimes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger_::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("Mono.Math", "BigInteger", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Math::BigInteger_::_set_rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "rng", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 length
[[deprecated("Use field access instead!")]] uint& Mono::Math::BigInteger_::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] data
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Math::BigInteger_::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Math.BigInteger.get_Rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger_::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::GenerateRandom(int bits, ::System::Security::Cryptography::RandomNumberGenerator* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(rng)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits, rng);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::GenerateRandom(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.Randomize
void Mono::Math::BigInteger_::Randomize(::System::Security::Cryptography::RandomNumberGenerator* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Randomize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Randomize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rng)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rng);
}
// Autogenerated method: Mono.Math.BigInteger.Randomize
void Mono::Math::BigInteger_::Randomize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Randomize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Randomize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.BitCount
int Mono::Math::BigInteger_::BitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::BitCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BitCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.TestBit
bool Mono::Math::BigInteger_::TestBit(uint bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::TestBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.TestBit
bool Mono::Math::BigInteger_::TestBit(int bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::TestBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger_::SetBit(uint bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger_::SetBit(uint bitNum, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitNum, value);
}
// Autogenerated method: Mono.Math.BigInteger.LowestSetBit
int Mono::Math::BigInteger_::LowestSetBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::LowestSetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowestSetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetBytes
::ArrayW<uint8_t> Mono::Math::BigInteger_::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger_::ToString(uint radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, radix);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger_::ToString(uint radix, ::StringW characterSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(characterSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, radix, characterSet);
}
// Autogenerated method: Mono.Math.BigInteger.Normalize
void Mono::Math::BigInteger_::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.Clear
void Mono::Math::BigInteger_::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ModInverse
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModInverse(::Mono::Math::BigInteger_* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, modulus);
}
// Autogenerated method: Mono.Math.BigInteger.ModPow
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModPow(::Mono::Math::BigInteger_* exp, ::Mono::Math::BigInteger_* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModPow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModPow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exp), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, exp, n);
}
// Autogenerated method: Mono.Math.BigInteger.IsProbablePrime
bool Mono::Math::BigInteger_::IsProbablePrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::IsProbablePrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsProbablePrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GeneratePseudoPrime
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::GeneratePseudoPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::GeneratePseudoPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GeneratePseudoPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.Incr2
void Mono::Math::BigInteger_::Incr2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Incr2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Incr2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger..cctor
void Mono::Math::BigInteger_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetHashCode
int Mono::Math::BigInteger_::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger_::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.Equals
bool Mono::Math::BigInteger_::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: Mono.Math.BigInteger.op_Addition
::Mono::Math::BigInteger_* Mono::Math::operator+(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Subtraction
::Mono::Math::BigInteger_* Mono::Math::operator-(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
uint Mono::Math::operator%(::Mono::Math::BigInteger_& bi, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
::Mono::Math::BigInteger_* Mono::Math::operator%(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Division
::Mono::Math::BigInteger_* Mono::Math::operator/(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Multiply
::Mono::Math::BigInteger_* Mono::Math::operator*(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Multiply
::Mono::Math::BigInteger_* Mono::Math::operator*(::Mono::Math::BigInteger_& bi, const int& i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi, i);
}
// Autogenerated method: Mono.Math.BigInteger.op_LeftShift
::Mono::Math::BigInteger_* Mono::Math::operator<<(::Mono::Math::BigInteger_& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(shiftVal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_RightShift
::Mono::Math::BigInteger_* Mono::Math::operator>>(::Mono::Math::BigInteger_& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(shiftVal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(::Mono::Math::BigInteger_& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(::Mono::Math::BigInteger_& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThan
bool Mono::Math::operator >(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThan
bool Mono::Math::operator <(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThanOrEqual
bool Mono::Math::operator >=(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThanOrEqual
bool Mono::Math::operator <=(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Negative
::Mono::Math::BigInteger_::Sign Mono::Math::BigInteger_::Sign::_get_Negative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_get_Negative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger_::Sign>("Mono.Math", "BigInteger/Sign", "Negative"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Negative
void Mono::Math::BigInteger_::Sign::_set_Negative(::Mono::Math::BigInteger_::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_set_Negative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Negative", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Zero
::Mono::Math::BigInteger_::Sign Mono::Math::BigInteger_::Sign::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger_::Sign>("Mono.Math", "BigInteger/Sign", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Zero
void Mono::Math::BigInteger_::Sign::_set_Zero(::Mono::Math::BigInteger_::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Positive
::Mono::Math::BigInteger_::Sign Mono::Math::BigInteger_::Sign::_get_Positive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_get_Positive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger_::Sign>("Mono.Math", "BigInteger/Sign", "Positive"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Positive
void Mono::Math::BigInteger_::Sign::_set_Positive(::Mono::Math::BigInteger_::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_set_Positive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Positive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Math::BigInteger_::Sign::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/ModulusRing
#include "Mono/Math/BigInteger__ModulusRing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger mod
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Math::BigInteger_::ModulusRing::dyn_mod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::dyn_mod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mod"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger constant
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Math::BigInteger_::ModulusRing::dyn_constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::dyn_constant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constant"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.BarrettReduction
void Mono::Math::BigInteger_::ModulusRing::BarrettReduction(::Mono::Math::BigInteger_* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::BarrettReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BarrettReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Multiply
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModulusRing::Multiply(::Mono::Math::BigInteger_* a, ::Mono::Math::BigInteger_* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Difference
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModulusRing::Difference(::Mono::Math::BigInteger_* a, ::Mono::Math::BigInteger_* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::Difference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Difference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Pow
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModulusRing::Pow(::Mono::Math::BigInteger_* a, ::Mono::Math::BigInteger_* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, a, k);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Pow
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModulusRing::Pow(uint b, ::Mono::Math::BigInteger_* exp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(exp)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, b, exp);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Kernel
#include "Mono/Math/BigInteger__Kernel.hpp"
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.BigInteger/Kernel.AddSameSign
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::AddSameSign(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::AddSameSign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "AddSameSign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Subtract
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::Subtract(::Mono::Math::BigInteger_* big, ::Mono::Math::BigInteger_* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big), ::il2cpp_utils::ExtractType(small)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MinusEq
void Mono::Math::BigInteger_::Kernel::MinusEq(::Mono::Math::BigInteger_* big, ::Mono::Math::BigInteger_* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::MinusEq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MinusEq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big), ::il2cpp_utils::ExtractType(small)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.PlusEq
void Mono::Math::BigInteger_::Kernel::PlusEq(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::PlusEq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "PlusEq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Compare
::Mono::Math::BigInteger_::Sign Mono::Math::BigInteger_::Kernel::Compare(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_::Sign, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.SingleByteDivideInPlace
uint Mono::Math::BigInteger_::Kernel::SingleByteDivideInPlace(::Mono::Math::BigInteger_* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::SingleByteDivideInPlace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "SingleByteDivideInPlace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.DwordMod
uint Mono::Math::BigInteger_::Kernel::DwordMod(::Mono::Math::BigInteger_* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::DwordMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.DwordDivMod
::ArrayW<::Mono::Math::BigInteger_*> Mono::Math::BigInteger_::Kernel::DwordDivMod(::Mono::Math::BigInteger_* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::DwordDivMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordDivMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Math::BigInteger_*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.multiByteDivide
::ArrayW<::Mono::Math::BigInteger_*> Mono::Math::BigInteger_::Kernel::multiByteDivide(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::multiByteDivide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "multiByteDivide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Math::BigInteger_*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.LeftShift
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::LeftShift(::Mono::Math::BigInteger_* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.RightShift
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::RightShift(::Mono::Math::BigInteger_* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MultiplyByDword
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::MultiplyByDword(::Mono::Math::BigInteger_* n, uint f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::MultiplyByDword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MultiplyByDword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, f);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Multiply
void Mono::Math::BigInteger_::Kernel::Multiply(::ArrayW<uint> x, uint xOffset, uint xLen, ::ArrayW<uint> y, uint yOffset, uint yLen, ::ArrayW<uint> d, uint dOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(xLen), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(yOffset), ::il2cpp_utils::ExtractType(yLen), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(dOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffset, yLen, d, dOffset);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MultiplyMod2p32pmod
void Mono::Math::BigInteger_::Kernel::MultiplyMod2p32pmod(::ArrayW<uint> x, int xOffset, int xLen, ::ArrayW<uint> y, int yOffest, int yLen, ::ArrayW<uint> d, int dOffset, int mod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::MultiplyMod2p32pmod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MultiplyMod2p32pmod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(xLen), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(yOffest), ::il2cpp_utils::ExtractType(yLen), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(dOffset), ::il2cpp_utils::ExtractType(mod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffest, yLen, d, dOffset, mod);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.modInverse
uint Mono::Math::BigInteger_::Kernel::modInverse(::Mono::Math::BigInteger_* bi, uint modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.modInverse
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::modInverse(::Mono::Math::BigInteger_* bi, ::Mono::Math::BigInteger_* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_ExtraLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_ExtraLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
void Mono::Math::Prime::ConfidenceFactor_::_set_ExtraLow(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_ExtraLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Low
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "Low"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Low
void Mono::Math::Prime::ConfidenceFactor_::_set_Low(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Medium
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Medium
void Mono::Math::Prime::ConfidenceFactor_::_set_Medium(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor High
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "High"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor High
void Mono::Math::Prime::ConfidenceFactor_::_set_High(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "High", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_ExtraHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_ExtraHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
void Mono::Math::Prime::ConfidenceFactor_::_set_ExtraHigh(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_ExtraHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Provable
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_Provable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_Provable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "Provable"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Provable
void Mono::Math::Prime::ConfidenceFactor_::_set_Provable(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_Provable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Provable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Math::Prime::ConfidenceFactor_::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest_.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTest.Invoke
bool Mono::Math::Prime::PrimalityTest_::Invoke(::Mono::Math::BigInteger_* bi, ::Mono::Math::Prime::ConfidenceFactor_ confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTest_::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::PrimalityTest_*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bi, confidence);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.PrimalityTests
#include "Mono/Math/Prime/PrimalityTests_.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTests.GetSPPRounds
int Mono::Math::Prime::PrimalityTests_::GetSPPRounds(::Mono::Math::BigInteger_* bi, ::Mono::Math::Prime::ConfidenceFactor_ confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests_::GetSPPRounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "GetSPPRounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.Test
bool Mono::Math::Prime::PrimalityTests_::Test(::Mono::Math::BigInteger_* n, ::Mono::Math::Prime::ConfidenceFactor_ confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests_::Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.RabinMillerTest
bool Mono::Math::Prime::PrimalityTests_::RabinMillerTest(::Mono::Math::BigInteger_* n, ::Mono::Math::Prime::ConfidenceFactor_ confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests_::RabinMillerTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "RabinMillerTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.SmallPrimeSppTest
bool Mono::Math::Prime::PrimalityTests_::SmallPrimeSppTest(::Mono::Math::BigInteger_* bi, ::Mono::Math::Prime::ConfidenceFactor_ confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests_::SmallPrimeSppTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "SmallPrimeSppTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, confidence);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.Generator.PrimeGeneratorBase
#include "Mono/Math/Prime/Generator/PrimeGeneratorBase_.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor_.hpp"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest_.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_Confidence
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_Confidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_Confidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::PrimeGeneratorBase_*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::Prime::ConfidenceFactor_, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_PrimalityTest
::Mono::Math::Prime::PrimalityTest_* Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_PrimalityTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_PrimalityTest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::PrimeGeneratorBase_*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::Prime::PrimalityTest_*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_TrialDivisionBounds
int Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_TrialDivisionBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_TrialDivisionBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::PrimeGeneratorBase_*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger_* Mono::Math::Prime::Generator::PrimeGeneratorBase_::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase_::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::PrimeGeneratorBase_*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, bits);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase
#include "Mono/Math/Prime/Generator/SequentialSearchPrimeGeneratorBase_.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateSearchBase
::Mono::Math::BigInteger_* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateSearchBase(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateSearchBase");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger_* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateNewPrime(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.IsPrimeAcceptable
bool Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::IsPrimeAcceptable(::Mono::Math::BigInteger_* bi, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::IsPrimeAcceptable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bi, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger_* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::PrimeGeneratorBase_*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, bits);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.Win32Native
#include "Microsoft/Win32/Win32Native.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.Win32Native.GetMessage
::StringW Microsoft::Win32::Win32Native::GetMessage(int hr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32Native::GetMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32Native", "GetMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hr);
}
// Autogenerated method: Microsoft.Win32.Win32Native.MakeHRFromErrorCode
int Microsoft::Win32::Win32Native::MakeHRFromErrorCode(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32Native::MakeHRFromErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32Native", "MakeHRFromErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafePasswordHandle
#include "Microsoft/Win32/SafeHandles/SafePasswordHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafePasswordHandle.CreateHandle
::System::IntPtr Microsoft::Win32::SafeHandles::SafePasswordHandle::CreateHandle(::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafePasswordHandle::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, password);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafePasswordHandle.FreeHandle
void Microsoft::Win32::SafeHandles::SafePasswordHandle::FreeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafePasswordHandle::FreeHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafePasswordHandle.Mono_DangerousGetString
::StringW Microsoft::Win32::SafeHandles::SafePasswordHandle::Mono_DangerousGetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafePasswordHandle::Mono_DangerousGetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mono_DangerousGetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafePasswordHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafePasswordHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafePasswordHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafePasswordHandle.Dispose
void Microsoft::Win32::SafeHandles::SafePasswordHandle::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafePasswordHandle::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafePasswordHandle.get_IsInvalid
bool Microsoft::Win32::SafeHandles::SafePasswordHandle::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafePasswordHandle::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeFileHandle
#include "Microsoft/Win32/SafeHandles/SafeFileHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeFileHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeFileHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeWaitHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeWaitHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeWaitHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
#include "Microsoft/Win32/SafeHandles/SafeHandleZeroOrMinusOneIsInvalid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid
bool Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
#include "Microsoft/Win32/SafeHandles/SafeHandleMinusOneIsInvalid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.get_IsInvalid
bool Microsoft::Win32::SafeHandles::SafeHandleMinusOneIsInvalid::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeHandleMinusOneIsInvalid::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid
#include "Microsoft/Win32/SafeHandles/CriticalHandleMinusOneIsInvalid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.get_IsInvalid
bool Microsoft::Win32::SafeHandles::CriticalHandleMinusOneIsInvalid::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::CriticalHandleMinusOneIsInvalid::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::CriticalHandle*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Internal.Threading.Tasks.Tracing.TaskTrace
#include "Internal/Threading/Tasks/Tracing/TaskTrace.hpp"
// Including type: Internal.Runtime.Augments.TaskTraceCallbacks
#include "Internal/Runtime/Augments/TaskTraceCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Internal.Runtime.Augments.TaskTraceCallbacks s_callbacks
::Internal::Runtime::Augments::TaskTraceCallbacks* Internal::Threading::Tasks::Tracing::TaskTrace::_get_s_callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Threading::Tasks::Tracing::TaskTrace::_get_s_callbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Runtime::Augments::TaskTraceCallbacks*>("Internal.Threading.Tasks.Tracing", "TaskTrace", "s_callbacks"));
}
// Autogenerated static field setter
// Set static field: static private Internal.Runtime.Augments.TaskTraceCallbacks s_callbacks
void Internal::Threading::Tasks::Tracing::TaskTrace::_set_s_callbacks(::Internal::Runtime::Augments::TaskTraceCallbacks* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Threading::Tasks::Tracing::TaskTrace::_set_s_callbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Threading.Tasks.Tracing", "TaskTrace", "s_callbacks", value));
}
// Autogenerated method: Internal.Threading.Tasks.Tracing.TaskTrace.get_Enabled
bool Internal::Threading::Tasks::Tracing::TaskTrace::get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Threading::Tasks::Tracing::TaskTrace::get_Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Threading.Tasks.Tracing", "TaskTrace", "get_Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Internal.Threading.Tasks.Tracing.TaskTrace.TaskWaitBegin_Asynchronous
void Internal::Threading::Tasks::Tracing::TaskTrace::TaskWaitBegin_Asynchronous(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Threading::Tasks::Tracing::TaskTrace::TaskWaitBegin_Asynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Threading.Tasks.Tracing", "TaskTrace", "TaskWaitBegin_Asynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(OriginatingTaskSchedulerID), ::il2cpp_utils::ExtractType(OriginatingTaskID), ::il2cpp_utils::ExtractType(TaskID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, OriginatingTaskSchedulerID, OriginatingTaskID, TaskID);
}
// Autogenerated method: Internal.Threading.Tasks.Tracing.TaskTrace.TaskWaitBegin_Synchronous
void Internal::Threading::Tasks::Tracing::TaskTrace::TaskWaitBegin_Synchronous(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Threading::Tasks::Tracing::TaskTrace::TaskWaitBegin_Synchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Threading.Tasks.Tracing", "TaskTrace", "TaskWaitBegin_Synchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(OriginatingTaskSchedulerID), ::il2cpp_utils::ExtractType(OriginatingTaskID), ::il2cpp_utils::ExtractType(TaskID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, OriginatingTaskSchedulerID, OriginatingTaskID, TaskID);
}
// Autogenerated method: Internal.Threading.Tasks.Tracing.TaskTrace.TaskWaitEnd
void Internal::Threading::Tasks::Tracing::TaskTrace::TaskWaitEnd(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Threading::Tasks::Tracing::TaskTrace::TaskWaitEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Threading.Tasks.Tracing", "TaskTrace", "TaskWaitEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(OriginatingTaskSchedulerID), ::il2cpp_utils::ExtractType(OriginatingTaskID), ::il2cpp_utils::ExtractType(TaskID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, OriginatingTaskSchedulerID, OriginatingTaskID, TaskID);
}
// Autogenerated method: Internal.Threading.Tasks.Tracing.TaskTrace.TaskScheduled
void Internal::Threading::Tasks::Tracing::TaskTrace::TaskScheduled(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID, int CreatingTaskID, int TaskCreationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Threading::Tasks::Tracing::TaskTrace::TaskScheduled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Threading.Tasks.Tracing", "TaskTrace", "TaskScheduled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(OriginatingTaskSchedulerID), ::il2cpp_utils::ExtractType(OriginatingTaskID), ::il2cpp_utils::ExtractType(TaskID), ::il2cpp_utils::ExtractType(CreatingTaskID), ::il2cpp_utils::ExtractType(TaskCreationOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, OriginatingTaskSchedulerID, OriginatingTaskID, TaskID, CreatingTaskID, TaskCreationOptions);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Internal.Runtime.Augments.AsyncStatus
#include "Internal/Runtime/Augments/AsyncStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Internal.Runtime.Augments.AsyncStatus Started
::Internal::Runtime::Augments::AsyncStatus Internal::Runtime::Augments::AsyncStatus::_get_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::AsyncStatus::_get_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Runtime::Augments::AsyncStatus>("Internal.Runtime.Augments", "AsyncStatus", "Started"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Runtime.Augments.AsyncStatus Started
void Internal::Runtime::Augments::AsyncStatus::_set_Started(::Internal::Runtime::Augments::AsyncStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::AsyncStatus::_set_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Runtime.Augments", "AsyncStatus", "Started", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Runtime.Augments.AsyncStatus Completed
::Internal::Runtime::Augments::AsyncStatus Internal::Runtime::Augments::AsyncStatus::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::AsyncStatus::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Runtime::Augments::AsyncStatus>("Internal.Runtime.Augments", "AsyncStatus", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Runtime.Augments.AsyncStatus Completed
void Internal::Runtime::Augments::AsyncStatus::_set_Completed(::Internal::Runtime::Augments::AsyncStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::AsyncStatus::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Runtime.Augments", "AsyncStatus", "Completed", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Runtime.Augments.AsyncStatus Canceled
::Internal::Runtime::Augments::AsyncStatus Internal::Runtime::Augments::AsyncStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::AsyncStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Runtime::Augments::AsyncStatus>("Internal.Runtime.Augments", "AsyncStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Runtime.Augments.AsyncStatus Canceled
void Internal::Runtime::Augments::AsyncStatus::_set_Canceled(::Internal::Runtime::Augments::AsyncStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::AsyncStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Runtime.Augments", "AsyncStatus", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public Internal.Runtime.Augments.AsyncStatus Error
::Internal::Runtime::Augments::AsyncStatus Internal::Runtime::Augments::AsyncStatus::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::AsyncStatus::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Runtime::Augments::AsyncStatus>("Internal.Runtime.Augments", "AsyncStatus", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Internal.Runtime.Augments.AsyncStatus Error
void Internal::Runtime::Augments::AsyncStatus::_set_Error(::Internal::Runtime::Augments::AsyncStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::AsyncStatus::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Runtime.Augments", "AsyncStatus", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Internal::Runtime::Augments::AsyncStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::AsyncStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Internal.Runtime.Augments.TaskTraceCallbacks
#include "Internal/Runtime/Augments/TaskTraceCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Internal.Runtime.Augments.TaskTraceCallbacks.get_Enabled
bool Internal::Runtime::Augments::TaskTraceCallbacks::get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::TaskTraceCallbacks::get_Enabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Runtime::Augments::TaskTraceCallbacks*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Internal.Runtime.Augments.TaskTraceCallbacks.TaskWaitBegin_Asynchronous
void Internal::Runtime::Augments::TaskTraceCallbacks::TaskWaitBegin_Asynchronous(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::TaskTraceCallbacks::TaskWaitBegin_Asynchronous");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Runtime::Augments::TaskTraceCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, OriginatingTaskSchedulerID, OriginatingTaskID, TaskID);
}
// Autogenerated method: Internal.Runtime.Augments.TaskTraceCallbacks.TaskWaitBegin_Synchronous
void Internal::Runtime::Augments::TaskTraceCallbacks::TaskWaitBegin_Synchronous(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::TaskTraceCallbacks::TaskWaitBegin_Synchronous");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Runtime::Augments::TaskTraceCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, OriginatingTaskSchedulerID, OriginatingTaskID, TaskID);
}
// Autogenerated method: Internal.Runtime.Augments.TaskTraceCallbacks.TaskWaitEnd
void Internal::Runtime::Augments::TaskTraceCallbacks::TaskWaitEnd(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::TaskTraceCallbacks::TaskWaitEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Runtime::Augments::TaskTraceCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, OriginatingTaskSchedulerID, OriginatingTaskID, TaskID);
}
// Autogenerated method: Internal.Runtime.Augments.TaskTraceCallbacks.TaskScheduled
void Internal::Runtime::Augments::TaskTraceCallbacks::TaskScheduled(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID, int CreatingTaskID, int TaskCreationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::TaskTraceCallbacks::TaskScheduled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Internal::Runtime::Augments::TaskTraceCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, OriginatingTaskSchedulerID, OriginatingTaskID, TaskID, CreatingTaskID, TaskCreationOptions);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Internal.Runtime.Augments.RuntimeAugments
#include "Internal/Runtime/Augments/RuntimeAugments.hpp"
// Including type: Internal.Runtime.Augments.ReflectionExecutionDomainCallbacks
#include "Internal/Runtime/Augments/ReflectionExecutionDomainCallbacks.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Internal.Runtime.Augments.ReflectionExecutionDomainCallbacks s_reflectionExecutionDomainCallbacks
::Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks* Internal::Runtime::Augments::RuntimeAugments::_get_s_reflectionExecutionDomainCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeAugments::_get_s_reflectionExecutionDomainCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks*>("Internal.Runtime.Augments", "RuntimeAugments", "s_reflectionExecutionDomainCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private Internal.Runtime.Augments.ReflectionExecutionDomainCallbacks s_reflectionExecutionDomainCallbacks
void Internal::Runtime::Augments::RuntimeAugments::_set_s_reflectionExecutionDomainCallbacks(::Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeAugments::_set_s_reflectionExecutionDomainCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Runtime.Augments", "RuntimeAugments", "s_reflectionExecutionDomainCallbacks", value));
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeAugments.ReportUnhandledException
void Internal::Runtime::Augments::RuntimeAugments::ReportUnhandledException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeAugments::ReportUnhandledException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Runtime.Augments", "RuntimeAugments", "ReportUnhandledException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeAugments.get_Callbacks
::Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks* Internal::Runtime::Augments::RuntimeAugments::get_Callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeAugments::get_Callbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Runtime.Augments", "RuntimeAugments", "get_Callbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeAugments..cctor
void Internal::Runtime::Augments::RuntimeAugments::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeAugments::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Runtime.Augments", "RuntimeAugments", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Internal.Runtime.Augments.ReflectionExecutionDomainCallbacks
#include "Internal/Runtime/Augments/ReflectionExecutionDomainCallbacks.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Internal.Runtime.Augments.ReflectionExecutionDomainCallbacks.CreateMissingMetadataException
::System::Exception* Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks::CreateMissingMetadataException(::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::ReflectionExecutionDomainCallbacks::CreateMissingMetadataException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMissingMetadataException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, attributeType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Internal.Runtime.Augments.RuntimeThread
#include "Internal/Runtime/Augments/RuntimeThread.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Threading.ParameterizedThreadStart
#include "System/Threading/ParameterizedThreadStart.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32 OptimalMaxSpinWaitsPerSpinIteration
int Internal::Runtime::Augments::RuntimeThread::_get_OptimalMaxSpinWaitsPerSpinIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::_get_OptimalMaxSpinWaitsPerSpinIteration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Internal.Runtime.Augments", "RuntimeThread", "OptimalMaxSpinWaitsPerSpinIteration"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 OptimalMaxSpinWaitsPerSpinIteration
void Internal::Runtime::Augments::RuntimeThread::_set_OptimalMaxSpinWaitsPerSpinIteration(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::_set_OptimalMaxSpinWaitsPerSpinIteration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Internal.Runtime.Augments", "RuntimeThread", "OptimalMaxSpinWaitsPerSpinIteration", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Thread thread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& Internal::Runtime::Augments::RuntimeThread::dyn_thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::dyn_thread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeThread.Create
::Internal::Runtime::Augments::RuntimeThread* Internal::Runtime::Augments::RuntimeThread::Create(::System::Threading::ParameterizedThreadStart* start, int maxStackSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Runtime.Augments", "RuntimeThread", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(maxStackSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::Internal::Runtime::Augments::RuntimeThread*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, maxStackSize);
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeThread.set_IsBackground
void Internal::Runtime::Augments::RuntimeThread::set_IsBackground(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::set_IsBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeThread.Start
void Internal::Runtime::Augments::RuntimeThread::Start(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeThread.Sleep
void Internal::Runtime::Augments::RuntimeThread::Sleep(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::Sleep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Runtime.Augments", "RuntimeThread", "Sleep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, millisecondsTimeout);
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeThread.Yield
bool Internal::Runtime::Augments::RuntimeThread::Yield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::Yield");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Runtime.Augments", "RuntimeThread", "Yield", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeThread.SpinWait
bool Internal::Runtime::Augments::RuntimeThread::SpinWait(int iterations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::SpinWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Runtime.Augments", "RuntimeThread", "SpinWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iterations)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, iterations);
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeThread.GetCurrentProcessorId
int Internal::Runtime::Augments::RuntimeThread::GetCurrentProcessorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::GetCurrentProcessorId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Runtime.Augments", "RuntimeThread", "GetCurrentProcessorId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Internal.Runtime.Augments.RuntimeThread..cctor
void Internal::Runtime::Augments::RuntimeThread::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Runtime::Augments::RuntimeThread::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Runtime.Augments", "RuntimeThread", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Internal.Cryptography.Helpers
#include "Internal/Cryptography/Helpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Internal.Cryptography.Helpers.CloneByteArray
::ArrayW<uint8_t> Internal::Cryptography::Helpers::CloneByteArray(::ArrayW<uint8_t> src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Helpers::CloneByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "Helpers", "CloneByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src);
}
// Autogenerated method: Internal.Cryptography.Helpers.GenerateRandom
::ArrayW<uint8_t> Internal::Cryptography::Helpers::GenerateRandom(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Helpers::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "Helpers", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: Internal.Cryptography.Helpers.WriteInt
void Internal::Cryptography::Helpers::WriteInt(uint i, ::ArrayW<uint8_t> arr, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Helpers::WriteInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "Helpers", "WriteInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(arr), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, arr, offset);
}
// Autogenerated method: Internal.Cryptography.Helpers.ToHexArrayUpper
::ArrayW<::Il2CppChar> Internal::Cryptography::Helpers::ToHexArrayUpper(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Helpers::ToHexArrayUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "Helpers", "ToHexArrayUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Internal.Cryptography.Helpers.ToHexStringUpper
::StringW Internal::Cryptography::Helpers::ToHexStringUpper(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Helpers::ToHexStringUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "Helpers", "ToHexStringUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Internal.Cryptography.Helpers.NibbleToHex
::Il2CppChar Internal::Cryptography::Helpers::NibbleToHex(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Internal::Cryptography::Helpers::NibbleToHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Internal.Cryptography", "Helpers", "NibbleToHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.String/TrimType
#include "System/String_TrimType.hpp"
// Including type: System.String/ProbabilisticMap
#include "System/String_ProbabilisticMap.hpp"
// Including type: System.StringComparison
#include "System/StringComparison.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
// Including type: System.Buffers.SpanAction`2
#include "System/Buffers/SpanAction_2.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.ParamsArray
#include "System/ParamsArray.hpp"
// Including type: System.StringSplitOptions
#include "System/StringSplitOptions.hpp"
// Including type: System.Collections.Generic.ValueListBuilder`1
#include "System/Collections/Generic/ValueListBuilder_1.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Text.NormalizationForm
#include "System/Text/NormalizationForm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 StackallocIntBufferSizeLimit
int System::String::_get_StackallocIntBufferSizeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_StackallocIntBufferSizeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "StackallocIntBufferSizeLimit"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 StackallocIntBufferSizeLimit
void System::String::_set_StackallocIntBufferSizeLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_StackallocIntBufferSizeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "StackallocIntBufferSizeLimit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 PROBABILISTICMAP_BLOCK_INDEX_MASK
int System::String::_get_PROBABILISTICMAP_BLOCK_INDEX_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_PROBABILISTICMAP_BLOCK_INDEX_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "PROBABILISTICMAP_BLOCK_INDEX_MASK"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PROBABILISTICMAP_BLOCK_INDEX_MASK
void System::String::_set_PROBABILISTICMAP_BLOCK_INDEX_MASK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_PROBABILISTICMAP_BLOCK_INDEX_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "PROBABILISTICMAP_BLOCK_INDEX_MASK", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 PROBABILISTICMAP_BLOCK_INDEX_SHIFT
int System::String::_get_PROBABILISTICMAP_BLOCK_INDEX_SHIFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_PROBABILISTICMAP_BLOCK_INDEX_SHIFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "PROBABILISTICMAP_BLOCK_INDEX_SHIFT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PROBABILISTICMAP_BLOCK_INDEX_SHIFT
void System::String::_set_PROBABILISTICMAP_BLOCK_INDEX_SHIFT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_PROBABILISTICMAP_BLOCK_INDEX_SHIFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "PROBABILISTICMAP_BLOCK_INDEX_SHIFT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 PROBABILISTICMAP_SIZE
int System::String::_get_PROBABILISTICMAP_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_PROBABILISTICMAP_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "PROBABILISTICMAP_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PROBABILISTICMAP_SIZE
void System::String::_set_PROBABILISTICMAP_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_PROBABILISTICMAP_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "PROBABILISTICMAP_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Empty
::StringW System::String::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "String", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Empty
void System::String::_set_Empty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _stringLength
[[deprecated("Use field access instead!")]] int& System::String::dyn__stringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::dyn__stringLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _firstChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::String::dyn__firstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::dyn__firstChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.String.EqualsHelper
bool System::String::EqualsHelper(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::EqualsHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "EqualsHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.CompareOrdinalHelper
int System::String::CompareOrdinalHelper(::StringW strA, int indexA, int countA, ::StringW strB, int indexB, int countB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareOrdinalHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(countA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(countB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, countA, strB, indexB, countB);
}
// Autogenerated method: System.String.CompareOrdinalHelper
int System::String::CompareOrdinalHelper(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareOrdinalHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, ::StringW strB, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB, ignoreCase);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, ::StringW strB, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB, comparisonType);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, ::StringW strB, ::System::Globalization::CultureInfo* culture, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB, culture, options);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, ::StringW strB, bool ignoreCase, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB, ignoreCase, culture);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, int indexA, ::StringW strB, int indexB, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, int indexA, ::StringW strB, int indexB, int length, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length, ignoreCase);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, int indexA, ::StringW strB, int indexB, int length, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length, comparisonType);
}
// Autogenerated method: System.String.CompareOrdinal
int System::String::CompareOrdinal(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.CompareOrdinal
int System::String::CompareOrdinal(::System::ReadOnlySpan_1<::Il2CppChar> strA, ::System::ReadOnlySpan_1<::Il2CppChar> strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.CompareOrdinal
int System::String::CompareOrdinal(::StringW strA, int indexA, ::StringW strB, int indexB, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length);
}
// Autogenerated method: System.String.CompareTo
int System::String::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CompareTo
int System::String::CompareTo(::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, strB);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::StringW a, ::StringW b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::StringW a, ::StringW b, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, comparisonType);
}
// Autogenerated method: System.String.GetLegacyNonRandomizedHashCode
int System::String::GetLegacyNonRandomizedHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::GetLegacyNonRandomizedHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLegacyNonRandomizedHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.StartsWith
bool System::String::StartsWith(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.StartsWith
bool System::String::StartsWith(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.CheckStringComparison
void System::String::CheckStringComparison(::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CheckStringComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CheckStringComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparisonType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, comparisonType);
}
// Autogenerated method: System.String.FillStringChecked
void System::String::FillStringChecked(::StringW dest, int destPos, ::StringW src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::FillStringChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "FillStringChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(src)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, destPos, src);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, args);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::StringW str0, ::StringW str1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str0), ::il2cpp_utils::ExtractType(str1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str0, str1);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::StringW str0, ::StringW str1, ::StringW str2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str0), ::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str0, str1, str2);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::StringW str0, ::StringW str1, ::StringW str2, ::StringW str3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str0), ::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(str3)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str0, str1, str2, str3);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::ArrayW<::StringW> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::StringW format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, arg0);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, arg0, arg1);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, args);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::System::IFormatProvider* provider, ::StringW format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, format, arg0);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::System::IFormatProvider* provider, ::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, format, arg0, arg1);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::System::IFormatProvider* provider, ::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, format, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::System::IFormatProvider* provider, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, format, args);
}
// Autogenerated method: System.String.FormatHelper
::StringW System::String::FormatHelper(::System::IFormatProvider* provider, ::StringW format, ::System::ParamsArray args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::FormatHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "FormatHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, format, args);
}
// Autogenerated method: System.String.Insert
::StringW System::String::Insert(int startIndex, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex, value);
}
// Autogenerated method: System.String.Join
::StringW System::String::Join(::StringW separator, ::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, value);
}
// Autogenerated method: System.String.Join
::StringW System::String::Join(::StringW separator, ::System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, values);
}
// Autogenerated method: System.String.Join
::StringW System::String::Join(::StringW separator, ::ArrayW<::StringW> value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, value, startIndex, count);
}
// Autogenerated method: System.String.JoinCore
::StringW System::String::JoinCore(::Il2CppChar* separator, int separatorLength, ::ArrayW<::StringW> value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::JoinCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "JoinCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(separatorLength), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, separatorLength, value, startIndex, count);
}
// Autogenerated method: System.String.PadLeft
::StringW System::String::PadLeft(int totalWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::PadLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalWidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, totalWidth);
}
// Autogenerated method: System.String.PadLeft
::StringW System::String::PadLeft(int totalWidth, ::Il2CppChar paddingChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::PadLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalWidth), ::il2cpp_utils::ExtractType(paddingChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, totalWidth, paddingChar);
}
// Autogenerated method: System.String.PadRight
::StringW System::String::PadRight(int totalWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::PadRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalWidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, totalWidth);
}
// Autogenerated method: System.String.PadRight
::StringW System::String::PadRight(int totalWidth, ::Il2CppChar paddingChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::PadRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalWidth), ::il2cpp_utils::ExtractType(paddingChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, totalWidth, paddingChar);
}
// Autogenerated method: System.String.Remove
::StringW System::String::Remove(int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex, count);
}
// Autogenerated method: System.String.Remove
::StringW System::String::Remove(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex);
}
// Autogenerated method: System.String.Replace
::StringW System::String::Replace(::StringW oldValue, ::StringW newValue, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldValue, newValue, comparisonType);
}
// Autogenerated method: System.String.ReplaceCore
::StringW System::String::ReplaceCore(::StringW oldValue, ::StringW newValue, ::System::Globalization::CultureInfo* culture, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ReplaceCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldValue, newValue, culture, options);
}
// Autogenerated method: System.String.Replace
::StringW System::String::Replace(::Il2CppChar oldChar, ::Il2CppChar newChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldChar), ::il2cpp_utils::ExtractType(newChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldChar, newChar);
}
// Autogenerated method: System.String.Replace
::StringW System::String::Replace(::StringW oldValue, ::StringW newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.String.ReplaceHelper
::StringW System::String::ReplaceHelper(int oldValueLength, ::StringW newValue, ::System::ReadOnlySpan_1<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ReplaceHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValueLength), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(indices)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldValueLength, newValue, indices);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::Il2CppChar separator, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, options);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::ArrayW<::Il2CppChar> separator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::ArrayW<::Il2CppChar> separator, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, count);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::ArrayW<::Il2CppChar> separator, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, options);
}
// Autogenerated method: System.String.SplitInternal
::ArrayW<::StringW> System::String::SplitInternal(::System::ReadOnlySpan_1<::Il2CppChar> separators, int count, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::SplitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SplitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separators), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separators, count, options);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::StringW separator, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, options);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::ArrayW<::StringW> separator, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, options);
}
// Autogenerated method: System.String.SplitInternal
::ArrayW<::StringW> System::String::SplitInternal(::StringW separator, ::ArrayW<::StringW> separators, int count, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::SplitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SplitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(separators), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, separators, count, options);
}
// Autogenerated method: System.String.SplitInternal
::ArrayW<::StringW> System::String::SplitInternal(::StringW separator, int count, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::SplitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SplitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, count, options);
}
// Autogenerated method: System.String.SplitKeepEmptyEntries
::ArrayW<::StringW> System::String::SplitKeepEmptyEntries(::System::ReadOnlySpan_1<int> sepList, ::System::ReadOnlySpan_1<int> lengthList, int defaultLength, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::SplitKeepEmptyEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SplitKeepEmptyEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sepList), ::il2cpp_utils::ExtractType(lengthList), ::il2cpp_utils::ExtractType(defaultLength), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, sepList, lengthList, defaultLength, count);
}
// Autogenerated method: System.String.SplitOmitEmptyEntries
::ArrayW<::StringW> System::String::SplitOmitEmptyEntries(::System::ReadOnlySpan_1<int> sepList, ::System::ReadOnlySpan_1<int> lengthList, int defaultLength, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::SplitOmitEmptyEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SplitOmitEmptyEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sepList), ::il2cpp_utils::ExtractType(lengthList), ::il2cpp_utils::ExtractType(defaultLength), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, sepList, lengthList, defaultLength, count);
}
// Autogenerated method: System.String.MakeSeparatorList
void System::String::MakeSeparatorList(::System::ReadOnlySpan_1<::Il2CppChar> separators, ByRef<::System::Collections::Generic::ValueListBuilder_1<int>> sepListBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::MakeSeparatorList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeSeparatorList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separators), ::il2cpp_utils::ExtractType(sepListBuilder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, separators, byref(sepListBuilder));
}
// Autogenerated method: System.String.MakeSeparatorList
void System::String::MakeSeparatorList(::StringW separator, ByRef<::System::Collections::Generic::ValueListBuilder_1<int>> sepListBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::MakeSeparatorList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeSeparatorList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(sepListBuilder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, separator, byref(sepListBuilder));
}
// Autogenerated method: System.String.MakeSeparatorList
void System::String::MakeSeparatorList(::ArrayW<::StringW> separators, ByRef<::System::Collections::Generic::ValueListBuilder_1<int>> sepListBuilder, ByRef<::System::Collections::Generic::ValueListBuilder_1<int>> lengthListBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::MakeSeparatorList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeSeparatorList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separators), ::il2cpp_utils::ExtractType(sepListBuilder), ::il2cpp_utils::ExtractType(lengthListBuilder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, separators, byref(sepListBuilder), byref(lengthListBuilder));
}
// Autogenerated method: System.String.Substring
::StringW System::String::Substring(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Substring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Substring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex);
}
// Autogenerated method: System.String.Substring
::StringW System::String::Substring(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Substring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Substring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: System.String.InternalSubString
::StringW System::String::InternalSubString(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::InternalSubString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSubString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: System.String.ToLower
::StringW System::String::ToLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToLower
::StringW System::String::ToLower(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.String.ToLowerInvariant
::StringW System::String::ToLowerInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToLowerInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLowerInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToUpper
::StringW System::String::ToUpper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToUpper
::StringW System::String::ToUpper(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.String.ToUpperInvariant
::StringW System::String::ToUpperInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToUpperInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpperInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.Trim
::StringW System::String::Trim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.Trim
::StringW System::String::Trim(::Il2CppChar trimChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChar);
}
// Autogenerated method: System.String.Trim
::StringW System::String::Trim(::ArrayW<::Il2CppChar> trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChars);
}
// Autogenerated method: System.String.TrimStart
::StringW System::String::TrimStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.TrimStart
::StringW System::String::TrimStart(::Il2CppChar trimChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChar);
}
// Autogenerated method: System.String.TrimStart
::StringW System::String::TrimStart(::ArrayW<::Il2CppChar> trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChars);
}
// Autogenerated method: System.String.TrimEnd
::StringW System::String::TrimEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.TrimEnd
::StringW System::String::TrimEnd(::Il2CppChar trimChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChar);
}
// Autogenerated method: System.String.TrimEnd
::StringW System::String::TrimEnd(::ArrayW<::Il2CppChar> trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChars);
}
// Autogenerated method: System.String.TrimWhiteSpaceHelper
::StringW System::String::TrimWhiteSpaceHelper(::System::String::TrimType trimType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimWhiteSpaceHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimWhiteSpaceHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimType);
}
// Autogenerated method: System.String.TrimHelper
::StringW System::String::TrimHelper(::Il2CppChar* trimChars, int trimCharsLength, ::System::String::TrimType trimType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars), ::il2cpp_utils::ExtractType(trimCharsLength), ::il2cpp_utils::ExtractType(trimType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChars, trimCharsLength, trimType);
}
// Autogenerated method: System.String.CreateTrimmedString
::StringW System::String::CreateTrimmedString(int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateTrimmedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrimmedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start, end);
}
// Autogenerated method: System.String.Contains
bool System::String::Contains(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.Contains
bool System::String::Contains(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.Contains
bool System::String::Contains(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::ArrayW<::Il2CppChar> anyOf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::ArrayW<::Il2CppChar> anyOf, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::ArrayW<::Il2CppChar> anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::Il2CppChar value1, ::Il2CppChar value2, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2, startIndex, count);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::Il2CppChar value1, ::Il2CppChar value2, ::Il2CppChar value3, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2), ::il2cpp_utils::ExtractType(value3), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2, value3, startIndex, count);
}
// Autogenerated method: System.String.IndexOfCharArray
int System::String::IndexOfCharArray(::ArrayW<::Il2CppChar> anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.InitializeProbabilisticMap
void System::String::InitializeProbabilisticMap(uint* charMap, ::System::ReadOnlySpan_1<::Il2CppChar> anyOf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::InitializeProbabilisticMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "InitializeProbabilisticMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charMap), ::il2cpp_utils::ExtractType(anyOf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charMap, anyOf);
}
// Autogenerated method: System.String.ArrayContains
bool System::String::ArrayContains(::Il2CppChar searchChar, ::ArrayW<::Il2CppChar> anyOf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ArrayContains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "ArrayContains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchChar), ::il2cpp_utils::ExtractType(anyOf)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, searchChar, anyOf);
}
// Autogenerated method: System.String.IsCharBitSet
bool System::String::IsCharBitSet(uint* charMap, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IsCharBitSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsCharBitSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charMap), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charMap, value);
}
// Autogenerated method: System.String.SetCharBit
void System::String::SetCharBit(uint* charMap, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::SetCharBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "SetCharBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charMap), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charMap, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::StringW value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::StringW value, int startIndex, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, comparisonType);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::StringW value, int startIndex, int count, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count, comparisonType);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::ArrayW<::Il2CppChar> anyOf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::ArrayW<::Il2CppChar> anyOf, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::ArrayW<::Il2CppChar> anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfCharArray
int System::String::LastIndexOfCharArray(::ArrayW<::Il2CppChar> anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::StringW value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::StringW value, int startIndex, int count, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count, comparisonType);
}
// Autogenerated method: System.String.Ctor
::StringW System::String::Ctor(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.String.Ctor
::StringW System::String::Ctor(::ArrayW<::Il2CppChar> value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.Ctor
::StringW System::String::Ctor(::Il2CppChar* ptr, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, startIndex, length);
}
// Autogenerated method: System.String.Ctor
::StringW System::String::Ctor(int8_t* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.CreateStringForSByteConstructor
::StringW System::String::CreateStringForSByteConstructor(uint8_t* pb, int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateStringForSByteConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CreateStringForSByteConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pb), ::il2cpp_utils::ExtractType(numBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pb, numBytes);
}
// Autogenerated method: System.String.Ctor
::StringW System::String::Ctor(int8_t* value, int startIndex, int length, ::System::Text::Encoding* enc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(enc)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex, length, enc);
}
// Autogenerated method: System.String.Ctor
::StringW System::String::Ctor(::Il2CppChar c, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, count);
}
// Autogenerated method: System.String.Ctor
::StringW System::String::Ctor(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.String.Clone
::Il2CppObject* System::String::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.Copy
::StringW System::String::Copy(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.CopyTo
void System::String::CopyTo(int sourceIndex, ::ArrayW<::Il2CppChar> destination, int destinationIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceIndex), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceIndex, destination, destinationIndex, count);
}
// Autogenerated method: System.String.ToCharArray
::ArrayW<::Il2CppChar> System::String::ToCharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.String.IsNullOrEmpty
bool System::String::IsNullOrEmpty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IsNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.String.IsNullOrWhiteSpace
bool System::String::IsNullOrWhiteSpace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IsNullOrWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsNullOrWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.String.GetRawStringData
::Il2CppChar System::String::GetRawStringData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::GetRawStringData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawStringData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.String.CreateStringFromEncoding
::StringW System::String::CreateStringFromEncoding(uint8_t* bytes, int byteLength, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateStringFromEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CreateStringFromEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteLength), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, byteLength, encoding);
}
// Autogenerated method: System.String.CreateFromChar
::StringW System::String::CreateFromChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateFromChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CreateFromChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.String.wstrcpy
void System::String::wstrcpy(::Il2CppChar* dmem, ::Il2CppChar* smem, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::wstrcpy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "wstrcpy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dmem), ::il2cpp_utils::ExtractType(smem), ::il2cpp_utils::ExtractType(charCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dmem, smem, charCount);
}
// Autogenerated method: System.String.ToString
::StringW System::String::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 24));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Il2CppChar>* System::String::System_Collections_Generic_IEnumerable$System_Char$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Il2CppChar>*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::String::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.wcslen
int System::String::wcslen(::Il2CppChar* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::wcslen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "wcslen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.String.GetTypeCode
::System::TypeCode System::String::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.String.System.IConvertible.ToBoolean
bool System::String::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToChar
::Il2CppChar System::String::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToSByte
int8_t System::String::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 12));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToByte
uint8_t System::String::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt16
int16_t System::String::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 14));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt16
uint16_t System::String::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt32
int System::String::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt32
uint System::String::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 17));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt64
int64_t System::String::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 18));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt64
uint64_t System::String::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 19));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToSingle
float System::String::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 20));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDouble
double System::String::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 21));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDecimal
::System::Decimal System::String::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDateTime
::System::DateTime System::String::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToType
::Il2CppObject* System::String::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::StringW), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.String.Normalize
::StringW System::String::Normalize(::System::Text::NormalizationForm normalizationForm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalizationForm)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, normalizationForm);
}
// Autogenerated method: System.String.get_Length
int System::String::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.IndexOfUnchecked
int System::String::IndexOfUnchecked(::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfUncheckedIgnoreCase
int System::String::IndexOfUncheckedIgnoreCase(::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfUncheckedIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfUncheckedIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfUnchecked
int System::String::LastIndexOfUnchecked(::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfUncheckedIgnoreCase
int System::String::LastIndexOfUncheckedIgnoreCase(::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfUncheckedIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfUncheckedIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.StartsWithOrdinalUnchecked
bool System::String::StartsWithOrdinalUnchecked(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::StartsWithOrdinalUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWithOrdinalUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.FastAllocateString
::StringW System::String::FastAllocateString(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::FastAllocateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "FastAllocateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: System.String.InternalIntern
::StringW System::String::InternalIntern(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::InternalIntern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "InternalIntern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.memset
void System::String::memset(uint8_t* dest, int val, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, val, len);
}
// Autogenerated method: System.String.memcpy
void System::String::memcpy(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memcpy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.bzero
void System::String::bzero_(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::bzero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_1
void System::String::bzero_aligned_1(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::bzero_aligned_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_2
void System::String::bzero_aligned_2(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::bzero_aligned_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_4
void System::String::bzero_aligned_4(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::bzero_aligned_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_8
void System::String::bzero_aligned_8(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::bzero_aligned_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.memcpy_aligned_1
void System::String::memcpy_aligned_1(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memcpy_aligned_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_2
void System::String::memcpy_aligned_2(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memcpy_aligned_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_4
void System::String::memcpy_aligned_4(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memcpy_aligned_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_8
void System::String::memcpy_aligned_8(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memcpy_aligned_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(int8_t* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(::Il2CppChar* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(::ArrayW<::Il2CppChar> val, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, val, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(::ArrayW<::Il2CppChar> val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, val);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(::Il2CppChar c, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, c, count);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(int8_t* value, int startIndex, int length, ::System::Text::Encoding* enc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(enc)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, startIndex, length, enc);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.get_Chars
::Il2CppChar System::String::get_Chars(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::get_Chars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Chars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, index);
}
// Autogenerated method: System.String.Intern
::StringW System::String::Intern(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Intern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Intern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.String.GetHashCode
int System::String::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToString
::StringW System::String::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.op_Equality
bool System::operator ==(const ::StringW& a, const ::StringW& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.String.op_Inequality
bool System::operator !=(const ::StringW& a, const ::StringW& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.String/TrimType
#include "System/String_TrimType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String/TrimType Head
::System::String::TrimType System::String::TrimType::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimType::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::String::TrimType>("System", "String/TrimType", "Head"));
}
// Autogenerated static field setter
// Set static field: static public System.String/TrimType Head
void System::String::TrimType::_set_Head(::System::String::TrimType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimType::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String/TrimType", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public System.String/TrimType Tail
::System::String::TrimType System::String::TrimType::_get_Tail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimType::_get_Tail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::String::TrimType>("System", "String/TrimType", "Tail"));
}
// Autogenerated static field setter
// Set static field: static public System.String/TrimType Tail
void System::String::TrimType::_set_Tail(::System::String::TrimType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimType::_set_Tail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String/TrimType", "Tail", value));
}
// Autogenerated static field getter
// Get static field: static public System.String/TrimType Both
::System::String::TrimType System::String::TrimType::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimType::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::String::TrimType>("System", "String/TrimType", "Both"));
}
// Autogenerated static field setter
// Set static field: static public System.String/TrimType Both
void System::String::TrimType::_set_Both(::System::String::TrimType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimType::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String/TrimType", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::String::TrimType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo
#include "System/TimeZoneInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.TimeZoneInfo/TZifHead
#include "System/TimeZoneInfo_TZifHead.hpp"
// Including type: System.TimeZoneInfo/TZVersion
#include "System/TimeZoneInfo_TZVersion.hpp"
// Including type: System.TimeZoneInfo/AdjustmentRule
#include "System/TimeZoneInfo_AdjustmentRule.hpp"
// Including type: System.TimeZoneInfo/TransitionTime
#include "System/TimeZoneInfo_TransitionTime.hpp"
// Including type: System.TimeZoneInfo/CachedData
#include "System/TimeZoneInfo_CachedData.hpp"
// Including type: System.TimeZoneInfo/<>c__DisplayClass16_0
#include "System/TimeZoneInfo_--c__DisplayClass16_0.hpp"
// Including type: System.TimeZoneInfo/<>c
#include "System/TimeZoneInfo_--c.hpp"
// Including type: Interop/Sys/DirectoryEntry
#include "GlobalNamespace/Interop_Sys_DirectoryEntry.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.TimeZoneInfoOptions
#include "System/TimeZoneInfoOptions.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Globalization.DaylightTimeStruct
#include "System/Globalization/DaylightTimeStruct.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.TimeZoneInfo s_utcTimeZone
::System::TimeZoneInfo* System::TimeZoneInfo::_get_s_utcTimeZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_s_utcTimeZone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeZoneInfo*>("System", "TimeZoneInfo", "s_utcTimeZone"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeZoneInfo s_utcTimeZone
void System::TimeZoneInfo::_set_s_utcTimeZone(::System::TimeZoneInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_s_utcTimeZone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "s_utcTimeZone", value));
}
// Autogenerated static field getter
// Get static field: static private System.TimeZoneInfo/CachedData s_cachedData
::System::TimeZoneInfo::CachedData* System::TimeZoneInfo::_get_s_cachedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_s_cachedData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeZoneInfo::CachedData*>("System", "TimeZoneInfo", "s_cachedData"));
}
// Autogenerated static field setter
// Set static field: static private System.TimeZoneInfo/CachedData s_cachedData
void System::TimeZoneInfo::_set_s_cachedData(::System::TimeZoneInfo::CachedData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_s_cachedData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "s_cachedData", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_maxDateOnly
::System::DateTime System::TimeZoneInfo::_get_s_maxDateOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_s_maxDateOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System", "TimeZoneInfo", "s_maxDateOnly"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_maxDateOnly
void System::TimeZoneInfo::_set_s_maxDateOnly(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_s_maxDateOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "s_maxDateOnly", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_minDateOnly
::System::DateTime System::TimeZoneInfo::_get_s_minDateOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_s_minDateOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System", "TimeZoneInfo", "s_minDateOnly"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_minDateOnly
void System::TimeZoneInfo::_set_s_minDateOnly(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_s_minDateOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "s_minDateOnly", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan MaxOffset
::System::TimeSpan System::TimeZoneInfo::_get_MaxOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_MaxOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System", "TimeZoneInfo", "MaxOffset"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan MaxOffset
void System::TimeZoneInfo::_set_MaxOffset(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_MaxOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "MaxOffset", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan MinOffset
::System::TimeSpan System::TimeZoneInfo::_get_MinOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_MinOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System", "TimeZoneInfo", "MinOffset"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan MinOffset
void System::TimeZoneInfo::_set_MinOffset(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_MinOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "MinOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _id
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _displayName
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::dyn__displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn__displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _standardDisplayName
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::dyn__standardDisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn__standardDisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardDisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _daylightDisplayName
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::dyn__daylightDisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn__daylightDisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_daylightDisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.TimeSpan _baseUtcOffset
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::TimeZoneInfo::dyn__baseUtcOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn__baseUtcOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseUtcOffset"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _supportsDaylightSavingTime
[[deprecated("Use field access instead!")]] bool& System::TimeZoneInfo::dyn__supportsDaylightSavingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn__supportsDaylightSavingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_supportsDaylightSavingTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.TimeZoneInfo/AdjustmentRule[] _adjustmentRules
[[deprecated("Use field access instead!")]] ::ArrayW<::System::TimeZoneInfo::AdjustmentRule*>& System::TimeZoneInfo::dyn__adjustmentRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn__adjustmentRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_adjustmentRules"))->offset;
  return *reinterpret_cast<::ArrayW<::System::TimeZoneInfo::AdjustmentRule*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeZoneInfo.GetLocalTimeZone
::System::TimeZoneInfo* System::TimeZoneInfo::GetLocalTimeZone(::System::TimeZoneInfo::CachedData* cachedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetLocalTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetLocalTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachedData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cachedData);
}
// Autogenerated method: System.TimeZoneInfo.TryGetLocalTzFile
bool System::TimeZoneInfo::TryGetLocalTzFile(ByRef<::ArrayW<uint8_t>> rawData, ByRef<::StringW> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TryGetLocalTzFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TryGetLocalTzFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(rawData), byref(id));
}
// Autogenerated method: System.TimeZoneInfo.GetTzEnvironmentVariable
::StringW System::TimeZoneInfo::GetTzEnvironmentVariable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetTzEnvironmentVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetTzEnvironmentVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.TryLoadTzFile
bool System::TimeZoneInfo::TryLoadTzFile(::StringW tzFilePath, ByRef<::ArrayW<uint8_t>> rawData, ByRef<::StringW> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TryLoadTzFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TryLoadTzFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tzFilePath), ::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tzFilePath, byref(rawData), byref(id));
}
// Autogenerated method: System.TimeZoneInfo.FindTimeZoneIdUsingReadLink
::StringW System::TimeZoneInfo::FindTimeZoneIdUsingReadLink(::StringW tzFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::FindTimeZoneIdUsingReadLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FindTimeZoneIdUsingReadLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tzFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tzFilePath);
}
// Autogenerated method: System.TimeZoneInfo.GetDirectoryEntryFullPath
::StringW System::TimeZoneInfo::GetDirectoryEntryFullPath(ByRef<::GlobalNamespace::Interop::Sys::DirectoryEntry> dirent, ::StringW currentPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetDirectoryEntryFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetDirectoryEntryFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dirent), ::il2cpp_utils::ExtractType(currentPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(dirent), currentPath);
}
// Autogenerated method: System.TimeZoneInfo.EnumerateFilesRecursively
void System::TimeZoneInfo::EnumerateFilesRecursively(::StringW path, ::System::Predicate_1<::StringW>* condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::EnumerateFilesRecursively");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "EnumerateFilesRecursively", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(condition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, condition);
}
// Autogenerated method: System.TimeZoneInfo.FindTimeZoneId
::StringW System::TimeZoneInfo::FindTimeZoneId(::ArrayW<uint8_t> rawData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::FindTimeZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FindTimeZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData);
}
// Autogenerated method: System.TimeZoneInfo.CompareTimeZoneFile
bool System::TimeZoneInfo::CompareTimeZoneFile(::StringW filePath, ::ArrayW<uint8_t> buffer, ::ArrayW<uint8_t> rawData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CompareTimeZoneFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CompareTimeZoneFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(rawData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, buffer, rawData);
}
// Autogenerated method: System.TimeZoneInfo.GetLocalTimeZoneFromTzFile
::System::TimeZoneInfo* System::TimeZoneInfo::GetLocalTimeZoneFromTzFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetLocalTimeZoneFromTzFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetLocalTimeZoneFromTzFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.GetTimeZoneFromTzData
::System::TimeZoneInfo* System::TimeZoneInfo::GetTimeZoneFromTzData(::ArrayW<uint8_t> rawData, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetTimeZoneFromTzData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetTimeZoneFromTzData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData, id);
}
// Autogenerated method: System.TimeZoneInfo.GetTimeZoneDirectory
::StringW System::TimeZoneInfo::GetTimeZoneDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetTimeZoneDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetTimeZoneDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.GetDateTimeNowUtcOffsetFromUtc
::System::TimeSpan System::TimeZoneInfo::GetDateTimeNowUtcOffsetFromUtc(::System::DateTime time, ByRef<bool> isAmbiguousLocalDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetDateTimeNowUtcOffsetFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetDateTimeNowUtcOffsetFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, byref(isAmbiguousLocalDst));
}
// Autogenerated method: System.TimeZoneInfo.TZif_GenerateAdjustmentRules
void System::TimeZoneInfo::TZif_GenerateAdjustmentRules(ByRef<::ArrayW<::System::TimeZoneInfo::AdjustmentRule*>> rules, ::System::TimeSpan baseUtcOffset, ::ArrayW<::System::DateTime> dts, ::ArrayW<uint8_t> typeOfLocalTime, ::ArrayW<::System::TimeZoneInfo::TZifType> transitionType, ::ArrayW<bool> StandardTime, ::ArrayW<bool> GmtTime, ::StringW futureTransitionsPosixFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_GenerateAdjustmentRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_GenerateAdjustmentRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::System::TimeZoneInfo::AdjustmentRule*>&>(), ::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(dts), ::il2cpp_utils::ExtractType(typeOfLocalTime), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(StandardTime), ::il2cpp_utils::ExtractType(GmtTime), ::il2cpp_utils::ExtractType(futureTransitionsPosixFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(rules), baseUtcOffset, dts, typeOfLocalTime, transitionType, StandardTime, GmtTime, futureTransitionsPosixFormat);
}
// Autogenerated method: System.TimeZoneInfo.TZif_GenerateAdjustmentRule
void System::TimeZoneInfo::TZif_GenerateAdjustmentRule(ByRef<int> index, ::System::TimeSpan timeZoneBaseUtcOffset, ::System::Collections::Generic::List_1<::System::TimeZoneInfo::AdjustmentRule*>* rulesList, ::ArrayW<::System::DateTime> dts, ::ArrayW<uint8_t> typeOfLocalTime, ::ArrayW<::System::TimeZoneInfo::TZifType> transitionTypes, ::ArrayW<bool> StandardTime, ::ArrayW<bool> GmtTime, ::StringW futureTransitionsPosixFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_GenerateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_GenerateAdjustmentRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(timeZoneBaseUtcOffset), ::il2cpp_utils::ExtractType(rulesList), ::il2cpp_utils::ExtractType(dts), ::il2cpp_utils::ExtractType(typeOfLocalTime), ::il2cpp_utils::ExtractType(transitionTypes), ::il2cpp_utils::ExtractType(StandardTime), ::il2cpp_utils::ExtractType(GmtTime), ::il2cpp_utils::ExtractType(futureTransitionsPosixFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(index), timeZoneBaseUtcOffset, rulesList, dts, typeOfLocalTime, transitionTypes, StandardTime, GmtTime, futureTransitionsPosixFormat);
}
// Autogenerated method: System.TimeZoneInfo.TZif_CalculateTransitionOffsetFromBase
::System::TimeSpan System::TimeZoneInfo::TZif_CalculateTransitionOffsetFromBase(::System::TimeSpan transitionOffset, ::System::TimeSpan timeZoneBaseUtcOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_CalculateTransitionOffsetFromBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_CalculateTransitionOffsetFromBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionOffset), ::il2cpp_utils::ExtractType(timeZoneBaseUtcOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transitionOffset, timeZoneBaseUtcOffset);
}
// Autogenerated method: System.TimeZoneInfo.TZif_GetEarlyDateTransitionType
::System::TimeZoneInfo::TZifType System::TimeZoneInfo::TZif_GetEarlyDateTransitionType(::ArrayW<::System::TimeZoneInfo::TZifType> transitionTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_GetEarlyDateTransitionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_GetEarlyDateTransitionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TZifType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transitionTypes);
}
// Autogenerated method: System.TimeZoneInfo.TZif_CreateAdjustmentRuleForPosixFormat
::System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::TZif_CreateAdjustmentRuleForPosixFormat(::StringW posixFormat, ::System::DateTime startTransitionDate, ::System::TimeSpan timeZoneBaseUtcOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_CreateAdjustmentRuleForPosixFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_CreateAdjustmentRuleForPosixFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(posixFormat), ::il2cpp_utils::ExtractType(startTransitionDate), ::il2cpp_utils::ExtractType(timeZoneBaseUtcOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, posixFormat, startTransitionDate, timeZoneBaseUtcOffset);
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParseOffsetString
::System::Nullable_1<::System::TimeSpan> System::TimeZoneInfo::TZif_ParseOffsetString(::StringW offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParseOffsetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParseOffsetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offset);
}
// Autogenerated method: System.TimeZoneInfo.ParseTimeOfDay
::System::DateTime System::TimeZoneInfo::ParseTimeOfDay(::StringW time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ParseTimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseTimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: System.TimeZoneInfo.TZif_CreateTransitionTimeFromPosixRule
::System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TZif_CreateTransitionTimeFromPosixRule(::StringW date, ::StringW time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_CreateTransitionTimeFromPosixRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_CreateTransitionTimeFromPosixRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(date), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, date, time);
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParseJulianDay
void System::TimeZoneInfo::TZif_ParseJulianDay(::StringW date, ByRef<int> month, ByRef<int> day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParseJulianDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParseJulianDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(date), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, date, byref(month), byref(day));
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParseMDateRule
bool System::TimeZoneInfo::TZif_ParseMDateRule(::StringW dateRule, ByRef<int> month, ByRef<int> week, ByRef<::System::DayOfWeek> dayOfWeek) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParseMDateRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParseMDateRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateRule), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::DayOfWeek&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateRule, byref(month), byref(week), byref(dayOfWeek));
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParsePosixFormat
bool System::TimeZoneInfo::TZif_ParsePosixFormat(::StringW posixFormat, ByRef<::StringW> standardName, ByRef<::StringW> standardOffset, ByRef<::StringW> daylightSavingsName, ByRef<::StringW> daylightSavingsOffset, ByRef<::StringW> start, ByRef<::StringW> startTime, ByRef<::StringW> end, ByRef<::StringW> endTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParsePosixFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParsePosixFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(posixFormat), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, posixFormat, byref(standardName), byref(standardOffset), byref(daylightSavingsName), byref(daylightSavingsOffset), byref(start), byref(startTime), byref(end), byref(endTime));
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParsePosixName
::StringW System::TimeZoneInfo::TZif_ParsePosixName(::StringW posixFormat, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParsePosixName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParsePosixName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(posixFormat), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, posixFormat, byref(index));
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParsePosixOffset
::StringW System::TimeZoneInfo::TZif_ParsePosixOffset(::StringW posixFormat, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParsePosixOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParsePosixOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(posixFormat), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, posixFormat, byref(index));
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParsePosixDateTime
void System::TimeZoneInfo::TZif_ParsePosixDateTime(::StringW posixFormat, ByRef<int> index, ByRef<::StringW> date, ByRef<::StringW> time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParsePosixDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParsePosixDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(posixFormat), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, posixFormat, byref(index), byref(date), byref(time));
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParsePosixDate
::StringW System::TimeZoneInfo::TZif_ParsePosixDate(::StringW posixFormat, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParsePosixDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParsePosixDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(posixFormat), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, posixFormat, byref(index));
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParsePosixTime
::StringW System::TimeZoneInfo::TZif_ParsePosixTime(::StringW posixFormat, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParsePosixTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParsePosixTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(posixFormat), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, posixFormat, byref(index));
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParsePosixString
::StringW System::TimeZoneInfo::TZif_ParsePosixString(::StringW posixFormat, ByRef<int> index, ::System::Func_2<::Il2CppChar, bool>* breakCondition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParsePosixString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParsePosixString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(posixFormat), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(breakCondition)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, posixFormat, byref(index), breakCondition);
}
// Autogenerated method: System.TimeZoneInfo.TZif_GetZoneAbbreviation
::StringW System::TimeZoneInfo::TZif_GetZoneAbbreviation(::StringW zoneAbbreviations, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_GetZoneAbbreviation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_GetZoneAbbreviation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(zoneAbbreviations), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, zoneAbbreviations, index);
}
// Autogenerated method: System.TimeZoneInfo.TZif_ToInt32
int System::TimeZoneInfo::TZif_ToInt32(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.TimeZoneInfo.TZif_ToInt64
int64_t System::TimeZoneInfo::TZif_ToInt64(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.TimeZoneInfo.TZif_ToUnixTime
int64_t System::TimeZoneInfo::TZif_ToUnixTime(::ArrayW<uint8_t> value, int startIndex, ::System::TimeZoneInfo::TZVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ToUnixTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ToUnixTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex, version);
}
// Autogenerated method: System.TimeZoneInfo.TZif_UnixTimeToDateTime
::System::DateTime System::TimeZoneInfo::TZif_UnixTimeToDateTime(int64_t unixTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_UnixTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_UnixTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unixTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unixTime);
}
// Autogenerated method: System.TimeZoneInfo.TZif_ParseRaw
void System::TimeZoneInfo::TZif_ParseRaw(::ArrayW<uint8_t> data, ByRef<::System::TimeZoneInfo::TZifHead> t, ByRef<::ArrayW<::System::DateTime>> dts, ByRef<::ArrayW<uint8_t>> typeOfLocalTime, ByRef<::ArrayW<::System::TimeZoneInfo::TZifType>> transitionType, ByRef<::StringW> zoneAbbreviations, ByRef<::ArrayW<bool>> StandardTime, ByRef<::ArrayW<bool>> GmtTime, ByRef<::StringW> futureTransitionsPosixFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZif_ParseRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TZif_ParseRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractIndependentType<::System::TimeZoneInfo::TZifHead&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::System::DateTime>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::System::TimeZoneInfo::TZifType>&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<bool>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<bool>&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(t), byref(dts), byref(typeOfLocalTime), byref(transitionType), byref(zoneAbbreviations), byref(StandardTime), byref(GmtTime), byref(futureTransitionsPosixFormat));
}
// Autogenerated method: System.TimeZoneInfo.get_DisplayName
::StringW System::TimeZoneInfo::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_StandardName
::StringW System::TimeZoneInfo::get_StandardName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_StandardName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StandardName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_DaylightName
::StringW System::TimeZoneInfo::get_DaylightName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_DaylightName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DaylightName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_BaseUtcOffset
::System::TimeSpan System::TimeZoneInfo::get_BaseUtcOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_BaseUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.GetPreviousAdjustmentRule
::System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::GetPreviousAdjustmentRule(::System::TimeZoneInfo::AdjustmentRule* rule, ::System::Nullable_1<int> ruleIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetPreviousAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreviousAdjustmentRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rule), ::il2cpp_utils::ExtractType(ruleIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::AdjustmentRule*, false>(this, ___internal__method, rule, ruleIndex);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
::System::TimeSpan System::TimeZoneInfo::GetUtcOffset(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.GetLocalUtcOffset
::System::TimeSpan System::TimeZoneInfo::GetLocalUtcOffset(::System::DateTime dateTime, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetLocalUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetLocalUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
::System::TimeSpan System::TimeZoneInfo::GetUtcOffset(::System::DateTime dateTime, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, dateTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
::System::TimeSpan System::TimeZoneInfo::GetUtcOffset(::System::DateTime dateTime, ::System::TimeZoneInfoOptions flags, ::System::TimeZoneInfo::CachedData* cachedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(cachedData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, dateTime, flags, cachedData);
}
// Autogenerated method: System.TimeZoneInfo.IsDaylightSavingTime
bool System::TimeZoneInfo::IsDaylightSavingTime(::System::DateTime dateTime, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::IsDaylightSavingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDaylightSavingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dateTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.IsDaylightSavingTime
bool System::TimeZoneInfo::IsDaylightSavingTime(::System::DateTime dateTime, ::System::TimeZoneInfoOptions flags, ::System::TimeZoneInfo::CachedData* cachedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::IsDaylightSavingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDaylightSavingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(cachedData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dateTime, flags, cachedData);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTime
::System::DateTime System::TimeZoneInfo::ConvertTime(::System::DateTime dateTime, ::System::TimeZoneInfo* sourceTimeZone, ::System::TimeZoneInfo* destinationTimeZone, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(sourceTimeZone), ::il2cpp_utils::ExtractType(destinationTimeZone), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, sourceTimeZone, destinationTimeZone, flags);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTime
::System::DateTime System::TimeZoneInfo::ConvertTime(::System::DateTime dateTime, ::System::TimeZoneInfo* sourceTimeZone, ::System::TimeZoneInfo* destinationTimeZone, ::System::TimeZoneInfoOptions flags, ::System::TimeZoneInfo::CachedData* cachedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(sourceTimeZone), ::il2cpp_utils::ExtractType(destinationTimeZone), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(cachedData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, sourceTimeZone, destinationTimeZone, flags, cachedData);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeToUtc
::System::DateTime System::TimeZoneInfo::ConvertTimeToUtc(::System::DateTime dateTime, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertTimeToUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTimeToUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.Equals
bool System::TimeZoneInfo::Equals(::System::TimeZoneInfo* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::TimeZoneInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo.HasSameRules
bool System::TimeZoneInfo::HasSameRules(::System::TimeZoneInfo* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::HasSameRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasSameRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo.get_Local
::System::TimeZoneInfo* System::TimeZoneInfo::get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_Local");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_Local", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_Utc
::System::TimeZoneInfo* System::TimeZoneInfo::get_Utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_Utc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_Utc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.CreateCustomTimeZone
::System::TimeZoneInfo* System::TimeZoneInfo::CreateCustomTimeZone(::StringW id, ::System::TimeSpan baseUtcOffset, ::StringW displayName, ::StringW standardDisplayName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateCustomTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateCustomTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(displayName), ::il2cpp_utils::ExtractType(standardDisplayName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, baseUtcOffset, displayName, standardDisplayName);
}
// Autogenerated method: System.TimeZoneInfo.CreateCustomTimeZone
::System::TimeZoneInfo* System::TimeZoneInfo::CreateCustomTimeZone(::StringW id, ::System::TimeSpan baseUtcOffset, ::StringW displayName, ::StringW standardDisplayName, ::StringW daylightDisplayName, ::ArrayW<::System::TimeZoneInfo::AdjustmentRule*> adjustmentRules, bool disableDaylightSavingTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateCustomTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateCustomTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(displayName), ::il2cpp_utils::ExtractType(standardDisplayName), ::il2cpp_utils::ExtractType(daylightDisplayName), ::il2cpp_utils::ExtractType(adjustmentRules), ::il2cpp_utils::ExtractType(disableDaylightSavingTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules, disableDaylightSavingTime);
}
// Autogenerated method: System.TimeZoneInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::TimeZoneInfo*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::TimeZoneInfo*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo.GetAdjustmentRuleForTime
::System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::GetAdjustmentRuleForTime(::System::DateTime dateTime, ByRef<::System::Nullable_1<int>> ruleIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetAdjustmentRuleForTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAdjustmentRuleForTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractIndependentType<::System::Nullable_1<int>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::AdjustmentRule*, false>(this, ___internal__method, dateTime, byref(ruleIndex));
}
// Autogenerated method: System.TimeZoneInfo.GetAdjustmentRuleForTime
::System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::GetAdjustmentRuleForTime(::System::DateTime dateTime, bool dateTimeisUtc, ByRef<::System::Nullable_1<int>> ruleIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetAdjustmentRuleForTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAdjustmentRuleForTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(dateTimeisUtc), ::il2cpp_utils::ExtractIndependentType<::System::Nullable_1<int>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::AdjustmentRule*, false>(this, ___internal__method, dateTime, dateTimeisUtc, byref(ruleIndex));
}
// Autogenerated method: System.TimeZoneInfo.CompareAdjustmentRuleToDateTime
int System::TimeZoneInfo::CompareAdjustmentRuleToDateTime(::System::TimeZoneInfo::AdjustmentRule* rule, ::System::TimeZoneInfo::AdjustmentRule* previousRule, ::System::DateTime dateTime, ::System::DateTime dateOnly, bool dateTimeisUtc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CompareAdjustmentRuleToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareAdjustmentRuleToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rule), ::il2cpp_utils::ExtractType(previousRule), ::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(dateOnly), ::il2cpp_utils::ExtractType(dateTimeisUtc)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, rule, previousRule, dateTime, dateOnly, dateTimeisUtc);
}
// Autogenerated method: System.TimeZoneInfo.ConvertToUtc
::System::DateTime System::TimeZoneInfo::ConvertToUtc(::System::DateTime dateTime, ::System::TimeSpan daylightDelta, ::System::TimeSpan baseUtcOffsetDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertToUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(daylightDelta), ::il2cpp_utils::ExtractType(baseUtcOffsetDelta)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, dateTime, daylightDelta, baseUtcOffsetDelta);
}
// Autogenerated method: System.TimeZoneInfo.ConvertFromUtc
::System::DateTime System::TimeZoneInfo::ConvertFromUtc(::System::DateTime dateTime, ::System::TimeSpan daylightDelta, ::System::TimeSpan baseUtcOffsetDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(daylightDelta), ::il2cpp_utils::ExtractType(baseUtcOffsetDelta)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, dateTime, daylightDelta, baseUtcOffsetDelta);
}
// Autogenerated method: System.TimeZoneInfo.ConvertToFromUtc
::System::DateTime System::TimeZoneInfo::ConvertToFromUtc(::System::DateTime dateTime, ::System::TimeSpan daylightDelta, ::System::TimeSpan baseUtcOffsetDelta, bool convertToUtc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertToFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(daylightDelta), ::il2cpp_utils::ExtractType(baseUtcOffsetDelta), ::il2cpp_utils::ExtractType(convertToUtc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, dateTime, daylightDelta, baseUtcOffsetDelta, convertToUtc);
}
// Autogenerated method: System.TimeZoneInfo.ConvertUtcToTimeZone
::System::DateTime System::TimeZoneInfo::ConvertUtcToTimeZone(int64_t ticks, ::System::TimeZoneInfo* destinationTimeZone, ByRef<bool> isAmbiguousLocalDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertUtcToTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertUtcToTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks), ::il2cpp_utils::ExtractType(destinationTimeZone), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ticks, destinationTimeZone, byref(isAmbiguousLocalDst));
}
// Autogenerated method: System.TimeZoneInfo.GetDaylightTime
::System::Globalization::DaylightTimeStruct System::TimeZoneInfo::GetDaylightTime(int year, ::System::TimeZoneInfo::AdjustmentRule* rule, ::System::Nullable_1<int> ruleIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetDaylightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaylightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(rule), ::il2cpp_utils::ExtractType(ruleIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DaylightTimeStruct, false>(this, ___internal__method, year, rule, ruleIndex);
}
// Autogenerated method: System.TimeZoneInfo.GetIsDaylightSavings
bool System::TimeZoneInfo::GetIsDaylightSavings(::System::DateTime time, ::System::TimeZoneInfo::AdjustmentRule* rule, ::System::Globalization::DaylightTimeStruct daylightTime, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetIsDaylightSavings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetIsDaylightSavings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(rule), ::il2cpp_utils::ExtractType(daylightTime), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, rule, daylightTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.GetDaylightSavingsStartOffsetFromUtc
::System::TimeSpan System::TimeZoneInfo::GetDaylightSavingsStartOffsetFromUtc(::System::TimeSpan baseUtcOffset, ::System::TimeZoneInfo::AdjustmentRule* rule, ::System::Nullable_1<int> ruleIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetDaylightSavingsStartOffsetFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaylightSavingsStartOffsetFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(rule), ::il2cpp_utils::ExtractType(ruleIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, baseUtcOffset, rule, ruleIndex);
}
// Autogenerated method: System.TimeZoneInfo.GetDaylightSavingsEndOffsetFromUtc
::System::TimeSpan System::TimeZoneInfo::GetDaylightSavingsEndOffsetFromUtc(::System::TimeSpan baseUtcOffset, ::System::TimeZoneInfo::AdjustmentRule* rule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetDaylightSavingsEndOffsetFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaylightSavingsEndOffsetFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(rule)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, baseUtcOffset, rule);
}
// Autogenerated method: System.TimeZoneInfo.GetIsDaylightSavingsFromUtc
bool System::TimeZoneInfo::GetIsDaylightSavingsFromUtc(::System::DateTime time, int year, ::System::TimeSpan utc, ::System::TimeZoneInfo::AdjustmentRule* rule, ::System::Nullable_1<int> ruleIndex, ByRef<bool> isAmbiguousLocalDst, ::System::TimeZoneInfo* zone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetIsDaylightSavingsFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetIsDaylightSavingsFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(utc), ::il2cpp_utils::ExtractType(rule), ::il2cpp_utils::ExtractType(ruleIndex), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractType(zone)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, year, utc, rule, ruleIndex, byref(isAmbiguousLocalDst), zone);
}
// Autogenerated method: System.TimeZoneInfo.CheckIsDst
bool System::TimeZoneInfo::CheckIsDst(::System::DateTime startTime, ::System::DateTime time, ::System::DateTime endTime, bool ignoreYearAdjustment, ::System::TimeZoneInfo::AdjustmentRule* rule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CheckIsDst");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CheckIsDst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(endTime), ::il2cpp_utils::ExtractType(ignoreYearAdjustment), ::il2cpp_utils::ExtractType(rule)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startTime, time, endTime, ignoreYearAdjustment, rule);
}
// Autogenerated method: System.TimeZoneInfo.GetIsAmbiguousTime
bool System::TimeZoneInfo::GetIsAmbiguousTime(::System::DateTime time, ::System::TimeZoneInfo::AdjustmentRule* rule, ::System::Globalization::DaylightTimeStruct daylightTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetIsAmbiguousTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetIsAmbiguousTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(rule), ::il2cpp_utils::ExtractType(daylightTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, rule, daylightTime);
}
// Autogenerated method: System.TimeZoneInfo.GetIsInvalidTime
bool System::TimeZoneInfo::GetIsInvalidTime(::System::DateTime time, ::System::TimeZoneInfo::AdjustmentRule* rule, ::System::Globalization::DaylightTimeStruct daylightTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetIsInvalidTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetIsInvalidTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(rule), ::il2cpp_utils::ExtractType(daylightTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, rule, daylightTime);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
::System::TimeSpan System::TimeZoneInfo::GetUtcOffset(::System::DateTime time, ::System::TimeZoneInfo* zone, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(zone), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, zone, flags);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffsetFromUtc
::System::TimeSpan System::TimeZoneInfo::GetUtcOffsetFromUtc(::System::DateTime time, ::System::TimeZoneInfo* zone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffsetFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetUtcOffsetFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(zone)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, zone);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffsetFromUtc
::System::TimeSpan System::TimeZoneInfo::GetUtcOffsetFromUtc(::System::DateTime time, ::System::TimeZoneInfo* zone, ByRef<bool> isDaylightSavings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffsetFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetUtcOffsetFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(zone), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, zone, byref(isDaylightSavings));
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffsetFromUtc
::System::TimeSpan System::TimeZoneInfo::GetUtcOffsetFromUtc(::System::DateTime time, ::System::TimeZoneInfo* zone, ByRef<bool> isDaylightSavings, ByRef<bool> isAmbiguousLocalDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffsetFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetUtcOffsetFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(zone), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, zone, byref(isDaylightSavings), byref(isAmbiguousLocalDst));
}
// Autogenerated method: System.TimeZoneInfo.TransitionTimeToDateTime
::System::DateTime System::TimeZoneInfo::TransitionTimeToDateTime(int year, ::System::TimeZoneInfo::TransitionTime transitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TransitionTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(transitionTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, transitionTime);
}
// Autogenerated method: System.TimeZoneInfo.ValidateTimeZoneInfo
void System::TimeZoneInfo::ValidateTimeZoneInfo(::StringW id, ::System::TimeSpan baseUtcOffset, ::ArrayW<::System::TimeZoneInfo::AdjustmentRule*> adjustmentRules, ByRef<bool> adjustmentRulesSupportDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ValidateTimeZoneInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ValidateTimeZoneInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(adjustmentRules), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, baseUtcOffset, adjustmentRules, byref(adjustmentRulesSupportDst));
}
// Autogenerated method: System.TimeZoneInfo.UtcOffsetOutOfRange
bool System::TimeZoneInfo::UtcOffsetOutOfRange(::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::UtcOffsetOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "UtcOffsetOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offset);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
::System::TimeSpan System::TimeZoneInfo::GetUtcOffset(::System::TimeSpan baseUtcOffset, ::System::TimeZoneInfo::AdjustmentRule* adjustmentRule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(adjustmentRule)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUtcOffset, adjustmentRule);
}
// Autogenerated method: System.TimeZoneInfo.IsValidAdjustmentRuleOffest
bool System::TimeZoneInfo::IsValidAdjustmentRuleOffest(::System::TimeSpan baseUtcOffset, ::System::TimeZoneInfo::AdjustmentRule* adjustmentRule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::IsValidAdjustmentRuleOffest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "IsValidAdjustmentRuleOffest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(adjustmentRule)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUtcOffset, adjustmentRule);
}
// Autogenerated method: System.TimeZoneInfo.NormalizeAdjustmentRuleOffset
void System::TimeZoneInfo::NormalizeAdjustmentRuleOffset(::System::TimeSpan baseUtcOffset, ByRef<::System::TimeZoneInfo::AdjustmentRule*> adjustmentRule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::NormalizeAdjustmentRuleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "NormalizeAdjustmentRuleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(adjustmentRule)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUtcOffset, byref(adjustmentRule));
}
// Autogenerated method: System.TimeZoneInfo.GetTimeZoneDirectoryUnity
::StringW System::TimeZoneInfo::GetTimeZoneDirectoryUnity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetTimeZoneDirectoryUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetTimeZoneDirectoryUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.CreateAdjustmentRule
::System::Collections::Generic::List_1<::System::TimeZoneInfo::AdjustmentRule*>* System::TimeZoneInfo::CreateAdjustmentRule(int year, ByRef<::ArrayW<int64_t>> data, ByRef<::ArrayW<::StringW>> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractIndependentType<::ArrayW<int64_t>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::TimeZoneInfo::AdjustmentRule*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, byref(data), byref(names));
}
// Autogenerated method: System.TimeZoneInfo.CreateLocalUnity
::System::TimeZoneInfo* System::TimeZoneInfo::CreateLocalUnity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateLocalUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateLocalUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo..cctor
void System::TimeZoneInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.Equals
bool System::TimeZoneInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.TimeZoneInfo.GetHashCode
int System::TimeZoneInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.ToString
::StringW System::TimeZoneInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.TimeZoneInfo/TZifType
#include "System/TimeZoneInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.TimeSpan UtcOffset
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::TimeZoneInfo::TZifType::dyn_UtcOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifType::dyn_UtcOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UtcOffset"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsDst
[[deprecated("Use field access instead!")]] bool& System::TimeZoneInfo::TZifType::dyn_IsDst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifType::dyn_IsDst");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsDst"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte AbbreviationIndex
[[deprecated("Use field access instead!")]] uint8_t& System::TimeZoneInfo::TZifType::dyn_AbbreviationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifType::dyn_AbbreviationIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AbbreviationIndex"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeZoneInfo/TZifType..ctor
System::TimeZoneInfo::TZifType::TZifType(::ArrayW<uint8_t> data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifType::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.TimeZoneInfo/TZifHead
#include "System/TimeZoneInfo_TZifHead.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 Magic
[[deprecated("Use field access instead!")]] uint& System::TimeZoneInfo::TZifHead::dyn_Magic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifHead::dyn_Magic");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Magic"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.TimeZoneInfo/TZVersion Version
[[deprecated("Use field access instead!")]] ::System::TimeZoneInfo::TZVersion& System::TimeZoneInfo::TZifHead::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifHead::dyn_Version");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<::System::TimeZoneInfo::TZVersion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 IsGmtCount
[[deprecated("Use field access instead!")]] uint& System::TimeZoneInfo::TZifHead::dyn_IsGmtCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifHead::dyn_IsGmtCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsGmtCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 IsStdCount
[[deprecated("Use field access instead!")]] uint& System::TimeZoneInfo::TZifHead::dyn_IsStdCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifHead::dyn_IsStdCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsStdCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 LeapCount
[[deprecated("Use field access instead!")]] uint& System::TimeZoneInfo::TZifHead::dyn_LeapCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifHead::dyn_LeapCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeapCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 TimeCount
[[deprecated("Use field access instead!")]] uint& System::TimeZoneInfo::TZifHead::dyn_TimeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifHead::dyn_TimeCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 TypeCount
[[deprecated("Use field access instead!")]] uint& System::TimeZoneInfo::TZifHead::dyn_TypeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifHead::dyn_TypeCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypeCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 CharCount
[[deprecated("Use field access instead!")]] uint& System::TimeZoneInfo::TZifHead::dyn_CharCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifHead::dyn_CharCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeZoneInfo/TZifHead..ctor
System::TimeZoneInfo::TZifHead::TZifHead(::ArrayW<uint8_t> data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZifHead::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.TimeZoneInfo/TZVersion
#include "System/TimeZoneInfo_TZVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TimeZoneInfo/TZVersion V1
::System::TimeZoneInfo::TZVersion System::TimeZoneInfo::TZVersion::_get_V1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZVersion::_get_V1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeZoneInfo::TZVersion>("System", "TimeZoneInfo/TZVersion", "V1"));
}
// Autogenerated static field setter
// Set static field: static public System.TimeZoneInfo/TZVersion V1
void System::TimeZoneInfo::TZVersion::_set_V1(::System::TimeZoneInfo::TZVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZVersion::_set_V1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/TZVersion", "V1", value));
}
// Autogenerated static field getter
// Get static field: static public System.TimeZoneInfo/TZVersion V2
::System::TimeZoneInfo::TZVersion System::TimeZoneInfo::TZVersion::_get_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZVersion::_get_V2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeZoneInfo::TZVersion>("System", "TimeZoneInfo/TZVersion", "V2"));
}
// Autogenerated static field setter
// Set static field: static public System.TimeZoneInfo/TZVersion V2
void System::TimeZoneInfo::TZVersion::_set_V2(::System::TimeZoneInfo::TZVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZVersion::_set_V2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/TZVersion", "V2", value));
}
// Autogenerated static field getter
// Get static field: static public System.TimeZoneInfo/TZVersion V3
::System::TimeZoneInfo::TZVersion System::TimeZoneInfo::TZVersion::_get_V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZVersion::_get_V3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeZoneInfo::TZVersion>("System", "TimeZoneInfo/TZVersion", "V3"));
}
// Autogenerated static field setter
// Set static field: static public System.TimeZoneInfo/TZVersion V3
void System::TimeZoneInfo::TZVersion::_set_V3(::System::TimeZoneInfo::TZVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZVersion::_set_V3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/TZVersion", "V3", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::TimeZoneInfo::TZVersion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TZVersion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo/AdjustmentRule
#include "System/TimeZoneInfo_AdjustmentRule.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.DateTime _dateStart
[[deprecated("Use field access instead!")]] ::System::DateTime& System::TimeZoneInfo::AdjustmentRule::dyn__dateStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn__dateStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateStart"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.DateTime _dateEnd
[[deprecated("Use field access instead!")]] ::System::DateTime& System::TimeZoneInfo::AdjustmentRule::dyn__dateEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn__dateEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateEnd"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.TimeSpan _daylightDelta
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::TimeZoneInfo::AdjustmentRule::dyn__daylightDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn__daylightDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_daylightDelta"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.TimeZoneInfo/TransitionTime _daylightTransitionStart
[[deprecated("Use field access instead!")]] ::System::TimeZoneInfo::TransitionTime& System::TimeZoneInfo::AdjustmentRule::dyn__daylightTransitionStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn__daylightTransitionStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_daylightTransitionStart"))->offset;
  return *reinterpret_cast<::System::TimeZoneInfo::TransitionTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.TimeZoneInfo/TransitionTime _daylightTransitionEnd
[[deprecated("Use field access instead!")]] ::System::TimeZoneInfo::TransitionTime& System::TimeZoneInfo::AdjustmentRule::dyn__daylightTransitionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn__daylightTransitionEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_daylightTransitionEnd"))->offset;
  return *reinterpret_cast<::System::TimeZoneInfo::TransitionTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.TimeSpan _baseUtcOffsetDelta
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::TimeZoneInfo::AdjustmentRule::dyn__baseUtcOffsetDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn__baseUtcOffsetDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseUtcOffsetDelta"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _noDaylightTransitions
[[deprecated("Use field access instead!")]] bool& System::TimeZoneInfo::AdjustmentRule::dyn__noDaylightTransitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn__noDaylightTransitions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noDaylightTransitions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DateStart
::System::DateTime System::TimeZoneInfo::AdjustmentRule::get_DateStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_DateStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DateEnd
::System::DateTime System::TimeZoneInfo::AdjustmentRule::get_DateEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_DateEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DaylightDelta
::System::TimeSpan System::TimeZoneInfo::AdjustmentRule::get_DaylightDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_DaylightDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DaylightDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DaylightTransitionStart
::System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DaylightTransitionStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TransitionTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DaylightTransitionEnd
::System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DaylightTransitionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TransitionTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_BaseUtcOffsetDelta
::System::TimeSpan System::TimeZoneInfo::AdjustmentRule::get_BaseUtcOffsetDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_BaseUtcOffsetDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUtcOffsetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_NoDaylightTransitions
bool System::TimeZoneInfo::AdjustmentRule::get_NoDaylightTransitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_NoDaylightTransitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoDaylightTransitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_HasDaylightSaving
bool System::TimeZoneInfo::AdjustmentRule::get_HasDaylightSaving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_HasDaylightSaving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDaylightSaving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.Equals
bool System::TimeZoneInfo::AdjustmentRule::Equals(::System::TimeZoneInfo::AdjustmentRule* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::TimeZoneInfo::AdjustmentRule*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.CreateAdjustmentRule
::System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule(::System::DateTime dateStart, ::System::DateTime dateEnd, ::System::TimeSpan daylightDelta, ::System::TimeZoneInfo::TransitionTime daylightTransitionStart, ::System::TimeZoneInfo::TransitionTime daylightTransitionEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateStart), ::il2cpp_utils::ExtractType(dateEnd), ::il2cpp_utils::ExtractType(daylightDelta), ::il2cpp_utils::ExtractType(daylightTransitionStart), ::il2cpp_utils::ExtractType(daylightTransitionEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.CreateAdjustmentRule
::System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule(::System::DateTime dateStart, ::System::DateTime dateEnd, ::System::TimeSpan daylightDelta, ::System::TimeZoneInfo::TransitionTime daylightTransitionStart, ::System::TimeZoneInfo::TransitionTime daylightTransitionEnd, ::System::TimeSpan baseUtcOffsetDelta, bool noDaylightTransitions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateStart), ::il2cpp_utils::ExtractType(dateEnd), ::il2cpp_utils::ExtractType(daylightDelta), ::il2cpp_utils::ExtractType(daylightTransitionStart), ::il2cpp_utils::ExtractType(daylightTransitionEnd), ::il2cpp_utils::ExtractType(baseUtcOffsetDelta), ::il2cpp_utils::ExtractType(noDaylightTransitions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd, baseUtcOffsetDelta, noDaylightTransitions);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.IsStartDateMarkerForBeginningOfYear
bool System::TimeZoneInfo::AdjustmentRule::IsStartDateMarkerForBeginningOfYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::IsStartDateMarkerForBeginningOfYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsStartDateMarkerForBeginningOfYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.IsEndDateMarkerForEndOfYear
bool System::TimeZoneInfo::AdjustmentRule::IsEndDateMarkerForEndOfYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::IsEndDateMarkerForEndOfYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEndDateMarkerForEndOfYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.ValidateAdjustmentRule
void System::TimeZoneInfo::AdjustmentRule::ValidateAdjustmentRule(::System::DateTime dateStart, ::System::DateTime dateEnd, ::System::TimeSpan daylightDelta, ::System::TimeZoneInfo::TransitionTime daylightTransitionStart, ::System::TimeZoneInfo::TransitionTime daylightTransitionEnd, bool noDaylightTransitions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::ValidateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "ValidateAdjustmentRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateStart), ::il2cpp_utils::ExtractType(dateEnd), ::il2cpp_utils::ExtractType(daylightDelta), ::il2cpp_utils::ExtractType(daylightTransitionStart), ::il2cpp_utils::ExtractType(daylightTransitionEnd), ::il2cpp_utils::ExtractType(noDaylightTransitions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd, noDaylightTransitions);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::AdjustmentRule::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::TimeZoneInfo::AdjustmentRule*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::AdjustmentRule::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::TimeZoneInfo::AdjustmentRule*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.GetHashCode
int System::TimeZoneInfo::AdjustmentRule::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo/TransitionTime
#include "System/TimeZoneInfo_TransitionTime.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.DateTime _timeOfDay
[[deprecated("Use field access instead!")]] ::System::DateTime& System::TimeZoneInfo::TransitionTime::dyn__timeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn__timeOfDay");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeOfDay"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _month
[[deprecated("Use field access instead!")]] uint8_t& System::TimeZoneInfo::TransitionTime::dyn__month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn__month");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_month"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _week
[[deprecated("Use field access instead!")]] uint8_t& System::TimeZoneInfo::TransitionTime::dyn__week() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn__week");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_week"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _day
[[deprecated("Use field access instead!")]] uint8_t& System::TimeZoneInfo::TransitionTime::dyn__day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn__day");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_day"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.DayOfWeek _dayOfWeek
[[deprecated("Use field access instead!")]] ::System::DayOfWeek& System::TimeZoneInfo::TransitionTime::dyn__dayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn__dayOfWeek");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dayOfWeek"))->offset;
  return *reinterpret_cast<::System::DayOfWeek*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isFixedDateRule
[[deprecated("Use field access instead!")]] bool& System::TimeZoneInfo::TransitionTime::dyn__isFixedDateRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn__isFixedDateRule");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isFixedDateRule"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_TimeOfDay
::System::DateTime System::TimeZoneInfo::TransitionTime::get_TimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_TimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Month
int System::TimeZoneInfo::TransitionTime::get_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_Month");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Month", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Week
int System::TimeZoneInfo::TransitionTime::get_Week() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_Week");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Week", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Day
int System::TimeZoneInfo::TransitionTime::get_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_Day");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Day", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_DayOfWeek
::System::DayOfWeek System::TimeZoneInfo::TransitionTime::get_DayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_DayOfWeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_IsFixedDateRule
bool System::TimeZoneInfo::TransitionTime::get_IsFixedDateRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_IsFixedDateRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsFixedDateRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.Equals
bool System::TimeZoneInfo::TransitionTime::Equals(::System::TimeZoneInfo::TransitionTime other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::TimeZoneInfo::TransitionTime), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime..ctor
System::TimeZoneInfo::TransitionTime::TransitionTime(::System::DateTime timeOfDay, int month, int week, int day, ::System::DayOfWeek dayOfWeek, bool isFixedDateRule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeOfDay), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(week), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(dayOfWeek), ::il2cpp_utils::ExtractType(isFixedDateRule)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeOfDay, month, week, day, dayOfWeek, isFixedDateRule);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateFixedDateRule
::System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateFixedDateRule(::System::DateTime timeOfDay, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::CreateFixedDateRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "CreateFixedDateRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeOfDay), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeOfDay, month, day);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateFloatingDateRule
::System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateFloatingDateRule(::System::DateTime timeOfDay, int month, int week, ::System::DayOfWeek dayOfWeek) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::CreateFloatingDateRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "CreateFloatingDateRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeOfDay), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(week), ::il2cpp_utils::ExtractType(dayOfWeek)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeOfDay, month, week, dayOfWeek);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.ValidateTransitionTime
void System::TimeZoneInfo::TransitionTime::ValidateTransitionTime(::System::DateTime timeOfDay, int month, int week, int day, ::System::DayOfWeek dayOfWeek) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::ValidateTransitionTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "ValidateTransitionTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeOfDay), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(week), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(dayOfWeek)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeOfDay, month, week, day, dayOfWeek);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::TransitionTime::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::TimeZoneInfo::TransitionTime), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::TransitionTime::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::TimeZoneInfo::TransitionTime), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime..ctor
System::TimeZoneInfo::TransitionTime::TransitionTime(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.Equals
bool System::TimeZoneInfo::TransitionTime::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.GetHashCode
int System::TimeZoneInfo::TransitionTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.op_Inequality
bool System::operator !=(const ::System::TimeZoneInfo::TransitionTime& t1, const ::System::TimeZoneInfo::TransitionTime& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.TimeZoneInfo/CachedData
#include "System/TimeZoneInfo_CachedData.hpp"
// Including type: System.DateTimeKind
#include "System/DateTimeKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.TimeZoneInfo _localTimeZone
[[deprecated("Use field access instead!")]] ::System::TimeZoneInfo*& System::TimeZoneInfo::CachedData::dyn__localTimeZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CachedData::dyn__localTimeZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localTimeZone"))->offset;
  return *reinterpret_cast<::System::TimeZoneInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeZoneInfo/CachedData.CreateLocal
::System::TimeZoneInfo* System::TimeZoneInfo::CachedData::CreateLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CachedData::CreateLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/CachedData.get_Local
::System::TimeZoneInfo* System::TimeZoneInfo::CachedData::get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CachedData::get_Local");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Local", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/CachedData.GetCorrespondingKind
::System::DateTimeKind System::TimeZoneInfo::CachedData::GetCorrespondingKind(::System::TimeZoneInfo* timeZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CachedData::GetCorrespondingKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCorrespondingKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeZone)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeKind, false>(this, ___internal__method, timeZone);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.TimeZoneInfo/<>c__DisplayClass16_0
#include "System/TimeZoneInfo_--c__DisplayClass16_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String localtimeFilePath
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_localtimeFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_localtimeFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localtimeFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String posixrulesFilePath
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_posixrulesFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_posixrulesFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posixrulesFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] rawData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_rawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_rawData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String timeZoneDirectory
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_timeZoneDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c__DisplayClass16_0::dyn_timeZoneDirectory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeZoneDirectory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeZoneInfo/<>c__DisplayClass16_0.<FindTimeZoneId>b__0
bool System::TimeZoneInfo::$$c__DisplayClass16_0::$FindTimeZoneId$b__0(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c__DisplayClass16_0::<FindTimeZoneId>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindTimeZoneId>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, filePath);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.TimeZoneInfo/<>c
#include "System/TimeZoneInfo_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.TimeZoneInfo/AdjustmentRule
#include "System/TimeZoneInfo_AdjustmentRule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.TimeZoneInfo/<>c <>9
::System::TimeZoneInfo::$$c* System::TimeZoneInfo::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::TimeZoneInfo::$$c*>("System", "TimeZoneInfo/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeZoneInfo/<>c <>9
void System::TimeZoneInfo::$$c::_set_$$9(::System::TimeZoneInfo::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__34_1
::System::Func_2<::Il2CppChar, bool>* System::TimeZoneInfo::$$c::_get_$$9__34_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_get_$$9__34_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("System", "TimeZoneInfo/<>c", "<>9__34_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__34_1
void System::TimeZoneInfo::$$c::_set_$$9__34_1(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_set_$$9__34_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9__34_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__34_0
::System::Func_2<::Il2CppChar, bool>* System::TimeZoneInfo::$$c::_get_$$9__34_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_get_$$9__34_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("System", "TimeZoneInfo/<>c", "<>9__34_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__34_0
void System::TimeZoneInfo::$$c::_set_$$9__34_0(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_set_$$9__34_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9__34_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__35_0
::System::Func_2<::Il2CppChar, bool>* System::TimeZoneInfo::$$c::_get_$$9__35_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_get_$$9__35_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("System", "TimeZoneInfo/<>c", "<>9__35_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__35_0
void System::TimeZoneInfo::$$c::_set_$$9__35_0(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_set_$$9__35_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9__35_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__37_0
::System::Func_2<::Il2CppChar, bool>* System::TimeZoneInfo::$$c::_get_$$9__37_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_get_$$9__37_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("System", "TimeZoneInfo/<>c", "<>9__37_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__37_0
void System::TimeZoneInfo::$$c::_set_$$9__37_0(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_set_$$9__37_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9__37_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__38_0
::System::Func_2<::Il2CppChar, bool>* System::TimeZoneInfo::$$c::_get_$$9__38_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_get_$$9__38_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("System", "TimeZoneInfo/<>c", "<>9__38_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__38_0
void System::TimeZoneInfo::$$c::_set_$$9__38_0(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_set_$$9__38_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9__38_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<System.TimeZoneInfo/AdjustmentRule> <>9__161_0
::System::Comparison_1<::System::TimeZoneInfo::AdjustmentRule*>* System::TimeZoneInfo::$$c::_get_$$9__161_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_get_$$9__161_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::System::TimeZoneInfo::AdjustmentRule*>*>("System", "TimeZoneInfo/<>c", "<>9__161_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<System.TimeZoneInfo/AdjustmentRule> <>9__161_0
void System::TimeZoneInfo::$$c::_set_$$9__161_0(::System::Comparison_1<::System::TimeZoneInfo::AdjustmentRule*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_set_$$9__161_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9__161_0", value)));
}
// Autogenerated method: System.TimeZoneInfo/<>c..cctor
void System::TimeZoneInfo::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/<>c.<TZif_ParsePosixName>b__34_1
bool System::TimeZoneInfo::$$c::$TZif_ParsePosixName$b__34_1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::<TZif_ParsePosixName>b__34_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TZif_ParsePosixName>b__34_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.TimeZoneInfo/<>c.<TZif_ParsePosixName>b__34_0
bool System::TimeZoneInfo::$$c::$TZif_ParsePosixName$b__34_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::<TZif_ParsePosixName>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TZif_ParsePosixName>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.TimeZoneInfo/<>c.<TZif_ParsePosixOffset>b__35_0
bool System::TimeZoneInfo::$$c::$TZif_ParsePosixOffset$b__35_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::<TZif_ParsePosixOffset>b__35_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TZif_ParsePosixOffset>b__35_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.TimeZoneInfo/<>c.<TZif_ParsePosixDate>b__37_0
bool System::TimeZoneInfo::$$c::$TZif_ParsePosixDate$b__37_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::<TZif_ParsePosixDate>b__37_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TZif_ParsePosixDate>b__37_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.TimeZoneInfo/<>c.<TZif_ParsePosixTime>b__38_0
bool System::TimeZoneInfo::$$c::$TZif_ParsePosixTime$b__38_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::<TZif_ParsePosixTime>b__38_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TZif_ParsePosixTime>b__38_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.TimeZoneInfo/<>c.<CreateLocalUnity>b__161_0
int System::TimeZoneInfo::$$c::$CreateLocalUnity$b__161_0(::System::TimeZoneInfo::AdjustmentRule* rule1, ::System::TimeZoneInfo::AdjustmentRule* rule2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::<CreateLocalUnity>b__161_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateLocalUnity>b__161_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rule1), ::il2cpp_utils::ExtractType(rule2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, rule1, rule2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.AccessViolationException
#include "System/AccessViolationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Action.Invoke
void System::Action::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Action::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Action*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.ReadOnlyCollection`1<System.Exception> m_innerExceptions
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Exception*>*& System::AggregateException::dyn_m_innerExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::dyn_m_innerExceptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_innerExceptions"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.AggregateException.get_InnerExceptions
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Exception*>* System::AggregateException::get_InnerExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::get_InnerExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Exception*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.AggregateException.Flatten
::System::AggregateException* System::AggregateException::Flatten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::Flatten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flatten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AggregateException*, false>(this, ___internal__method);
}
// Autogenerated method: System.AggregateException.GetObjectData
void System::AggregateException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.AggregateException.get_Message
::StringW System::AggregateException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.AggregateException.ToString
::StringW System::AggregateException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ApplicationException
#include "System/ApplicationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _paramName
[[deprecated("Use field access instead!")]] ::StringW& System::ArgumentException::dyn__paramName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentException::dyn__paramName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paramName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ArgumentException.GetObjectData
void System::ArgumentException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.ArgumentException.get_Message
::StringW System::ArgumentException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentException::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ArgumentNullException
#include "System/ArgumentNullException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ArgumentOutOfRangeException
#include "System/ArgumentOutOfRangeException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _actualValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ArgumentOutOfRangeException::dyn__actualValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentOutOfRangeException::dyn__actualValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actualValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ArgumentOutOfRangeException.GetObjectData
void System::ArgumentOutOfRangeException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentOutOfRangeException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ArgumentException*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.ArgumentOutOfRangeException.get_Message
::StringW System::ArgumentOutOfRangeException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentOutOfRangeException::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ArgumentException*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ArithmeticException
#include "System/ArithmeticException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ArrayTypeMismatchException
#include "System/ArrayTypeMismatchException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.AssemblyLoadEventArgs
#include "System/AssemblyLoadEventArgs.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.Assembly <LoadedAssembly>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::Assembly*& System::AssemblyLoadEventArgs::dyn_$LoadedAssembly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AssemblyLoadEventArgs::dyn_$LoadedAssembly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoadedAssembly>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::Assembly**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AssemblyLoadEventHandler
#include "System/AssemblyLoadEventHandler.hpp"
// Including type: System.AssemblyLoadEventArgs
#include "System/AssemblyLoadEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.AssemblyLoadEventHandler.Invoke
void System::AssemblyLoadEventHandler::Invoke(::Il2CppObject* sender, ::System::AssemblyLoadEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AssemblyLoadEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::AssemblyLoadEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.AsyncCallback.Invoke
void System::AsyncCallback::Invoke(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AsyncCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::AsyncCallback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated method: System.AsyncCallback.BeginInvoke
::System::IAsyncResult* System::AsyncCallback::BeginInvoke(::System::IAsyncResult* ar, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AsyncCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::AsyncCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ar, callback, object);
}
// Autogenerated method: System.AsyncCallback.EndInvoke
void System::AsyncCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AsyncCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::AsyncCallback*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.AttributeTargets
#include "System/AttributeTargets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Assembly
::System::AttributeTargets System::AttributeTargets::_get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Assembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Assembly"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Assembly
void System::AttributeTargets::_set_Assembly(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Assembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Assembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Module
::System::AttributeTargets System::AttributeTargets::_get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Module");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Module"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Module
void System::AttributeTargets::_set_Module(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Module");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Module", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Class
::System::AttributeTargets System::AttributeTargets::_get_Class() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Class");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Class"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Class
void System::AttributeTargets::_set_Class(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Class");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Class", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Struct
::System::AttributeTargets System::AttributeTargets::_get_Struct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Struct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Struct"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Struct
void System::AttributeTargets::_set_Struct(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Struct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Struct", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Enum
::System::AttributeTargets System::AttributeTargets::_get_Enum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Enum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Enum"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Enum
void System::AttributeTargets::_set_Enum(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Enum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Enum", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Constructor
::System::AttributeTargets System::AttributeTargets::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Constructor
void System::AttributeTargets::_set_Constructor(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Constructor", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Method
::System::AttributeTargets System::AttributeTargets::_get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Method"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Method
void System::AttributeTargets::_set_Method(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Method", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Property
::System::AttributeTargets System::AttributeTargets::_get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Property");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Property"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Property
void System::AttributeTargets::_set_Property(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Property");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Property", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Field
::System::AttributeTargets System::AttributeTargets::_get_Field() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Field");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Field"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Field
void System::AttributeTargets::_set_Field(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Field");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Field", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Event
::System::AttributeTargets System::AttributeTargets::_get_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Event"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Event
void System::AttributeTargets::_set_Event(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Event", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Interface
::System::AttributeTargets System::AttributeTargets::_get_Interface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Interface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Interface"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Interface
void System::AttributeTargets::_set_Interface(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Interface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Interface", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Parameter
::System::AttributeTargets System::AttributeTargets::_get_Parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Parameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Parameter"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Parameter
void System::AttributeTargets::_set_Parameter(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Parameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Parameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Delegate
::System::AttributeTargets System::AttributeTargets::_get_Delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Delegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Delegate"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Delegate
void System::AttributeTargets::_set_Delegate(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Delegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Delegate", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets ReturnValue
::System::AttributeTargets System::AttributeTargets::_get_ReturnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_ReturnValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "ReturnValue"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets ReturnValue
void System::AttributeTargets::_set_ReturnValue(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_ReturnValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "ReturnValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets GenericParameter
::System::AttributeTargets System::AttributeTargets::_get_GenericParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_GenericParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "GenericParameter"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets GenericParameter
void System::AttributeTargets::_set_GenericParameter(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_GenericParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "GenericParameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets All
::System::AttributeTargets System::AttributeTargets::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets All
void System::AttributeTargets::_set_All(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::AttributeTargets::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.AttributeUsageAttribute
#include "System/AttributeUsageAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.AttributeUsageAttribute Default
::System::AttributeUsageAttribute* System::AttributeUsageAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeUsageAttribute*>("System", "AttributeUsageAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static System.AttributeUsageAttribute Default
void System::AttributeUsageAttribute::_set_Default(::System::AttributeUsageAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeUsageAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.AttributeTargets _attributeTarget
[[deprecated("Use field access instead!")]] ::System::AttributeTargets& System::AttributeUsageAttribute::dyn__attributeTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::dyn__attributeTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeTarget"))->offset;
  return *reinterpret_cast<::System::AttributeTargets*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowMultiple
[[deprecated("Use field access instead!")]] bool& System::AttributeUsageAttribute::dyn__allowMultiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::dyn__allowMultiple");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowMultiple"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _inherited
[[deprecated("Use field access instead!")]] bool& System::AttributeUsageAttribute::dyn__inherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::dyn__inherited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inherited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.AttributeUsageAttribute.get_AllowMultiple
bool System::AttributeUsageAttribute::get_AllowMultiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::get_AllowMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.AttributeUsageAttribute.set_AllowMultiple
void System::AttributeUsageAttribute::set_AllowMultiple(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::set_AllowMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AttributeUsageAttribute.get_Inherited
bool System::AttributeUsageAttribute::get_Inherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::get_Inherited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inherited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.AttributeUsageAttribute.set_Inherited
void System::AttributeUsageAttribute::set_Inherited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::set_Inherited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inherited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AttributeUsageAttribute..cctor
void System::AttributeUsageAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AttributeUsageAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.BadImageFormatException
#include "System/BadImageFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _fileName
[[deprecated("Use field access instead!")]] ::StringW& System::BadImageFormatException::dyn__fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::dyn__fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fusionLog
[[deprecated("Use field access instead!")]] ::StringW& System::BadImageFormatException::dyn__fusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::dyn__fusionLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fusionLog"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.BadImageFormatException.SetMessageField
void System::BadImageFormatException::SetMessageField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::SetMessageField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMessageField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.BadImageFormatException.GetObjectData
void System::BadImageFormatException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.BadImageFormatException.get_Message
::StringW System::BadImageFormatException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.BadImageFormatException.ToString
::StringW System::BadImageFormatException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.BitConverter
#include "System/BitConverter.hpp"
// Including type: System.BitConverter/<>c
#include "System/BitConverter_--c.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsLittleEndian
bool System::BitConverter::_get_IsLittleEndian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::_get_IsLittleEndian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "BitConverter", "IsLittleEndian"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsLittleEndian
void System::BitConverter::_set_IsLittleEndian(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::_set_IsLittleEndian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "BitConverter", "IsLittleEndian", value));
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayW<uint8_t> System::BitConverter::GetBytes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayW<uint8_t> System::BitConverter::GetBytes(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayW<uint8_t> System::BitConverter::GetBytes(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayW<uint8_t> System::BitConverter::GetBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayW<uint8_t> System::BitConverter::GetBytes(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayW<uint8_t> System::BitConverter::GetBytes(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayW<uint8_t> System::BitConverter::GetBytes(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.TryWriteBytes
bool System::BitConverter::TryWriteBytes(::System::Span_1<uint8_t> destination, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::TryWriteBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "TryWriteBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, destination, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayW<uint8_t> System::BitConverter::GetBytes(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayW<uint8_t> System::BitConverter::GetBytes(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.GetBytes
::ArrayW<uint8_t> System::BitConverter::GetBytes(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.ToInt16
int16_t System::BitConverter::ToInt16(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToInt32
int System::BitConverter::ToInt32(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToInt32
int System::BitConverter::ToInt32(::System::ReadOnlySpan_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.ToInt64
int64_t System::BitConverter::ToInt64(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToUInt16
uint16_t System::BitConverter::ToUInt16(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToUInt32
uint System::BitConverter::ToUInt32(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToUInt64
uint64_t System::BitConverter::ToUInt64(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToSingle
float System::BitConverter::ToSingle(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToDouble
double System::BitConverter::ToDouble(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: System.BitConverter.ToString
::StringW System::BitConverter::ToString(::ArrayW<uint8_t> value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.BitConverter.ToString
::StringW System::BitConverter::ToString(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.DoubleToInt64Bits
int64_t System::BitConverter::DoubleToInt64Bits(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::DoubleToInt64Bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "DoubleToInt64Bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.Int64BitsToDouble
double System::BitConverter::Int64BitsToDouble(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::Int64BitsToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "Int64BitsToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.SingleToInt32Bits
int System::BitConverter::SingleToInt32Bits(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::SingleToInt32Bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "SingleToInt32Bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter.Int32BitsToSingle
float System::BitConverter::Int32BitsToSingle(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::Int32BitsToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", "Int32BitsToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.BitConverter..cctor
void System::BitConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.BitConverter/<>c
#include "System/BitConverter_--c.hpp"
// Including type: System.Buffers.SpanAction`2
#include "System/Buffers/SpanAction_2.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.BitConverter/<>c <>9
::System::BitConverter::$$c* System::BitConverter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::BitConverter::$$c*>("System", "BitConverter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.BitConverter/<>c <>9
void System::BitConverter::$$c::_set_$$9(::System::BitConverter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "BitConverter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.SpanAction`2<System.Char,System.ValueTuple`3<System.Byte[],System.Int32,System.Int32>> <>9__38_0
::System::Buffers::SpanAction_2<::Il2CppChar, ::System::ValueTuple_3<::ArrayW<uint8_t>, int, int>>* System::BitConverter::$$c::_get_$$9__38_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::$$c::_get_$$9__38_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Buffers::SpanAction_2<::Il2CppChar, ::System::ValueTuple_3<::ArrayW<uint8_t>, int, int>>*>("System", "BitConverter/<>c", "<>9__38_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.SpanAction`2<System.Char,System.ValueTuple`3<System.Byte[],System.Int32,System.Int32>> <>9__38_0
void System::BitConverter::$$c::_set_$$9__38_0(::System::Buffers::SpanAction_2<::Il2CppChar, ::System::ValueTuple_3<::ArrayW<uint8_t>, int, int>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::$$c::_set_$$9__38_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "BitConverter/<>c", "<>9__38_0", value)));
}
// Autogenerated method: System.BitConverter/<>c..cctor
void System::BitConverter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "BitConverter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.BitConverter/<>c.<ToString>b__38_0
void System::BitConverter::$$c::$ToString$b__38_0(::System::Span_1<::Il2CppChar> dst, ::System::ValueTuple_3<::ArrayW<uint8_t>, int, int> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BitConverter::$$c::<ToString>b__38_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ToString>b__38_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dst, state);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Boolean
#include "System/Boolean.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 True
int System::Boolean::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Boolean", "True"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 True
void System::Boolean::_set_True(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "True", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 False
int System::Boolean::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Boolean", "False"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 False
void System::Boolean::_set_False(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "False", value));
}
// Autogenerated static field getter
// Get static field: static System.String TrueLiteral
::StringW System::Boolean::_get_TrueLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_get_TrueLiteral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Boolean", "TrueLiteral"));
}
// Autogenerated static field setter
// Set static field: static System.String TrueLiteral
void System::Boolean::_set_TrueLiteral(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_set_TrueLiteral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "TrueLiteral", value));
}
// Autogenerated static field getter
// Get static field: static System.String FalseLiteral
::StringW System::Boolean::_get_FalseLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_get_FalseLiteral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Boolean", "FalseLiteral"));
}
// Autogenerated static field setter
// Set static field: static System.String FalseLiteral
void System::Boolean::_set_FalseLiteral(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_set_FalseLiteral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "FalseLiteral", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String TrueString
::StringW System::Boolean::_get_TrueString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_get_TrueString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Boolean", "TrueString"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String TrueString
void System::Boolean::_set_TrueString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_set_TrueString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "TrueString", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String FalseString
::StringW System::Boolean::_get_FalseString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_get_FalseString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Boolean", "FalseString"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String FalseString
void System::Boolean::_set_FalseString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::_set_FalseString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Boolean", "FalseString", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean m_value
[[deprecated("Use field access instead!")]] bool& System::Boolean::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Boolean.ToString
::StringW System::Boolean::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.Equals
bool System::Boolean::Equals(bool obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Boolean.CompareTo
int System::Boolean::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Boolean.CompareTo
int System::Boolean::CompareTo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Boolean.Parse
bool System::Boolean::Parse(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Boolean", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Boolean.Parse
bool System::Boolean::Parse(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Boolean", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Boolean.TryParse
bool System::Boolean::TryParse(::StringW value, ByRef<bool> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Boolean", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(result));
}
// Autogenerated method: System.Boolean.TryParse
bool System::Boolean::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> value, ByRef<bool> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Boolean", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(result));
}
// Autogenerated method: System.Boolean.TrimWhiteSpaceAndNull
::System::ReadOnlySpan_1<::Il2CppChar> System::Boolean::TrimWhiteSpaceAndNull(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::TrimWhiteSpaceAndNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Boolean", "TrimWhiteSpaceAndNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Boolean.GetTypeCode
::System::TypeCode System::Boolean::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToBoolean
bool System::Boolean::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToChar
::Il2CppChar System::Boolean::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToSByte
int8_t System::Boolean::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 8));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToByte
uint8_t System::Boolean::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 9));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToInt16
int16_t System::Boolean::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 10));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToUInt16
uint16_t System::Boolean::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToInt32
int System::Boolean::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToUInt32
uint System::Boolean::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToInt64
int64_t System::Boolean::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 14));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToUInt64
uint64_t System::Boolean::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToSingle
float System::Boolean::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 16));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToDouble
double System::Boolean::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 17));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToDecimal
::System::Decimal System::Boolean::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToDateTime
::System::DateTime System::Boolean::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Boolean.System.IConvertible.ToType
::Il2CppObject* System::Boolean::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(bool), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.Boolean..cctor
void System::Boolean::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Boolean", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Boolean.GetHashCode
int System::Boolean::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Boolean.ToString
::StringW System::Boolean::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Boolean.Equals
bool System::Boolean::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Boolean::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Byte
#include "System/Byte.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte MaxValue
uint8_t System::Byte::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System", "Byte", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MaxValue
void System::Byte::_set_MaxValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Byte", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MinValue
uint8_t System::Byte::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System", "Byte", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MinValue
void System::Byte::_set_MinValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Byte", "MinValue", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte m_value
[[deprecated("Use field access instead!")]] uint8_t& System::Byte::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Byte.CompareTo
int System::Byte::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Byte.CompareTo
int System::Byte::CompareTo(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Byte.Equals
bool System::Byte::Equals(uint8_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Byte.Parse
uint8_t System::Byte::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Byte.Parse
uint8_t System::Byte::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Byte.Parse
uint8_t System::Byte::Parse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.Byte.TryParse
bool System::Byte::TryParse(::StringW s, ByRef<uint8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Byte.TryParse
bool System::Byte::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<uint8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.Byte.TryParse
bool System::Byte::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<uint8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Byte", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info, byref(result));
}
// Autogenerated method: System.Byte.ToString
::StringW System::Byte::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Byte.ToString
::StringW System::Byte::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.ToString
::StringW System::Byte::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Byte.TryFormat
bool System::Byte::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, provider);
}
// Autogenerated method: System.Byte.GetTypeCode
::System::TypeCode System::Byte::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Byte.System.IConvertible.ToBoolean
bool System::Byte::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToChar
::Il2CppChar System::Byte::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToSByte
int8_t System::Byte::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 8));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToByte
uint8_t System::Byte::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 9));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToInt16
int16_t System::Byte::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 10));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToUInt16
uint16_t System::Byte::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToInt32
int System::Byte::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToUInt32
uint System::Byte::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToInt64
int64_t System::Byte::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 14));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToUInt64
uint64_t System::Byte::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToSingle
float System::Byte::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 16));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToDouble
double System::Byte::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 17));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToDecimal
::System::Decimal System::Byte::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToDateTime
::System::DateTime System::Byte::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Byte.System.IConvertible.ToType
::Il2CppObject* System::Byte::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(uint8_t), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.Byte.Equals
bool System::Byte::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Byte.GetHashCode
int System::Byte::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Byte.ToString
::StringW System::Byte::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Byte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.CLSCompliantAttribute
#include "System/CLSCompliantAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _compliant
[[deprecated("Use field access instead!")]] bool& System::CLSCompliantAttribute::dyn__compliant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CLSCompliantAttribute::dyn__compliant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compliant"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Char
#include "System/Char.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Char MaxValue
::Il2CppChar System::Char::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System", "Char", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Char MaxValue
void System::Char::_set_MaxValue(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Char MinValue
::Il2CppChar System::Char::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System", "Char", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Char MinValue
void System::Char::_set_MinValue(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_categoryForLatin1
::ArrayW<uint8_t> System::Char::_get_s_categoryForLatin1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_get_s_categoryForLatin1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System", "Char", "s_categoryForLatin1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_categoryForLatin1
void System::Char::_set_s_categoryForLatin1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_set_s_categoryForLatin1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "s_categoryForLatin1", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 UNICODE_PLANE00_END
int System::Char::_get_UNICODE_PLANE00_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_get_UNICODE_PLANE00_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Char", "UNICODE_PLANE00_END"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 UNICODE_PLANE00_END
void System::Char::_set_UNICODE_PLANE00_END(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_set_UNICODE_PLANE00_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "UNICODE_PLANE00_END", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 UNICODE_PLANE01_START
int System::Char::_get_UNICODE_PLANE01_START() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_get_UNICODE_PLANE01_START");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Char", "UNICODE_PLANE01_START"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 UNICODE_PLANE01_START
void System::Char::_set_UNICODE_PLANE01_START(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_set_UNICODE_PLANE01_START");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "UNICODE_PLANE01_START", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 UNICODE_PLANE16_END
int System::Char::_get_UNICODE_PLANE16_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_get_UNICODE_PLANE16_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Char", "UNICODE_PLANE16_END"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 UNICODE_PLANE16_END
void System::Char::_set_UNICODE_PLANE16_END(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_set_UNICODE_PLANE16_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "UNICODE_PLANE16_END", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 HIGH_SURROGATE_START
int System::Char::_get_HIGH_SURROGATE_START() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_get_HIGH_SURROGATE_START");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Char", "HIGH_SURROGATE_START"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 HIGH_SURROGATE_START
void System::Char::_set_HIGH_SURROGATE_START(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_set_HIGH_SURROGATE_START");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "HIGH_SURROGATE_START", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 LOW_SURROGATE_END
int System::Char::_get_LOW_SURROGATE_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_get_LOW_SURROGATE_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Char", "LOW_SURROGATE_END"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 LOW_SURROGATE_END
void System::Char::_set_LOW_SURROGATE_END(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::_set_LOW_SURROGATE_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Char", "LOW_SURROGATE_END", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Char m_value
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Char::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Char.IsLatin1
bool System::Char::IsLatin1(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsLatin1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLatin1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Char.IsAscii
bool System::Char::IsAscii(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Char.GetLatin1UnicodeCategory
::System::Globalization::UnicodeCategory System::Char::GetLatin1UnicodeCategory(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::GetLatin1UnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "GetLatin1UnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Char.Equals
bool System::Char::Equals(::Il2CppChar obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Char.CompareTo
int System::Char::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Char.CompareTo
int System::Char::CompareTo(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Char.ToString
::StringW System::Char::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.ToString
::StringW System::Char::ToString(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.Parse
::Il2CppChar System::Char::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Char.TryParse
bool System::Char::TryParse(::StringW s, ByRef<::Il2CppChar> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Char.IsDigit
bool System::Char::IsDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.CheckLetter
bool System::Char::CheckLetter(::System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::CheckLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsLetter
bool System::Char::IsLetter(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsWhiteSpaceLatin1
bool System::Char::IsWhiteSpaceLatin1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsWhiteSpaceLatin1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsWhiteSpaceLatin1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsWhiteSpace
bool System::Char::IsWhiteSpace(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsUpper
bool System::Char::IsUpper(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsLower
bool System::Char::IsLower(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.CheckPunctuation
bool System::Char::CheckPunctuation(::System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::CheckPunctuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckPunctuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsPunctuation
bool System::Char::IsPunctuation(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsPunctuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsPunctuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.CheckLetterOrDigit
bool System::Char::CheckLetterOrDigit(::System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::CheckLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckLetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsLetterOrDigit
bool System::Char::IsLetterOrDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.ToUpper
::Il2CppChar System::Char::ToUpper(::Il2CppChar c, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, culture);
}
// Autogenerated method: System.Char.ToUpper
::Il2CppChar System::Char::ToUpper(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.ToUpperInvariant
::Il2CppChar System::Char::ToUpperInvariant(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ToUpperInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToUpperInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.ToLower
::Il2CppChar System::Char::ToLower(::Il2CppChar c, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, culture);
}
// Autogenerated method: System.Char.ToLower
::Il2CppChar System::Char::ToLower(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.ToLowerInvariant
::Il2CppChar System::Char::ToLowerInvariant(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ToLowerInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ToLowerInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.GetTypeCode
::System::TypeCode System::Char::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Char.System.IConvertible.ToBoolean
bool System::Char::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToChar
::Il2CppChar System::Char::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToSByte
int8_t System::Char::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 10));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToByte
uint8_t System::Char::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToInt16
int16_t System::Char::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 12));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToUInt16
uint16_t System::Char::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToInt32
int System::Char::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToUInt32
uint System::Char::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToInt64
int64_t System::Char::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 16));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToUInt64
uint64_t System::Char::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 17));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToSingle
float System::Char::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 18));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToDouble
double System::Char::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 19));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToDecimal
::System::Decimal System::Char::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToDateTime
::System::DateTime System::Char::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Char.System.IConvertible.ToType
::Il2CppObject* System::Char::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Il2CppChar), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.Char.IsControl
bool System::Char::IsControl(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsLetterOrDigit
bool System::Char::IsLetterOrDigit(::StringW s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.CheckNumber
bool System::Char::CheckNumber(::System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::CheckNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsNumber
bool System::Char::IsNumber(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsNumber
bool System::Char::IsNumber(::StringW s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.CheckSeparator
bool System::Char::CheckSeparator(::System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::CheckSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsSeparatorLatin1
bool System::Char::IsSeparatorLatin1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsSeparatorLatin1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSeparatorLatin1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsSeparator
bool System::Char::IsSeparator(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsSurrogate
bool System::Char::IsSurrogate(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsSurrogate
bool System::Char::IsSurrogate(::StringW s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.CheckSymbol
bool System::Char::CheckSymbol(::System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::CheckSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "CheckSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Char.IsSymbol
bool System::Char::IsSymbol(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsWhiteSpace
bool System::Char::IsWhiteSpace(::StringW s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.GetUnicodeCategory
::System::Globalization::UnicodeCategory System::Char::GetUnicodeCategory(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.GetUnicodeCategory
::System::Globalization::UnicodeCategory System::Char::GetUnicodeCategory(::StringW s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.IsHighSurrogate
bool System::Char::IsHighSurrogate(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsHighSurrogate
bool System::Char::IsHighSurrogate(::StringW s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Char.IsLowSurrogate
bool System::Char::IsLowSurrogate(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Char.IsSurrogatePair
bool System::Char::IsSurrogatePair(::Il2CppChar highSurrogate, ::Il2CppChar lowSurrogate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::IsSurrogatePair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "IsSurrogatePair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurrogate), ::il2cpp_utils::ExtractType(lowSurrogate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, highSurrogate, lowSurrogate);
}
// Autogenerated method: System.Char.ConvertFromUtf32
::StringW System::Char::ConvertFromUtf32(int utf32) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ConvertFromUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ConvertFromUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(utf32)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, utf32);
}
// Autogenerated method: System.Char.ConvertToUtf32
int System::Char::ConvertToUtf32(::Il2CppChar highSurrogate, ::Il2CppChar lowSurrogate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ConvertToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", "ConvertToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurrogate), ::il2cpp_utils::ExtractType(lowSurrogate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, highSurrogate, lowSurrogate);
}
// Autogenerated method: System.Char..cctor
void System::Char::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Char", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Char.GetHashCode
int System::Char::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Char.Equals
bool System::Char::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Char.ToString
::StringW System::Char::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Char::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.CharEnumerator
#include "System/CharEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _str
[[deprecated("Use field access instead!")]] ::StringW& System::CharEnumerator::dyn__str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CharEnumerator::dyn__str");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::CharEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CharEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _currentElement
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::CharEnumerator::dyn__currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CharEnumerator::dyn__currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentElement"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.CharEnumerator.Clone
::Il2CppObject* System::CharEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CharEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::CharEnumerator*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.MoveNext
bool System::CharEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CharEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::CharEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.Dispose
void System::CharEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CharEnumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::CharEnumerator*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::CharEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CharEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::CharEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.get_Current
::Il2CppChar System::CharEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CharEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::CharEnumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.Reset
void System::CharEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CharEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::CharEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Convert
#include "System/Convert.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.IConvertible
#include "System/IConvertible.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Base64FormattingOptions
#include "System/Base64FormattingOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.SByte[] s_decodingMap
::ArrayW<int8_t> System::Convert::_get_s_decodingMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::_get_s_decodingMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int8_t>>("System", "Convert", "s_decodingMap"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.SByte[] s_decodingMap
void System::Convert::_set_s_decodingMap(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::_set_s_decodingMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Convert", "s_decodingMap", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Type[] ConvertTypes
::ArrayW<::System::Type*> System::Convert::_get_ConvertTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::_get_ConvertTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("System", "Convert", "ConvertTypes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Type[] ConvertTypes
void System::Convert::_set_ConvertTypes(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::_set_ConvertTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Convert", "ConvertTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type EnumType
::System::Type* System::Convert::_get_EnumType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::_get_EnumType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System", "Convert", "EnumType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type EnumType
void System::Convert::_set_EnumType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::_set_EnumType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Convert", "EnumType", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] base64Table
::ArrayW<::Il2CppChar> System::Convert::_get_base64Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::_get_base64Table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "Convert", "base64Table"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] base64Table
void System::Convert::_set_base64Table(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::_set_base64Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Convert", "base64Table", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object DBNull
::Il2CppObject* System::Convert::_get_DBNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::_get_DBNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "Convert", "DBNull"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object DBNull
void System::Convert::_set_DBNull(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::_set_DBNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Convert", "DBNull", value));
}
// Autogenerated method: System.Convert.TryDecodeFromUtf16
bool System::Convert::TryDecodeFromUtf16(::System::ReadOnlySpan_1<::Il2CppChar> utf16, ::System::Span_1<uint8_t> bytes, ByRef<int> consumed, ByRef<int> written) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::TryDecodeFromUtf16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "TryDecodeFromUtf16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(utf16), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, utf16, bytes, byref(consumed), byref(written));
}
// Autogenerated method: System.Convert.Decode
int System::Convert::Decode(ByRef<::Il2CppChar> encodedChars, ByRef<int8_t> decodingMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encodedChars), ::il2cpp_utils::ExtractType(decodingMap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(encodedChars), byref(decodingMap));
}
// Autogenerated method: System.Convert.WriteThreeLowOrderBytes
void System::Convert::WriteThreeLowOrderBytes(ByRef<uint8_t> destination, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::WriteThreeLowOrderBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "WriteThreeLowOrderBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(destination), value);
}
// Autogenerated method: System.Convert.GetTypeCode
::System::TypeCode System::Convert::GetTypeCode(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ChangeType
::Il2CppObject* System::Convert::ChangeType(::Il2CppObject* value, ::System::TypeCode typeCode, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ChangeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(typeCode), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, typeCode, provider);
}
// Autogenerated method: System.Convert.DefaultToType
::Il2CppObject* System::Convert::DefaultToType(::System::IConvertible* value, ::System::Type* targetType, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::DefaultToType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "DefaultToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, targetType, provider);
}
// Autogenerated method: System.Convert.ChangeType
::Il2CppObject* System::Convert::ChangeType(::Il2CppObject* value, ::System::Type* conversionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ChangeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(conversionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, conversionType);
}
// Autogenerated method: System.Convert.ChangeType
::Il2CppObject* System::Convert::ChangeType(::Il2CppObject* value, ::System::Type* conversionType, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ChangeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(conversionType), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, conversionType, provider);
}
// Autogenerated method: System.Convert.ThrowCharOverflowException
void System::Convert::ThrowCharOverflowException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ThrowCharOverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ThrowCharOverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Convert.ThrowByteOverflowException
void System::Convert::ThrowByteOverflowException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ThrowByteOverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ThrowByteOverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Convert.ThrowSByteOverflowException
void System::Convert::ThrowSByteOverflowException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ThrowSByteOverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ThrowSByteOverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Convert.ThrowInt16OverflowException
void System::Convert::ThrowInt16OverflowException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ThrowInt16OverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ThrowInt16OverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Convert.ThrowUInt16OverflowException
void System::Convert::ThrowUInt16OverflowException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ThrowUInt16OverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ThrowUInt16OverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Convert.ThrowInt32OverflowException
void System::Convert::ThrowInt32OverflowException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ThrowInt32OverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ThrowInt32OverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Convert.ThrowUInt32OverflowException
void System::Convert::ThrowUInt32OverflowException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ThrowUInt32OverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ThrowUInt32OverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Convert.ThrowInt64OverflowException
void System::Convert::ThrowInt64OverflowException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ThrowInt64OverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ThrowInt64OverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Convert.ThrowUInt64OverflowException
void System::Convert::ThrowUInt64OverflowException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ThrowUInt64OverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ThrowUInt64OverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToBoolean
bool System::Convert::ToBoolean(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToChar
::Il2CppChar System::Convert::ToChar(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToSingle
float System::Convert::ToSingle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToDouble
double System::Convert::ToDouble(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToDecimal
::System::Decimal System::Convert::ToDecimal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToDateTime
::System::DateTime System::Convert::ToDateTime(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToDateTime
::System::DateTime System::Convert::ToDateTime(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(::Il2CppObject* value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(::Il2CppChar value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(int value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(int64_t value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(uint64_t value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(double value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(::System::Decimal value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(::System::DateTime value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Convert.ToByte
uint8_t System::Convert::ToByte(::StringW value, int fromBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase);
}
// Autogenerated method: System.Convert.ToSByte
int8_t System::Convert::ToSByte(::StringW value, int fromBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase);
}
// Autogenerated method: System.Convert.ToInt16
int16_t System::Convert::ToInt16(::StringW value, int fromBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase);
}
// Autogenerated method: System.Convert.ToUInt16
uint16_t System::Convert::ToUInt16(::StringW value, int fromBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase);
}
// Autogenerated method: System.Convert.ToInt32
int System::Convert::ToInt32(::StringW value, int fromBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase);
}
// Autogenerated method: System.Convert.ToUInt32
uint System::Convert::ToUInt32(::StringW value, int fromBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase);
}
// Autogenerated method: System.Convert.ToInt64
int64_t System::Convert::ToInt64(::StringW value, int fromBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase);
}
// Autogenerated method: System.Convert.ToUInt64
uint64_t System::Convert::ToUInt64(::StringW value, int fromBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase);
}
// Autogenerated method: System.Convert.ToString
::StringW System::Convert::ToString(int value, int toBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(toBase)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, toBase);
}
// Autogenerated method: System.Convert.ToBase64String
::StringW System::Convert::ToBase64String(::ArrayW<uint8_t> inArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBase64String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBase64String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray);
}
// Autogenerated method: System.Convert.ToBase64String
::StringW System::Convert::ToBase64String(::ArrayW<uint8_t> inArray, ::System::Base64FormattingOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBase64String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBase64String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, options);
}
// Autogenerated method: System.Convert.ToBase64String
::StringW System::Convert::ToBase64String(::ArrayW<uint8_t> inArray, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBase64String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBase64String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offset, length);
}
// Autogenerated method: System.Convert.ToBase64String
::StringW System::Convert::ToBase64String(::ArrayW<uint8_t> inArray, int offset, int length, ::System::Base64FormattingOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBase64String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBase64String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offset, length, options);
}
// Autogenerated method: System.Convert.ToBase64String
::StringW System::Convert::ToBase64String(::System::ReadOnlySpan_1<uint8_t> bytes, ::System::Base64FormattingOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBase64String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBase64String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, options);
}
// Autogenerated method: System.Convert.ToBase64CharArray
int System::Convert::ToBase64CharArray(::ArrayW<uint8_t> inArray, int offsetIn, int length, ::ArrayW<::Il2CppChar> outArray, int offsetOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBase64CharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBase64CharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(outArray), ::il2cpp_utils::ExtractType(offsetOut)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, length, outArray, offsetOut);
}
// Autogenerated method: System.Convert.ToBase64CharArray
int System::Convert::ToBase64CharArray(::ArrayW<uint8_t> inArray, int offsetIn, int length, ::ArrayW<::Il2CppChar> outArray, int offsetOut, ::System::Base64FormattingOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBase64CharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBase64CharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(outArray), ::il2cpp_utils::ExtractType(offsetOut), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, length, outArray, offsetOut, options);
}
// Autogenerated method: System.Convert.ConvertToBase64Array
int System::Convert::ConvertToBase64Array(::Il2CppChar* outChars, uint8_t* inData, int offset, int length, bool insertLineBreaks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ConvertToBase64Array");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ConvertToBase64Array", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outChars), ::il2cpp_utils::ExtractType(inData), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(insertLineBreaks)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outChars, inData, offset, length, insertLineBreaks);
}
// Autogenerated method: System.Convert.ToBase64_CalculateAndValidateOutputLength
int System::Convert::ToBase64_CalculateAndValidateOutputLength(int inputLength, bool insertLineBreaks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::ToBase64_CalculateAndValidateOutputLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "ToBase64_CalculateAndValidateOutputLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputLength), ::il2cpp_utils::ExtractType(insertLineBreaks)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputLength, insertLineBreaks);
}
// Autogenerated method: System.Convert.FromBase64String
::ArrayW<uint8_t> System::Convert::FromBase64String(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::FromBase64String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "FromBase64String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Convert.TryFromBase64Chars
bool System::Convert::TryFromBase64Chars(::System::ReadOnlySpan_1<::Il2CppChar> chars, ::System::Span_1<uint8_t> bytes, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::TryFromBase64Chars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "TryFromBase64Chars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, bytes, byref(bytesWritten));
}
// Autogenerated method: System.Convert.CopyToTempBufferWithoutWhiteSpace
void System::Convert::CopyToTempBufferWithoutWhiteSpace(::System::ReadOnlySpan_1<::Il2CppChar> chars, ::System::Span_1<::Il2CppChar> tempBuffer, ByRef<int> consumed, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::CopyToTempBufferWithoutWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "CopyToTempBufferWithoutWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(tempBuffer), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, tempBuffer, byref(consumed), byref(charsWritten));
}
// Autogenerated method: System.Convert.IsSpace
bool System::Convert::IsSpace(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::IsSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "IsSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Convert.FromBase64CharArray
::ArrayW<uint8_t> System::Convert::FromBase64CharArray(::ArrayW<::Il2CppChar> inArray, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::FromBase64CharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "FromBase64CharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offset, length);
}
// Autogenerated method: System.Convert.FromBase64CharPtr
::ArrayW<uint8_t> System::Convert::FromBase64CharPtr(::Il2CppChar* inputPtr, int inputLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::FromBase64CharPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "FromBase64CharPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputPtr), ::il2cpp_utils::ExtractType(inputLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputPtr, inputLength);
}
// Autogenerated method: System.Convert.FromBase64_ComputeResultLength
int System::Convert::FromBase64_ComputeResultLength(::Il2CppChar* inputPtr, int inputLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::FromBase64_ComputeResultLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", "FromBase64_ComputeResultLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputPtr), ::il2cpp_utils::ExtractType(inputLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputPtr, inputLength);
}
// Autogenerated method: System.Convert..cctor
void System::Convert::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Convert::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Convert", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Base64FormattingOptions
#include "System/Base64FormattingOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Base64FormattingOptions None
::System::Base64FormattingOptions System::Base64FormattingOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Base64FormattingOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Base64FormattingOptions>("System", "Base64FormattingOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Base64FormattingOptions None
void System::Base64FormattingOptions::_set_None(::System::Base64FormattingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Base64FormattingOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Base64FormattingOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Base64FormattingOptions InsertLineBreaks
::System::Base64FormattingOptions System::Base64FormattingOptions::_get_InsertLineBreaks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Base64FormattingOptions::_get_InsertLineBreaks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Base64FormattingOptions>("System", "Base64FormattingOptions", "InsertLineBreaks"));
}
// Autogenerated static field setter
// Set static field: static public System.Base64FormattingOptions InsertLineBreaks
void System::Base64FormattingOptions::_set_InsertLineBreaks(::System::Base64FormattingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Base64FormattingOptions::_set_InsertLineBreaks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Base64FormattingOptions", "InsertLineBreaks", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Base64FormattingOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Base64FormattingOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.CurrentSystemTimeZone
#include "System/CurrentSystemTimeZone.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_ticksOffset
[[deprecated("Use field access instead!")]] int64_t& System::CurrentSystemTimeZone::dyn_m_ticksOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CurrentSystemTimeZone::dyn_m_ticksOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ticksOffset"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_standardName
[[deprecated("Use field access instead!")]] ::StringW& System::CurrentSystemTimeZone::dyn_m_standardName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CurrentSystemTimeZone::dyn_m_standardName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_standardName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_daylightName
[[deprecated("Use field access instead!")]] ::StringW& System::CurrentSystemTimeZone::dyn_m_daylightName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CurrentSystemTimeZone::dyn_m_daylightName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_daylightName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Hashtable m_CachedDaylightChanges
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::CurrentSystemTimeZone::dyn_m_CachedDaylightChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CurrentSystemTimeZone::dyn_m_CachedDaylightChanges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedDaylightChanges"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.CurrentSystemTimeZone.GetTimeZoneData
bool System::CurrentSystemTimeZone::GetTimeZoneData(int year, ByRef<::ArrayW<int64_t>> data, ByRef<::ArrayW<::StringW>> names, ByRef<bool> daylight_inverted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CurrentSystemTimeZone::GetTimeZoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "CurrentSystemTimeZone", "GetTimeZoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractIndependentType<::ArrayW<int64_t>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, byref(data), byref(names), byref(daylight_inverted));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DBNull
#include "System/DBNull.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.DBNull Value
::System::DBNull* System::DBNull::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DBNull*>("System", "DBNull", "Value"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DBNull Value
void System::DBNull::_set_Value(::System::DBNull* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DBNull", "Value", value));
}
// Autogenerated method: System.DBNull.GetObjectData
void System::DBNull::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.DBNull.ToString
::StringW System::DBNull::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.GetTypeCode
::System::TypeCode System::DBNull::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToBoolean
bool System::DBNull::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToChar
::Il2CppChar System::DBNull::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToSByte
int8_t System::DBNull::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToByte
uint8_t System::DBNull::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 9));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToInt16
int16_t System::DBNull::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToUInt16
uint16_t System::DBNull::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToInt32
int System::DBNull::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToUInt32
uint System::DBNull::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToInt64
int64_t System::DBNull::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToUInt64
uint64_t System::DBNull::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToSingle
float System::DBNull::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 16));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToDouble
double System::DBNull::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 17));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToDecimal
::System::Decimal System::DBNull::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToDateTime
::System::DateTime System::DBNull::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DBNull.System.IConvertible.ToType
::Il2CppObject* System::DBNull::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DBNull*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.DBNull..cctor
void System::DBNull::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DBNull", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DBNull.ToString
::StringW System::DBNull::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DBNull::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.DateTimeKind
#include "System/DateTimeKind.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.DateTimeStyles
#include "System/Globalization/DateTimeStyles.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksPerMillisecond
int64_t System::DateTime::_get_TicksPerMillisecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_TicksPerMillisecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksPerMillisecond"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksPerMillisecond
void System::DateTime::_set_TicksPerMillisecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_TicksPerMillisecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksPerMillisecond", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksPerSecond
int64_t System::DateTime::_get_TicksPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_TicksPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksPerSecond
void System::DateTime::_set_TicksPerSecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_TicksPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksPerMinute
int64_t System::DateTime::_get_TicksPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_TicksPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksPerMinute"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksPerMinute
void System::DateTime::_set_TicksPerMinute(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_TicksPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksPerHour
int64_t System::DateTime::_get_TicksPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_TicksPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksPerHour"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksPerHour
void System::DateTime::_set_TicksPerHour(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_TicksPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksPerHour", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksPerDay
int64_t System::DateTime::_get_TicksPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_TicksPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksPerDay"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksPerDay
void System::DateTime::_set_TicksPerDay(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_TicksPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksPerDay", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MillisPerSecond
int System::DateTime::_get_MillisPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_MillisPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "MillisPerSecond"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MillisPerSecond
void System::DateTime::_set_MillisPerSecond(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_MillisPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MillisPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MillisPerMinute
int System::DateTime::_get_MillisPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_MillisPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "MillisPerMinute"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MillisPerMinute
void System::DateTime::_set_MillisPerMinute(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_MillisPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MillisPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MillisPerHour
int System::DateTime::_get_MillisPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_MillisPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "MillisPerHour"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MillisPerHour
void System::DateTime::_set_MillisPerHour(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_MillisPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MillisPerHour", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MillisPerDay
int System::DateTime::_get_MillisPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_MillisPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "MillisPerDay"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MillisPerDay
void System::DateTime::_set_MillisPerDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_MillisPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MillisPerDay", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysPerYear
int System::DateTime::_get_DaysPerYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DaysPerYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysPerYear"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysPerYear
void System::DateTime::_set_DaysPerYear(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DaysPerYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysPerYear", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysPer4Years
int System::DateTime::_get_DaysPer4Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DaysPer4Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysPer4Years"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysPer4Years
void System::DateTime::_set_DaysPer4Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DaysPer4Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysPer4Years", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysPer100Years
int System::DateTime::_get_DaysPer100Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DaysPer100Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysPer100Years"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysPer100Years
void System::DateTime::_set_DaysPer100Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DaysPer100Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysPer100Years", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysPer400Years
int System::DateTime::_get_DaysPer400Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DaysPer400Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysPer400Years"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysPer400Years
void System::DateTime::_set_DaysPer400Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DaysPer400Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysPer400Years", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysTo1601
int System::DateTime::_get_DaysTo1601() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DaysTo1601");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysTo1601"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysTo1601
void System::DateTime::_set_DaysTo1601(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DaysTo1601");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysTo1601", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysTo1899
int System::DateTime::_get_DaysTo1899() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DaysTo1899");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysTo1899"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysTo1899
void System::DateTime::_set_DaysTo1899(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DaysTo1899");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysTo1899", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysTo1970
int System::DateTime::_get_DaysTo1970() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DaysTo1970");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysTo1970"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysTo1970
void System::DateTime::_set_DaysTo1970(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DaysTo1970");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysTo1970", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysTo10000
int System::DateTime::_get_DaysTo10000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DaysTo10000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysTo10000"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysTo10000
void System::DateTime::_set_DaysTo10000(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DaysTo10000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysTo10000", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 MinTicks
int64_t System::DateTime::_get_MinTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_MinTicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "MinTicks"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 MinTicks
void System::DateTime::_set_MinTicks(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_MinTicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MinTicks", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 MaxTicks
int64_t System::DateTime::_get_MaxTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_MaxTicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "MaxTicks"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 MaxTicks
void System::DateTime::_set_MaxTicks(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_MaxTicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MaxTicks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 MaxMillis
int64_t System::DateTime::_get_MaxMillis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_MaxMillis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "MaxMillis"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 MaxMillis
void System::DateTime::_set_MaxMillis(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_MaxMillis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MaxMillis", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 UnixEpochTicks
int64_t System::DateTime::_get_UnixEpochTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_UnixEpochTicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "UnixEpochTicks"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 UnixEpochTicks
void System::DateTime::_set_UnixEpochTicks(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_UnixEpochTicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "UnixEpochTicks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 FileTimeOffset
int64_t System::DateTime::_get_FileTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_FileTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "FileTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 FileTimeOffset
void System::DateTime::_set_FileTimeOffset(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_FileTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "FileTimeOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 DoubleDateOffset
int64_t System::DateTime::_get_DoubleDateOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DoubleDateOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "DoubleDateOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 DoubleDateOffset
void System::DateTime::_set_DoubleDateOffset(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DoubleDateOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DoubleDateOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 OADateMinAsTicks
int64_t System::DateTime::_get_OADateMinAsTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_OADateMinAsTicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "OADateMinAsTicks"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 OADateMinAsTicks
void System::DateTime::_set_OADateMinAsTicks(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_OADateMinAsTicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "OADateMinAsTicks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double OADateMinAsDouble
double System::DateTime::_get_OADateMinAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_OADateMinAsDouble");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "DateTime", "OADateMinAsDouble"));
}
// Autogenerated static field setter
// Set static field: static private System.Double OADateMinAsDouble
void System::DateTime::_set_OADateMinAsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_OADateMinAsDouble");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "OADateMinAsDouble", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double OADateMaxAsDouble
double System::DateTime::_get_OADateMaxAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_OADateMaxAsDouble");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "DateTime", "OADateMaxAsDouble"));
}
// Autogenerated static field setter
// Set static field: static private System.Double OADateMaxAsDouble
void System::DateTime::_set_OADateMaxAsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_OADateMaxAsDouble");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "OADateMaxAsDouble", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DatePartYear
int System::DateTime::_get_DatePartYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DatePartYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DatePartYear"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DatePartYear
void System::DateTime::_set_DatePartYear(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DatePartYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DatePartYear", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DatePartDayOfYear
int System::DateTime::_get_DatePartDayOfYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DatePartDayOfYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DatePartDayOfYear"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DatePartDayOfYear
void System::DateTime::_set_DatePartDayOfYear(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DatePartDayOfYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DatePartDayOfYear", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DatePartMonth
int System::DateTime::_get_DatePartMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DatePartMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DatePartMonth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DatePartMonth
void System::DateTime::_set_DatePartMonth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DatePartMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DatePartMonth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DatePartDay
int System::DateTime::_get_DatePartDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DatePartDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DatePartDay"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DatePartDay
void System::DateTime::_set_DatePartDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DatePartDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DatePartDay", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_daysToMonth365
::ArrayW<int> System::DateTime::_get_s_daysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_s_daysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System", "DateTime", "s_daysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_daysToMonth365
void System::DateTime::_set_s_daysToMonth365(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_s_daysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "s_daysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_daysToMonth366
::ArrayW<int> System::DateTime::_get_s_daysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_s_daysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System", "DateTime", "s_daysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_daysToMonth366
void System::DateTime::_set_s_daysToMonth366(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_s_daysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "s_daysToMonth366", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.DateTime MinValue
::System::DateTime System::DateTime::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System", "DateTime", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTime MinValue
void System::DateTime::_set_MinValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.DateTime MaxValue
::System::DateTime System::DateTime::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System", "DateTime", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTime MaxValue
void System::DateTime::_set_MaxValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.DateTime UnixEpoch
::System::DateTime System::DateTime::_get_UnixEpoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_UnixEpoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System", "DateTime", "UnixEpoch"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTime UnixEpoch
void System::DateTime::_set_UnixEpoch(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_UnixEpoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "UnixEpoch", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 TicksMask
uint64_t System::DateTime::_get_TicksMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_TicksMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "TicksMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 TicksMask
void System::DateTime::_set_TicksMask(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_TicksMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 FlagsMask
uint64_t System::DateTime::_get_FlagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_FlagsMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "FlagsMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 FlagsMask
void System::DateTime::_set_FlagsMask(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_FlagsMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "FlagsMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 LocalMask
uint64_t System::DateTime::_get_LocalMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_LocalMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "LocalMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 LocalMask
void System::DateTime::_set_LocalMask(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_LocalMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "LocalMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksCeiling
int64_t System::DateTime::_get_TicksCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_TicksCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksCeiling"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksCeiling
void System::DateTime::_set_TicksCeiling(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_TicksCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksCeiling", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 KindUnspecified
uint64_t System::DateTime::_get_KindUnspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_KindUnspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "KindUnspecified"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 KindUnspecified
void System::DateTime::_set_KindUnspecified(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_KindUnspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "KindUnspecified", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 KindUtc
uint64_t System::DateTime::_get_KindUtc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_KindUtc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "KindUtc"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 KindUtc
void System::DateTime::_set_KindUtc(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_KindUtc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "KindUtc", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 KindLocal
uint64_t System::DateTime::_get_KindLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_KindLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "KindLocal"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 KindLocal
void System::DateTime::_set_KindLocal(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_KindLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "KindLocal", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 KindLocalAmbiguousDst
uint64_t System::DateTime::_get_KindLocalAmbiguousDst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_KindLocalAmbiguousDst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "KindLocalAmbiguousDst"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 KindLocalAmbiguousDst
void System::DateTime::_set_KindLocalAmbiguousDst(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_KindLocalAmbiguousDst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "KindLocalAmbiguousDst", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 KindShift
int System::DateTime::_get_KindShift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_KindShift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "KindShift"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 KindShift
void System::DateTime::_set_KindShift(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_KindShift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "KindShift", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TicksField
::StringW System::DateTime::_get_TicksField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_TicksField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "DateTime", "TicksField"));
}
// Autogenerated static field setter
// Set static field: static private System.String TicksField
void System::DateTime::_set_TicksField(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_TicksField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DateDataField
::StringW System::DateTime::_get_DateDataField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_get_DateDataField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "DateTime", "DateDataField"));
}
// Autogenerated static field setter
// Set static field: static private System.String DateDataField
void System::DateTime::_set_DateDataField(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::_set_DateDataField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DateDataField", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 _dateData
[[deprecated("Use field access instead!")]] uint64_t& System::DateTime::dyn__dateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::dyn__dateData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateData"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.DateTime..ctor
System::DateTime::DateTime(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ticks);
}
// Autogenerated method: System.DateTime..ctor
// ABORTED elsewhere.  System::DateTime::DateTime(uint64_t dateData)
// Autogenerated method: System.DateTime..ctor
System::DateTime::DateTime(int64_t ticks, ::System::DateTimeKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks), ::il2cpp_utils::ExtractType(kind)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ticks, kind);
}
// Autogenerated method: System.DateTime..ctor
System::DateTime::DateTime(int64_t ticks, ::System::DateTimeKind kind, bool isAmbiguousDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks), ::il2cpp_utils::ExtractType(kind), ::il2cpp_utils::ExtractType(isAmbiguousDst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ticks, kind, isAmbiguousDst);
}
// Autogenerated method: System.DateTime..ctor
System::DateTime::DateTime(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, year, month, day);
}
// Autogenerated method: System.DateTime..ctor
System::DateTime::DateTime(int year, int month, int day, int hour, int minute, int second) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, year, month, day, hour, minute, second);
}
// Autogenerated method: System.DateTime..ctor
System::DateTime::DateTime(int year, int month, int day, int hour, int minute, int second, ::System::DateTimeKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(kind)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, year, month, day, hour, minute, second, kind);
}
// Autogenerated method: System.DateTime..ctor
System::DateTime::DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond);
}
// Autogenerated method: System.DateTime..ctor
System::DateTime::DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, ::System::DateTimeKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(kind)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, kind);
}
// Autogenerated method: System.DateTime..ctor
System::DateTime::DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, ::System::Globalization::Calendar* calendar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(calendar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, calendar);
}
// Autogenerated method: System.DateTime..ctor
System::DateTime::DateTime(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.DateTime.get_InternalTicks
int64_t System::DateTime::get_InternalTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_InternalTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_InternalKind
uint64_t System::DateTime::get_InternalKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_InternalKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.Add
::System::DateTime System::DateTime::Add(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.Add
::System::DateTime System::DateTime::Add(double value, int scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value, scale);
}
// Autogenerated method: System.DateTime.AddDays
::System::DateTime System::DateTime::AddDays(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::AddDays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddDays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.AddHours
::System::DateTime System::DateTime::AddHours(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::AddHours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddHours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.AddMilliseconds
::System::DateTime System::DateTime::AddMilliseconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::AddMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.AddMonths
::System::DateTime System::DateTime::AddMonths(int months) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::AddMonths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddMonths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(months)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, months);
}
// Autogenerated method: System.DateTime.AddSeconds
::System::DateTime System::DateTime::AddSeconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::AddSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.AddTicks
::System::DateTime System::DateTime::AddTicks(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::AddTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.AddYears
::System::DateTime System::DateTime::AddYears(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::AddYears");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddYears", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.Compare
int System::DateTime::Compare(::System::DateTime t1, ::System::DateTime t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.DateTime.CompareTo
int System::DateTime::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.CompareTo
int System::DateTime::CompareTo(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.DateToTicks
int64_t System::DateTime::DateToTicks(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::DateToTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "DateToTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.DateTime.TimeToTicks
int64_t System::DateTime::TimeToTicks(int hour, int minute, int second) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::TimeToTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "TimeToTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hour, minute, second);
}
// Autogenerated method: System.DateTime.DaysInMonth
int System::DateTime::DaysInMonth(int year, int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::DaysInMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "DaysInMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month);
}
// Autogenerated method: System.DateTime.Equals
bool System::DateTime::Equals(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.FromBinary
::System::DateTime System::DateTime::FromBinary(int64_t dateData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::FromBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "FromBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateData);
}
// Autogenerated method: System.DateTime.FromBinaryRaw
::System::DateTime System::DateTime::FromBinaryRaw(int64_t dateData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::FromBinaryRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "FromBinaryRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateData);
}
// Autogenerated method: System.DateTime.FromFileTime
::System::DateTime System::DateTime::FromFileTime(int64_t fileTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::FromFileTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "FromFileTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fileTime);
}
// Autogenerated method: System.DateTime.FromFileTimeUtc
::System::DateTime System::DateTime::FromFileTimeUtc(int64_t fileTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::FromFileTimeUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "FromFileTimeUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fileTime);
}
// Autogenerated method: System.DateTime.System.Runtime.Serialization.ISerializable.GetObjectData
void System::DateTime::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.DateTime.IsDaylightSavingTime
bool System::DateTime::IsDaylightSavingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::IsDaylightSavingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsDaylightSavingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.SpecifyKind
::System::DateTime System::DateTime::SpecifyKind(::System::DateTime value, ::System::DateTimeKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::SpecifyKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "SpecifyKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(kind)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, kind);
}
// Autogenerated method: System.DateTime.ToBinary
int64_t System::DateTime::ToBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_Date
::System::DateTime System::DateTime::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.GetDatePart
int System::DateTime::GetDatePart(int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::GetDatePart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDatePart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(part)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, part);
}
// Autogenerated method: System.DateTime.GetDatePart
void System::DateTime::GetDatePart(ByRef<int> year, ByRef<int> month, ByRef<int> day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::GetDatePart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDatePart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(year), byref(month), byref(day));
}
// Autogenerated method: System.DateTime.get_Day
int System::DateTime::get_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Day");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Day", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_DayOfWeek
::System::DayOfWeek System::DateTime::get_DayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_DayOfWeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_DayOfYear
int System::DateTime::get_DayOfYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_DayOfYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DayOfYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_Hour
int System::DateTime::get_Hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Hour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Hour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.IsAmbiguousDaylightSavingTime
bool System::DateTime::IsAmbiguousDaylightSavingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::IsAmbiguousDaylightSavingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsAmbiguousDaylightSavingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_Kind
::System::DateTimeKind System::DateTime::get_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Kind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Kind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeKind, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_Millisecond
int System::DateTime::get_Millisecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Millisecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Millisecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_Minute
int System::DateTime::get_Minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Minute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Minute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_Month
int System::DateTime::get_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Month");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Month", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_Now
::System::DateTime System::DateTime::get_Now() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Now");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "get_Now", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DateTime.get_Second
int System::DateTime::get_Second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Second");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Second", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_Ticks
int64_t System::DateTime::get_Ticks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Ticks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Ticks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_TimeOfDay
::System::TimeSpan System::DateTime::get_TimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_TimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.get_Year
int System::DateTime::get_Year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_Year");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Year", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.IsLeapYear
bool System::DateTime::IsLeapYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "IsLeapYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year);
}
// Autogenerated method: System.DateTime.Parse
::System::DateTime System::DateTime::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.DateTime.Parse
::System::DateTime System::DateTime::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.DateTime.Parse
::System::DateTime System::DateTime::Parse(::StringW s, ::System::IFormatProvider* provider, ::System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider, styles);
}
// Autogenerated method: System.DateTime.ParseExact
::System::DateTime System::DateTime::ParseExact(::StringW s, ::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "ParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, format, provider);
}
// Autogenerated method: System.DateTime.ParseExact
::System::DateTime System::DateTime::ParseExact(::StringW s, ::StringW format, ::System::IFormatProvider* provider, ::System::Globalization::DateTimeStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "ParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, format, provider, style);
}
// Autogenerated method: System.DateTime.ParseExact
::System::DateTime System::DateTime::ParseExact(::StringW s, ::ArrayW<::StringW> formats, ::System::IFormatProvider* provider, ::System::Globalization::DateTimeStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "ParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, formats, provider, style);
}
// Autogenerated method: System.DateTime.Subtract
::System::TimeSpan System::DateTime::Subtract(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.Subtract
::System::DateTime System::DateTime::Subtract(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.ToFileTime
int64_t System::DateTime::ToFileTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToFileTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToFileTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.ToFileTimeUtc
int64_t System::DateTime::ToFileTimeUtc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToFileTimeUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToFileTimeUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.ToLocalTime
::System::DateTime System::DateTime::ToLocalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToLocalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToLocalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.ToLocalTime
::System::DateTime System::DateTime::ToLocalTime(bool throwOnOverflow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToLocalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToLocalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(throwOnOverflow)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, throwOnOverflow);
}
// Autogenerated method: System.DateTime.ToLongDateString
::StringW System::DateTime::ToLongDateString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToLongDateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToLongDateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.ToLongTimeString
::StringW System::DateTime::ToLongTimeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToLongTimeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToLongTimeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.ToString
::StringW System::DateTime::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.DateTime.ToString
::StringW System::DateTime::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 21));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.ToString
::StringW System::DateTime::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.DateTime.TryFormat
bool System::DateTime::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, provider);
}
// Autogenerated method: System.DateTime.ToUniversalTime
::System::DateTime System::DateTime::ToUniversalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToUniversalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToUniversalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.TryParse
bool System::DateTime::TryParse(::StringW s, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.DateTime.TryParse
bool System::DateTime::TryParse(::StringW s, ::System::IFormatProvider* provider, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider, styles, byref(result));
}
// Autogenerated method: System.DateTime.TryParseExact
bool System::DateTime::TryParseExact(::StringW s, ::StringW format, ::System::IFormatProvider* provider, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, format, provider, style, byref(result));
}
// Autogenerated method: System.DateTime.TryParseExact
bool System::DateTime::TryParseExact(::StringW s, ::ArrayW<::StringW> formats, ::System::IFormatProvider* provider, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, formats, provider, style, byref(result));
}
// Autogenerated method: System.DateTime.GetTypeCode
::System::TypeCode System::DateTime::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToBoolean
bool System::DateTime::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToChar
::Il2CppChar System::DateTime::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToSByte
int8_t System::DateTime::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 9));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToByte
uint8_t System::DateTime::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 10));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToInt16
int16_t System::DateTime::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 11));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToUInt16
uint16_t System::DateTime::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToInt32
int System::DateTime::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToUInt32
uint System::DateTime::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToInt64
int64_t System::DateTime::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 15));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToUInt64
uint64_t System::DateTime::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 16));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToSingle
float System::DateTime::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 17));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToDouble
double System::DateTime::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 18));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToDecimal
::System::Decimal System::DateTime::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToDateTime
::System::DateTime System::DateTime::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.DateTime.System.IConvertible.ToType
::Il2CppObject* System::DateTime::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTime), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.DateTime.TryCreate
bool System::DateTime::TryCreate(int year, int month, int day, int hour, int minute, int second, int millisecond, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::TryCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "TryCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day, hour, minute, second, millisecond, byref(result));
}
// Autogenerated method: System.DateTime.get_UtcNow
::System::DateTime System::DateTime::get_UtcNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::get_UtcNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "get_UtcNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DateTime.GetSystemTimeAsFileTime
int64_t System::DateTime::GetSystemTimeAsFileTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::GetSystemTimeAsFileTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "GetSystemTimeAsFileTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DateTime.ToBinaryRaw
int64_t System::DateTime::ToBinaryRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToBinaryRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToBinaryRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime..cctor
void System::DateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DateTime.Equals
bool System::DateTime::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTime.GetHashCode
int System::DateTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.ToString
::StringW System::DateTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTime.op_Addition
::System::DateTime System::operator+(const ::System::DateTime& d, const ::System::TimeSpan& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d, t);
}
// Autogenerated method: System.DateTime.op_Subtraction
::System::DateTime System::operator-(const ::System::DateTime& d, const ::System::TimeSpan& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d, t);
}
// Autogenerated method: System.DateTime.op_Subtraction
::System::TimeSpan System::operator-(const ::System::DateTime& d1, const ::System::DateTime& d2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d1), ::il2cpp_utils::ExtractType(d2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d1, d2);
}
// Autogenerated method: System.DateTime.op_Equality
bool System::operator ==(const ::System::DateTime& d1, const ::System::DateTime& d2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d1), ::il2cpp_utils::ExtractType(d2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d1, d2);
}
// Autogenerated method: System.DateTime.op_Inequality
bool System::operator !=(const ::System::DateTime& d1, const ::System::DateTime& d2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d1), ::il2cpp_utils::ExtractType(d2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d1, d2);
}
// Autogenerated method: System.DateTime.op_LessThan
bool System::operator <(const ::System::DateTime& t1, const ::System::DateTime& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.DateTime.op_LessThanOrEqual
bool System::operator <=(const ::System::DateTime& t1, const ::System::DateTime& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.DateTime.op_GreaterThan
bool System::operator >(const ::System::DateTime& t1, const ::System::DateTime& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.DateTime.op_GreaterThanOrEqual
bool System::operator >=(const ::System::DateTime& t1, const ::System::DateTime& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTime::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTime", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DateTimeKind
#include "System/DateTimeKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.DateTimeKind Unspecified
::System::DateTimeKind System::DateTimeKind::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeKind::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeKind>("System", "DateTimeKind", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeKind Unspecified
void System::DateTimeKind::_set_Unspecified(::System::DateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeKind::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeKind", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeKind Utc
::System::DateTimeKind System::DateTimeKind::_get_Utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeKind::_get_Utc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeKind>("System", "DateTimeKind", "Utc"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeKind Utc
void System::DateTimeKind::_set_Utc(::System::DateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeKind::_set_Utc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeKind", "Utc", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeKind Local
::System::DateTimeKind System::DateTimeKind::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeKind::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeKind>("System", "DateTimeKind", "Local"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeKind Local
void System::DateTimeKind::_set_Local(::System::DateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeKind::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeKind", "Local", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::DateTimeKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.DateTimeStyles
#include "System/Globalization/DateTimeStyles.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.DateTimeOffset MinValue
::System::DateTimeOffset System::DateTimeOffset::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeOffset>("System", "DateTimeOffset", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTimeOffset MinValue
void System::DateTimeOffset::_set_MinValue(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeOffset", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.DateTimeOffset MaxValue
::System::DateTimeOffset System::DateTimeOffset::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeOffset>("System", "DateTimeOffset", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTimeOffset MaxValue
void System::DateTimeOffset::_set_MaxValue(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeOffset", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.DateTimeOffset UnixEpoch
::System::DateTimeOffset System::DateTimeOffset::_get_UnixEpoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::_get_UnixEpoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeOffset>("System", "DateTimeOffset", "UnixEpoch"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTimeOffset UnixEpoch
void System::DateTimeOffset::_set_UnixEpoch(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::_set_UnixEpoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeOffset", "UnixEpoch", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.DateTime _dateTime
[[deprecated("Use field access instead!")]] ::System::DateTime& System::DateTimeOffset::dyn__dateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::dyn__dateTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int16 _offsetMinutes
[[deprecated("Use field access instead!")]] int16_t& System::DateTimeOffset::dyn__offsetMinutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::dyn__offsetMinutes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetMinutes"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.DateTimeOffset..ctor
System::DateTimeOffset::DateTimeOffset(int64_t ticks, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ticks, offset);
}
// Autogenerated method: System.DateTimeOffset..ctor
System::DateTimeOffset::DateTimeOffset(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.DateTimeOffset..ctor
System::DateTimeOffset::DateTimeOffset(::System::DateTime dateTime, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dateTime, offset);
}
// Autogenerated method: System.DateTimeOffset..ctor
System::DateTimeOffset::DateTimeOffset(int year, int month, int day, int hour, int minute, int second, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, year, month, day, hour, minute, second, offset);
}
// Autogenerated method: System.DateTimeOffset..ctor
System::DateTimeOffset::DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, offset);
}
// Autogenerated method: System.DateTimeOffset..ctor
System::DateTimeOffset::DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, ::System::Globalization::Calendar* calendar, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(calendar), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, calendar, offset);
}
// Autogenerated method: System.DateTimeOffset.get_Now
::System::DateTimeOffset System::DateTimeOffset::get_Now() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_Now");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "get_Now", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_DateTime
::System::DateTime System::DateTimeOffset::get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_DateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_UtcDateTime
::System::DateTime System::DateTimeOffset::get_UtcDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_UtcDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_UtcDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_LocalDateTime
::System::DateTime System::DateTimeOffset::get_LocalDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_LocalDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_ClockDateTime
::System::DateTime System::DateTimeOffset::get_ClockDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_ClockDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ClockDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Day
int System::DateTimeOffset::get_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_Day");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Day", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_DayOfWeek
::System::DayOfWeek System::DateTimeOffset::get_DayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_DayOfWeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Hour
int System::DateTimeOffset::get_Hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_Hour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Hour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Millisecond
int System::DateTimeOffset::get_Millisecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_Millisecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Millisecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Minute
int System::DateTimeOffset::get_Minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_Minute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Minute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Month
int System::DateTimeOffset::get_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_Month");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Month", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Offset
::System::TimeSpan System::DateTimeOffset::get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Second
int System::DateTimeOffset::get_Second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_Second");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Second", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Ticks
int64_t System::DateTimeOffset::get_Ticks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_Ticks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Ticks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_TimeOfDay
::System::TimeSpan System::DateTimeOffset::get_TimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_TimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Year
int System::DateTimeOffset::get_Year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::get_Year");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Year", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.AddTicks
::System::DateTimeOffset System::DateTimeOffset::AddTicks(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::AddTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, ticks);
}
// Autogenerated method: System.DateTimeOffset.Compare
int System::DateTimeOffset::Compare(::System::DateTimeOffset first, ::System::DateTimeOffset second) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, first, second);
}
// Autogenerated method: System.DateTimeOffset.System.IComparable.CompareTo
int System::DateTimeOffset::System_IComparable_CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::System.IComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTimeOffset), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.DateTimeOffset.CompareTo
int System::DateTimeOffset::CompareTo(::System::DateTimeOffset other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTimeOffset), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.DateTimeOffset.Equals
bool System::DateTimeOffset::Equals(::System::DateTimeOffset other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTimeOffset), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.DateTimeOffset.FromFileTime
::System::DateTimeOffset System::DateTimeOffset::FromFileTime(int64_t fileTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::FromFileTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "FromFileTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fileTime);
}
// Autogenerated method: System.DateTimeOffset.FromUnixTimeSeconds
::System::DateTimeOffset System::DateTimeOffset::FromUnixTimeSeconds(int64_t seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::FromUnixTimeSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "FromUnixTimeSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seconds);
}
// Autogenerated method: System.DateTimeOffset.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::DateTimeOffset::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTimeOffset), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.DateTimeOffset.System.Runtime.Serialization.ISerializable.GetObjectData
void System::DateTimeOffset::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTimeOffset), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.DateTimeOffset..ctor
System::DateTimeOffset::DateTimeOffset(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.DateTimeOffset.Parse
::System::DateTimeOffset System::DateTimeOffset::Parse(::StringW input, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, formatProvider);
}
// Autogenerated method: System.DateTimeOffset.Parse
::System::DateTimeOffset System::DateTimeOffset::Parse(::StringW input, ::System::IFormatProvider* formatProvider, ::System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(formatProvider), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, formatProvider, styles);
}
// Autogenerated method: System.DateTimeOffset.ParseExact
::System::DateTimeOffset System::DateTimeOffset::ParseExact(::StringW input, ::StringW format, ::System::IFormatProvider* formatProvider, ::System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "ParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, format, formatProvider, styles);
}
// Autogenerated method: System.DateTimeOffset.ParseExact
::System::DateTimeOffset System::DateTimeOffset::ParseExact(::StringW input, ::ArrayW<::StringW> formats, ::System::IFormatProvider* formatProvider, ::System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "ParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(formatProvider), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, formats, formatProvider, styles);
}
// Autogenerated method: System.DateTimeOffset.ToLocalTime
::System::DateTimeOffset System::DateTimeOffset::ToLocalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ToLocalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToLocalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.ToLocalTime
::System::DateTimeOffset System::DateTimeOffset::ToLocalTime(bool throwOnOverflow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ToLocalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToLocalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(throwOnOverflow)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, throwOnOverflow);
}
// Autogenerated method: System.DateTimeOffset.ToString
::StringW System::DateTimeOffset::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.DateTimeOffset.ToString
::StringW System::DateTimeOffset::ToString(::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, formatProvider);
}
// Autogenerated method: System.DateTimeOffset.ToString
::StringW System::DateTimeOffset::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTimeOffset), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: System.DateTimeOffset.TryFormat
bool System::DateTimeOffset::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::DateTimeOffset), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, formatProvider);
}
// Autogenerated method: System.DateTimeOffset.ToUniversalTime
::System::DateTimeOffset System::DateTimeOffset::ToUniversalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ToUniversalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToUniversalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.TryParse
bool System::DateTimeOffset::TryParse(::StringW input, ::System::IFormatProvider* formatProvider, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTimeOffset> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(formatProvider), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, formatProvider, styles, byref(result));
}
// Autogenerated method: System.DateTimeOffset.TryParseExact
bool System::DateTimeOffset::TryParseExact(::StringW input, ::StringW format, ::System::IFormatProvider* formatProvider, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTimeOffset> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, format, formatProvider, styles, byref(result));
}
// Autogenerated method: System.DateTimeOffset.TryParseExact
bool System::DateTimeOffset::TryParseExact(::StringW input, ::ArrayW<::StringW> formats, ::System::IFormatProvider* formatProvider, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTimeOffset> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(formatProvider), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, formats, formatProvider, styles, byref(result));
}
// Autogenerated method: System.DateTimeOffset.ValidateOffset
int16_t System::DateTimeOffset::ValidateOffset(::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ValidateOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "ValidateOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offset);
}
// Autogenerated method: System.DateTimeOffset.ValidateDate
::System::DateTime System::DateTimeOffset::ValidateDate(::System::DateTime dateTime, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ValidateDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "ValidateDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, offset);
}
// Autogenerated method: System.DateTimeOffset.ValidateStyles
::System::Globalization::DateTimeStyles System::DateTimeOffset::ValidateStyles(::System::Globalization::DateTimeStyles style, ::StringW parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ValidateStyles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "ValidateStyles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(parameterName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeStyles, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, style, parameterName);
}
// Autogenerated method: System.DateTimeOffset..cctor
void System::DateTimeOffset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.Equals
bool System::DateTimeOffset::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.DateTimeOffset.GetHashCode
int System::DateTimeOffset::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.ToString
::StringW System::DateTimeOffset::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.op_Subtraction
::System::TimeSpan System::operator-(const ::System::DateTimeOffset& left, const ::System::DateTimeOffset& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.DateTimeOffset.op_Equality
bool System::operator ==(const ::System::DateTimeOffset& left, const ::System::DateTimeOffset& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.DateTimeOffset.op_Inequality
bool System::operator !=(const ::System::DateTimeOffset& left, const ::System::DateTimeOffset& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeOffset::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeOffset", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.DayOfWeek Sunday
::System::DayOfWeek System::DayOfWeek::_get_Sunday() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_get_Sunday");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DayOfWeek>("System", "DayOfWeek", "Sunday"));
}
// Autogenerated static field setter
// Set static field: static public System.DayOfWeek Sunday
void System::DayOfWeek::_set_Sunday(::System::DayOfWeek value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_set_Sunday");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DayOfWeek", "Sunday", value));
}
// Autogenerated static field getter
// Get static field: static public System.DayOfWeek Monday
::System::DayOfWeek System::DayOfWeek::_get_Monday() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_get_Monday");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DayOfWeek>("System", "DayOfWeek", "Monday"));
}
// Autogenerated static field setter
// Set static field: static public System.DayOfWeek Monday
void System::DayOfWeek::_set_Monday(::System::DayOfWeek value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_set_Monday");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DayOfWeek", "Monday", value));
}
// Autogenerated static field getter
// Get static field: static public System.DayOfWeek Tuesday
::System::DayOfWeek System::DayOfWeek::_get_Tuesday() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_get_Tuesday");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DayOfWeek>("System", "DayOfWeek", "Tuesday"));
}
// Autogenerated static field setter
// Set static field: static public System.DayOfWeek Tuesday
void System::DayOfWeek::_set_Tuesday(::System::DayOfWeek value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_set_Tuesday");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DayOfWeek", "Tuesday", value));
}
// Autogenerated static field getter
// Get static field: static public System.DayOfWeek Wednesday
::System::DayOfWeek System::DayOfWeek::_get_Wednesday() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_get_Wednesday");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DayOfWeek>("System", "DayOfWeek", "Wednesday"));
}
// Autogenerated static field setter
// Set static field: static public System.DayOfWeek Wednesday
void System::DayOfWeek::_set_Wednesday(::System::DayOfWeek value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_set_Wednesday");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DayOfWeek", "Wednesday", value));
}
// Autogenerated static field getter
// Get static field: static public System.DayOfWeek Thursday
::System::DayOfWeek System::DayOfWeek::_get_Thursday() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_get_Thursday");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DayOfWeek>("System", "DayOfWeek", "Thursday"));
}
// Autogenerated static field setter
// Set static field: static public System.DayOfWeek Thursday
void System::DayOfWeek::_set_Thursday(::System::DayOfWeek value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_set_Thursday");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DayOfWeek", "Thursday", value));
}
// Autogenerated static field getter
// Get static field: static public System.DayOfWeek Friday
::System::DayOfWeek System::DayOfWeek::_get_Friday() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_get_Friday");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DayOfWeek>("System", "DayOfWeek", "Friday"));
}
// Autogenerated static field setter
// Set static field: static public System.DayOfWeek Friday
void System::DayOfWeek::_set_Friday(::System::DayOfWeek value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_set_Friday");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DayOfWeek", "Friday", value));
}
// Autogenerated static field getter
// Get static field: static public System.DayOfWeek Saturday
::System::DayOfWeek System::DayOfWeek::_get_Saturday() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_get_Saturday");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DayOfWeek>("System", "DayOfWeek", "Saturday"));
}
// Autogenerated static field setter
// Set static field: static public System.DayOfWeek Saturday
void System::DayOfWeek::_set_Saturday(::System::DayOfWeek value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::_set_Saturday");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DayOfWeek", "Saturday", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::DayOfWeek::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DayOfWeek::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DivideByZeroException
#include "System/DivideByZeroException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DllNotFoundException
#include "System/DllNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Double
#include "System/Double.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Double MinValue
double System::Double::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Double", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Double MinValue
void System::Double::_set_MinValue(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Double", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Double MaxValue
double System::Double::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Double", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Double MaxValue
void System::Double::_set_MaxValue(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Double", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Double Epsilon
double System::Double::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Double", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Double Epsilon
void System::Double::_set_Epsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Double", "Epsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Double NegativeInfinity
double System::Double::_get_NegativeInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_get_NegativeInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Double", "NegativeInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Double NegativeInfinity
void System::Double::_set_NegativeInfinity(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_set_NegativeInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Double", "NegativeInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Double PositiveInfinity
double System::Double::_get_PositiveInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_get_PositiveInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Double", "PositiveInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Double PositiveInfinity
void System::Double::_set_PositiveInfinity(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_set_PositiveInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Double", "PositiveInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Double NaN
double System::Double::_get_NaN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_get_NaN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Double", "NaN"));
}
// Autogenerated static field setter
// Set static field: static public System.Double NaN
void System::Double::_set_NaN(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_set_NaN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Double", "NaN", value));
}
// Autogenerated static field getter
// Get static field: static System.Double NegativeZero
double System::Double::_get_NegativeZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_get_NegativeZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Double", "NegativeZero"));
}
// Autogenerated static field setter
// Set static field: static System.Double NegativeZero
void System::Double::_set_NegativeZero(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::_set_NegativeZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Double", "NegativeZero", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Double m_value
[[deprecated("Use field access instead!")]] double& System::Double::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Double.IsFinite
bool System::Double::IsFinite(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::IsFinite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "IsFinite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Double.IsInfinity
bool System::Double::IsInfinity(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::IsInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "IsInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Double.IsNaN
bool System::Double::IsNaN(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::IsNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "IsNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Double.IsNegative
bool System::Double::IsNegative(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::IsNegative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "IsNegative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Double.IsNegativeInfinity
bool System::Double::IsNegativeInfinity(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::IsNegativeInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "IsNegativeInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Double.IsPositiveInfinity
bool System::Double::IsPositiveInfinity(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::IsPositiveInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "IsPositiveInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Double.CompareTo
int System::Double::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Double.CompareTo
int System::Double::CompareTo(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Double.Equals
bool System::Double::Equals(double obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Double.ToString
::StringW System::Double::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Double.ToString
::StringW System::Double::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.ToString
::StringW System::Double::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Double.TryFormat
bool System::Double::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, provider);
}
// Autogenerated method: System.Double.Parse
double System::Double::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Double.Parse
double System::Double::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Double.Parse
double System::Double::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Double.TryParse
bool System::Double::TryParse(::StringW s, ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Double.TryParse
bool System::Double::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.Double.TryParse
bool System::Double::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Double", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info, byref(result));
}
// Autogenerated method: System.Double.GetTypeCode
::System::TypeCode System::Double::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Double.System.IConvertible.ToBoolean
bool System::Double::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToChar
::Il2CppChar System::Double::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToSByte
int8_t System::Double::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 8));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToByte
uint8_t System::Double::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 9));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToInt16
int16_t System::Double::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 10));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToUInt16
uint16_t System::Double::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToInt32
int System::Double::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToUInt32
uint System::Double::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToInt64
int64_t System::Double::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 14));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToUInt64
uint64_t System::Double::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToSingle
float System::Double::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 16));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToDouble
double System::Double::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 17));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToDecimal
::System::Decimal System::Double::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToDateTime
::System::DateTime System::Double::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Double.System.IConvertible.ToType
::Il2CppObject* System::Double::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(double), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.Double.Equals
bool System::Double::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Double.GetHashCode
int System::Double::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Double.ToString
::StringW System::Double::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Double::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.EntryPointNotFoundException
#include "System/EntryPointNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.EventArgs Empty
::System::EventArgs* System::EventArgs::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EventArgs::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::EventArgs*>("System", "EventArgs", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.EventArgs Empty
void System::EventArgs::_set_Empty(::System::EventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EventArgs::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "EventArgs", "Empty", value));
}
// Autogenerated method: System.EventArgs..cctor
void System::EventArgs::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EventArgs::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "EventArgs", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.EventHandler.Invoke
void System::EventHandler::Invoke(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::EventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ExecutionEngineException
#include "System/ExecutionEngineException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.FieldAccessException
#include "System/FieldAccessException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
