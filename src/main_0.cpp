// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AuthRefreshRequiredDelegateWrapper
#include "GlobalNamespace/AuthRefreshRequiredDelegateWrapper.hpp"
// Including type: AuthRefreshRequiredDelegateWrapper/SwigDelegateAuthRefreshRequiredDelegateWrapper_0
#include "GlobalNamespace/AuthRefreshRequiredDelegateWrapper_SwigDelegateAuthRefreshRequiredDelegateWrapper_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected AuthRefreshRequiredDelegateWrapper selfInstance
::GlobalNamespace::AuthRefreshRequiredDelegateWrapper* GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_get_selfInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_get_selfInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AuthRefreshRequiredDelegateWrapper*>("", "AuthRefreshRequiredDelegateWrapper", "selfInstance"));
}
// Autogenerated static field setter
// Set static field: static protected AuthRefreshRequiredDelegateWrapper selfInstance
void GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_set_selfInstance(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_set_selfInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AuthRefreshRequiredDelegateWrapper", "selfInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] swigMethodTypes0
::ArrayW<::System::Type*> GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_get_swigMethodTypes0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_get_swigMethodTypes0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("", "AuthRefreshRequiredDelegateWrapper", "swigMethodTypes0"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] swigMethodTypes0
void GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_set_swigMethodTypes0(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_set_swigMethodTypes0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AuthRefreshRequiredDelegateWrapper", "swigMethodTypes0", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::AuthRefreshRequiredDelegateWrapper::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AuthRefreshRequiredDelegateWrapper::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AuthRefreshRequiredDelegateWrapper/SwigDelegateAuthRefreshRequiredDelegateWrapper_0 swigDelegate0
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0*& GlobalNamespace::AuthRefreshRequiredDelegateWrapper::dyn_swigDelegate0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::dyn_swigDelegate0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigDelegate0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AuthRefreshRequiredDelegateWrapper.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::AuthRefreshRequiredDelegateWrapper::getCPtr(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthRefreshRequiredDelegateWrapper", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: AuthRefreshRequiredDelegateWrapper.Dispose
void GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AuthRefreshRequiredDelegateWrapper.Dispose
void GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: AuthRefreshRequiredDelegateWrapper.AuthRefreshRequired
void GlobalNamespace::AuthRefreshRequiredDelegateWrapper::AuthRefreshRequired(::StringW arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::AuthRefreshRequired");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg0);
}
// Autogenerated method: AuthRefreshRequiredDelegateWrapper.SwigDirectorConnect
void GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDirectorConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDirectorConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwigDirectorConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AuthRefreshRequiredDelegateWrapper.SwigDerivedClassHasMethod
bool GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDerivedClassHasMethod(::StringW methodName, ::ArrayW<::System::Type*> methodTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDerivedClassHasMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwigDerivedClassHasMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(methodTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, methodName, methodTypes);
}
// Autogenerated method: AuthRefreshRequiredDelegateWrapper.SwigDirectorMethodAuthRefreshRequired
void GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDirectorMethodAuthRefreshRequired(::StringW arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDirectorMethodAuthRefreshRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthRefreshRequiredDelegateWrapper", "SwigDirectorMethodAuthRefreshRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0);
}
// Autogenerated method: AuthRefreshRequiredDelegateWrapper..cctor
void GlobalNamespace::AuthRefreshRequiredDelegateWrapper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthRefreshRequiredDelegateWrapper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AuthRefreshRequiredDelegateWrapper.Finalize
void GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AuthRefreshRequiredDelegateWrapper/SwigDelegateAuthRefreshRequiredDelegateWrapper_0
#include "GlobalNamespace/AuthRefreshRequiredDelegateWrapper_SwigDelegateAuthRefreshRequiredDelegateWrapper_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AuthRefreshRequiredDelegateWrapper/SwigDelegateAuthRefreshRequiredDelegateWrapper_0.Invoke
void GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0::Invoke(::StringW arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg0);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HeadersVector
#include "GlobalNamespace/HeadersVector.hpp"
// Including type: HeadersVector/HeadersVectorEnumerator
#include "GlobalNamespace/HeadersVector_HeadersVectorEnumerator.hpp"
// Including type: MothershipHttpHeader
#include "GlobalNamespace/MothershipHttpHeader.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::HeadersVector::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HeadersVector::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeadersVector.Dispose
void GlobalNamespace::HeadersVector::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadersVector*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HeadersVector.Dispose
void GlobalNamespace::HeadersVector::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadersVector*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: HeadersVector.get_Item
::GlobalNamespace::MothershipHttpHeader* GlobalNamespace::HeadersVector::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MothershipHttpHeader*, false>(this, ___internal__method, index);
}
// Autogenerated method: HeadersVector.get_Count
int GlobalNamespace::HeadersVector::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HeadersVector.global::System.Collections.Generic.IEnumerable<MothershipHttpHeader>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::MothershipHttpHeader*>* GlobalNamespace::HeadersVector::global::System_Collections_Generic_IEnumerable$MothershipHttpHeader$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::global::System.Collections.Generic.IEnumerable<MothershipHttpHeader>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadersVector*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::MothershipHttpHeader*>*, false>(this, ___internal__method);
}
// Autogenerated method: HeadersVector.global::System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::HeadersVector::global::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::global::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadersVector*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: HeadersVector.GetEnumerator
::GlobalNamespace::HeadersVector::HeadersVectorEnumerator* GlobalNamespace::HeadersVector::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HeadersVector::HeadersVectorEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: HeadersVector.size
uint GlobalNamespace::HeadersVector::size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: HeadersVector.getitem
::GlobalNamespace::MothershipHttpHeader* GlobalNamespace::HeadersVector::getitem(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::getitem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getitem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MothershipHttpHeader*, false>(this, ___internal__method, index);
}
// Autogenerated method: HeadersVector.Finalize
void GlobalNamespace::HeadersVector::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HeadersVector/HeadersVectorEnumerator
#include "GlobalNamespace/HeadersVector_HeadersVectorEnumerator.hpp"
// Including type: MothershipHttpHeader
#include "GlobalNamespace/MothershipHttpHeader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HeadersVector collectionRef
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HeadersVector*& GlobalNamespace::HeadersVector::HeadersVectorEnumerator::dyn_collectionRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::HeadersVectorEnumerator::dyn_collectionRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collectionRef"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HeadersVector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HeadersVector::HeadersVectorEnumerator::dyn_currentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::HeadersVectorEnumerator::dyn_currentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::HeadersVector::HeadersVectorEnumerator::dyn_currentObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::HeadersVectorEnumerator::dyn_currentObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HeadersVector::HeadersVectorEnumerator::dyn_currentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::HeadersVectorEnumerator::dyn_currentSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeadersVector/HeadersVectorEnumerator.get_Current
::GlobalNamespace::MothershipHttpHeader* GlobalNamespace::HeadersVector::HeadersVectorEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::HeadersVectorEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadersVector::HeadersVectorEnumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MothershipHttpHeader*, false>(this, ___internal__method);
}
// Autogenerated method: HeadersVector/HeadersVectorEnumerator.global::System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HeadersVector::HeadersVectorEnumerator::global::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::HeadersVectorEnumerator::global::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadersVector::HeadersVectorEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HeadersVector/HeadersVectorEnumerator.MoveNext
bool GlobalNamespace::HeadersVector::HeadersVectorEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::HeadersVectorEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadersVector::HeadersVectorEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HeadersVector/HeadersVectorEnumerator.Reset
void GlobalNamespace::HeadersVector::HeadersVectorEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::HeadersVectorEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadersVector::HeadersVectorEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HeadersVector/HeadersVectorEnumerator.Dispose
void GlobalNamespace::HeadersVector::HeadersVectorEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadersVector::HeadersVectorEnumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadersVector::HeadersVectorEnumerator*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: LoginCompleteDelegateWrapper
#include "GlobalNamespace/LoginCompleteDelegateWrapper.hpp"
// Including type: LoginCompleteDelegateWrapper/SwigDelegateLoginCompleteDelegateWrapper_0
#include "GlobalNamespace/LoginCompleteDelegateWrapper_SwigDelegateLoginCompleteDelegateWrapper_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: MothershipClientApiClient
#include "GlobalNamespace/MothershipClientApiClient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected LoginCompleteDelegateWrapper selfInstance
::GlobalNamespace::LoginCompleteDelegateWrapper* GlobalNamespace::LoginCompleteDelegateWrapper::_get_selfInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::_get_selfInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LoginCompleteDelegateWrapper*>("", "LoginCompleteDelegateWrapper", "selfInstance"));
}
// Autogenerated static field setter
// Set static field: static protected LoginCompleteDelegateWrapper selfInstance
void GlobalNamespace::LoginCompleteDelegateWrapper::_set_selfInstance(::GlobalNamespace::LoginCompleteDelegateWrapper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::_set_selfInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LoginCompleteDelegateWrapper", "selfInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] swigMethodTypes0
::ArrayW<::System::Type*> GlobalNamespace::LoginCompleteDelegateWrapper::_get_swigMethodTypes0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::_get_swigMethodTypes0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("", "LoginCompleteDelegateWrapper", "swigMethodTypes0"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] swigMethodTypes0
void GlobalNamespace::LoginCompleteDelegateWrapper::_set_swigMethodTypes0(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::_set_swigMethodTypes0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LoginCompleteDelegateWrapper", "swigMethodTypes0", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::LoginCompleteDelegateWrapper::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LoginCompleteDelegateWrapper/SwigDelegateLoginCompleteDelegateWrapper_0 swigDelegate0
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0*& GlobalNamespace::LoginCompleteDelegateWrapper::dyn_swigDelegate0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::dyn_swigDelegate0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigDelegate0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LoginCompleteDelegateWrapper.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::LoginCompleteDelegateWrapper::getCPtr(::GlobalNamespace::LoginCompleteDelegateWrapper* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LoginCompleteDelegateWrapper", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: LoginCompleteDelegateWrapper.SwigDirectorConnect
void GlobalNamespace::LoginCompleteDelegateWrapper::SwigDirectorConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDirectorConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwigDirectorConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LoginCompleteDelegateWrapper.SwigDerivedClassHasMethod
bool GlobalNamespace::LoginCompleteDelegateWrapper::SwigDerivedClassHasMethod(::StringW methodName, ::ArrayW<::System::Type*> methodTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDerivedClassHasMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwigDerivedClassHasMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(methodTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, methodName, methodTypes);
}
// Autogenerated method: LoginCompleteDelegateWrapper.SwigDirectorMethodOnCompleteCallback
void GlobalNamespace::LoginCompleteDelegateWrapper::SwigDirectorMethodOnCompleteCallback(::System::IntPtr response, bool wasSuccess, ::System::IntPtr error, ::System::IntPtr userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDirectorMethodOnCompleteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LoginCompleteDelegateWrapper", "SwigDirectorMethodOnCompleteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(wasSuccess), ::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(userData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, response, wasSuccess, error, userData);
}
// Autogenerated method: LoginCompleteDelegateWrapper..cctor
void GlobalNamespace::LoginCompleteDelegateWrapper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LoginCompleteDelegateWrapper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LoginCompleteDelegateWrapper.Dispose
void GlobalNamespace::LoginCompleteDelegateWrapper::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipRequestCompleteDelegateWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LoginCompleteDelegateWrapper/SwigDelegateLoginCompleteDelegateWrapper_0
#include "GlobalNamespace/LoginCompleteDelegateWrapper_SwigDelegateLoginCompleteDelegateWrapper_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LoginCompleteDelegateWrapper/SwigDelegateLoginCompleteDelegateWrapper_0.Invoke
void GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0::Invoke(::System::IntPtr response, bool wasSuccess, ::System::IntPtr error, ::System::IntPtr userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, wasSuccess, error, userData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: LoginResponse
#include "GlobalNamespace/LoginResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::LoginResponse::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginResponse::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LoginResponse.get_MothershipPlayerId
::StringW GlobalNamespace::LoginResponse::get_MothershipPlayerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginResponse::get_MothershipPlayerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MothershipPlayerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LoginResponse.FromMothershipResponse
::GlobalNamespace::LoginResponse* GlobalNamespace::LoginResponse::FromMothershipResponse(::GlobalNamespace::MothershipResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginResponse::FromMothershipResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LoginResponse", "FromMothershipResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LoginResponse*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, response);
}
// Autogenerated method: LoginResponse.Dispose
void GlobalNamespace::LoginResponse::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LoginResponse::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipResponse*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipApiClient
#include "GlobalNamespace/MothershipApiClient.hpp"
// Including type: MothershipSendHTTPRequestDelegateWrapper
#include "GlobalNamespace/MothershipSendHTTPRequestDelegateWrapper.hpp"
// Including type: MothershipHTTPResponse
#include "GlobalNamespace/MothershipHTTPResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::MothershipApiClient::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiClient::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MothershipApiClient::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiClient::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipApiClient.Dispose
void GlobalNamespace::MothershipApiClient::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiClient::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipApiClient*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipApiClient.Dispose
void GlobalNamespace::MothershipApiClient::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiClient::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipApiClient*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: MothershipApiClient.SetHttpRequestDelegate
void GlobalNamespace::MothershipApiClient::SetHttpRequestDelegate(::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper* inSendRequestDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiClient::SetHttpRequestDelegate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipApiClient*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inSendRequestDelegate);
}
// Autogenerated method: MothershipApiClient.ReceiveHttpResponse
void GlobalNamespace::MothershipApiClient::ReceiveHttpResponse(::GlobalNamespace::MothershipHTTPResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiClient::ReceiveHttpResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipApiClient*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: MothershipApiClient.TickRetryQueue
void GlobalNamespace::MothershipApiClient::TickRetryQueue(float deltaTimeInSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiClient::TickRetryQueue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipApiClient*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTimeInSeconds);
}
// Autogenerated method: MothershipApiClient.Finalize
void GlobalNamespace::MothershipApiClient::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiClient::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipApiPINVOKE
#include "GlobalNamespace/MothershipApiPINVOKE.hpp"
// Including type: MothershipApiPINVOKE/SWIGExceptionHelper
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGExceptionHelper.hpp"
// Including type: MothershipApiPINVOKE/SWIGPendingException
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGPendingException.hpp"
// Including type: MothershipApiPINVOKE/SWIGStringHelper
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGStringHelper.hpp"
// Including type: MothershipSendHTTPRequestDelegateWrapper/SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0
#include "GlobalNamespace/MothershipSendHTTPRequestDelegateWrapper_SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0.hpp"
// Including type: LoginCompleteDelegateWrapper/SwigDelegateLoginCompleteDelegateWrapper_0
#include "GlobalNamespace/LoginCompleteDelegateWrapper_SwigDelegateLoginCompleteDelegateWrapper_0.hpp"
// Including type: AuthRefreshRequiredDelegateWrapper/SwigDelegateAuthRefreshRequiredDelegateWrapper_0
#include "GlobalNamespace/AuthRefreshRequiredDelegateWrapper_SwigDelegateAuthRefreshRequiredDelegateWrapper_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected MothershipApiPINVOKE/SWIGExceptionHelper swigExceptionHelper
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper* GlobalNamespace::MothershipApiPINVOKE::_get_swigExceptionHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::_get_swigExceptionHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper*>("", "MothershipApiPINVOKE", "swigExceptionHelper"));
}
// Autogenerated static field setter
// Set static field: static protected MothershipApiPINVOKE/SWIGExceptionHelper swigExceptionHelper
void GlobalNamespace::MothershipApiPINVOKE::_set_swigExceptionHelper(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::_set_swigExceptionHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE", "swigExceptionHelper", value));
}
// Autogenerated static field getter
// Get static field: static protected MothershipApiPINVOKE/SWIGStringHelper swigStringHelper
::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper* GlobalNamespace::MothershipApiPINVOKE::_get_swigStringHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::_get_swigStringHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper*>("", "MothershipApiPINVOKE", "swigStringHelper"));
}
// Autogenerated static field setter
// Set static field: static protected MothershipApiPINVOKE/SWIGStringHelper swigStringHelper
void GlobalNamespace::MothershipApiPINVOKE::_set_swigStringHelper(::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::_set_swigStringHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE", "swigStringHelper", value));
}
// Autogenerated method: MothershipApiPINVOKE..cctor
void GlobalNamespace::MothershipApiPINVOKE::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipHttpHeader_Name_get
::StringW GlobalNamespace::MothershipApiPINVOKE::MothershipHttpHeader_Name_get(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipHttpHeader_Name_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipHttpHeader_Name_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipHttpHeader_Value_get
::StringW GlobalNamespace::MothershipApiPINVOKE::MothershipHttpHeader_Value_get(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipHttpHeader_Value_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipHttpHeader_Value_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.delete_MothershipHttpHeader
void GlobalNamespace::MothershipApiPINVOKE::delete_MothershipHttpHeader(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_MothershipHttpHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_MothershipHttpHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipHTTPRequest_RequestHeaders_get
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPRequest_RequestHeaders_get(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPRequest_RequestHeaders_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipHTTPRequest_RequestHeaders_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipHTTPRequest_Body_get
::StringW GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPRequest_Body_get(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPRequest_Body_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipHTTPRequest_Body_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipHTTPRequest_Path_get
::StringW GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPRequest_Path_get(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPRequest_Path_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipHTTPRequest_Path_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipHTTPRequest_Verb_get
int GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPRequest_Verb_get(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPRequest_Verb_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipHTTPRequest_Verb_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipHTTPRequest_cbData_get
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPRequest_cbData_get(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPRequest_cbData_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipHTTPRequest_cbData_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.delete_MothershipHTTPRequest
void GlobalNamespace::MothershipApiPINVOKE::delete_MothershipHTTPRequest(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_MothershipHTTPRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_MothershipHTTPRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipHTTPResponse_Body_set
void GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPResponse_Body_set(::System::Runtime::InteropServices::HandleRef jarg1, ::StringW jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPResponse_Body_set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipHTTPResponse_Body_set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipHTTPResponse_statusCode_set
void GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPResponse_statusCode_set(::System::Runtime::InteropServices::HandleRef jarg1, int jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPResponse_statusCode_set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipHTTPResponse_statusCode_set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipHTTPResponse_cbData_set
void GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPResponse_cbData_set(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipHTTPResponse_cbData_set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipHTTPResponse_cbData_set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.new_MothershipHTTPResponse
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::new_MothershipHTTPResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::new_MothershipHTTPResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "new_MothershipHTTPResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipApiPINVOKE.delete_MothershipHTTPResponse
void GlobalNamespace::MothershipApiPINVOKE::delete_MothershipHTTPResponse(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_MothershipHTTPResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_MothershipHTTPResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.delete_MothershipSendHTTPRequestDelegateWrapper
void GlobalNamespace::MothershipApiPINVOKE::delete_MothershipSendHTTPRequestDelegateWrapper(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_MothershipSendHTTPRequestDelegateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_MothershipSendHTTPRequestDelegateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipSendHTTPRequestDelegateWrapper_SendRequest
bool GlobalNamespace::MothershipApiPINVOKE::MothershipSendHTTPRequestDelegateWrapper_SendRequest(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipSendHTTPRequestDelegateWrapper_SendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipSendHTTPRequestDelegateWrapper_SendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.new_MothershipSendHTTPRequestDelegateWrapper
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::new_MothershipSendHTTPRequestDelegateWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::new_MothershipSendHTTPRequestDelegateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "new_MothershipSendHTTPRequestDelegateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipSendHTTPRequestDelegateWrapper_director_connect
void GlobalNamespace::MothershipApiPINVOKE::MothershipSendHTTPRequestDelegateWrapper_director_connect(::System::Runtime::InteropServices::HandleRef jarg1, ::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0* delegate0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipSendHTTPRequestDelegateWrapper_director_connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipSendHTTPRequestDelegateWrapper_director_connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(delegate0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, delegate0);
}
// Autogenerated method: MothershipApiPINVOKE.delete_MothershipResponse
void GlobalNamespace::MothershipApiPINVOKE::delete_MothershipResponse(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_MothershipResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_MothershipResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.delete_MothershipRequestCompleteDelegateWrapper
void GlobalNamespace::MothershipApiPINVOKE::delete_MothershipRequestCompleteDelegateWrapper(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_MothershipRequestCompleteDelegateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_MothershipRequestCompleteDelegateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipRequestCompleteDelegateWrapper_OnCompleteCallback
void GlobalNamespace::MothershipApiPINVOKE::MothershipRequestCompleteDelegateWrapper_OnCompleteCallback(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2, bool jarg3, ::System::Runtime::InteropServices::HandleRef jarg4, ::System::IntPtr jarg5) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipRequestCompleteDelegateWrapper_OnCompleteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipRequestCompleteDelegateWrapper_OnCompleteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3), ::il2cpp_utils::ExtractType(jarg4), ::il2cpp_utils::ExtractType(jarg5)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3, jarg4, jarg5);
}
// Autogenerated method: MothershipApiPINVOKE.delete_MothershipApiClient
void GlobalNamespace::MothershipApiPINVOKE::delete_MothershipApiClient(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_MothershipApiClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_MothershipApiClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipApiClient_SetHttpRequestDelegate
void GlobalNamespace::MothershipApiPINVOKE::MothershipApiClient_SetHttpRequestDelegate(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipApiClient_SetHttpRequestDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipApiClient_SetHttpRequestDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipApiClient_ReceiveHttpResponse
void GlobalNamespace::MothershipApiPINVOKE::MothershipApiClient_ReceiveHttpResponse(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipApiClient_ReceiveHttpResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipApiClient_ReceiveHttpResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipApiClient_TickRetryQueue
void GlobalNamespace::MothershipApiPINVOKE::MothershipApiClient_TickRetryQueue(::System::Runtime::InteropServices::HandleRef jarg1, float jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipApiClient_TickRetryQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipApiClient_TickRetryQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.LoginResponse_MothershipPlayerId_get
::StringW GlobalNamespace::MothershipApiPINVOKE::LoginResponse_MothershipPlayerId_get(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::LoginResponse_MothershipPlayerId_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "LoginResponse_MothershipPlayerId_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.LoginResponse_FromMothershipResponse
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::LoginResponse_FromMothershipResponse(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::LoginResponse_FromMothershipResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "LoginResponse_FromMothershipResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.delete_LoginResponse
void GlobalNamespace::MothershipApiPINVOKE::delete_LoginResponse(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_LoginResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_LoginResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.delete_LoginCompleteDelegateWrapper
void GlobalNamespace::MothershipApiPINVOKE::delete_LoginCompleteDelegateWrapper(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_LoginCompleteDelegateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_LoginCompleteDelegateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.new_LoginCompleteDelegateWrapper__SWIG_0
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::new_LoginCompleteDelegateWrapper__SWIG_0(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::new_LoginCompleteDelegateWrapper__SWIG_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "new_LoginCompleteDelegateWrapper__SWIG_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.LoginCompleteDelegateWrapper_director_connect
void GlobalNamespace::MothershipApiPINVOKE::LoginCompleteDelegateWrapper_director_connect(::System::Runtime::InteropServices::HandleRef jarg1, ::GlobalNamespace::LoginCompleteDelegateWrapper::SwigDelegateLoginCompleteDelegateWrapper_0* delegate0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::LoginCompleteDelegateWrapper_director_connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "LoginCompleteDelegateWrapper_director_connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(delegate0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, delegate0);
}
// Autogenerated method: MothershipApiPINVOKE.delete_AuthRefreshRequiredDelegateWrapper
void GlobalNamespace::MothershipApiPINVOKE::delete_AuthRefreshRequiredDelegateWrapper(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_AuthRefreshRequiredDelegateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_AuthRefreshRequiredDelegateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.AuthRefreshRequiredDelegateWrapper_AuthRefreshRequired
void GlobalNamespace::MothershipApiPINVOKE::AuthRefreshRequiredDelegateWrapper_AuthRefreshRequired(::System::Runtime::InteropServices::HandleRef jarg1, ::StringW jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::AuthRefreshRequiredDelegateWrapper_AuthRefreshRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "AuthRefreshRequiredDelegateWrapper_AuthRefreshRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.new_AuthRefreshRequiredDelegateWrapper
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::new_AuthRefreshRequiredDelegateWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::new_AuthRefreshRequiredDelegateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "new_AuthRefreshRequiredDelegateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipApiPINVOKE.AuthRefreshRequiredDelegateWrapper_director_connect
void GlobalNamespace::MothershipApiPINVOKE::AuthRefreshRequiredDelegateWrapper_director_connect(::System::Runtime::InteropServices::HandleRef jarg1, ::GlobalNamespace::AuthRefreshRequiredDelegateWrapper::SwigDelegateAuthRefreshRequiredDelegateWrapper_0* delegate0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::AuthRefreshRequiredDelegateWrapper_director_connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "AuthRefreshRequiredDelegateWrapper_director_connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(delegate0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, delegate0);
}
// Autogenerated method: MothershipApiPINVOKE.new_MothershipClientApiClient
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::new_MothershipClientApiClient(::StringW jarg1, ::StringW jarg2, ::StringW jarg3, ::StringW jarg4, bool jarg5) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::new_MothershipClientApiClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "new_MothershipClientApiClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3), ::il2cpp_utils::ExtractType(jarg4), ::il2cpp_utils::ExtractType(jarg5)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3, jarg4, jarg5);
}
// Autogenerated method: MothershipApiPINVOKE.delete_MothershipClientApiClient
void GlobalNamespace::MothershipApiPINVOKE::delete_MothershipClientApiClient(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_MothershipClientApiClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_MothershipClientApiClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipClientApiClient_SetAuthRefreshRequiredDelegateWrapper
void GlobalNamespace::MothershipApiPINVOKE::MothershipClientApiClient_SetAuthRefreshRequiredDelegateWrapper(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipClientApiClient_SetAuthRefreshRequiredDelegateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipClientApiClient_SetAuthRefreshRequiredDelegateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipClientApiClient_SetLoginCompleteDelegate
void GlobalNamespace::MothershipApiPINVOKE::MothershipClientApiClient_SetLoginCompleteDelegate(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipClientApiClient_SetLoginCompleteDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipClientApiClient_SetLoginCompleteDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipClientApiClient_LoginWithInsecure1
bool GlobalNamespace::MothershipApiPINVOKE::MothershipClientApiClient_LoginWithInsecure1(::System::Runtime::InteropServices::HandleRef jarg1, ::StringW jarg2, ::StringW jarg3, ::System::IntPtr jarg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipClientApiClient_LoginWithInsecure1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipClientApiClient_LoginWithInsecure1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3), ::il2cpp_utils::ExtractType(jarg4)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3, jarg4);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipClientApiClient_LoginWithQuest
bool GlobalNamespace::MothershipApiPINVOKE::MothershipClientApiClient_LoginWithQuest(::System::Runtime::InteropServices::HandleRef jarg1, ::StringW jarg2, ::StringW jarg3, ::System::IntPtr jarg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipClientApiClient_LoginWithQuest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipClientApiClient_LoginWithQuest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3), ::il2cpp_utils::ExtractType(jarg4)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3, jarg4);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipError_Details_get
::StringW GlobalNamespace::MothershipApiPINVOKE::MothershipError_Details_get(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipError_Details_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipError_Details_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.delete_MothershipError
void GlobalNamespace::MothershipApiPINVOKE::delete_MothershipError(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_MothershipError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_MothershipError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.HeadersVector_size
uint GlobalNamespace::MothershipApiPINVOKE::HeadersVector_size(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::HeadersVector_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "HeadersVector_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.HeadersVector_getitem
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::HeadersVector_getitem(::System::Runtime::InteropServices::HandleRef jarg1, int jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::HeadersVector_getitem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "HeadersVector_getitem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: MothershipApiPINVOKE.delete_HeadersVector
void GlobalNamespace::MothershipApiPINVOKE::delete_HeadersVector(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::delete_HeadersVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "delete_HeadersVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.LoginResponse_SWIGUpcast
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::LoginResponse_SWIGUpcast(::System::IntPtr jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::LoginResponse_SWIGUpcast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "LoginResponse_SWIGUpcast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.LoginCompleteDelegateWrapper_SWIGUpcast
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::LoginCompleteDelegateWrapper_SWIGUpcast(::System::IntPtr jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::LoginCompleteDelegateWrapper_SWIGUpcast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "LoginCompleteDelegateWrapper_SWIGUpcast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: MothershipApiPINVOKE.MothershipClientApiClient_SWIGUpcast
::System::IntPtr GlobalNamespace::MothershipApiPINVOKE::MothershipClientApiClient_SWIGUpcast(::System::IntPtr jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::MothershipClientApiClient_SWIGUpcast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE", "MothershipClientApiClient_SWIGUpcast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipApiPINVOKE/SWIGExceptionHelper
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGExceptionHelper.hpp"
// Including type: MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGExceptionHelper_ExceptionDelegate.hpp"
// Including type: MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionArgumentDelegate
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGExceptionHelper_ExceptionArgumentDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate applicationDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_applicationDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_applicationDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "applicationDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate applicationDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_applicationDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_applicationDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "applicationDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate arithmeticDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_arithmeticDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_arithmeticDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "arithmeticDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate arithmeticDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_arithmeticDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_arithmeticDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "arithmeticDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate divideByZeroDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_divideByZeroDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_divideByZeroDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "divideByZeroDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate divideByZeroDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_divideByZeroDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_divideByZeroDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "divideByZeroDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate indexOutOfRangeDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_indexOutOfRangeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_indexOutOfRangeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "indexOutOfRangeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate indexOutOfRangeDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_indexOutOfRangeDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_indexOutOfRangeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "indexOutOfRangeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate invalidCastDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_invalidCastDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_invalidCastDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "invalidCastDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate invalidCastDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_invalidCastDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_invalidCastDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "invalidCastDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate invalidOperationDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_invalidOperationDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_invalidOperationDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "invalidOperationDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate invalidOperationDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_invalidOperationDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_invalidOperationDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "invalidOperationDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate ioDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_ioDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_ioDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "ioDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate ioDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_ioDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_ioDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "ioDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate nullReferenceDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_nullReferenceDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_nullReferenceDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "nullReferenceDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate nullReferenceDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_nullReferenceDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_nullReferenceDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "nullReferenceDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate outOfMemoryDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_outOfMemoryDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_outOfMemoryDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "outOfMemoryDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate outOfMemoryDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_outOfMemoryDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_outOfMemoryDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "outOfMemoryDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate overflowDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_overflowDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_overflowDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "overflowDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate overflowDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_overflowDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_overflowDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "overflowDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate systemDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_systemDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_systemDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "systemDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate systemDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_systemDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_systemDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "systemDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionArgumentDelegate argumentDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_argumentDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_argumentDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "argumentDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionArgumentDelegate argumentDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_argumentDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_argumentDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "argumentDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionArgumentDelegate argumentNullDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_argumentNullDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_argumentNullDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "argumentNullDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionArgumentDelegate argumentNullDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_argumentNullDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_argumentNullDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "argumentNullDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionArgumentDelegate argumentOutOfRangeDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_argumentOutOfRangeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_get_argumentOutOfRangeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate*>("", "MothershipApiPINVOKE/SWIGExceptionHelper", "argumentOutOfRangeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionArgumentDelegate argumentOutOfRangeDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_argumentOutOfRangeDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_set_argumentOutOfRangeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGExceptionHelper", "argumentOutOfRangeDelegate", value));
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SWIGRegisterExceptionCallbacks_MothershipApi
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SWIGRegisterExceptionCallbacks_MothershipApi(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* applicationDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* arithmeticDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* divideByZeroDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* indexOutOfRangeDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* invalidCastDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* invalidOperationDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* ioDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* nullReferenceDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* outOfMemoryDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* overflowDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate* systemExceptionDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SWIGRegisterExceptionCallbacks_MothershipApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SWIGRegisterExceptionCallbacks_MothershipApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applicationDelegate), ::il2cpp_utils::ExtractType(arithmeticDelegate), ::il2cpp_utils::ExtractType(divideByZeroDelegate), ::il2cpp_utils::ExtractType(indexOutOfRangeDelegate), ::il2cpp_utils::ExtractType(invalidCastDelegate), ::il2cpp_utils::ExtractType(invalidOperationDelegate), ::il2cpp_utils::ExtractType(ioDelegate), ::il2cpp_utils::ExtractType(nullReferenceDelegate), ::il2cpp_utils::ExtractType(outOfMemoryDelegate), ::il2cpp_utils::ExtractType(overflowDelegate), ::il2cpp_utils::ExtractType(systemExceptionDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, applicationDelegate, arithmeticDelegate, divideByZeroDelegate, indexOutOfRangeDelegate, invalidCastDelegate, invalidOperationDelegate, ioDelegate, nullReferenceDelegate, outOfMemoryDelegate, overflowDelegate, systemExceptionDelegate);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SWIGRegisterExceptionCallbacksArgument_MothershipApi
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SWIGRegisterExceptionCallbacksArgument_MothershipApi(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* argumentDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* argumentNullDelegate, ::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* argumentOutOfRangeDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SWIGRegisterExceptionCallbacksArgument_MothershipApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SWIGRegisterExceptionCallbacksArgument_MothershipApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argumentDelegate), ::il2cpp_utils::ExtractType(argumentNullDelegate), ::il2cpp_utils::ExtractType(argumentOutOfRangeDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, argumentDelegate, argumentNullDelegate, argumentOutOfRangeDelegate);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingApplicationException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingApplicationException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingApplicationException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingApplicationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingArithmeticException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingArithmeticException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingArithmeticException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingArithmeticException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingDivideByZeroException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingDivideByZeroException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingDivideByZeroException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingDivideByZeroException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingIndexOutOfRangeException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingIndexOutOfRangeException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingIndexOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingIndexOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingInvalidCastException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingInvalidCastException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingInvalidCastException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingInvalidCastException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingInvalidOperationException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingInvalidOperationException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingInvalidOperationException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingInvalidOperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingIOException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingIOException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingIOException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingIOException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingNullReferenceException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingNullReferenceException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingNullReferenceException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingNullReferenceException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingOutOfMemoryException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingOutOfMemoryException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingOutOfMemoryException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingOutOfMemoryException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingOverflowException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingOverflowException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingOverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingOverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingSystemException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingSystemException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingSystemException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingSystemException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingArgumentException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingArgumentException(::StringW message, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, paramName);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingArgumentNullException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingArgumentNullException(::StringW message, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingArgumentNullException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingArgumentNullException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, paramName);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper.SetPendingArgumentOutOfRangeException
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingArgumentOutOfRangeException(::StringW message, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::SetPendingArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", "SetPendingArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, paramName);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper..cctor
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGExceptionHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGExceptionHelper_ExceptionDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionDelegate.Invoke
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate::Invoke(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionArgumentDelegate
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGExceptionHelper_ExceptionArgumentDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MothershipApiPINVOKE/SWIGExceptionHelper/ExceptionArgumentDelegate.Invoke
void GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate::Invoke(::StringW message, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipApiPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, paramName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipApiPINVOKE/SWIGPendingException
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGPendingException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Exception pendingException
::System::Exception* GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_get_pendingException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_get_pendingException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Exception*>("", "MothershipApiPINVOKE/SWIGPendingException", "pendingException"));
}
// Autogenerated static field setter
// Set static field: static private System.Exception pendingException
void GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_set_pendingException(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_set_pendingException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGPendingException", "pendingException", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 numExceptionsPending
int GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_get_numExceptionsPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_get_numExceptionsPending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MothershipApiPINVOKE/SWIGPendingException", "numExceptionsPending"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 numExceptionsPending
void GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_set_numExceptionsPending(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_set_numExceptionsPending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGPendingException", "numExceptionsPending", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object exceptionsLock
::Il2CppObject* GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_get_exceptionsLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_get_exceptionsLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("", "MothershipApiPINVOKE/SWIGPendingException", "exceptionsLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object exceptionsLock
void GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_set_exceptionsLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_set_exceptionsLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGPendingException", "exceptionsLock", value));
}
// Autogenerated method: MothershipApiPINVOKE/SWIGPendingException.get_Pending
bool GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::get_Pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::get_Pending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGPendingException", "get_Pending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGPendingException.Set
void GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::Set(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGPendingException", "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGPendingException.Retrieve
::System::Exception* GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::Retrieve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::Retrieve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGPendingException", "Retrieve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGPendingException..cctor
void GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGPendingException::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGPendingException", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipApiPINVOKE/SWIGStringHelper
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGStringHelper.hpp"
// Including type: MothershipApiPINVOKE/SWIGStringHelper/SWIGStringDelegate
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGStringHelper_SWIGStringDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private MothershipApiPINVOKE/SWIGStringHelper/SWIGStringDelegate stringDelegate
::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::SWIGStringDelegate* GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::_get_stringDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::_get_stringDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::SWIGStringDelegate*>("", "MothershipApiPINVOKE/SWIGStringHelper", "stringDelegate"));
}
// Autogenerated static field setter
// Set static field: static private MothershipApiPINVOKE/SWIGStringHelper/SWIGStringDelegate stringDelegate
void GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::_set_stringDelegate(::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::SWIGStringDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::_set_stringDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipApiPINVOKE/SWIGStringHelper", "stringDelegate", value));
}
// Autogenerated method: MothershipApiPINVOKE/SWIGStringHelper.SWIGRegisterStringCallback_MothershipApi
void GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::SWIGRegisterStringCallback_MothershipApi(::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::SWIGStringDelegate* stringDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::SWIGRegisterStringCallback_MothershipApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGStringHelper", "SWIGRegisterStringCallback_MothershipApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringDelegate);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGStringHelper.CreateString
::StringW GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::CreateString(::StringW cString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGStringHelper", "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cString);
}
// Autogenerated method: MothershipApiPINVOKE/SWIGStringHelper..cctor
void GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipApiPINVOKE/SWIGStringHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipApiPINVOKE/SWIGStringHelper/SWIGStringDelegate
#include "GlobalNamespace/MothershipApiPINVOKE_SWIGStringHelper_SWIGStringDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MothershipApiPINVOKE/SWIGStringHelper/SWIGStringDelegate.Invoke
::StringW GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::SWIGStringDelegate::Invoke(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::SWIGStringDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipApiPINVOKE::SWIGStringHelper::SWIGStringDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipClientApiClient
#include "GlobalNamespace/MothershipClientApiClient.hpp"
// Including type: AuthRefreshRequiredDelegateWrapper
#include "GlobalNamespace/AuthRefreshRequiredDelegateWrapper.hpp"
// Including type: LoginCompleteDelegateWrapper
#include "GlobalNamespace/LoginCompleteDelegateWrapper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::MothershipClientApiClient::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiClient::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipClientApiClient.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::MothershipClientApiClient::getCPtr(::GlobalNamespace::MothershipClientApiClient* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiClient::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipClientApiClient", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: MothershipClientApiClient.SetAuthRefreshRequiredDelegateWrapper
void GlobalNamespace::MothershipClientApiClient::SetAuthRefreshRequiredDelegateWrapper(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper* wrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiClient::SetAuthRefreshRequiredDelegateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAuthRefreshRequiredDelegateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wrapper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wrapper);
}
// Autogenerated method: MothershipClientApiClient.SetLoginCompleteDelegate
void GlobalNamespace::MothershipClientApiClient::SetLoginCompleteDelegate(::GlobalNamespace::LoginCompleteDelegateWrapper* wrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiClient::SetLoginCompleteDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLoginCompleteDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wrapper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wrapper);
}
// Autogenerated method: MothershipClientApiClient.LoginWithInsecure1
bool GlobalNamespace::MothershipClientApiClient::LoginWithInsecure1(::StringW username, ::StringW password, ::System::IntPtr userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiClient::LoginWithInsecure1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithInsecure1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(userData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, username, password, userData);
}
// Autogenerated method: MothershipClientApiClient.LoginWithQuest
bool GlobalNamespace::MothershipClientApiClient::LoginWithQuest(::StringW nonce, ::StringW userId, ::System::IntPtr userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiClient::LoginWithQuest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithQuest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nonce, userId, userData);
}
// Autogenerated method: MothershipClientApiClient.Dispose
void GlobalNamespace::MothershipClientApiClient::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiClient::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipApiClient*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipError
#include "GlobalNamespace/MothershipError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::MothershipError::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipError::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MothershipError::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipError::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipError.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::MothershipError::getCPtr(::GlobalNamespace::MothershipError* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipError::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipError", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: MothershipError.Dispose
void GlobalNamespace::MothershipError::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipError::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipError*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipError.Dispose
void GlobalNamespace::MothershipError::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipError::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipError*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: MothershipError.get_Details
::StringW GlobalNamespace::MothershipError::get_Details() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipError::get_Details");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Details", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MothershipError.Finalize
void GlobalNamespace::MothershipError::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipError::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipHttpHeader
#include "GlobalNamespace/MothershipHttpHeader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::MothershipHttpHeader::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpHeader::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MothershipHttpHeader::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpHeader::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipHttpHeader.Dispose
void GlobalNamespace::MothershipHttpHeader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpHeader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHttpHeader*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHttpHeader.Dispose
void GlobalNamespace::MothershipHttpHeader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpHeader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHttpHeader*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: MothershipHttpHeader.get_Name
::StringW GlobalNamespace::MothershipHttpHeader::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpHeader::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHttpHeader.get_Value
::StringW GlobalNamespace::MothershipHttpHeader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpHeader::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHttpHeader.Finalize
void GlobalNamespace::MothershipHttpHeader::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpHeader::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipHTTPRequest
#include "GlobalNamespace/MothershipHTTPRequest.hpp"
// Including type: HeadersVector
#include "GlobalNamespace/HeadersVector.hpp"
// Including type: MothershipHTTPVerbs
#include "GlobalNamespace/MothershipHTTPVerbs.hpp"
// Including type: SWIGTYPE_p_void
#include "GlobalNamespace/SWIGTYPE_p_void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::MothershipHTTPRequest::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MothershipHTTPRequest::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipHTTPRequest.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::MothershipHTTPRequest::getCPtr(::GlobalNamespace::MothershipHTTPRequest* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipHTTPRequest", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: MothershipHTTPRequest.Dispose
void GlobalNamespace::MothershipHTTPRequest::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHTTPRequest*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHTTPRequest.Dispose
void GlobalNamespace::MothershipHTTPRequest::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHTTPRequest*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: MothershipHTTPRequest.get_RequestHeaders
::GlobalNamespace::HeadersVector* GlobalNamespace::MothershipHTTPRequest::get_RequestHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::get_RequestHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HeadersVector*, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHTTPRequest.get_Body
::StringW GlobalNamespace::MothershipHTTPRequest::get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::get_Body");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Body", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHTTPRequest.get_Path
::StringW GlobalNamespace::MothershipHTTPRequest::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHTTPRequest.get_Verb
::GlobalNamespace::MothershipHTTPVerbs GlobalNamespace::MothershipHTTPRequest::get_Verb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::get_Verb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Verb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MothershipHTTPVerbs, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHTTPRequest.get_cbData
::GlobalNamespace::SWIGTYPE_p_void* GlobalNamespace::MothershipHTTPRequest::get_cbData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::get_cbData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cbData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SWIGTYPE_p_void*, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHTTPRequest.Finalize
void GlobalNamespace::MothershipHTTPRequest::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPRequest::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipHTTPResponse
#include "GlobalNamespace/MothershipHTTPResponse.hpp"
// Including type: SWIGTYPE_p_void
#include "GlobalNamespace/SWIGTYPE_p_void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::MothershipHTTPResponse::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPResponse::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MothershipHTTPResponse::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPResponse::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipHTTPResponse.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::MothershipHTTPResponse::getCPtr(::GlobalNamespace::MothershipHTTPResponse* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPResponse::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipHTTPResponse", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: MothershipHTTPResponse.Dispose
void GlobalNamespace::MothershipHTTPResponse::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPResponse::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHTTPResponse*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHTTPResponse.Dispose
void GlobalNamespace::MothershipHTTPResponse::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPResponse::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHTTPResponse*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: MothershipHTTPResponse.set_Body
void GlobalNamespace::MothershipHTTPResponse::set_Body(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPResponse::set_Body");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Body", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MothershipHTTPResponse.set_statusCode
void GlobalNamespace::MothershipHTTPResponse::set_statusCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPResponse::set_statusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_statusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MothershipHTTPResponse.set_cbData
void GlobalNamespace::MothershipHTTPResponse::set_cbData(::GlobalNamespace::SWIGTYPE_p_void* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPResponse::set_cbData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cbData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MothershipHTTPResponse.Finalize
void GlobalNamespace::MothershipHTTPResponse::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPResponse::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipHTTPVerbs
#include "GlobalNamespace/MothershipHTTPVerbs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MothershipHTTPVerbs GET
::GlobalNamespace::MothershipHTTPVerbs GlobalNamespace::MothershipHTTPVerbs::_get_GET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPVerbs::_get_GET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipHTTPVerbs>("", "MothershipHTTPVerbs", "GET"));
}
// Autogenerated static field setter
// Set static field: static public MothershipHTTPVerbs GET
void GlobalNamespace::MothershipHTTPVerbs::_set_GET(::GlobalNamespace::MothershipHTTPVerbs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPVerbs::_set_GET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipHTTPVerbs", "GET", value));
}
// Autogenerated static field getter
// Get static field: static public MothershipHTTPVerbs POST
::GlobalNamespace::MothershipHTTPVerbs GlobalNamespace::MothershipHTTPVerbs::_get_POST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPVerbs::_get_POST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipHTTPVerbs>("", "MothershipHTTPVerbs", "POST"));
}
// Autogenerated static field setter
// Set static field: static public MothershipHTTPVerbs POST
void GlobalNamespace::MothershipHTTPVerbs::_set_POST(::GlobalNamespace::MothershipHTTPVerbs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPVerbs::_set_POST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipHTTPVerbs", "POST", value));
}
// Autogenerated static field getter
// Get static field: static public MothershipHTTPVerbs PUT
::GlobalNamespace::MothershipHTTPVerbs GlobalNamespace::MothershipHTTPVerbs::_get_PUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPVerbs::_get_PUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipHTTPVerbs>("", "MothershipHTTPVerbs", "PUT"));
}
// Autogenerated static field setter
// Set static field: static public MothershipHTTPVerbs PUT
void GlobalNamespace::MothershipHTTPVerbs::_set_PUT(::GlobalNamespace::MothershipHTTPVerbs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPVerbs::_set_PUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipHTTPVerbs", "PUT", value));
}
// Autogenerated static field getter
// Get static field: static public MothershipHTTPVerbs DELETE
::GlobalNamespace::MothershipHTTPVerbs GlobalNamespace::MothershipHTTPVerbs::_get_DELETE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPVerbs::_get_DELETE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipHTTPVerbs>("", "MothershipHTTPVerbs", "DELETE"));
}
// Autogenerated static field setter
// Set static field: static public MothershipHTTPVerbs DELETE
void GlobalNamespace::MothershipHTTPVerbs::_set_DELETE(::GlobalNamespace::MothershipHTTPVerbs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPVerbs::_set_DELETE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipHTTPVerbs", "DELETE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MothershipHTTPVerbs::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHTTPVerbs::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipRequestCompleteDelegateWrapper
#include "GlobalNamespace/MothershipRequestCompleteDelegateWrapper.hpp"
// Including type: MothershipResponse
#include "GlobalNamespace/MothershipResponse.hpp"
// Including type: MothershipError
#include "GlobalNamespace/MothershipError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::MothershipRequestCompleteDelegateWrapper::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipRequestCompleteDelegateWrapper::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MothershipRequestCompleteDelegateWrapper::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipRequestCompleteDelegateWrapper::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipRequestCompleteDelegateWrapper.Dispose
void GlobalNamespace::MothershipRequestCompleteDelegateWrapper::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipRequestCompleteDelegateWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipRequestCompleteDelegateWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipRequestCompleteDelegateWrapper.Dispose
void GlobalNamespace::MothershipRequestCompleteDelegateWrapper::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipRequestCompleteDelegateWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipRequestCompleteDelegateWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: MothershipRequestCompleteDelegateWrapper.OnCompleteCallback
void GlobalNamespace::MothershipRequestCompleteDelegateWrapper::OnCompleteCallback(::GlobalNamespace::MothershipResponse* response, bool wasSuccess, ::GlobalNamespace::MothershipError* error, ::System::IntPtr userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipRequestCompleteDelegateWrapper::OnCompleteCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipRequestCompleteDelegateWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, wasSuccess, error, userData);
}
// Autogenerated method: MothershipRequestCompleteDelegateWrapper.Finalize
void GlobalNamespace::MothershipRequestCompleteDelegateWrapper::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipRequestCompleteDelegateWrapper::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipResponse
#include "GlobalNamespace/MothershipResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::MothershipResponse::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipResponse::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MothershipResponse::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipResponse::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipResponse.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::MothershipResponse::getCPtr(::GlobalNamespace::MothershipResponse* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipResponse::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipResponse", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: MothershipResponse.Dispose
void GlobalNamespace::MothershipResponse::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipResponse::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipResponse*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipResponse.Dispose
void GlobalNamespace::MothershipResponse::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipResponse::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipResponse*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: MothershipResponse.Finalize
void GlobalNamespace::MothershipResponse::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipResponse::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipSendHTTPRequestDelegateWrapper
#include "GlobalNamespace/MothershipSendHTTPRequestDelegateWrapper.hpp"
// Including type: MothershipSendHTTPRequestDelegateWrapper/SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0
#include "GlobalNamespace/MothershipSendHTTPRequestDelegateWrapper_SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: MothershipHTTPRequest
#include "GlobalNamespace/MothershipHTTPRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected MothershipSendHTTPRequestDelegateWrapper selfInstance
::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper* GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::_get_selfInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::_get_selfInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper*>("", "MothershipSendHTTPRequestDelegateWrapper", "selfInstance"));
}
// Autogenerated static field setter
// Set static field: static protected MothershipSendHTTPRequestDelegateWrapper selfInstance
void GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::_set_selfInstance(::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::_set_selfInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipSendHTTPRequestDelegateWrapper", "selfInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] swigMethodTypes0
::ArrayW<::System::Type*> GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::_get_swigMethodTypes0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::_get_swigMethodTypes0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("", "MothershipSendHTTPRequestDelegateWrapper", "swigMethodTypes0"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] swigMethodTypes0
void GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::_set_swigMethodTypes0(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::_set_swigMethodTypes0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipSendHTTPRequestDelegateWrapper", "swigMethodTypes0", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MothershipSendHTTPRequestDelegateWrapper/SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0 swigDelegate0
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0*& GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::dyn_swigDelegate0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::dyn_swigDelegate0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigDelegate0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipSendHTTPRequestDelegateWrapper.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::getCPtr(::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipSendHTTPRequestDelegateWrapper", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: MothershipSendHTTPRequestDelegateWrapper.Dispose
void GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipSendHTTPRequestDelegateWrapper.Dispose
void GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: MothershipSendHTTPRequestDelegateWrapper.SendRequest
bool GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SendRequest(::GlobalNamespace::MothershipHTTPRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SendRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, request);
}
// Autogenerated method: MothershipSendHTTPRequestDelegateWrapper.SwigDirectorConnect
void GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDirectorConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDirectorConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwigDirectorConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipSendHTTPRequestDelegateWrapper.SwigDerivedClassHasMethod
bool GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDerivedClassHasMethod(::StringW methodName, ::ArrayW<::System::Type*> methodTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDerivedClassHasMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwigDerivedClassHasMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(methodTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, methodName, methodTypes);
}
// Autogenerated method: MothershipSendHTTPRequestDelegateWrapper.SwigDirectorMethodSendRequest
bool GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDirectorMethodSendRequest(::System::IntPtr request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDirectorMethodSendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipSendHTTPRequestDelegateWrapper", "SwigDirectorMethodSendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request);
}
// Autogenerated method: MothershipSendHTTPRequestDelegateWrapper..cctor
void GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipSendHTTPRequestDelegateWrapper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipSendHTTPRequestDelegateWrapper.Finalize
void GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipSendHTTPRequestDelegateWrapper/SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0
#include "GlobalNamespace/MothershipSendHTTPRequestDelegateWrapper_SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MothershipSendHTTPRequestDelegateWrapper/SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0.Invoke
bool GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0::Invoke(::System::IntPtr request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper::SwigDelegateMothershipSendHTTPRequestDelegateWrapper_0*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, request);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_void
#include "GlobalNamespace/SWIGTYPE_p_void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_void::getCPtr(::GlobalNamespace::SWIGTYPE_p_void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipClientContext
#include "GlobalNamespace/MothershipClientContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String MothershipId
::StringW GlobalNamespace::MothershipClientContext::_get_MothershipId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientContext::_get_MothershipId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MothershipClientContext", "MothershipId"));
}
// Autogenerated static field setter
// Set static field: static public System.String MothershipId
void GlobalNamespace::MothershipClientContext::_set_MothershipId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientContext::_set_MothershipId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipClientContext", "MothershipId", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipAuthCallback
#include "GlobalNamespace/MothershipAuthCallback.hpp"
// Including type: MothershipClientApiClient
#include "GlobalNamespace/MothershipClientApiClient.hpp"
// Including type: MothershipResponse
#include "GlobalNamespace/MothershipResponse.hpp"
// Including type: MothershipError
#include "GlobalNamespace/MothershipError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MothershipAuthCallback.OnCompleteCallback
void GlobalNamespace::MothershipAuthCallback::OnCompleteCallback(::GlobalNamespace::MothershipResponse* response, bool wasSuccess, ::GlobalNamespace::MothershipError* error, ::System::IntPtr userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipAuthCallback::OnCompleteCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipRequestCompleteDelegateWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response, wasSuccess, error, userData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipAuthRefreshRequiredCallback
#include "GlobalNamespace/MothershipAuthRefreshRequiredCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> _authRefreshFunction
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MothershipAuthRefreshRequiredCallback::dyn__authRefreshFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipAuthRefreshRequiredCallback::dyn__authRefreshFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authRefreshFunction"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipAuthRefreshRequiredCallback.AuthRefreshRequired
void GlobalNamespace::MothershipAuthRefreshRequiredCallback::AuthRefreshRequired(::StringW arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipAuthRefreshRequiredCallback::AuthRefreshRequired");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AuthRefreshRequiredDelegateWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg0);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipClientApiUnity
#include "GlobalNamespace/MothershipClientApiUnity.hpp"
// Including type: MothershipClientApiClient
#include "GlobalNamespace/MothershipClientApiClient.hpp"
// Including type: MothershipHttpClientUnity
#include "GlobalNamespace/MothershipHttpClientUnity.hpp"
// Including type: LoginCompleteDelegateWrapper
#include "GlobalNamespace/LoginCompleteDelegateWrapper.hpp"
// Including type: MothershipSharedSettings
#include "GlobalNamespace/MothershipSharedSettings.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LoginResponse
#include "GlobalNamespace/LoginResponse.hpp"
// Including type: MothershipError
#include "GlobalNamespace/MothershipError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String MothershipBaseUrl
::StringW GlobalNamespace::MothershipClientApiUnity::_get_MothershipBaseUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_get_MothershipBaseUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MothershipClientApiUnity", "MothershipBaseUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.String MothershipBaseUrl
void GlobalNamespace::MothershipClientApiUnity::_set_MothershipBaseUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_set_MothershipBaseUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipClientApiUnity", "MothershipBaseUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.String TitleId
::StringW GlobalNamespace::MothershipClientApiUnity::_get_TitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_get_TitleId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MothershipClientApiUnity", "TitleId"));
}
// Autogenerated static field setter
// Set static field: static public System.String TitleId
void GlobalNamespace::MothershipClientApiUnity::_set_TitleId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_set_TitleId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipClientApiUnity", "TitleId", value));
}
// Autogenerated static field getter
// Get static field: static public System.String EnvironmentId
::StringW GlobalNamespace::MothershipClientApiUnity::_get_EnvironmentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_get_EnvironmentId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MothershipClientApiUnity", "EnvironmentId"));
}
// Autogenerated static field setter
// Set static field: static public System.String EnvironmentId
void GlobalNamespace::MothershipClientApiUnity::_set_EnvironmentId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_set_EnvironmentId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipClientApiUnity", "EnvironmentId", value));
}
// Autogenerated static field getter
// Get static field: static public System.String DeploymentId
::StringW GlobalNamespace::MothershipClientApiUnity::_get_DeploymentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_get_DeploymentId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MothershipClientApiUnity", "DeploymentId"));
}
// Autogenerated static field setter
// Set static field: static public System.String DeploymentId
void GlobalNamespace::MothershipClientApiUnity::_set_DeploymentId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_set_DeploymentId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipClientApiUnity", "DeploymentId", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipClientApiClient client
::GlobalNamespace::MothershipClientApiClient* GlobalNamespace::MothershipClientApiUnity::_get_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_get_client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipClientApiClient*>("", "MothershipClientApiUnity", "client"));
}
// Autogenerated static field setter
// Set static field: static private MothershipClientApiClient client
void GlobalNamespace::MothershipClientApiUnity::_set_client(::GlobalNamespace::MothershipClientApiClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_set_client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipClientApiUnity", "client", value));
}
// Autogenerated static field getter
// Get static field: static private MothershipHttpClientUnity http
::GlobalNamespace::MothershipHttpClientUnity* GlobalNamespace::MothershipClientApiUnity::_get_http() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_get_http");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipHttpClientUnity*>("", "MothershipClientApiUnity", "http"));
}
// Autogenerated static field setter
// Set static field: static private MothershipHttpClientUnity http
void GlobalNamespace::MothershipClientApiUnity::_set_http(::GlobalNamespace::MothershipHttpClientUnity* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_set_http");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipClientApiUnity", "http", value));
}
// Autogenerated static field getter
// Get static field: static private LoginCompleteDelegateWrapper auth
::GlobalNamespace::LoginCompleteDelegateWrapper* GlobalNamespace::MothershipClientApiUnity::_get_auth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_get_auth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LoginCompleteDelegateWrapper*>("", "MothershipClientApiUnity", "auth"));
}
// Autogenerated static field setter
// Set static field: static private LoginCompleteDelegateWrapper auth
void GlobalNamespace::MothershipClientApiUnity::_set_auth(::GlobalNamespace::LoginCompleteDelegateWrapper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_set_auth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipClientApiUnity", "auth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isEnabled
bool GlobalNamespace::MothershipClientApiUnity::_get_isEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_get_isEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MothershipClientApiUnity", "isEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isEnabled
void GlobalNamespace::MothershipClientApiUnity::_set_isEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::_set_isEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipClientApiUnity", "isEnabled", value));
}
// Autogenerated method: MothershipClientApiUnity.GetSharedSettingsObject
::GlobalNamespace::MothershipSharedSettings* GlobalNamespace::MothershipClientApiUnity::GetSharedSettingsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::GetSharedSettingsObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipClientApiUnity", "GetSharedSettingsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MothershipSharedSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipClientApiUnity..cctor
void GlobalNamespace::MothershipClientApiUnity::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipClientApiUnity", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipClientApiUnity.IsEnabled
bool GlobalNamespace::MothershipClientApiUnity::IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipClientApiUnity", "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipClientApiUnity.Tick
void GlobalNamespace::MothershipClientApiUnity::Tick(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipClientApiUnity", "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deltaTime);
}
// Autogenerated method: MothershipClientApiUnity.SetAuthRefreshedCallback
void GlobalNamespace::MothershipClientApiUnity::SetAuthRefreshedCallback(::System::Action_1<::StringW>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::SetAuthRefreshedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipClientApiUnity", "SetAuthRefreshedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: MothershipClientApiUnity.LoginWithInsecure1
bool GlobalNamespace::MothershipClientApiUnity::LoginWithInsecure1(::StringW Username, ::StringW AccountId, ::System::Action_1<::GlobalNamespace::LoginResponse*>* successAction, ::System::Action_1<::GlobalNamespace::MothershipError*>* errorAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::LoginWithInsecure1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipClientApiUnity", "LoginWithInsecure1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Username), ::il2cpp_utils::ExtractType(AccountId), ::il2cpp_utils::ExtractType(successAction), ::il2cpp_utils::ExtractType(errorAction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Username, AccountId, successAction, errorAction);
}
// Autogenerated method: MothershipClientApiUnity.LogInWithQuest
bool GlobalNamespace::MothershipClientApiUnity::LogInWithQuest(::StringW nonce, ::StringW oculusId, ::System::Action_1<::GlobalNamespace::LoginResponse*>* successAction, ::System::Action_1<::GlobalNamespace::MothershipError*>* errorAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipClientApiUnity::LogInWithQuest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipClientApiUnity", "LogInWithQuest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(oculusId), ::il2cpp_utils::ExtractType(successAction), ::il2cpp_utils::ExtractType(errorAction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nonce, oculusId, successAction, errorAction);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipHttpClientUnity
#include "GlobalNamespace/MothershipHttpClientUnity.hpp"
// Including type: MothershipClientApiClient
#include "GlobalNamespace/MothershipClientApiClient.hpp"
// Including type: MothershipHTTPResponse
#include "GlobalNamespace/MothershipHTTPResponse.hpp"
// Including type: MothershipHTTPRequest
#include "GlobalNamespace/MothershipHTTPRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MothershipClientApiClient client
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MothershipClientApiClient*& GlobalNamespace::MothershipHttpClientUnity::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpClientUnity::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MothershipClientApiClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipHttpClientUnity.<SendRequest>b__2_0
void GlobalNamespace::MothershipHttpClientUnity::$SendRequest$b__2_0(::GlobalNamespace::MothershipHTTPResponse* Response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpClientUnity::<SendRequest>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendRequest>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Response);
}
// Autogenerated method: MothershipHttpClientUnity.SendRequest
bool GlobalNamespace::MothershipHttpClientUnity::SendRequest(::GlobalNamespace::MothershipHTTPRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpClientUnity::SendRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipSendHTTPRequestDelegateWrapper*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, request);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipHttpRunner
#include "GlobalNamespace/MothershipHttpRunner.hpp"
// Including type: MothershipHttpRunner/<SendRequestInternal>d__6
#include "GlobalNamespace/MothershipHttpRunner_-SendRequestInternal-d__6.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: MothershipHTTPRequest
#include "GlobalNamespace/MothershipHTTPRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MothershipHTTPResponse
#include "GlobalNamespace/MothershipHTTPResponse.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private MothershipHttpRunner _instance
::GlobalNamespace::MothershipHttpRunner* GlobalNamespace::MothershipHttpRunner::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MothershipHttpRunner*>("", "MothershipHttpRunner", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private MothershipHttpRunner _instance
void GlobalNamespace::MothershipHttpRunner::_set__instance(::GlobalNamespace::MothershipHttpRunner* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MothershipHttpRunner", "_instance", value));
}
// Autogenerated method: MothershipHttpRunner.get_instance
::GlobalNamespace::MothershipHttpRunner* GlobalNamespace::MothershipHttpRunner::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipHttpRunner", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MothershipHttpRunner*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipHttpRunner.CreateInstance
void GlobalNamespace::MothershipHttpRunner::CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MothershipHttpRunner", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MothershipHttpRunner.Awake
void GlobalNamespace::MothershipHttpRunner::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHttpRunner*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHttpRunner.SendRequest
void GlobalNamespace::MothershipHttpRunner::SendRequest(::UnityEngine::Networking::UnityWebRequest* uwr, ::GlobalNamespace::MothershipHTTPRequest* request, ::System::Action_1<::GlobalNamespace::MothershipHTTPResponse*>* responseCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::SendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uwr), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(responseCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uwr, request, responseCallback);
}
// Autogenerated method: MothershipHttpRunner.SendRequestInternal
::System::Collections::IEnumerator* GlobalNamespace::MothershipHttpRunner::SendRequestInternal(::UnityEngine::Networking::UnityWebRequest* uwr, ::GlobalNamespace::MothershipHTTPRequest* request, ::System::Action_1<::GlobalNamespace::MothershipHTTPResponse*>* responseCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::SendRequestInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRequestInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uwr), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(responseCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, uwr, request, responseCallback);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MothershipHttpRunner/<SendRequestInternal>d__6
#include "GlobalNamespace/MothershipHttpRunner_-SendRequestInternal-d__6.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: MothershipHTTPRequest
#include "GlobalNamespace/MothershipHTTPRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MothershipHTTPResponse
#include "GlobalNamespace/MothershipHTTPResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Networking.UnityWebRequest uwr
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::dyn_uwr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::dyn_uwr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uwr"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MothershipHTTPRequest request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MothershipHTTPRequest*& GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MothershipHTTPRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<MothershipHTTPResponse> responseCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MothershipHTTPResponse*>*& GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::dyn_responseCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::dyn_responseCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "responseCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MothershipHTTPResponse*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MothershipHttpRunner/<SendRequestInternal>d__6.System.IDisposable.Dispose
void GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHttpRunner/<SendRequestInternal>d__6.MoveNext
bool GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHttpRunner/<SendRequestInternal>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHttpRunner/<SendRequestInternal>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MothershipHttpRunner/<SendRequestInternal>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MothershipHttpRunner::$SendRequestInternal$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MothershipSharedSettings
#include "GlobalNamespace/MothershipSharedSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String TitleId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MothershipSharedSettings::dyn_TitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSharedSettings::dyn_TitleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String EnvironmentId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MothershipSharedSettings::dyn_EnvironmentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSharedSettings::dyn_EnvironmentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnvironmentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DeploymentId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MothershipSharedSettings::dyn_DeploymentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSharedSettings::dyn_DeploymentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeploymentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String BaseUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MothershipSharedSettings::dyn_BaseUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSharedSettings::dyn_BaseUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ServerApiKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MothershipSharedSettings::dyn_ServerApiKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSharedSettings::dyn_ServerApiKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerApiKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Enabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MothershipSharedSettings::dyn_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MothershipSharedSettings::dyn_Enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MathGeoLib.Line3
#include "MathGeoLib/Line3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 Point1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& MathGeoLib::Line3::dyn_Point1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Line3::dyn_Point1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Point1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 Point2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& MathGeoLib::Line3::dyn_Point2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Line3::dyn_Point2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Point2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MathGeoLib.Line3..ctor
// ABORTED elsewhere.  MathGeoLib::Line3::Line3(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2)
// Autogenerated method: MathGeoLib.Line3.ToString
::StringW MathGeoLib::Line3::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Line3::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MathGeoLib.Matrix3X4
#include "MathGeoLib/Matrix3X4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M00
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M00");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M00"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M01
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M01() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M01");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M01"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M02
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M02() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M02");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M02"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M03
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M03() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M03");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M03"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M10
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M11
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M11"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M12
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M12"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M13
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M13"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M20
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M20"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M21
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M21"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M22
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M22"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single M23
[[deprecated("Use field access instead!")]] float& MathGeoLib::Matrix3X4::dyn_M23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::dyn_M23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "M23"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MathGeoLib.Matrix3X4..ctor
// ABORTED elsewhere.  MathGeoLib::Matrix3X4::Matrix3X4(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23)
// Autogenerated method: MathGeoLib.Matrix3X4.ToString
::StringW MathGeoLib::Matrix3X4::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Matrix3X4::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MathGeoLib.OrientedBoundingBox
#include "MathGeoLib/OrientedBoundingBox.hpp"
// Including type: MathGeoLib.OrientedBoundingBox/NativeMethods
#include "MathGeoLib/OrientedBoundingBox_NativeMethods.hpp"
// Including type: MathGeoLib.Line3
#include "MathGeoLib/Line3.hpp"
// Including type: MathGeoLib.Matrix3X4
#include "MathGeoLib/Matrix3X4.hpp"
// Including type: MathGeoLib.Plane
#include "MathGeoLib/Plane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& MathGeoLib::OrientedBoundingBox::dyn_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::dyn_Center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Extent
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& MathGeoLib::OrientedBoundingBox::dyn_Extent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::dyn_Extent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Extent"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Axis1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& MathGeoLib::OrientedBoundingBox::dyn_Axis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::dyn_Axis1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Axis1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Axis2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& MathGeoLib::OrientedBoundingBox::dyn_Axis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::dyn_Axis2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Axis2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Axis3
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& MathGeoLib::OrientedBoundingBox::dyn_Axis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::dyn_Axis3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Axis3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.get_NumEdges
int MathGeoLib::OrientedBoundingBox::get_NumEdges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::get_NumEdges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox", "get_NumEdges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.get_NumFaces
int MathGeoLib::OrientedBoundingBox::get_NumFaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::get_NumFaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox", "get_NumFaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.get_NumVertices
int MathGeoLib::OrientedBoundingBox::get_NumVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::get_NumVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox", "get_NumVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.OptimalEnclosing
::MathGeoLib::OrientedBoundingBox* MathGeoLib::OrientedBoundingBox::OptimalEnclosing(::ArrayW<::UnityEngine::Vector3> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::OptimalEnclosing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox", "OptimalEnclosing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  return ::il2cpp_utils::RunMethodRethrow<::MathGeoLib::OrientedBoundingBox*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.BruteEnclosing
::MathGeoLib::OrientedBoundingBox* MathGeoLib::OrientedBoundingBox::BruteEnclosing(::ArrayW<::UnityEngine::Vector3> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::BruteEnclosing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox", "BruteEnclosing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  return ::il2cpp_utils::RunMethodRethrow<::MathGeoLib::OrientedBoundingBox*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.Contains
bool MathGeoLib::OrientedBoundingBox::Contains(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.CornerPoint
::UnityEngine::Vector3 MathGeoLib::OrientedBoundingBox::CornerPoint(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::CornerPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CornerPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.Enclose
void MathGeoLib::OrientedBoundingBox::Enclose(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::Enclose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enclose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.FacePoint
::UnityEngine::Vector3 MathGeoLib::OrientedBoundingBox::FacePoint(int index, float u, float v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::FacePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FacePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index, u, v);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.PointInside
::UnityEngine::Vector3 MathGeoLib::OrientedBoundingBox::PointInside(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::PointInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.Scale
void MathGeoLib::OrientedBoundingBox::Scale(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 factor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(factor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, center, factor);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.Translate
void MathGeoLib::OrientedBoundingBox::Translate(::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.Distance
float MathGeoLib::OrientedBoundingBox::Distance(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::Distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, point);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.PointOnEdge
::UnityEngine::Vector3 MathGeoLib::OrientedBoundingBox::PointOnEdge(int index, float u) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::PointOnEdge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointOnEdge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(u)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index, u);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.Edge
::MathGeoLib::Line3 MathGeoLib::OrientedBoundingBox::Edge(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::Edge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Edge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::MathGeoLib::Line3, false>(this, ___internal__method, index);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.WorldToLocal
::MathGeoLib::Matrix3X4 MathGeoLib::OrientedBoundingBox::WorldToLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::WorldToLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MathGeoLib::Matrix3X4, false>(this, ___internal__method);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.LocalToWorld
::MathGeoLib::Matrix3X4 MathGeoLib::OrientedBoundingBox::LocalToWorld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::LocalToWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalToWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MathGeoLib::Matrix3X4, false>(this, ___internal__method);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.FacePlane
::MathGeoLib::Plane MathGeoLib::OrientedBoundingBox::FacePlane(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::FacePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FacePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::MathGeoLib::Plane, false>(this, ___internal__method, index);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox.ToString
::StringW MathGeoLib::OrientedBoundingBox::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MathGeoLib.OrientedBoundingBox/NativeMethods
#include "MathGeoLib/OrientedBoundingBox_NativeMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MathGeoLib.Line3
#include "MathGeoLib/Line3.hpp"
// Including type: MathGeoLib.Matrix3X4
#include "MathGeoLib/Matrix3X4.hpp"
// Including type: MathGeoLib.Plane
#include "MathGeoLib/Plane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String DllName
::StringW MathGeoLib::OrientedBoundingBox::NativeMethods::_get_DllName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::_get_DllName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("MathGeoLib", "OrientedBoundingBox/NativeMethods", "DllName"));
}
// Autogenerated static field setter
// Set static field: static private System.String DllName
void MathGeoLib::OrientedBoundingBox::NativeMethods::_set_DllName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::_set_DllName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MathGeoLib", "OrientedBoundingBox/NativeMethods", "DllName", value));
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_optimal_enclosing
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_optimal_enclosing(::ArrayW<::UnityEngine::Vector3> points, int numPoints, ByRef<::UnityEngine::Vector3> center, ByRef<::UnityEngine::Vector3> extent, ByRef<::ArrayW<::UnityEngine::Vector3>> axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_optimal_enclosing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_optimal_enclosing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(numPoints), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, numPoints, byref(center), byref(extent), byref(axis));
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_brute_enclosing
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_brute_enclosing(::ArrayW<::UnityEngine::Vector3> points, int numPoints, ByRef<::UnityEngine::Vector3> center, ByRef<::UnityEngine::Vector3> extent, ByRef<::ArrayW<::UnityEngine::Vector3>> axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_brute_enclosing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_brute_enclosing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(numPoints), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, numPoints, byref(center), byref(extent), byref(axis));
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_enclose
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_enclose(ByRef<::MathGeoLib::OrientedBoundingBox*> box, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_enclose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_enclose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), point);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_point_inside
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_point_inside(ByRef<::MathGeoLib::OrientedBoundingBox*> box, float x, float y, float z, ByRef<::UnityEngine::Vector3> point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_point_inside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_point_inside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), x, y, z, byref(point));
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_contains
bool MathGeoLib::OrientedBoundingBox::NativeMethods::obb_contains(ByRef<::MathGeoLib::OrientedBoundingBox*> box, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), point);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_corner_point
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_corner_point(ByRef<::MathGeoLib::OrientedBoundingBox*> box, int index, ByRef<::UnityEngine::Vector3> point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_corner_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_corner_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), index, byref(point));
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_face_point
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_face_point(ByRef<::MathGeoLib::OrientedBoundingBox*> box, int index, float u, float v, ByRef<::UnityEngine::Vector3> point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_face_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_face_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), index, u, v, byref(point));
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_num_faces
int MathGeoLib::OrientedBoundingBox::NativeMethods::obb_num_faces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_num_faces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_num_faces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_num_edges
int MathGeoLib::OrientedBoundingBox::NativeMethods::obb_num_edges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_num_edges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_num_edges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_num_vertices
int MathGeoLib::OrientedBoundingBox::NativeMethods::obb_num_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_num_vertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_num_vertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_scale
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_scale(ByRef<::MathGeoLib::OrientedBoundingBox*> box, ::UnityEngine::Vector3 center, ::UnityEngine::Vector3 factor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(factor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), center, factor);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_translate
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_translate(ByRef<::MathGeoLib::OrientedBoundingBox*> box, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), offset);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_distance
float MathGeoLib::OrientedBoundingBox::NativeMethods::obb_distance(ByRef<::MathGeoLib::OrientedBoundingBox*> box, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), point);
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_point_on_edge
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_point_on_edge(ByRef<::MathGeoLib::OrientedBoundingBox*> box, int index, float u, ByRef<::UnityEngine::Vector3> point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_point_on_edge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_point_on_edge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), index, u, byref(point));
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_edge
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_edge(ByRef<::MathGeoLib::OrientedBoundingBox*> box, int index, ByRef<::MathGeoLib::Line3> segment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_edge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_edge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::MathGeoLib::Line3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), index, byref(segment));
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_world_to_local
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_world_to_local(ByRef<::MathGeoLib::OrientedBoundingBox*> box, ByRef<::MathGeoLib::Matrix3X4> local) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_world_to_local");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_world_to_local", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractIndependentType<::MathGeoLib::Matrix3X4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), byref(local));
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_local_to_world
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_local_to_world(ByRef<::MathGeoLib::OrientedBoundingBox*> box, ByRef<::MathGeoLib::Matrix3X4> world) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_local_to_world");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_local_to_world", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractIndependentType<::MathGeoLib::Matrix3X4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), byref(world));
}
// Autogenerated method: MathGeoLib.OrientedBoundingBox/NativeMethods.obb_face_plane
void MathGeoLib::OrientedBoundingBox::NativeMethods::obb_face_plane(ByRef<::MathGeoLib::OrientedBoundingBox*> box, int index, ByRef<::MathGeoLib::Plane> plane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::OrientedBoundingBox::NativeMethods::obb_face_plane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MathGeoLib", "OrientedBoundingBox/NativeMethods", "obb_face_plane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::MathGeoLib::Plane&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(box), index, byref(plane));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MathGeoLib.Plane
#include "MathGeoLib/Plane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& MathGeoLib::Plane::dyn_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Plane::dyn_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single Distance
[[deprecated("Use field access instead!")]] float& MathGeoLib::Plane::dyn_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Plane::dyn_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MathGeoLib.Plane..ctor
// ABORTED elsewhere.  MathGeoLib::Plane::Plane(::UnityEngine::Vector3 normal, float distance)
// Autogenerated method: MathGeoLib.Plane.ToString
::StringW MathGeoLib::Plane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MathGeoLib::Plane::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: <>f__AnonymousType0
#include "GlobalNamespace/--f__AnonymousType0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: <>f__AnonymousType0.Equals
bool GlobalNamespace::$$f__AnonymousType0::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::$$f__AnonymousType0::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: <>f__AnonymousType0.GetHashCode
int GlobalNamespace::$$f__AnonymousType0::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::$$f__AnonymousType0::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: <>f__AnonymousType0.ToString
::StringW GlobalNamespace::$$f__AnonymousType0::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::$$f__AnonymousType0::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.NullableAttribute
#include "System/Runtime/CompilerServices/NullableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] NullableFlags
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Runtime::CompilerServices::NullableAttribute::dyn_NullableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::NullableAttribute::dyn_NullableFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NullableFlags"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ParentedObjectStressTestMain
#include "GlobalNamespace/ParentedObjectStressTestMain.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Object
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ParentedObjectStressTestMain::dyn_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParentedObjectStressTestMain::dyn_Object");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Object"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 NumObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ParentedObjectStressTestMain::dyn_NumObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParentedObjectStressTestMain::dyn_NumObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Spacing
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ParentedObjectStressTestMain::dyn_Spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParentedObjectStressTestMain::dyn_Spacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Spacing"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ParentedObjectStressTestMain.Start
void GlobalNamespace::ParentedObjectStressTestMain::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParentedObjectStressTestMain::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: JellyfishUFOCamera
#include "GlobalNamespace/JellyfishUFOCamera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform Target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::JellyfishUFOCamera::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JellyfishUFOCamera::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoingKit.Vector3Spring m_spring
[[deprecated("Use field access instead!")]] ::BoingKit::Vector3Spring& GlobalNamespace::JellyfishUFOCamera::dyn_m_spring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JellyfishUFOCamera::dyn_m_spring");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spring"))->offset;
  return *reinterpret_cast<::BoingKit::Vector3Spring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: JellyfishUFOCamera.Start
void GlobalNamespace::JellyfishUFOCamera::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JellyfishUFOCamera::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JellyfishUFOCamera.FixedUpdate
void GlobalNamespace::JellyfishUFOCamera::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JellyfishUFOCamera::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: LengthStiffnessComparison
#include "GlobalNamespace/LengthStiffnessComparison.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Run
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LengthStiffnessComparison::dyn_Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LengthStiffnessComparison::dyn_Run");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Run"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Tilt
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LengthStiffnessComparison::dyn_Tilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LengthStiffnessComparison::dyn_Tilt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tilt"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Period
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LengthStiffnessComparison::dyn_Period() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LengthStiffnessComparison::dyn_Period");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Period"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Rest
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LengthStiffnessComparison::dyn_Rest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LengthStiffnessComparison::dyn_Rest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rest"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform BonesA
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::LengthStiffnessComparison::dyn_BonesA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LengthStiffnessComparison::dyn_BonesA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BonesA"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform BonesB
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::LengthStiffnessComparison::dyn_BonesB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LengthStiffnessComparison::dyn_BonesB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BonesB"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_timer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LengthStiffnessComparison::dyn_m_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LengthStiffnessComparison::dyn_m_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LengthStiffnessComparison.Start
void GlobalNamespace::LengthStiffnessComparison::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LengthStiffnessComparison::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LengthStiffnessComparison.FixedUpdate
void GlobalNamespace::LengthStiffnessComparison::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LengthStiffnessComparison::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PoseStiffnessComparison
#include "GlobalNamespace/PoseStiffnessComparison.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Run
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PoseStiffnessComparison::dyn_Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::dyn_Run");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Run"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Tilt
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PoseStiffnessComparison::dyn_Tilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::dyn_Tilt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tilt"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Period
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PoseStiffnessComparison::dyn_Period() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::dyn_Period");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Period"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Rest
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PoseStiffnessComparison::dyn_Rest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::dyn_Rest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rest"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform BonesA
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PoseStiffnessComparison::dyn_BonesA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::dyn_BonesA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BonesA"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform BonesB
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PoseStiffnessComparison::dyn_BonesB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::dyn_BonesB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BonesB"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_yA
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PoseStiffnessComparison::dyn_m_yA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::dyn_m_yA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_yA"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_yB
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PoseStiffnessComparison::dyn_m_yB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::dyn_m_yB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_yB"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_timer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PoseStiffnessComparison::dyn_m_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::dyn_m_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoseStiffnessComparison.Start
void GlobalNamespace::PoseStiffnessComparison::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PoseStiffnessComparison.FixedUpdate
void GlobalNamespace::PoseStiffnessComparison::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseStiffnessComparison::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SquashAndStretchComparison
#include "GlobalNamespace/SquashAndStretchComparison.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Run
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SquashAndStretchComparison::dyn_Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SquashAndStretchComparison::dyn_Run");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Run"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Period
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SquashAndStretchComparison::dyn_Period() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SquashAndStretchComparison::dyn_Period");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Period"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Rest
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SquashAndStretchComparison::dyn_Rest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SquashAndStretchComparison::dyn_Rest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rest"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform BonesA
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SquashAndStretchComparison::dyn_BonesA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SquashAndStretchComparison::dyn_BonesA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BonesA"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform BonesB
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SquashAndStretchComparison::dyn_BonesB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SquashAndStretchComparison::dyn_BonesB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BonesB"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_timer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SquashAndStretchComparison::dyn_m_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SquashAndStretchComparison::dyn_m_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SquashAndStretchComparison.Start
void GlobalNamespace::SquashAndStretchComparison::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SquashAndStretchComparison::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SquashAndStretchComparison.FixedUpdate
void GlobalNamespace::SquashAndStretchComparison::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SquashAndStretchComparison::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ColliderSpinner
#include "GlobalNamespace/ColliderSpinner.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform Target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ColliderSpinner::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderSpinner::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_targetOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ColliderSpinner::dyn_m_targetOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderSpinner::dyn_m_targetOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoingKit.Vector3Spring m_spring
[[deprecated("Use field access instead!")]] ::BoingKit::Vector3Spring& GlobalNamespace::ColliderSpinner::dyn_m_spring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderSpinner::dyn_m_spring");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spring"))->offset;
  return *reinterpret_cast<::BoingKit::Vector3Spring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColliderSpinner.Start
void GlobalNamespace::ColliderSpinner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderSpinner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColliderSpinner.FixedUpdate
void GlobalNamespace::ColliderSpinner::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderSpinner::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UFOCamera
#include "GlobalNamespace/UFOCamera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform Target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::UFOCamera::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UFOCamera::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_targetOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::UFOCamera::dyn_m_targetOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UFOCamera::dyn_m_targetOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoingKit.Vector3Spring m_spring
[[deprecated("Use field access instead!")]] ::BoingKit::Vector3Spring& GlobalNamespace::UFOCamera::dyn_m_spring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UFOCamera::dyn_m_spring");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spring"))->offset;
  return *reinterpret_cast<::BoingKit::Vector3Spring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UFOCamera.Start
void GlobalNamespace::UFOCamera::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UFOCamera::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UFOCamera.FixedUpdate
void GlobalNamespace::UFOCamera::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UFOCamera::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UFOEffector
#include "GlobalNamespace/UFOEffector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::UFOEffector::dyn_m_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UFOEffector::dyn_m_radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_moveDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::UFOEffector::dyn_m_moveDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UFOEffector::dyn_m_moveDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_moveDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_rotateAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::UFOEffector::dyn_m_rotateAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UFOEffector::dyn_m_rotateAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rotateAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UFOEffector.Start
void GlobalNamespace::UFOEffector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UFOEffector::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UFOEffector.FixedUpdate
void GlobalNamespace::UFOEffector::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UFOEffector::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: CollectibleCoin
#include "GlobalNamespace/CollectibleCoin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single RespawnTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CollectibleCoin::dyn_RespawnTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollectibleCoin::dyn_RespawnTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RespawnTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_taken
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CollectibleCoin::dyn_m_taken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollectibleCoin::dyn_m_taken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_taken"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_respawnPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::CollectibleCoin::dyn_m_respawnPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollectibleCoin::dyn_m_respawnPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_respawnPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_respawnTimerStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CollectibleCoin::dyn_m_respawnTimerStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollectibleCoin::dyn_m_respawnTimerStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_respawnTimerStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CollectibleCoin.Update
void GlobalNamespace::CollectibleCoin::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CollectibleCoin::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlatformerCollectiblesMain
#include "GlobalNamespace/PlatformerCollectiblesMain.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Coin
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PlatformerCollectiblesMain::dyn_Coin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformerCollectiblesMain::dyn_Coin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Coin"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CoinGridCount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlatformerCollectiblesMain::dyn_CoinGridCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformerCollectiblesMain::dyn_CoinGridCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CoinGridCount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CoinGridSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlatformerCollectiblesMain::dyn_CoinGridSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformerCollectiblesMain::dyn_CoinGridSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CoinGridSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformerCollectiblesMain.Start
void GlobalNamespace::PlatformerCollectiblesMain::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformerCollectiblesMain::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ImplosionExplosionMain
#include "GlobalNamespace/ImplosionExplosionMain.hpp"
// Including type: BoingKit.BoingReactorField
#include "BoingKit/BoingReactorField.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 kNumInstancedBushesPerDrawCall
int GlobalNamespace::ImplosionExplosionMain::_get_kNumInstancedBushesPerDrawCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImplosionExplosionMain::_get_kNumInstancedBushesPerDrawCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ImplosionExplosionMain", "kNumInstancedBushesPerDrawCall"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 kNumInstancedBushesPerDrawCall
void GlobalNamespace::ImplosionExplosionMain::_set_kNumInstancedBushesPerDrawCall(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImplosionExplosionMain::_set_kNumInstancedBushesPerDrawCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ImplosionExplosionMain", "kNumInstancedBushesPerDrawCall", value));
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingReactorField ReactorField
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField*& GlobalNamespace::ImplosionExplosionMain::dyn_ReactorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImplosionExplosionMain::dyn_ReactorField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReactorField"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Diamond
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ImplosionExplosionMain::dyn_Diamond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImplosionExplosionMain::dyn_Diamond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Diamond"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumDiamonds
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ImplosionExplosionMain::dyn_NumDiamonds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImplosionExplosionMain::dyn_NumDiamonds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumDiamonds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4[][] m_aaInstancedDiamondMatrix
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::UnityEngine::Matrix4x4>>& GlobalNamespace::ImplosionExplosionMain::dyn_m_aaInstancedDiamondMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImplosionExplosionMain::dyn_m_aaInstancedDiamondMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aaInstancedDiamondMatrix"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::UnityEngine::Matrix4x4>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock m_diamondMaterialProps
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& GlobalNamespace::ImplosionExplosionMain::dyn_m_diamondMaterialProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImplosionExplosionMain::dyn_m_diamondMaterialProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_diamondMaterialProps"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ImplosionExplosionMain.Start
void GlobalNamespace::ImplosionExplosionMain::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImplosionExplosionMain::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ImplosionExplosionMain.Update
void GlobalNamespace::ImplosionExplosionMain::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImplosionExplosionMain::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ImplosionExplosionMain..cctor
void GlobalNamespace::ImplosionExplosionMain::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImplosionExplosionMain::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ImplosionExplosionMain", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OrbitCamera
#include "GlobalNamespace/OrbitCamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single kOrbitSpeed
float GlobalNamespace::OrbitCamera::_get_kOrbitSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OrbitCamera::_get_kOrbitSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OrbitCamera", "kOrbitSpeed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single kOrbitSpeed
void GlobalNamespace::OrbitCamera::_set_kOrbitSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OrbitCamera::_set_kOrbitSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OrbitCamera", "kOrbitSpeed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_phase
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OrbitCamera::dyn_m_phase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OrbitCamera::dyn_m_phase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_phase"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OrbitCamera.Start
void GlobalNamespace::OrbitCamera::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OrbitCamera::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OrbitCamera.Update
void GlobalNamespace::OrbitCamera::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OrbitCamera::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OrbitCamera..cctor
void GlobalNamespace::OrbitCamera::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OrbitCamera::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OrbitCamera", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ScaleSpring
#include "GlobalNamespace/ScaleSpring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single kInterval
float GlobalNamespace::ScaleSpring::_get_kInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::_get_kInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ScaleSpring", "kInterval"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single kInterval
void GlobalNamespace::ScaleSpring::_set_kInterval(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::_set_kInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScaleSpring", "kInterval", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single kSmallScale
float GlobalNamespace::ScaleSpring::_get_kSmallScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::_get_kSmallScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ScaleSpring", "kSmallScale"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single kSmallScale
void GlobalNamespace::ScaleSpring::_set_kSmallScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::_set_kSmallScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScaleSpring", "kSmallScale", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single kLargeScale
float GlobalNamespace::ScaleSpring::_get_kLargeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::_get_kLargeScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ScaleSpring", "kLargeScale"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single kLargeScale
void GlobalNamespace::ScaleSpring::_set_kLargeScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::_set_kLargeScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScaleSpring", "kLargeScale", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single kMoveDistance
float GlobalNamespace::ScaleSpring::_get_kMoveDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::_get_kMoveDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ScaleSpring", "kMoveDistance"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single kMoveDistance
void GlobalNamespace::ScaleSpring::_set_kMoveDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::_set_kMoveDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScaleSpring", "kMoveDistance", value));
}
// Autogenerated instance field getter
// Get instance field: private BoingKit.Vector3Spring m_spring
[[deprecated("Use field access instead!")]] ::BoingKit::Vector3Spring& GlobalNamespace::ScaleSpring::dyn_m_spring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::dyn_m_spring");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spring"))->offset;
  return *reinterpret_cast<::BoingKit::Vector3Spring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_targetScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ScaleSpring::dyn_m_targetScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::dyn_m_targetScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lastTickTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ScaleSpring::dyn_m_lastTickTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::dyn_m_lastTickTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastTickTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScaleSpring.Tick
void GlobalNamespace::ScaleSpring::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleSpring.Start
void GlobalNamespace::ScaleSpring::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleSpring.FixedUpdate
void GlobalNamespace::ScaleSpring::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleSpring..cctor
void GlobalNamespace::ScaleSpring::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScaleSpring::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScaleSpring", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: LiquidMain
#include "GlobalNamespace/LiquidMain.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: BoingKit.BoingReactorField
#include "BoingKit/BoingReactorField.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single kPlaneMeshCellSize
float GlobalNamespace::LiquidMain::_get_kPlaneMeshCellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_get_kPlaneMeshCellSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LiquidMain", "kPlaneMeshCellSize"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single kPlaneMeshCellSize
void GlobalNamespace::LiquidMain::_set_kPlaneMeshCellSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_set_kPlaneMeshCellSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiquidMain", "kPlaneMeshCellSize", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 kNumInstancedPlaneCellPerDrawCall
int GlobalNamespace::LiquidMain::_get_kNumInstancedPlaneCellPerDrawCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_get_kNumInstancedPlaneCellPerDrawCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LiquidMain", "kNumInstancedPlaneCellPerDrawCall"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 kNumInstancedPlaneCellPerDrawCall
void GlobalNamespace::LiquidMain::_set_kNumInstancedPlaneCellPerDrawCall(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_set_kNumInstancedPlaneCellPerDrawCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiquidMain", "kNumInstancedPlaneCellPerDrawCall", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 kNumMovingEffectors
int GlobalNamespace::LiquidMain::_get_kNumMovingEffectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_get_kNumMovingEffectors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LiquidMain", "kNumMovingEffectors"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 kNumMovingEffectors
void GlobalNamespace::LiquidMain::_set_kNumMovingEffectors(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_set_kNumMovingEffectors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiquidMain", "kNumMovingEffectors", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single kMovingEffectorPhaseSpeed
float GlobalNamespace::LiquidMain::_get_kMovingEffectorPhaseSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_get_kMovingEffectorPhaseSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LiquidMain", "kMovingEffectorPhaseSpeed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single kMovingEffectorPhaseSpeed
void GlobalNamespace::LiquidMain::_set_kMovingEffectorPhaseSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_set_kMovingEffectorPhaseSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiquidMain", "kMovingEffectorPhaseSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kNumPlaneCells
int GlobalNamespace::LiquidMain::_get_kNumPlaneCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_get_kNumPlaneCells");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LiquidMain", "kNumPlaneCells"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kNumPlaneCells
void GlobalNamespace::LiquidMain::_set_kNumPlaneCells(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_set_kNumPlaneCells");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiquidMain", "kNumPlaneCells", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 kPlaneMeshResolution
int GlobalNamespace::LiquidMain::_get_kPlaneMeshResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_get_kPlaneMeshResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LiquidMain", "kPlaneMeshResolution"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 kPlaneMeshResolution
void GlobalNamespace::LiquidMain::_set_kPlaneMeshResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::_set_kPlaneMeshResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiquidMain", "kPlaneMeshResolution", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material PlaneMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::LiquidMain::dyn_PlaneMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::dyn_PlaneMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlaneMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingReactorField ReactorField
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField*& GlobalNamespace::LiquidMain::dyn_ReactorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::dyn_ReactorField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReactorField"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Effector
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::LiquidMain::dyn_Effector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::dyn_Effector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Effector"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh m_planeMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::LiquidMain::dyn_m_planeMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::dyn_m_planeMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_planeMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4[][] m_aaInstancedPlaneCellMatrix
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::UnityEngine::Matrix4x4>>& GlobalNamespace::LiquidMain::dyn_m_aaInstancedPlaneCellMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::dyn_m_aaInstancedPlaneCellMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aaInstancedPlaneCellMatrix"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::UnityEngine::Matrix4x4>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] m_aMovingEffector
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::LiquidMain::dyn_m_aMovingEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::dyn_m_aMovingEffector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aMovingEffector"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_aMovingEffectorPhase
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::LiquidMain::dyn_m_aMovingEffectorPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::dyn_m_aMovingEffectorPhase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aMovingEffectorPhase"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiquidMain.ResetEffector
void GlobalNamespace::LiquidMain::ResetEffector(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::ResetEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: LiquidMain.Start
void GlobalNamespace::LiquidMain::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiquidMain.Update
void GlobalNamespace::LiquidMain::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiquidMain..cctor
void GlobalNamespace::LiquidMain::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiquidMain::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LiquidMain", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: CurveBall
#include "GlobalNamespace/CurveBall.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Interval
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CurveBall::dyn_Interval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CurveBall::dyn_Interval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_speedX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CurveBall::dyn_m_speedX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CurveBall::dyn_m_speedX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_speedX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_speedZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CurveBall::dyn_m_speedZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CurveBall::dyn_m_speedZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_speedZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_timer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CurveBall::dyn_m_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CurveBall::dyn_m_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CurveBall.Reset
void GlobalNamespace::CurveBall::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CurveBall::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CurveBall.Start
void GlobalNamespace::CurveBall::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CurveBall::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CurveBall.Update
void GlobalNamespace::CurveBall::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CurveBall::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BushFieldReactorFieldMain
#include "GlobalNamespace/BushFieldReactorFieldMain.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: BoingKit.BoingReactorField
#include "BoingKit/BoingReactorField.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BoingKit.BoingEffector
#include "BoingKit/BoingEffector.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 kNumInstancedBushesPerDrawCall
int GlobalNamespace::BushFieldReactorFieldMain::_get_kNumInstancedBushesPerDrawCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::_get_kNumInstancedBushesPerDrawCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BushFieldReactorFieldMain", "kNumInstancedBushesPerDrawCall"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 kNumInstancedBushesPerDrawCall
void GlobalNamespace::BushFieldReactorFieldMain::_set_kNumInstancedBushesPerDrawCall(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::_set_kNumInstancedBushesPerDrawCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BushFieldReactorFieldMain", "kNumInstancedBushesPerDrawCall", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Bush
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BushFieldReactorFieldMain::dyn_Bush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_Bush");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bush"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Blossom
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BushFieldReactorFieldMain::dyn_Blossom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_Blossom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Blossom"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Sphere
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BushFieldReactorFieldMain::dyn_Sphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_Sphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sphere"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingReactorField ReactorField
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField*& GlobalNamespace::BushFieldReactorFieldMain::dyn_ReactorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_ReactorField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReactorField"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumBushes
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BushFieldReactorFieldMain::dyn_NumBushes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_NumBushes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumBushes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 BushScaleRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::BushFieldReactorFieldMain::dyn_BushScaleRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_BushScaleRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BushScaleRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumBlossoms
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BushFieldReactorFieldMain::dyn_NumBlossoms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_NumBlossoms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumBlossoms"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 BlossomScaleRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::BushFieldReactorFieldMain::dyn_BlossomScaleRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_BlossomScaleRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlossomScaleRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 FieldBounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::BushFieldReactorFieldMain::dyn_FieldBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_FieldBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FieldBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumSpheresPerCircle
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BushFieldReactorFieldMain::dyn_NumSpheresPerCircle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_NumSpheresPerCircle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumSpheresPerCircle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumCircles
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BushFieldReactorFieldMain::dyn_NumCircles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_NumCircles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumCircles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BushFieldReactorFieldMain::dyn_MaxCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_MaxCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CircleSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BushFieldReactorFieldMain::dyn_CircleSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_CircleSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CircleSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BoingKit.BoingEffector> m_aSphere
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BoingKit::BoingEffector*>*& GlobalNamespace::BushFieldReactorFieldMain::dyn_m_aSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_m_aSphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aSphere"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BoingKit::BoingEffector*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_basePhase
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BushFieldReactorFieldMain::dyn_m_basePhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_m_basePhase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_basePhase"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4[][] m_aaInstancedBushMatrix
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::UnityEngine::Matrix4x4>>& GlobalNamespace::BushFieldReactorFieldMain::dyn_m_aaInstancedBushMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_m_aaInstancedBushMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aaInstancedBushMatrix"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::UnityEngine::Matrix4x4>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock m_bushMaterialProps
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& GlobalNamespace::BushFieldReactorFieldMain::dyn_m_bushMaterialProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::dyn_m_bushMaterialProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bushMaterialProps"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BushFieldReactorFieldMain.Start
void GlobalNamespace::BushFieldReactorFieldMain::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BushFieldReactorFieldMain.Update
void GlobalNamespace::BushFieldReactorFieldMain::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BushFieldReactorFieldMain..cctor
void GlobalNamespace::BushFieldReactorFieldMain::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorFieldMain::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BushFieldReactorFieldMain", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BushFieldReactorMain
#include "GlobalNamespace/BushFieldReactorMain.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Bush
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BushFieldReactorMain::dyn_Bush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_Bush");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bush"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Blossom
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BushFieldReactorMain::dyn_Blossom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_Blossom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Blossom"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Sphere
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BushFieldReactorMain::dyn_Sphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_Sphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sphere"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumBushes
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BushFieldReactorMain::dyn_NumBushes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_NumBushes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumBushes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 BushScaleRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::BushFieldReactorMain::dyn_BushScaleRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_BushScaleRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BushScaleRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumBlossoms
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BushFieldReactorMain::dyn_NumBlossoms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_NumBlossoms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumBlossoms"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 BlossomScaleRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::BushFieldReactorMain::dyn_BlossomScaleRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_BlossomScaleRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlossomScaleRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 FieldBounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::BushFieldReactorMain::dyn_FieldBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_FieldBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FieldBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumSpheresPerCircle
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BushFieldReactorMain::dyn_NumSpheresPerCircle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_NumSpheresPerCircle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumSpheresPerCircle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumCircles
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BushFieldReactorMain::dyn_NumCircles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_NumCircles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumCircles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BushFieldReactorMain::dyn_MaxCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_MaxCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CircleSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BushFieldReactorMain::dyn_CircleSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_CircleSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CircleSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> m_aSphere
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BushFieldReactorMain::dyn_m_aSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_m_aSphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aSphere"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_basePhase
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BushFieldReactorMain::dyn_m_basePhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::dyn_m_basePhase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_basePhase"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BushFieldReactorMain.Start
void GlobalNamespace::BushFieldReactorMain::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BushFieldReactorMain.Update
void GlobalNamespace::BushFieldReactorMain::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BushFieldReactorMain::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MousePositionDrag
#include "GlobalNamespace/MousePositionDrag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_currFrameHasFocus
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MousePositionDrag::dyn_m_currFrameHasFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MousePositionDrag::dyn_m_currFrameHasFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currFrameHasFocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_prevFrameHasFocus
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MousePositionDrag::dyn_m_prevFrameHasFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MousePositionDrag::dyn_m_prevFrameHasFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevFrameHasFocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_prevMousePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MousePositionDrag::dyn_m_prevMousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MousePositionDrag::dyn_m_prevMousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevMousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MousePositionDrag.Start
void GlobalNamespace::MousePositionDrag::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MousePositionDrag::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MousePositionDrag.Update
void GlobalNamespace::MousePositionDrag::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MousePositionDrag::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MouseRotationDrag
#include "GlobalNamespace/MouseRotationDrag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_currFrameHasFocus
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MouseRotationDrag::dyn_m_currFrameHasFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseRotationDrag::dyn_m_currFrameHasFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currFrameHasFocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_prevFrameHasFocus
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MouseRotationDrag::dyn_m_prevFrameHasFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseRotationDrag::dyn_m_prevFrameHasFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevFrameHasFocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_prevMousePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MouseRotationDrag::dyn_m_prevMousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseRotationDrag::dyn_m_prevMousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevMousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_euler
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MouseRotationDrag::dyn_m_euler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseRotationDrag::dyn_m_euler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_euler"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MouseRotationDrag.Start
void GlobalNamespace::MouseRotationDrag::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseRotationDrag::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseRotationDrag.Update
void GlobalNamespace::MouseRotationDrag::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseRotationDrag::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oscillator
#include "GlobalNamespace/Oscillator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oscillator/WaveTypeEnum WaveType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Oscillator::WaveTypeEnum& GlobalNamespace::Oscillator::dyn_WaveType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::dyn_WaveType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WaveType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Oscillator::WaveTypeEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_initCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Oscillator::dyn_m_initCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::dyn_m_initCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_initCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseCenter
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Oscillator::dyn_UseCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::dyn_UseCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseCenter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Oscillator::dyn_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::dyn_Center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Radius
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Oscillator::dyn_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::dyn_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Radius"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Frequency
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Oscillator::dyn_Frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::dyn_Frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Frequency"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Phase
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Oscillator::dyn_Phase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::dyn_Phase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Phase"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oscillator.Init
void GlobalNamespace::Oscillator::Init(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 radius, ::UnityEngine::Vector3 frequency, ::UnityEngine::Vector3 startPhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(startPhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, center, radius, frequency, startPhase);
}
// Autogenerated method: Oscillator.SampleWave
float GlobalNamespace::Oscillator::SampleWave(float phase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::SampleWave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleWave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(phase)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, phase);
}
// Autogenerated method: Oscillator.OnEnable
void GlobalNamespace::Oscillator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oscillator.Update
void GlobalNamespace::Oscillator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oscillator/WaveTypeEnum
#include "GlobalNamespace/Oscillator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oscillator/WaveTypeEnum Sine
::GlobalNamespace::Oscillator::WaveTypeEnum GlobalNamespace::Oscillator::WaveTypeEnum::_get_Sine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::WaveTypeEnum::_get_Sine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Oscillator::WaveTypeEnum>("", "Oscillator/WaveTypeEnum", "Sine"));
}
// Autogenerated static field setter
// Set static field: static public Oscillator/WaveTypeEnum Sine
void GlobalNamespace::Oscillator::WaveTypeEnum::_set_Sine(::GlobalNamespace::Oscillator::WaveTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::WaveTypeEnum::_set_Sine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Oscillator/WaveTypeEnum", "Sine", value));
}
// Autogenerated static field getter
// Get static field: static public Oscillator/WaveTypeEnum Square
::GlobalNamespace::Oscillator::WaveTypeEnum GlobalNamespace::Oscillator::WaveTypeEnum::_get_Square() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::WaveTypeEnum::_get_Square");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Oscillator::WaveTypeEnum>("", "Oscillator/WaveTypeEnum", "Square"));
}
// Autogenerated static field setter
// Set static field: static public Oscillator/WaveTypeEnum Square
void GlobalNamespace::Oscillator::WaveTypeEnum::_set_Square(::GlobalNamespace::Oscillator::WaveTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::WaveTypeEnum::_set_Square");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Oscillator/WaveTypeEnum", "Square", value));
}
// Autogenerated static field getter
// Get static field: static public Oscillator/WaveTypeEnum Triangle
::GlobalNamespace::Oscillator::WaveTypeEnum GlobalNamespace::Oscillator::WaveTypeEnum::_get_Triangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::WaveTypeEnum::_get_Triangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Oscillator::WaveTypeEnum>("", "Oscillator/WaveTypeEnum", "Triangle"));
}
// Autogenerated static field setter
// Set static field: static public Oscillator/WaveTypeEnum Triangle
void GlobalNamespace::Oscillator::WaveTypeEnum::_set_Triangle(::GlobalNamespace::Oscillator::WaveTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::WaveTypeEnum::_set_Triangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Oscillator/WaveTypeEnum", "Triangle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Oscillator::WaveTypeEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Oscillator::WaveTypeEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RotationStepper
#include "GlobalNamespace/RotationStepper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RotationStepper/ModeEnum Mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RotationStepper::ModeEnum& GlobalNamespace::RotationStepper::dyn_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::dyn_Mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RotationStepper::ModeEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Angle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RotationStepper::dyn_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::dyn_Angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Frequency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RotationStepper::dyn_Frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::dyn_Frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_phase
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RotationStepper::dyn_m_phase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::dyn_m_phase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_phase"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RotationStepper.OnEnable
void GlobalNamespace::RotationStepper::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RotationStepper.Update
void GlobalNamespace::RotationStepper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RotationStepper/ModeEnum
#include "GlobalNamespace/RotationStepper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RotationStepper/ModeEnum Fixed
::GlobalNamespace::RotationStepper::ModeEnum GlobalNamespace::RotationStepper::ModeEnum::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::ModeEnum::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RotationStepper::ModeEnum>("", "RotationStepper/ModeEnum", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public RotationStepper/ModeEnum Fixed
void GlobalNamespace::RotationStepper::ModeEnum::_set_Fixed(::GlobalNamespace::RotationStepper::ModeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::ModeEnum::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RotationStepper/ModeEnum", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public RotationStepper/ModeEnum Random
::GlobalNamespace::RotationStepper::ModeEnum GlobalNamespace::RotationStepper::ModeEnum::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::ModeEnum::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RotationStepper::ModeEnum>("", "RotationStepper/ModeEnum", "Random"));
}
// Autogenerated static field setter
// Set static field: static public RotationStepper/ModeEnum Random
void GlobalNamespace::RotationStepper::ModeEnum::_set_Random(::GlobalNamespace::RotationStepper::ModeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::ModeEnum::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RotationStepper/ModeEnum", "Random", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RotationStepper::ModeEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotationStepper::ModeEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Spinner
#include "GlobalNamespace/Spinner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Spinner::dyn_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spinner::dyn_Speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_angle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Spinner::dyn_m_angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spinner::dyn_m_angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Spinner.OnEnable
void GlobalNamespace::Spinner::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spinner::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Spinner.Update
void GlobalNamespace::Spinner::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spinner::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: WASD
#include "GlobalNamespace/WASD.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WASD::dyn_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WASD::dyn_Speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Omega
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WASD::dyn_Omega() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WASD::dyn_Omega");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Omega"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::WASD::dyn_m_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WASD::dyn_m_velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WASD.get_Velocity
::UnityEngine::Vector3 GlobalNamespace::WASD::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WASD::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: WASD.Update
void GlobalNamespace::WASD::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WASD::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ColliderEnabledManager
#include "GlobalNamespace/ColliderEnabledManager.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: GorillaSurfaceOverride
#include "GlobalNamespace/GorillaSurfaceOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ColliderEnabledManager instance
::GlobalNamespace::ColliderEnabledManager* GlobalNamespace::ColliderEnabledManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ColliderEnabledManager*>("", "ColliderEnabledManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public ColliderEnabledManager instance
void GlobalNamespace::ColliderEnabledManager::_set_instance(::GlobalNamespace::ColliderEnabledManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ColliderEnabledManager", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider[] floorCollider
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::ColliderEnabledManager::dyn_floorCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::dyn_floorCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floorCollider"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean floorEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ColliderEnabledManager::dyn_floorEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::dyn_floorEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floorEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wasFloorEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ColliderEnabledManager::dyn_wasFloorEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::dyn_wasFloorEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasFloorEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean floorCollidersEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ColliderEnabledManager::dyn_floorCollidersEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::dyn_floorCollidersEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floorCollidersEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 wallsBeforeMaterial
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ColliderEnabledManager::dyn_wallsBeforeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::dyn_wallsBeforeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallsBeforeMaterial"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 wallsAfterMaterial
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ColliderEnabledManager::dyn_wallsAfterMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::dyn_wallsAfterMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallsAfterMaterial"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaSurfaceOverride[] walls
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaSurfaceOverride*>& GlobalNamespace::ColliderEnabledManager::dyn_walls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::dyn_walls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "walls"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaSurfaceOverride*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeDisabled
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ColliderEnabledManager::dyn_timeDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::dyn_timeDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeDisabled"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single disableLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ColliderEnabledManager::dyn_disableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::dyn_disableLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColliderEnabledManager.Start
void GlobalNamespace::ColliderEnabledManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColliderEnabledManager.OnDestroy
void GlobalNamespace::ColliderEnabledManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColliderEnabledManager.DisableFloorForFrame
void GlobalNamespace::ColliderEnabledManager::DisableFloorForFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::DisableFloorForFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableFloorForFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColliderEnabledManager.LateUpdate
void GlobalNamespace::ColliderEnabledManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColliderEnabledManager.DisableFloor
void GlobalNamespace::ColliderEnabledManager::DisableFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderEnabledManager::DisableFloor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableFloor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ColliderOffsetOverride
#include "GlobalNamespace/ColliderOffsetOverride.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Collider> colliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GlobalNamespace::ColliderOffsetOverride::dyn_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderOffsetOverride::dyn_colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoSearch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ColliderOffsetOverride::dyn_autoSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderOffsetOverride::dyn_autoSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoSearch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single targetScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ColliderOffsetOverride::dyn_targetScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderOffsetOverride::dyn_targetScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColliderOffsetOverride.Awake
void GlobalNamespace::ColliderOffsetOverride::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderOffsetOverride::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColliderOffsetOverride.FindColliders
void GlobalNamespace::ColliderOffsetOverride::FindColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderOffsetOverride::FindColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColliderOffsetOverride.FindCollidersRecursively
void GlobalNamespace::ColliderOffsetOverride::FindCollidersRecursively() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderOffsetOverride::FindCollidersRecursively");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCollidersRecursively", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColliderOffsetOverride.AutoDisabled
void GlobalNamespace::ColliderOffsetOverride::AutoDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderOffsetOverride::AutoDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColliderOffsetOverride.AutoEnabled
void GlobalNamespace::ColliderOffsetOverride::AutoEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColliderOffsetOverride::AutoEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: CosmeticPlaySoundOnColision
#include "GlobalNamespace/CosmeticPlaySoundOnColision.hpp"
// Including type: CosmeticPlaySoundOnColision/<waitForStopPlayback>d__17
#include "GlobalNamespace/CosmeticPlaySoundOnColision_-waitForStopPlayback-d__17.hpp"
// Including type: SoundIdRemapping
#include "GlobalNamespace/SoundIdRemapping.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: TransferrableObject
#include "GlobalNamespace/TransferrableObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 defaultSound
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_defaultSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_defaultSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultSound"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SoundIdRemapping[] soundIdRemappings
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SoundIdRemapping*>& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_soundIdRemappings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_soundIdRemappings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundIdRemappings"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SoundIdRemapping*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent OnStartPlayback
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_OnStartPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_OnStartPlayback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStartPlayback"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent OnStopPlayback
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_OnStopPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_OnStopPlayback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStopPlayback"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single minSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_minSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_minSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TransferrableObject transferrableObject
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TransferrableObject*& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_transferrableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_transferrableObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transferrableObject"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TransferrableObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> soundLookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_soundLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_soundLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine crWaitForStopPlayback
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_crWaitForStopPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_crWaitForStopPlayback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crWaitForStopPlayback"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 previousFramePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_previousFramePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_previousFramePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousFramePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean invokeEventsOnAllClients
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_invokeEventsOnAllClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_invokeEventsOnAllClients");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invokeEventsOnAllClients"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean invokeEventOnOverideSound
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_invokeEventOnOverideSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_invokeEventOnOverideSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invokeEventOnOverideSound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean invokeEventOnDefaultSound
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticPlaySoundOnColision::dyn_invokeEventOnDefaultSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::dyn_invokeEventOnDefaultSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invokeEventOnDefaultSound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CosmeticPlaySoundOnColision.Awake
void GlobalNamespace::CosmeticPlaySoundOnColision::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CosmeticPlaySoundOnColision.OnTriggerEnter
void GlobalNamespace::CosmeticPlaySoundOnColision::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: CosmeticPlaySoundOnColision.playSound
void GlobalNamespace::CosmeticPlaySoundOnColision::playSound(int soundIndex, bool invokeEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::playSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "playSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(invokeEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundIndex, invokeEvent);
}
// Autogenerated method: CosmeticPlaySoundOnColision.waitForStopPlayback
::System::Collections::IEnumerator* GlobalNamespace::CosmeticPlaySoundOnColision::waitForStopPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::waitForStopPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "waitForStopPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: CosmeticPlaySoundOnColision.FixedUpdate
void GlobalNamespace::CosmeticPlaySoundOnColision::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CosmeticPlaySoundOnColision/<waitForStopPlayback>d__17
#include "GlobalNamespace/CosmeticPlaySoundOnColision_-waitForStopPlayback-d__17.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CosmeticPlaySoundOnColision <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CosmeticPlaySoundOnColision*& GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CosmeticPlaySoundOnColision**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CosmeticPlaySoundOnColision/<waitForStopPlayback>d__17.System.IDisposable.Dispose
void GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CosmeticPlaySoundOnColision/<waitForStopPlayback>d__17.MoveNext
bool GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CosmeticPlaySoundOnColision/<waitForStopPlayback>d__17.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CosmeticPlaySoundOnColision/<waitForStopPlayback>d__17.System.Collections.IEnumerator.Reset
void GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CosmeticPlaySoundOnColision/<waitForStopPlayback>d__17.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CosmeticPlaySoundOnColision::$waitForStopPlayback$d__17*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SoundIdRemapping
#include "GlobalNamespace/SoundIdRemapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 soundIn
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SoundIdRemapping::dyn_soundIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundIdRemapping::dyn_soundIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundIn"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 soundOut
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SoundIdRemapping::dyn_soundOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundIdRemapping::dyn_soundOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundOut"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SoundIdRemapping.get_SoundIn
int GlobalNamespace::SoundIdRemapping::get_SoundIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundIdRemapping::get_SoundIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SoundIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SoundIdRemapping.get_SoundOut
int GlobalNamespace::SoundIdRemapping::get_SoundOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundIdRemapping::get_SoundOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SoundOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugExtension
#include "GlobalNamespace/DebugExtension.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugExtension.DebugPoint
void GlobalNamespace::DebugExtension::DebugPoint(::UnityEngine::Vector3 position, ::UnityEngine::Color color, float scale, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, color, scale, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugPoint
void GlobalNamespace::DebugExtension::DebugPoint(::UnityEngine::Vector3 position, float scale, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, scale, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugBounds
void GlobalNamespace::DebugExtension::DebugBounds(::UnityEngine::Bounds bounds, ::UnityEngine::Color color, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bounds, color, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugBounds
void GlobalNamespace::DebugExtension::DebugBounds(::UnityEngine::Bounds bounds, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bounds, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugLocalCube
void GlobalNamespace::DebugExtension::DebugLocalCube(::UnityEngine::Transform* transform, ::UnityEngine::Vector3 size, ::UnityEngine::Color color, ::UnityEngine::Vector3 center, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugLocalCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugLocalCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, size, color, center, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugLocalCube
void GlobalNamespace::DebugExtension::DebugLocalCube(::UnityEngine::Transform* transform, ::UnityEngine::Vector3 size, ::UnityEngine::Vector3 center, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugLocalCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugLocalCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, size, center, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugLocalCube
void GlobalNamespace::DebugExtension::DebugLocalCube(::UnityEngine::Matrix4x4 space, ::UnityEngine::Vector3 size, ::UnityEngine::Color color, ::UnityEngine::Vector3 center, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugLocalCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugLocalCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, size, color, center, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugLocalCube
void GlobalNamespace::DebugExtension::DebugLocalCube(::UnityEngine::Matrix4x4 space, ::UnityEngine::Vector3 size, ::UnityEngine::Vector3 center, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugLocalCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugLocalCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, size, center, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCircle
void GlobalNamespace::DebugExtension::DebugCircle(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 up, ::UnityEngine::Color color, float radius, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(up), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, up, color, radius, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCircle
void GlobalNamespace::DebugExtension::DebugCircle(::UnityEngine::Vector3 position, ::UnityEngine::Color color, float radius, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, color, radius, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCircle
void GlobalNamespace::DebugExtension::DebugCircle(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 up, float radius, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(up), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, up, radius, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCircle
void GlobalNamespace::DebugExtension::DebugCircle(::UnityEngine::Vector3 position, float radius, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugWireSphere
void GlobalNamespace::DebugExtension::DebugWireSphere(::UnityEngine::Vector3 position, ::UnityEngine::Color color, float radius, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugWireSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugWireSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, color, radius, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugWireSphere
void GlobalNamespace::DebugExtension::DebugWireSphere(::UnityEngine::Vector3 position, float radius, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugWireSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugWireSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCylinder
void GlobalNamespace::DebugExtension::DebugCylinder(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Color color, float radius, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, color, radius, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCylinder
void GlobalNamespace::DebugExtension::DebugCylinder(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, radius, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCone
void GlobalNamespace::DebugExtension::DebugCone(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, ::UnityEngine::Color color, float angle, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, direction, color, angle, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCone
void GlobalNamespace::DebugExtension::DebugCone(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, float angle, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, direction, angle, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCone
void GlobalNamespace::DebugExtension::DebugCone(::UnityEngine::Vector3 position, ::UnityEngine::Color color, float angle, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, color, angle, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCone
void GlobalNamespace::DebugExtension::DebugCone(::UnityEngine::Vector3 position, float angle, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, angle, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugArrow
void GlobalNamespace::DebugExtension::DebugArrow(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, ::UnityEngine::Color color, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugArrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugArrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, direction, color, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugArrow
void GlobalNamespace::DebugExtension::DebugArrow(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugArrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugArrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, direction, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCapsule
void GlobalNamespace::DebugExtension::DebugCapsule(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Color color, float radius, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, color, radius, duration, depthTest);
}
// Autogenerated method: DebugExtension.DebugCapsule
void GlobalNamespace::DebugExtension::DebugCapsule(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DebugCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DebugCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, radius, duration, depthTest);
}
// Autogenerated method: DebugExtension.DrawPoint
void GlobalNamespace::DebugExtension::DrawPoint(::UnityEngine::Vector3 position, ::UnityEngine::Color color, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, color, scale);
}
// Autogenerated method: DebugExtension.DrawPoint
void GlobalNamespace::DebugExtension::DrawPoint(::UnityEngine::Vector3 position, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, scale);
}
// Autogenerated method: DebugExtension.DrawBounds
void GlobalNamespace::DebugExtension::DrawBounds(::UnityEngine::Bounds bounds, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bounds, color);
}
// Autogenerated method: DebugExtension.DrawBounds
void GlobalNamespace::DebugExtension::DrawBounds(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bounds);
}
// Autogenerated method: DebugExtension.DrawLocalCube
void GlobalNamespace::DebugExtension::DrawLocalCube(::UnityEngine::Transform* transform, ::UnityEngine::Vector3 size, ::UnityEngine::Color color, ::UnityEngine::Vector3 center) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawLocalCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawLocalCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(center)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, size, color, center);
}
// Autogenerated method: DebugExtension.DrawLocalCube
void GlobalNamespace::DebugExtension::DrawLocalCube(::UnityEngine::Transform* transform, ::UnityEngine::Vector3 size, ::UnityEngine::Vector3 center) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawLocalCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawLocalCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(center)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, size, center);
}
// Autogenerated method: DebugExtension.DrawLocalCube
void GlobalNamespace::DebugExtension::DrawLocalCube(::UnityEngine::Matrix4x4 space, ::UnityEngine::Vector3 size, ::UnityEngine::Color color, ::UnityEngine::Vector3 center) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawLocalCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawLocalCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(center)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, size, color, center);
}
// Autogenerated method: DebugExtension.DrawLocalCube
void GlobalNamespace::DebugExtension::DrawLocalCube(::UnityEngine::Matrix4x4 space, ::UnityEngine::Vector3 size, ::UnityEngine::Vector3 center) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawLocalCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawLocalCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(center)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, size, center);
}
// Autogenerated method: DebugExtension.DrawCircle
void GlobalNamespace::DebugExtension::DrawCircle(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 up, ::UnityEngine::Color color, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(up), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, up, color, radius);
}
// Autogenerated method: DebugExtension.DrawCircle
void GlobalNamespace::DebugExtension::DrawCircle(::UnityEngine::Vector3 position, ::UnityEngine::Color color, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, color, radius);
}
// Autogenerated method: DebugExtension.DrawCircle
void GlobalNamespace::DebugExtension::DrawCircle(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 up, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(up), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, up, radius);
}
// Autogenerated method: DebugExtension.DrawCircle
void GlobalNamespace::DebugExtension::DrawCircle(::UnityEngine::Vector3 position, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius);
}
// Autogenerated method: DebugExtension.DrawCylinder
void GlobalNamespace::DebugExtension::DrawCylinder(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Color color, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, color, radius);
}
// Autogenerated method: DebugExtension.DrawCylinder
void GlobalNamespace::DebugExtension::DrawCylinder(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, radius);
}
// Autogenerated method: DebugExtension.DrawCone
void GlobalNamespace::DebugExtension::DrawCone(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, ::UnityEngine::Color color, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, direction, color, angle);
}
// Autogenerated method: DebugExtension.DrawCone
void GlobalNamespace::DebugExtension::DrawCone(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, direction, angle);
}
// Autogenerated method: DebugExtension.DrawCone
void GlobalNamespace::DebugExtension::DrawCone(::UnityEngine::Vector3 position, ::UnityEngine::Color color, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, color, angle);
}
// Autogenerated method: DebugExtension.DrawCone
void GlobalNamespace::DebugExtension::DrawCone(::UnityEngine::Vector3 position, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, angle);
}
// Autogenerated method: DebugExtension.DrawArrow
void GlobalNamespace::DebugExtension::DrawArrow(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawArrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawArrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, direction, color);
}
// Autogenerated method: DebugExtension.DrawArrow
void GlobalNamespace::DebugExtension::DrawArrow(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawArrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawArrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, direction);
}
// Autogenerated method: DebugExtension.DrawCapsule
void GlobalNamespace::DebugExtension::DrawCapsule(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Color color, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, color, radius);
}
// Autogenerated method: DebugExtension.DrawCapsule
void GlobalNamespace::DebugExtension::DrawCapsule(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::DrawCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "DrawCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, radius);
}
// Autogenerated method: DebugExtension.MethodsOfObject
::StringW GlobalNamespace::DebugExtension::MethodsOfObject(::Il2CppObject* obj, bool includeInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::MethodsOfObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "MethodsOfObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(includeInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, includeInfo);
}
// Autogenerated method: DebugExtension.MethodsOfType
::StringW GlobalNamespace::DebugExtension::MethodsOfType(::System::Type* type, bool includeInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugExtension::MethodsOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugExtension", "MethodsOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(includeInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, includeInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Example
#include "GlobalNamespace/Example.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugPoint
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Example::dyn_debugPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPoint"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 debugPoint_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Example::dyn_debugPoint_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugPoint_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPoint_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugPoint_Scale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Example::dyn_debugPoint_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugPoint_Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPoint_Scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color debugPoint_Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Example::dyn_debugPoint_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugPoint_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPoint_Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugBounds
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Example::dyn_debugBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugBounds"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 debugBounds_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Example::dyn_debugBounds_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugBounds_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugBounds_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 debugBounds_Size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Example::dyn_debugBounds_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugBounds_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugBounds_Size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color debugBounds_Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Example::dyn_debugBounds_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugBounds_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugBounds_Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugCircle
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Example::dyn_debugCircle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCircle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCircle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 debugCircle_Up
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Example::dyn_debugCircle_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCircle_Up");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCircle_Up"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugCircle_Radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Example::dyn_debugCircle_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCircle_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCircle_Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color debugCircle_Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Example::dyn_debugCircle_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCircle_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCircle_Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugWireSphere
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Example::dyn_debugWireSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugWireSphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugWireSphere"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugWireSphere_Radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Example::dyn_debugWireSphere_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugWireSphere_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugWireSphere_Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color debugWireSphere_Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Example::dyn_debugWireSphere_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugWireSphere_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugWireSphere_Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugCylinder
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Example::dyn_debugCylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCylinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCylinder"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 debugCylinder_End
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Example::dyn_debugCylinder_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCylinder_End");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCylinder_End"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugCylinder_Radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Example::dyn_debugCylinder_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCylinder_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCylinder_Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color debugCylinder_Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Example::dyn_debugCylinder_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCylinder_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCylinder_Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugCone
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Example::dyn_debugCone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 debugCone_Direction
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Example::dyn_debugCone_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCone_Direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCone_Direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugCone_Angle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Example::dyn_debugCone_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCone_Angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCone_Angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color debugCone_Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Example::dyn_debugCone_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCone_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCone_Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugArrow
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Example::dyn_debugArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugArrow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugArrow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 debugArrow_Direction
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Example::dyn_debugArrow_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugArrow_Direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugArrow_Direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color debugArrow_Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Example::dyn_debugArrow_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugArrow_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugArrow_Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugCapsule
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Example::dyn_debugCapsule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCapsule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCapsule"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 debugCapsule_End
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Example::dyn_debugCapsule_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCapsule_End");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCapsule_End"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugCapsule_Radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Example::dyn_debugCapsule_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCapsule_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCapsule_Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color debugCapsule_Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Example::dyn_debugCapsule_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::dyn_debugCapsule_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugCapsule_Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Example.OnDrawGizmos
void GlobalNamespace::Example::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Example.Update
void GlobalNamespace::Example::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Example::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BarrelCannon
#include "GlobalNamespace/BarrelCannon.hpp"
// Including type: BarrelCannon/BarrelCannonState
#include "GlobalNamespace/BarrelCannon_BarrelCannonState.hpp"
// Including type: BarrelCannon/BarrelCannonSyncedState
#include "GlobalNamespace/BarrelCannon_BarrelCannonSyncedState.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single firingSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BarrelCannon::dyn_firingSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_firingSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firingSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 firingPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BarrelCannon::dyn_firingPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_firingPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firingPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 firingRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BarrelCannon::dyn_firingRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_firingRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firingRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve firePositionAnimationCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::BarrelCannon::dyn_firePositionAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_firePositionAnimationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firePositionAnimationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve fireRotationAnimationCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::BarrelCannon::dyn_fireRotationAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_fireRotationAnimationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fireRotationAnimationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single moveToFiringPositionTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BarrelCannon::dyn_moveToFiringPositionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_moveToFiringPositionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveToFiringPositionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single cannonEntryDelayTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BarrelCannon::dyn_cannonEntryDelayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_cannonEntryDelayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cannonEntryDelayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single preFiringDelayTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BarrelCannon::dyn_preFiringDelayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_preFiringDelayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preFiringDelayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single postFiringCooldownTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BarrelCannon::dyn_postFiringCooldownTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_postFiringCooldownTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postFiringCooldownTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single returnToIdlePositionTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BarrelCannon::dyn_returnToIdlePositionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_returnToIdlePositionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnToIdlePositionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::BarrelCannon::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CapsuleCollider triggerCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& GlobalNamespace::BarrelCannon::dyn_triggerCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_triggerCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] colliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::BarrelCannon::dyn_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BarrelCannon/BarrelCannonSyncedState syncedState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BarrelCannon::BarrelCannonSyncedState*& GlobalNamespace::BarrelCannon::dyn_syncedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_syncedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncedState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BarrelCannon::BarrelCannonSyncedState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] triggerOverlapResults
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::BarrelCannon::dyn_triggerOverlapResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_triggerOverlapResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerOverlapResults"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean localPlayerInside
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BarrelCannon::dyn_localPlayerInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_localPlayerInside");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayerInside"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody localPlayerRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::BarrelCannon::dyn_localPlayerRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_localPlayerRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayerRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single stateStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BarrelCannon::dyn_stateStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_stateStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single localFiringPositionLerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BarrelCannon::dyn_localFiringPositionLerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::dyn_localFiringPositionLerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localFiringPositionLerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BarrelCannon.Update
void GlobalNamespace::BarrelCannon::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BarrelCannon.AuthorityUpdate
void GlobalNamespace::BarrelCannon::AuthorityUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::AuthorityUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthorityUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BarrelCannon.ClientUpdate
void GlobalNamespace::BarrelCannon::ClientUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::ClientUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClientUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BarrelCannon.SharedUpdate
void GlobalNamespace::BarrelCannon::SharedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::SharedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SharedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BarrelCannon.FireBarrelCannonRPC
void GlobalNamespace::BarrelCannon::FireBarrelCannonRPC(::UnityEngine::Vector3 cannonCenter, ::UnityEngine::Vector3 firingDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::FireBarrelCannonRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireBarrelCannonRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cannonCenter), ::il2cpp_utils::ExtractType(firingDirection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cannonCenter, firingDirection);
}
// Autogenerated method: BarrelCannon.FireBarrelCannonLocal
void GlobalNamespace::BarrelCannon::FireBarrelCannonLocal(::UnityEngine::Vector3 cannonCenter, ::UnityEngine::Vector3 firingDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::FireBarrelCannonLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireBarrelCannonLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cannonCenter), ::il2cpp_utils::ExtractType(firingDirection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cannonCenter, firingDirection);
}
// Autogenerated method: BarrelCannon.OnTriggerEnter
void GlobalNamespace::BarrelCannon::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: BarrelCannon.OnTriggerExit
void GlobalNamespace::BarrelCannon::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: BarrelCannon.LocalPlayerTriggerFilter
bool GlobalNamespace::BarrelCannon::LocalPlayerTriggerFilter(::UnityEngine::Collider* other, ByRef<::UnityEngine::Rigidbody*> rb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::LocalPlayerTriggerFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalPlayerTriggerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rigidbody*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, byref(rb));
}
// Autogenerated method: BarrelCannon.IsLocalPlayerInCannon
bool GlobalNamespace::BarrelCannon::IsLocalPlayerInCannon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::IsLocalPlayerInCannon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalPlayerInCannon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BarrelCannon.GetCapsulePoints
void GlobalNamespace::BarrelCannon::GetCapsulePoints(::UnityEngine::CapsuleCollider* capsule, ByRef<::UnityEngine::Vector3> pointA, ByRef<::UnityEngine::Vector3> pointB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::GetCapsulePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCapsulePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capsule), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capsule, byref(pointA), byref(pointB));
}
// Autogenerated method: BarrelCannon.OnPhotonSerializeView
void GlobalNamespace::BarrelCannon::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BarrelCannon*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: BarrelCannon.OnOwnershipRequest
void GlobalNamespace::BarrelCannon::OnOwnershipRequest(::Photon::Pun::PhotonView* targetView, ::Photon::Realtime::Player* requestingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::OnOwnershipRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BarrelCannon*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetView, requestingPlayer);
}
// Autogenerated method: BarrelCannon.OnOwnershipTransfered
void GlobalNamespace::BarrelCannon::OnOwnershipTransfered(::Photon::Pun::PhotonView* targetView, ::Photon::Realtime::Player* previousOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::OnOwnershipTransfered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BarrelCannon*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetView, previousOwner);
}
// Autogenerated method: BarrelCannon.OnOwnershipTransferFailed
void GlobalNamespace::BarrelCannon::OnOwnershipTransferFailed(::Photon::Pun::PhotonView* targetView, ::Photon::Realtime::Player* senderOfFailedRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::OnOwnershipTransferFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BarrelCannon*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetView, senderOfFailedRequest);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BarrelCannon/BarrelCannonState
#include "GlobalNamespace/BarrelCannon_BarrelCannonState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BarrelCannon/BarrelCannonState Idle
::GlobalNamespace::BarrelCannon::BarrelCannonState GlobalNamespace::BarrelCannon::BarrelCannonState::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BarrelCannon::BarrelCannonState>("", "BarrelCannon/BarrelCannonState", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public BarrelCannon/BarrelCannonState Idle
void GlobalNamespace::BarrelCannon::BarrelCannonState::_set_Idle(::GlobalNamespace::BarrelCannon::BarrelCannonState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BarrelCannon/BarrelCannonState", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public BarrelCannon/BarrelCannonState Loaded
::GlobalNamespace::BarrelCannon::BarrelCannonState GlobalNamespace::BarrelCannon::BarrelCannonState::_get_Loaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_get_Loaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BarrelCannon::BarrelCannonState>("", "BarrelCannon/BarrelCannonState", "Loaded"));
}
// Autogenerated static field setter
// Set static field: static public BarrelCannon/BarrelCannonState Loaded
void GlobalNamespace::BarrelCannon::BarrelCannonState::_set_Loaded(::GlobalNamespace::BarrelCannon::BarrelCannonState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_set_Loaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BarrelCannon/BarrelCannonState", "Loaded", value));
}
// Autogenerated static field getter
// Get static field: static public BarrelCannon/BarrelCannonState MovingToFirePosition
::GlobalNamespace::BarrelCannon::BarrelCannonState GlobalNamespace::BarrelCannon::BarrelCannonState::_get_MovingToFirePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_get_MovingToFirePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BarrelCannon::BarrelCannonState>("", "BarrelCannon/BarrelCannonState", "MovingToFirePosition"));
}
// Autogenerated static field setter
// Set static field: static public BarrelCannon/BarrelCannonState MovingToFirePosition
void GlobalNamespace::BarrelCannon::BarrelCannonState::_set_MovingToFirePosition(::GlobalNamespace::BarrelCannon::BarrelCannonState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_set_MovingToFirePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BarrelCannon/BarrelCannonState", "MovingToFirePosition", value));
}
// Autogenerated static field getter
// Get static field: static public BarrelCannon/BarrelCannonState Firing
::GlobalNamespace::BarrelCannon::BarrelCannonState GlobalNamespace::BarrelCannon::BarrelCannonState::_get_Firing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_get_Firing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BarrelCannon::BarrelCannonState>("", "BarrelCannon/BarrelCannonState", "Firing"));
}
// Autogenerated static field setter
// Set static field: static public BarrelCannon/BarrelCannonState Firing
void GlobalNamespace::BarrelCannon::BarrelCannonState::_set_Firing(::GlobalNamespace::BarrelCannon::BarrelCannonState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_set_Firing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BarrelCannon/BarrelCannonState", "Firing", value));
}
// Autogenerated static field getter
// Get static field: static public BarrelCannon/BarrelCannonState PostFireCooldown
::GlobalNamespace::BarrelCannon::BarrelCannonState GlobalNamespace::BarrelCannon::BarrelCannonState::_get_PostFireCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_get_PostFireCooldown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BarrelCannon::BarrelCannonState>("", "BarrelCannon/BarrelCannonState", "PostFireCooldown"));
}
// Autogenerated static field setter
// Set static field: static public BarrelCannon/BarrelCannonState PostFireCooldown
void GlobalNamespace::BarrelCannon::BarrelCannonState::_set_PostFireCooldown(::GlobalNamespace::BarrelCannon::BarrelCannonState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_set_PostFireCooldown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BarrelCannon/BarrelCannonState", "PostFireCooldown", value));
}
// Autogenerated static field getter
// Get static field: static public BarrelCannon/BarrelCannonState ReturningToIdlePosition
::GlobalNamespace::BarrelCannon::BarrelCannonState GlobalNamespace::BarrelCannon::BarrelCannonState::_get_ReturningToIdlePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_get_ReturningToIdlePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BarrelCannon::BarrelCannonState>("", "BarrelCannon/BarrelCannonState", "ReturningToIdlePosition"));
}
// Autogenerated static field setter
// Set static field: static public BarrelCannon/BarrelCannonState ReturningToIdlePosition
void GlobalNamespace::BarrelCannon::BarrelCannonState::_set_ReturningToIdlePosition(::GlobalNamespace::BarrelCannon::BarrelCannonState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::_set_ReturningToIdlePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BarrelCannon/BarrelCannonState", "ReturningToIdlePosition", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BarrelCannon::BarrelCannonState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BarrelCannon/BarrelCannonSyncedState
#include "GlobalNamespace/BarrelCannon_BarrelCannonSyncedState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BarrelCannon/BarrelCannonState currentState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BarrelCannon::BarrelCannonState& GlobalNamespace::BarrelCannon::BarrelCannonSyncedState::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonSyncedState::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BarrelCannon::BarrelCannonState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasAuthorityPassenger
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BarrelCannon::BarrelCannonSyncedState::dyn_hasAuthorityPassenger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonSyncedState::dyn_hasAuthorityPassenger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasAuthorityPassenger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single firingPositionLerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BarrelCannon::BarrelCannonSyncedState::dyn_firingPositionLerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BarrelCannon::BarrelCannonSyncedState::dyn_firingPositionLerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firingPositionLerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: WaterSurfaceMaterialController
#include "GlobalNamespace/WaterSurfaceMaterialController.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 shaderProp_ScrollSpeedAndScale
int GlobalNamespace::WaterSurfaceMaterialController::_get_shaderProp_ScrollSpeedAndScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaterSurfaceMaterialController::_get_shaderProp_ScrollSpeedAndScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "WaterSurfaceMaterialController", "shaderProp_ScrollSpeedAndScale"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 shaderProp_ScrollSpeedAndScale
void GlobalNamespace::WaterSurfaceMaterialController::_set_shaderProp_ScrollSpeedAndScale(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaterSurfaceMaterialController::_set_shaderProp_ScrollSpeedAndScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "WaterSurfaceMaterialController", "shaderProp_ScrollSpeedAndScale", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single ScrollX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WaterSurfaceMaterialController::dyn_ScrollX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaterSurfaceMaterialController::dyn_ScrollX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScrollX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ScrollY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WaterSurfaceMaterialController::dyn_ScrollY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaterSurfaceMaterialController::dyn_ScrollY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScrollY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Scale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WaterSurfaceMaterialController::dyn_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaterSurfaceMaterialController::dyn_Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::WaterSurfaceMaterialController::dyn_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaterSurfaceMaterialController::dyn_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock matPropBlock
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& GlobalNamespace::WaterSurfaceMaterialController::dyn_matPropBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaterSurfaceMaterialController::dyn_matPropBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matPropBlock"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WaterSurfaceMaterialController.OnEnable
void GlobalNamespace::WaterSurfaceMaterialController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaterSurfaceMaterialController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaterSurfaceMaterialController.ApplyProperties
void GlobalNamespace::WaterSurfaceMaterialController::ApplyProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaterSurfaceMaterialController::ApplyProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaterSurfaceMaterialController..cctor
void GlobalNamespace::WaterSurfaceMaterialController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaterSurfaceMaterialController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "WaterSurfaceMaterialController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MazePlayerCollection
#include "GlobalNamespace/MazePlayerCollection.hpp"
// Including type: MazePlayerCollection/<>c__DisplayClass6_0
#include "GlobalNamespace/MazePlayerCollection_--c__DisplayClass6_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: MonkeyeAI
#include "GlobalNamespace/MonkeyeAI.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<VRRig> containedRigs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>*& GlobalNamespace::MazePlayerCollection::dyn_containedRigs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MazePlayerCollection::dyn_containedRigs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containedRigs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<MonkeyeAI> monkeyeAis
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::MonkeyeAI*>*& GlobalNamespace::MazePlayerCollection::dyn_monkeyeAis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MazePlayerCollection::dyn_monkeyeAis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monkeyeAis"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::MonkeyeAI*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MazePlayerCollection.Start
void GlobalNamespace::MazePlayerCollection::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MazePlayerCollection::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MazePlayerCollection.OnDestroy
void GlobalNamespace::MazePlayerCollection::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MazePlayerCollection::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MazePlayerCollection.OnTriggerEnter
void GlobalNamespace::MazePlayerCollection::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MazePlayerCollection::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: MazePlayerCollection.OnTriggerExit
void GlobalNamespace::MazePlayerCollection::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MazePlayerCollection::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: MazePlayerCollection.OnPlayerLeftRoom
void GlobalNamespace::MazePlayerCollection::OnPlayerLeftRoom(int otherPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MazePlayerCollection::OnPlayerLeftRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayerLeftRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayerId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MazePlayerCollection/<>c__DisplayClass6_0
#include "GlobalNamespace/MazePlayerCollection_--c__DisplayClass6_0.hpp"
// Including type: NetPlayer
#include "GlobalNamespace/NetPlayer.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NetPlayer otherPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetPlayer*& GlobalNamespace::MazePlayerCollection::$$c__DisplayClass6_0::dyn_otherPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MazePlayerCollection::$$c__DisplayClass6_0::dyn_otherPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "otherPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MazePlayerCollection/<>c__DisplayClass6_0.<OnPlayerLeftRoom>b__0
bool GlobalNamespace::MazePlayerCollection::$$c__DisplayClass6_0::$OnPlayerLeftRoom$b__0(::GlobalNamespace::VRRig* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MazePlayerCollection::$$c__DisplayClass6_0::<OnPlayerLeftRoom>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnPlayerLeftRoom>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MonkeyeAI
#include "GlobalNamespace/MonkeyeAI.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Pathfinding.AIDestinationSetter
#include "Pathfinding/AIDestinationSetter.hpp"
// Including type: Pathfinding.AIPath
#include "Pathfinding/AIPath.hpp"
// Including type: Pathfinding.AILerp
#include "Pathfinding/AILerp.hpp"
// Including type: Pathfinding.Seeker
#include "Pathfinding/Seeker.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Monkeye_LazerFX
#include "GlobalNamespace/Monkeye_LazerFX.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: MazePlayerCollection
#include "GlobalNamespace/MazePlayerCollection.hpp"
// Including type: PlayerCollection
#include "GlobalNamespace/PlayerCollection.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MonkeyeAI_ReplState/EStates
#include "GlobalNamespace/MonkeyeAI_ReplState.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 EmissionColorShaderProp
int GlobalNamespace::MonkeyeAI::_get_EmissionColorShaderProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::_get_EmissionColorShaderProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MonkeyeAI", "EmissionColorShaderProp"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 EmissionColorShaderProp
void GlobalNamespace::MonkeyeAI::_set_EmissionColorShaderProp(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::_set_EmissionColorShaderProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI", "EmissionColorShaderProp", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 ColorShaderProp
int GlobalNamespace::MonkeyeAI::_get_ColorShaderProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::_get_ColorShaderProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MonkeyeAI", "ColorShaderProp"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 ColorShaderProp
void GlobalNamespace::MonkeyeAI::_set_ColorShaderProp(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::_set_ColorShaderProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI", "ColorShaderProp", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 EyeColorShaderProp
int GlobalNamespace::MonkeyeAI::_get_EyeColorShaderProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::_get_EyeColorShaderProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MonkeyeAI", "EyeColorShaderProp"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 EyeColorShaderProp
void GlobalNamespace::MonkeyeAI::_set_EyeColorShaderProp(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::_set_EyeColorShaderProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI", "EyeColorShaderProp", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 tintColorShaderProp
int GlobalNamespace::MonkeyeAI::_get_tintColorShaderProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::_get_tintColorShaderProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MonkeyeAI", "tintColorShaderProp"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 tintColorShaderProp
void GlobalNamespace::MonkeyeAI::_set_tintColorShaderProp(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::_set_tintColorShaderProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI", "tintColorShaderProp", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 animStateID
int GlobalNamespace::MonkeyeAI::_get_animStateID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::_get_animStateID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MonkeyeAI", "animStateID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 animStateID
void GlobalNamespace::MonkeyeAI::_set_animStateID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::_set_animStateID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI", "animStateID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Transform> patrolPts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& GlobalNamespace::MonkeyeAI::dyn_patrolPts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_patrolPts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolPts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform sleepPt
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MonkeyeAI::dyn_sleepPt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_sleepPt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sleepPt"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 patrolIdx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MonkeyeAI::dyn_patrolIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_patrolIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 patrolCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MonkeyeAI::dyn_patrolCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_patrolCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 targetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MonkeyeAI::dyn_targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_targetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock portalMatPropBlock
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& GlobalNamespace::MonkeyeAI::dyn_portalMatPropBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_portalMatPropBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portalMatPropBlock"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock monkEyeMatPropBlock
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& GlobalNamespace::MonkeyeAI::dyn_monkEyeMatPropBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_monkEyeMatPropBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monkEyeMatPropBlock"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::MonkeyeAI::dyn_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.AIDestinationSetter aiDest
[[deprecated("Use field access instead!")]] ::Pathfinding::AIDestinationSetter*& GlobalNamespace::MonkeyeAI::dyn_aiDest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_aiDest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aiDest"))->offset;
  return *reinterpret_cast<::Pathfinding::AIDestinationSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.AIPath aiPath
[[deprecated("Use field access instead!")]] ::Pathfinding::AIPath*& GlobalNamespace::MonkeyeAI::dyn_aiPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_aiPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aiPath"))->offset;
  return *reinterpret_cast<::Pathfinding::AIPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.AILerp aiLerp
[[deprecated("Use field access instead!")]] ::Pathfinding::AILerp*& GlobalNamespace::MonkeyeAI::dyn_aiLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_aiLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aiLerp"))->offset;
  return *reinterpret_cast<::Pathfinding::AILerp**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Seeker seeker
[[deprecated("Use field access instead!")]] ::Pathfinding::Seeker*& GlobalNamespace::MonkeyeAI::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::Pathfinding::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Path path
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& GlobalNamespace::MonkeyeAI::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentWaypoint
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MonkeyeAI::dyn_currentWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_currentWaypoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWaypoint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextWaypointDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_nextWaypointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_nextWaypointDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextWaypointDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean reachedEndOfPath
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MonkeyeAI::dyn_reachedEndOfPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_reachedEndOfPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reachedEndOfPath"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean calculatingPath
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MonkeyeAI::dyn_calculatingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_calculatingPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calculatingPath"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Monkeye_LazerFX lazerFx
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Monkeye_LazerFX*& GlobalNamespace::MonkeyeAI::dyn_lazerFx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_lazerFx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazerFx"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Monkeye_LazerFX**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator animController
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& GlobalNamespace::MonkeyeAI::dyn_animController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_animController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animController"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] rayResults
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& GlobalNamespace::MonkeyeAI::dyn_rayResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_rayResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayResults"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::MonkeyeAI::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_layerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasConnectedToRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MonkeyeAI::dyn_wasConnectedToRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_wasConnectedToRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasConnectedToRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer skinnedMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::MonkeyeAI::dyn_skinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_skinnedMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skinnedMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MazePlayerCollection playerCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MazePlayerCollection*& GlobalNamespace::MonkeyeAI::dyn_playerCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_playerCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MazePlayerCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerCollection playersInRoomCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerCollection*& GlobalNamespace::MonkeyeAI::dyn_playersInRoomCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_playersInRoomCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersInRoomCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRRig> validRigs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>*& GlobalNamespace::MonkeyeAI::dyn_validRigs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_validRigs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validRigs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject portalFx
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MonkeyeAI::dyn_portalFx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_portalFx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portalFx"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] eyeBones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::MonkeyeAI::dyn_eyeBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_eyeBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeBones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single wakeDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_wakeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_wakeDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wakeDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chaseDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_chaseDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_chaseDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chaseDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sleepDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_sleepDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_sleepDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sleepDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single attackDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_attackDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_attackDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attackDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single beginAttackTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_beginAttackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_beginAttackTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beginAttackTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single openFloorTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_openFloorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_openFloorTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "openFloorTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single dropPlayerTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_dropPlayerTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_dropPlayerTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dropPlayerTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single closeFloorTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_closeFloorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_closeFloorTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeFloorTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color portalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MonkeyeAI::dyn_portalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_portalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color gorillaPortalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MonkeyeAI::dyn_gorillaPortalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_gorillaPortalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaPortalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color monkEyeColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MonkeyeAI::dyn_monkEyeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_monkEyeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monkEyeColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color monkEyeEyeColorNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MonkeyeAI::dyn_monkEyeEyeColorNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_monkEyeEyeColorNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monkEyeEyeColorNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color monkEyeEyeColorAttacking
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MonkeyeAI::dyn_monkEyeEyeColorAttacking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_monkEyeEyeColorAttacking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monkEyeEyeColorAttacking"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPatrols
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MonkeyeAI::dyn_maxPatrols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_maxPatrols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPatrols"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig targetRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::MonkeyeAI::dyn_targetRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_targetRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MonkeyeAI_ReplState replState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MonkeyeAI_ReplState*& GlobalNamespace::MonkeyeAI::dyn_replState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_replState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "replState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MonkeyeAI_ReplState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 layerBase
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MonkeyeAI::dyn_layerBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_layerBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerBase"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 layerForward
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MonkeyeAI::dyn_layerForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_layerForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerForward"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 layerLeft
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MonkeyeAI::dyn_layerLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_layerLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 layerRight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MonkeyeAI::dyn_layerRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_layerRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerRight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 prevPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MonkeyeAI::dyn_prevPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_prevPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MonkeyeAI::dyn_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::MonkeyeAI::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip sleepLoopSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::MonkeyeAI::dyn_sleepLoopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_sleepLoopSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sleepLoopSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sleepLoopVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_sleepLoopVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_sleepLoopVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sleepLoopVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip patrolLoopSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::MonkeyeAI::dyn_patrolLoopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_patrolLoopSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolLoopSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single patrolLoopVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_patrolLoopVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_patrolLoopVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolLoopVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single patrolLoopFadeInTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_patrolLoopFadeInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_patrolLoopFadeInTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "patrolLoopFadeInTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip chaseLoopSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::MonkeyeAI::dyn_chaseLoopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_chaseLoopSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chaseLoopSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chaseLoopVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_chaseLoopVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_chaseLoopVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chaseLoopVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chaseLoopFadeInTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_chaseLoopFadeInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_chaseLoopFadeInTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chaseLoopFadeInTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip attackSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::MonkeyeAI::dyn_attackSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_attackSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attackSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single attackVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_attackVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_attackVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attackVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView _view
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GlobalNamespace::MonkeyeAI::dyn__view() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn__view");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_view"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single overlapRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI::dyn_overlapRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_overlapRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlapRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean lockedOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MonkeyeAI::dyn_lockedOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::dyn_lockedOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockedOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MonkeyeAI.UserIdFromRig
::StringW GlobalNamespace::MonkeyeAI::UserIdFromRig(::GlobalNamespace::VRRig* rig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::UserIdFromRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserIdFromRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rig)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, rig);
}
// Autogenerated method: MonkeyeAI.GetRig
::GlobalNamespace::VRRig* GlobalNamespace::MonkeyeAI::GetRig(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::GetRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRRig*, false>(this, ___internal__method, userId);
}
// Autogenerated method: MonkeyeAI.Distance2D
float GlobalNamespace::MonkeyeAI::Distance2D(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::Distance2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Distance2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, a, b);
}
// Autogenerated method: MonkeyeAI.PickRandomPatrolPoint
::UnityEngine::Transform* GlobalNamespace::MonkeyeAI::PickRandomPatrolPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::PickRandomPatrolPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PickRandomPatrolPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.PickNewPath
void GlobalNamespace::MonkeyeAI::PickNewPath(bool pathFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::PickNewPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PickNewPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pathFinished);
}
// Autogenerated method: MonkeyeAI.Awake
void GlobalNamespace::MonkeyeAI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.OnPathComplete
void GlobalNamespace::MonkeyeAI::OnPathComplete(::Pathfinding::Path* path_) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::OnPathComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPathComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path_);
}
// Autogenerated method: MonkeyeAI.FollowPath
void GlobalNamespace::MonkeyeAI::FollowPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::FollowPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FollowPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.PlayerNear
bool GlobalNamespace::MonkeyeAI::PlayerNear(::GlobalNamespace::VRRig* rig, float dist, ByRef<float> playerDist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::PlayerNear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerNear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rig), ::il2cpp_utils::ExtractType(dist), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rig, dist, byref(playerDist));
}
// Autogenerated method: MonkeyeAI.Sleeping
void GlobalNamespace::MonkeyeAI::Sleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::Sleeping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sleeping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.ClosestPlayer
bool GlobalNamespace::MonkeyeAI::ClosestPlayer(ByRef<::UnityEngine::Vector3> myPos, ByRef<::GlobalNamespace::VRRig*> outRig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::ClosestPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myPos), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::VRRig*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(myPos), byref(outRig));
}
// Autogenerated method: MonkeyeAI.CheckForChase
bool GlobalNamespace::MonkeyeAI::CheckForChase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::CheckForChase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForChase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.SetChasePlayer
void GlobalNamespace::MonkeyeAI::SetChasePlayer(::GlobalNamespace::VRRig* rig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::SetChasePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChasePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rig);
}
// Autogenerated method: MonkeyeAI.SetSleep
void GlobalNamespace::MonkeyeAI::SetSleep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::SetSleep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSleep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.Patrolling
void GlobalNamespace::MonkeyeAI::Patrolling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::Patrolling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Patrolling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.Chasing
void GlobalNamespace::MonkeyeAI::Chasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::Chasing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Chasing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.ReturnToSleepPt
void GlobalNamespace::MonkeyeAI::ReturnToSleepPt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::ReturnToSleepPt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnToSleepPt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.UpdateClientState
void GlobalNamespace::MonkeyeAI::UpdateClientState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::UpdateClientState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClientState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.SetDefaultState
void GlobalNamespace::MonkeyeAI::SetDefaultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::SetDefaultState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.SetDefaultAttackState
void GlobalNamespace::MonkeyeAI::SetDefaultAttackState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::SetDefaultAttackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultAttackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.ExitAttackState
void GlobalNamespace::MonkeyeAI::ExitAttackState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::ExitAttackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAttackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.BeginAttack
void GlobalNamespace::MonkeyeAI::BeginAttack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::BeginAttack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginAttack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.OpenFloor
void GlobalNamespace::MonkeyeAI::OpenFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::OpenFloor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenFloor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.DropPlayer
void GlobalNamespace::MonkeyeAI::DropPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::DropPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DropPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.CloseFloor
void GlobalNamespace::MonkeyeAI::CloseFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::CloseFloor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseFloor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.ValidateChasingRig
void GlobalNamespace::MonkeyeAI::ValidateChasingRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::ValidateChasingRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChasingRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.SetState
void GlobalNamespace::MonkeyeAI::SetState(::GlobalNamespace::MonkeyeAI_ReplState::EStates state_) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state_);
}
// Autogenerated method: MonkeyeAI.setEyeColor
void GlobalNamespace::MonkeyeAI::setEyeColor(::UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::setEyeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setEyeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: MonkeyeAI.GetValidChoosableRigs
::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>* GlobalNamespace::MonkeyeAI::GetValidChoosableRigs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::GetValidChoosableRigs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidChoosableRigs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>*, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.Update
void GlobalNamespace::MonkeyeAI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.LateUpdate
void GlobalNamespace::MonkeyeAI::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.AntiOverlapAssurance
void GlobalNamespace::MonkeyeAI::AntiOverlapAssurance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::AntiOverlapAssurance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AntiOverlapAssurance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MonkeyeAI.SetTargetPlayer
void GlobalNamespace::MonkeyeAI::SetTargetPlayer(::GlobalNamespace::VRRig* rig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::SetTargetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTargetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rig);
}
// Autogenerated method: MonkeyeAI..cctor
void GlobalNamespace::MonkeyeAI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MonkeyeAI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MonkeyeAI_ReplState
#include "GlobalNamespace/MonkeyeAI_ReplState.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MonkeyeAI_ReplState/EStates state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MonkeyeAI_ReplState::EStates& GlobalNamespace::MonkeyeAI_ReplState::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MonkeyeAI_ReplState::EStates*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MonkeyeAI_ReplState::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 attackPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MonkeyeAI_ReplState::dyn_attackPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::dyn_attackPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attackPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI_ReplState::dyn_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::dyn_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean floorEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MonkeyeAI_ReplState::dyn_floorEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::dyn_floorEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floorEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean portalEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MonkeyeAI_ReplState::dyn_portalEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::dyn_portalEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portalEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean freezePlayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MonkeyeAI_ReplState::dyn_freezePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::dyn_freezePlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "freezePlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single alpha
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MonkeyeAI_ReplState::dyn_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::dyn_alpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MonkeyeAI_ReplState.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::MonkeyeAI_ReplState::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MonkeyeAI_ReplState*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MonkeyeAI_ReplState/EStates
#include "GlobalNamespace/MonkeyeAI_ReplState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MonkeyeAI_ReplState/EStates Sleeping
::GlobalNamespace::MonkeyeAI_ReplState::EStates GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_Sleeping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_Sleeping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MonkeyeAI_ReplState::EStates>("", "MonkeyeAI_ReplState/EStates", "Sleeping"));
}
// Autogenerated static field setter
// Set static field: static public MonkeyeAI_ReplState/EStates Sleeping
void GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_Sleeping(::GlobalNamespace::MonkeyeAI_ReplState::EStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_Sleeping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI_ReplState/EStates", "Sleeping", value));
}
// Autogenerated static field getter
// Get static field: static public MonkeyeAI_ReplState/EStates Patrolling
::GlobalNamespace::MonkeyeAI_ReplState::EStates GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_Patrolling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_Patrolling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MonkeyeAI_ReplState::EStates>("", "MonkeyeAI_ReplState/EStates", "Patrolling"));
}
// Autogenerated static field setter
// Set static field: static public MonkeyeAI_ReplState/EStates Patrolling
void GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_Patrolling(::GlobalNamespace::MonkeyeAI_ReplState::EStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_Patrolling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI_ReplState/EStates", "Patrolling", value));
}
// Autogenerated static field getter
// Get static field: static public MonkeyeAI_ReplState/EStates Chasing
::GlobalNamespace::MonkeyeAI_ReplState::EStates GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_Chasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_Chasing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MonkeyeAI_ReplState::EStates>("", "MonkeyeAI_ReplState/EStates", "Chasing"));
}
// Autogenerated static field setter
// Set static field: static public MonkeyeAI_ReplState/EStates Chasing
void GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_Chasing(::GlobalNamespace::MonkeyeAI_ReplState::EStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_Chasing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI_ReplState/EStates", "Chasing", value));
}
// Autogenerated static field getter
// Get static field: static public MonkeyeAI_ReplState/EStates ReturnToSleepPt
::GlobalNamespace::MonkeyeAI_ReplState::EStates GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_ReturnToSleepPt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_ReturnToSleepPt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MonkeyeAI_ReplState::EStates>("", "MonkeyeAI_ReplState/EStates", "ReturnToSleepPt"));
}
// Autogenerated static field setter
// Set static field: static public MonkeyeAI_ReplState/EStates ReturnToSleepPt
void GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_ReturnToSleepPt(::GlobalNamespace::MonkeyeAI_ReplState::EStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_ReturnToSleepPt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI_ReplState/EStates", "ReturnToSleepPt", value));
}
// Autogenerated static field getter
// Get static field: static public MonkeyeAI_ReplState/EStates GoToSleep
::GlobalNamespace::MonkeyeAI_ReplState::EStates GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_GoToSleep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_GoToSleep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MonkeyeAI_ReplState::EStates>("", "MonkeyeAI_ReplState/EStates", "GoToSleep"));
}
// Autogenerated static field setter
// Set static field: static public MonkeyeAI_ReplState/EStates GoToSleep
void GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_GoToSleep(::GlobalNamespace::MonkeyeAI_ReplState::EStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_GoToSleep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI_ReplState/EStates", "GoToSleep", value));
}
// Autogenerated static field getter
// Get static field: static public MonkeyeAI_ReplState/EStates BeginAttack
::GlobalNamespace::MonkeyeAI_ReplState::EStates GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_BeginAttack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_BeginAttack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MonkeyeAI_ReplState::EStates>("", "MonkeyeAI_ReplState/EStates", "BeginAttack"));
}
// Autogenerated static field setter
// Set static field: static public MonkeyeAI_ReplState/EStates BeginAttack
void GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_BeginAttack(::GlobalNamespace::MonkeyeAI_ReplState::EStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_BeginAttack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI_ReplState/EStates", "BeginAttack", value));
}
// Autogenerated static field getter
// Get static field: static public MonkeyeAI_ReplState/EStates OpenFloor
::GlobalNamespace::MonkeyeAI_ReplState::EStates GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_OpenFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_OpenFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MonkeyeAI_ReplState::EStates>("", "MonkeyeAI_ReplState/EStates", "OpenFloor"));
}
// Autogenerated static field setter
// Set static field: static public MonkeyeAI_ReplState/EStates OpenFloor
void GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_OpenFloor(::GlobalNamespace::MonkeyeAI_ReplState::EStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_OpenFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI_ReplState/EStates", "OpenFloor", value));
}
// Autogenerated static field getter
// Get static field: static public MonkeyeAI_ReplState/EStates DropPlayer
::GlobalNamespace::MonkeyeAI_ReplState::EStates GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_DropPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_DropPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MonkeyeAI_ReplState::EStates>("", "MonkeyeAI_ReplState/EStates", "DropPlayer"));
}
// Autogenerated static field setter
// Set static field: static public MonkeyeAI_ReplState/EStates DropPlayer
void GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_DropPlayer(::GlobalNamespace::MonkeyeAI_ReplState::EStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_DropPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI_ReplState/EStates", "DropPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public MonkeyeAI_ReplState/EStates CloseFloor
::GlobalNamespace::MonkeyeAI_ReplState::EStates GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_CloseFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_get_CloseFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MonkeyeAI_ReplState::EStates>("", "MonkeyeAI_ReplState/EStates", "CloseFloor"));
}
// Autogenerated static field setter
// Set static field: static public MonkeyeAI_ReplState/EStates CloseFloor
void GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_CloseFloor(::GlobalNamespace::MonkeyeAI_ReplState::EStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::_set_CloseFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MonkeyeAI_ReplState/EStates", "CloseFloor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MonkeyeAI_ReplState::EStates::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MonkeyeAI_ReplState::EStates::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Monkeye_LazerFX
#include "GlobalNamespace/Monkeye_LazerFX.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] eyeBones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::Monkeye_LazerFX::dyn_eyeBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Monkeye_LazerFX::dyn_eyeBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeBones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig rig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::Monkeye_LazerFX::dyn_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Monkeye_LazerFX::dyn_rig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LineRenderer[] lines
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::LineRenderer*>& GlobalNamespace::Monkeye_LazerFX::dyn_lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Monkeye_LazerFX::dyn_lines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lines"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::LineRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Monkeye_LazerFX.Awake
void GlobalNamespace::Monkeye_LazerFX::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Monkeye_LazerFX::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Monkeye_LazerFX.EnableLazer
void GlobalNamespace::Monkeye_LazerFX::EnableLazer(::ArrayW<::UnityEngine::Transform*> eyes_, ::GlobalNamespace::VRRig* rig_) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Monkeye_LazerFX::EnableLazer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableLazer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyes_), ::il2cpp_utils::ExtractType(rig_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eyes_, rig_);
}
// Autogenerated method: Monkeye_LazerFX.DisableLazer
void GlobalNamespace::Monkeye_LazerFX::DisableLazer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Monkeye_LazerFX::DisableLazer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableLazer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Monkeye_LazerFX.Update
void GlobalNamespace::Monkeye_LazerFX::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Monkeye_LazerFX::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SkyboxController
#include "GlobalNamespace/SkyboxController.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: BetterDayNightManager
#include "GlobalNamespace/BetterDayNightManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ShaderHashId _SkyAlpha
::GlobalNamespace::ShaderHashId GlobalNamespace::SkyboxController::_get__SkyAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::_get__SkyAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ShaderHashId>("", "SkyboxController", "_SkyAlpha"));
}
// Autogenerated static field setter
// Set static field: static private ShaderHashId _SkyAlpha
void GlobalNamespace::SkyboxController::_set__SkyAlpha(::GlobalNamespace::ShaderHashId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::_set__SkyAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SkyboxController", "_SkyAlpha", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer skyFront
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::SkyboxController::dyn_skyFront() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn_skyFront");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skyFront"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer skyBack
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::SkyboxController::dyn_skyBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn_skyBack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skyBack"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] skyMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::SkyboxController::dyn_skyMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn_skyMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skyMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SkyboxController::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn_lerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _currentSky
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::SkyboxController::dyn__currentSky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn__currentSky");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSky"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _nextSky
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::SkyboxController::dyn__nextSky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn__nextSky");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextSky"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TimeSince lastUpdate
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TimeSince& GlobalNamespace::SkyboxController::dyn_lastUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn_lastUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastUpdate"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TimeSince*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BetterDayNightManager _dayNightManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BetterDayNightManager*& GlobalNamespace::SkyboxController::dyn__dayNightManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn__dayNightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dayNightManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BetterDayNightManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _currentSeconds
[[deprecated("Use field access instead!")]] double& GlobalNamespace::SkyboxController::dyn__currentSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn__currentSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSeconds"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _totalSecondsInRange
[[deprecated("Use field access instead!")]] double& GlobalNamespace::SkyboxController::dyn__totalSecondsInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn__totalSecondsInRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalSecondsInRange"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SkyboxController::dyn__currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::dyn__currentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SkyboxController.Start
void GlobalNamespace::SkyboxController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SkyboxController.Update
void GlobalNamespace::SkyboxController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SkyboxController.OnValidate
void GlobalNamespace::SkyboxController::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SkyboxController.UpdateTime
void GlobalNamespace::SkyboxController::UpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::UpdateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SkyboxController.UpdateSky
void GlobalNamespace::SkyboxController::UpdateSky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::UpdateSky");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSky", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SkyboxController.SetFrontToTransparent
void GlobalNamespace::SkyboxController::SetFrontToTransparent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::SetFrontToTransparent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFrontToTransparent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SkyboxController.SetFrontToOpaque
void GlobalNamespace::SkyboxController::SetFrontToOpaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::SetFrontToOpaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFrontToOpaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SkyboxController.SetBackToOpaque
void GlobalNamespace::SkyboxController::SetBackToOpaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::SetBackToOpaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBackToOpaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SkyboxController..cctor
void GlobalNamespace::SkyboxController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkyboxController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SkyboxController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MetroBlimp
#include "GlobalNamespace/MetroBlimp.hpp"
// Including type: MetroSpotlight
#include "GlobalNamespace/MetroSpotlight.hpp"
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String _INNER_GLOW
::StringW GlobalNamespace::MetroBlimp::_get__INNER_GLOW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::_get__INNER_GLOW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MetroBlimp", "_INNER_GLOW"));
}
// Autogenerated static field setter
// Set static field: static private System.String _INNER_GLOW
void GlobalNamespace::MetroBlimp::_set__INNER_GLOW(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::_set__INNER_GLOW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MetroBlimp", "_INNER_GLOW", value));
}
// Autogenerated instance field getter
// Get instance field: public MetroSpotlight spotLightLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MetroSpotlight*& GlobalNamespace::MetroBlimp::dyn_spotLightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn_spotLightLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spotLightLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MetroSpotlight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MetroSpotlight spotLightRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MetroSpotlight*& GlobalNamespace::MetroBlimp::dyn_spotLightRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn_spotLightRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spotLightRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MetroSpotlight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.BoxCollider topCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::BoxCollider*& GlobalNamespace::MetroBlimp::dyn_topCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn_topCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::BoxCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material blimpMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MetroBlimp::dyn_blimpMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn_blimpMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blimpMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Renderer blimpRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::MetroBlimp::dyn_blimpRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn_blimpRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blimpRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ascendSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroBlimp::dyn_ascendSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn_ascendSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ascendSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single descendSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroBlimp::dyn_descendSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn_descendSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "descendSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single descendOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroBlimp::dyn_descendOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn_descendOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "descendOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single descendReactionTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroBlimp::dyn_descendReactionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn_descendReactionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "descendReactionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startLocalHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroBlimp::dyn__startLocalHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn__startLocalHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLocalHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _topStayTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroBlimp::dyn__topStayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn__topStayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_topStayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _numHandsOnBlimp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroBlimp::dyn__numHandsOnBlimp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn__numHandsOnBlimp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numHandsOnBlimp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lowering
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MetroBlimp::dyn__lowering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::dyn__lowering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MetroBlimp.Awake
void GlobalNamespace::MetroBlimp::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MetroBlimp.Tick
void GlobalNamespace::MetroBlimp::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MetroBlimp.IsPlayerHand
bool GlobalNamespace::MetroBlimp::IsPlayerHand(::UnityEngine::Collider* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::IsPlayerHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MetroBlimp", "IsPlayerHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: MetroBlimp.OnTriggerEnter
void GlobalNamespace::MetroBlimp::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: MetroBlimp.OnTriggerExit
void GlobalNamespace::MetroBlimp::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroBlimp::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MetroManager
#include "GlobalNamespace/MetroManager.hpp"
// Including type: MetroBlimp
#include "GlobalNamespace/MetroBlimp.hpp"
// Including type: MetroSpotlight
#include "GlobalNamespace/MetroSpotlight.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MetroBlimp[] _blimps
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MetroBlimp*>& GlobalNamespace::MetroManager::dyn__blimps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroManager::dyn__blimps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blimps"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MetroBlimp*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MetroSpotlight[] _spotlights
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MetroSpotlight*>& GlobalNamespace::MetroManager::dyn__spotlights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroManager::dyn__spotlights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spotlights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MetroSpotlight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _blimpsRotationAnchor
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MetroManager::dyn__blimpsRotationAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroManager::dyn__blimpsRotationAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blimpsRotationAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MetroManager.Update
void GlobalNamespace::MetroManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MetroSpotlight
#include "GlobalNamespace/MetroSpotlight.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _blimp
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MetroSpotlight::dyn__blimp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroSpotlight::dyn__blimp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blimp"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _light
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MetroSpotlight::dyn__light() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroSpotlight::dyn__light");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_light"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MetroSpotlight::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroSpotlight::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroSpotlight::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroSpotlight::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _offset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroSpotlight::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroSpotlight::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _theta
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroSpotlight::dyn__theta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroSpotlight::dyn__theta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_theta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroSpotlight::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroSpotlight::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MetroSpotlight::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroSpotlight::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MetroSpotlight.Tick
void GlobalNamespace::MetroSpotlight::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroSpotlight::Tick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MetroSpotlight.Figure8
::UnityEngine::Vector3 GlobalNamespace::MetroSpotlight::Figure8(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 xDir, ::UnityEngine::Vector3 yDir, float scale, float t, float offset, float theta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MetroSpotlight::Figure8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MetroSpotlight", "Figure8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(xDir), ::il2cpp_utils::ExtractType(yDir), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(theta)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, xDir, yDir, scale, t, offset, theta);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RotateXform
#include "GlobalNamespace/RotateXform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform xform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::RotateXform::dyn_xform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateXform::dyn_xform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 speed
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::RotateXform::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateXform::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RotateXform/Mode mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RotateXform::Mode& GlobalNamespace::RotateXform::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateXform::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RotateXform::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speedFactor
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RotateXform::dyn_speedFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateXform::dyn_speedFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speedFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RotateXform.Update
void GlobalNamespace::RotateXform::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateXform::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RotateXform/Mode
#include "GlobalNamespace/RotateXform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RotateXform/Mode Local
::GlobalNamespace::RotateXform::Mode GlobalNamespace::RotateXform::Mode::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateXform::Mode::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RotateXform::Mode>("", "RotateXform/Mode", "Local"));
}
// Autogenerated static field setter
// Set static field: static public RotateXform/Mode Local
void GlobalNamespace::RotateXform::Mode::_set_Local(::GlobalNamespace::RotateXform::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateXform::Mode::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RotateXform/Mode", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public RotateXform/Mode World
::GlobalNamespace::RotateXform::Mode GlobalNamespace::RotateXform::Mode::_get_World() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateXform::Mode::_get_World");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RotateXform::Mode>("", "RotateXform/Mode", "World"));
}
// Autogenerated static field setter
// Set static field: static public RotateXform/Mode World
void GlobalNamespace::RotateXform::Mode::_set_World(::GlobalNamespace::RotateXform::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateXform::Mode::_set_World");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RotateXform/Mode", "World", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RotateXform::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateXform::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildingColor
#include "GlobalNamespace/BuildingColor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Red
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BuildingColor::dyn_Red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingColor::dyn_Red");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Red"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Green
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BuildingColor::dyn_Green() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingColor::dyn_Green");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Green"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Blue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BuildingColor::dyn_Blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingColor::dyn_Blue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Blue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuildingColor.Start
void GlobalNamespace::BuildingColor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildingColor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TempMask
#include "GlobalNamespace/TempMask.hpp"
// Including type: TempMask/<MaskOnDuringDate>d__10
#include "GlobalNamespace/TempMask_-MaskOnDuringDate-d__10.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 year
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TempMask::dyn_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_year");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "year"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 month
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TempMask::dyn_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_month");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 day
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TempMask::dyn_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_day");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime dayOn
[[deprecated("Use field access instead!")]] ::System::DateTime& GlobalNamespace::TempMask::dyn_dayOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_dayOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayOn"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer myRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::TempMask::dyn_myRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_myRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime myDate
[[deprecated("Use field access instead!")]] ::System::DateTime& GlobalNamespace::TempMask::dyn_myDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_myDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig myRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::TempMask::dyn_myRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_myRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TempMask.Awake
void GlobalNamespace::TempMask::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TempMask.OnEnable
void GlobalNamespace::TempMask::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TempMask.OnDisable
void GlobalNamespace::TempMask::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TempMask.MaskOnDuringDate
::System::Collections::IEnumerator* GlobalNamespace::TempMask::MaskOnDuringDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::MaskOnDuringDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaskOnDuringDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TempMask/<MaskOnDuringDate>d__10
#include "GlobalNamespace/TempMask_-MaskOnDuringDate-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TempMask <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TempMask*& GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TempMask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TempMask/<MaskOnDuringDate>d__10.System.IDisposable.Dispose
void GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TempMask/<MaskOnDuringDate>d__10.MoveNext
bool GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TempMask/<MaskOnDuringDate>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TempMask/<MaskOnDuringDate>d__10.System.Collections.IEnumerator.Reset
void GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TempMask/<MaskOnDuringDate>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BlinkingText
#include "GlobalNamespace/BlinkingText.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single cycleTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BlinkingText::dyn_cycleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingText::dyn_cycleTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cycleTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single dutyCycle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BlinkingText::dyn_dutyCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingText::dyn_dutyCycle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dutyCycle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BlinkingText::dyn_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingText::dyn_isOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BlinkingText::dyn_lastTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingText::dyn_lastTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text textComponent
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::BlinkingText::dyn_textComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingText::dyn_textComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textComponent"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BlinkingText.Awake
void GlobalNamespace::BlinkingText::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingText::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlinkingText.Update
void GlobalNamespace::BlinkingText::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingText::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DoorSlidingOpenAudio
#include "GlobalNamespace/DoorSlidingOpenAudio.hpp"
// Including type: GhostLabButton
#include "GlobalNamespace/GhostLabButton.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GhostLabButton button
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GhostLabButton*& GlobalNamespace::DoorSlidingOpenAudio::dyn_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorSlidingOpenAudio::dyn_button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "button"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostLabButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::DoorSlidingOpenAudio::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorSlidingOpenAudio::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ITickSystemTick.TickRunning>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DoorSlidingOpenAudio::dyn_$ITickSystemTick_TickRunning$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorSlidingOpenAudio::dyn_$ITickSystemTick_TickRunning$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ITickSystemTick.TickRunning>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DoorSlidingOpenAudio.ITickSystemTick.get_TickRunning
bool GlobalNamespace::DoorSlidingOpenAudio::ITickSystemTick_get_TickRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorSlidingOpenAudio::ITickSystemTick.get_TickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DoorSlidingOpenAudio*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DoorSlidingOpenAudio.ITickSystemTick.set_TickRunning
void GlobalNamespace::DoorSlidingOpenAudio::ITickSystemTick_set_TickRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorSlidingOpenAudio::ITickSystemTick.set_TickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DoorSlidingOpenAudio*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DoorSlidingOpenAudio.OnEnable
void GlobalNamespace::DoorSlidingOpenAudio::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorSlidingOpenAudio::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DoorSlidingOpenAudio.OnDisable
void GlobalNamespace::DoorSlidingOpenAudio::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorSlidingOpenAudio::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DoorSlidingOpenAudio.BuildValidationCheck
bool GlobalNamespace::DoorSlidingOpenAudio::BuildValidationCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorSlidingOpenAudio::BuildValidationCheck");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DoorSlidingOpenAudio*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DoorSlidingOpenAudio.ITickSystemTick.Tick
void GlobalNamespace::DoorSlidingOpenAudio::ITickSystemTick_Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorSlidingOpenAudio::ITickSystemTick.Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DoorSlidingOpenAudio*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GhostHuntingController
#include "GlobalNamespace/GhostHuntingController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GhostHuntingController.Start
void GlobalNamespace::GhostHuntingController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostHuntingController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GhostHuntingController.Update
void GlobalNamespace::GhostHuntingController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostHuntingController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
