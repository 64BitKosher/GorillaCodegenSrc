// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RecastTileUpdateHandler
#include "Pathfinding/RecastTileUpdateHandler.hpp"
// Including type: Pathfinding.RecastGraph
#include "Pathfinding/RecastGraph.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RecastGraph graph
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph*& Pathfinding::RecastTileUpdateHandler::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] dirtyTiles
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Pathfinding::RecastTileUpdateHandler::dyn_dirtyTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::dyn_dirtyTiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirtyTiles"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean anyDirtyTiles
[[deprecated("Use field access instead!")]] bool& Pathfinding::RecastTileUpdateHandler::dyn_anyDirtyTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::dyn_anyDirtyTiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyDirtyTiles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single earliestDirty
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastTileUpdateHandler::dyn_earliestDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::dyn_earliestDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "earliestDirty"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxThrottlingDelay
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastTileUpdateHandler::dyn_maxThrottlingDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::dyn_maxThrottlingDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxThrottlingDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RecastTileUpdateHandler.SetGraph
void Pathfinding::RecastTileUpdateHandler::SetGraph(::Pathfinding::RecastGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::SetGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph);
}
// Autogenerated method: Pathfinding.RecastTileUpdateHandler.ScheduleUpdate
void Pathfinding::RecastTileUpdateHandler::ScheduleUpdate(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::ScheduleUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScheduleUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds);
}
// Autogenerated method: Pathfinding.RecastTileUpdateHandler.OnEnable
void Pathfinding::RecastTileUpdateHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastTileUpdateHandler.OnDisable
void Pathfinding::RecastTileUpdateHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastTileUpdateHandler.Update
void Pathfinding::RecastTileUpdateHandler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastTileUpdateHandler.UpdateDirtyTiles
void Pathfinding::RecastTileUpdateHandler::UpdateDirtyTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastTileUpdateHandler::UpdateDirtyTiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDirtyTiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.TargetMover
#include "Pathfinding/TargetMover.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.IAstarAI
#include "Pathfinding/IAstarAI.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::TargetMover::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::TargetMover::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.IAstarAI[] ais
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::IAstarAI*>& Pathfinding::TargetMover::dyn_ais() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_ais");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ais"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::IAstarAI*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean onlyOnDoubleClick
[[deprecated("Use field access instead!")]] bool& Pathfinding::TargetMover::dyn_onlyOnDoubleClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_onlyOnDoubleClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlyOnDoubleClick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean use2D
[[deprecated("Use field access instead!")]] bool& Pathfinding::TargetMover::dyn_use2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_use2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "use2D"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera cam
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& Pathfinding::TargetMover::dyn_cam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_cam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cam"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.TargetMover.Start
void Pathfinding::TargetMover::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TargetMover.OnGUI
void Pathfinding::TargetMover::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TargetMover.Update
void Pathfinding::TargetMover::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TargetMover.UpdateTargetPosition
void Pathfinding::TargetMover::UpdateTargetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::UpdateTargetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTargetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.IGraphInternals
#include "Pathfinding/IGraphInternals.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.IGraphInternals.get_SerializedEditorSettings
::StringW Pathfinding::IGraphInternals::get_SerializedEditorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IGraphInternals::get_SerializedEditorSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IGraphInternals*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IGraphInternals.set_SerializedEditorSettings
void Pathfinding::IGraphInternals::set_SerializedEditorSettings(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IGraphInternals::set_SerializedEditorSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IGraphInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IGraphInternals.OnDestroy
void Pathfinding::IGraphInternals::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IGraphInternals::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IGraphInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IGraphInternals.DestroyAllNodes
void Pathfinding::IGraphInternals::DestroyAllNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IGraphInternals::DestroyAllNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IGraphInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IGraphInternals.ScanInternal
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding::IGraphInternals::ScanInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IGraphInternals::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IGraphInternals*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IGraphInternals.SerializeExtraInfo
void Pathfinding::IGraphInternals::SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IGraphInternals::SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IGraphInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.IGraphInternals.DeserializeExtraInfo
void Pathfinding::IGraphInternals::DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IGraphInternals::DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IGraphInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.IGraphInternals.PostDeserialization
void Pathfinding::IGraphInternals::PostDeserialization(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IGraphInternals::PostDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IGraphInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.IGraphInternals.DeserializeSettingsCompatibility
void Pathfinding::IGraphInternals::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IGraphInternals::DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IGraphInternals*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: Pathfinding.NavGraph/<>c
#include "Pathfinding/NavGraph_--c.hpp"
// Including type: Pathfinding.NavGraph/<>c__DisplayClass11_0
#include "Pathfinding/NavGraph_--c__DisplayClass11_0.hpp"
// Including type: Pathfinding.NavGraph/<>c__DisplayClass12_0
#include "Pathfinding/NavGraph_--c__DisplayClass12_0.hpp"
// Including type: Pathfinding.NavGraph/<>c__DisplayClass19_0
#include "Pathfinding/NavGraph_--c__DisplayClass19_0.hpp"
// Including type: Pathfinding.NavGraph/<>c__DisplayClass22_0
#include "Pathfinding/NavGraph_--c__DisplayClass22_0.hpp"
// Including type: Pathfinding.NavGraph/<>c__DisplayClass33_0
#include "Pathfinding/NavGraph_--c__DisplayClass33_0.hpp"
// Including type: Pathfinding.NavGraph/<>c__DisplayClass34_0
#include "Pathfinding/NavGraph_--c__DisplayClass34_0.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.NNInfoInternal
#include "Pathfinding/NNInfoInternal.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: Pathfinding.Util.RetainedGizmos
#include "Pathfinding/Util/RetainedGizmos.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AstarPath active
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& Pathfinding::NavGraph::dyn_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "active"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.Guid guid
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::Guid& Pathfinding::NavGraph::dyn_guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_guid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "guid"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 initialPenalty
[[deprecated("Use field access instead!")]] uint& Pathfinding::NavGraph::dyn_initialPenalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_initialPenalty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialPenalty"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean open
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavGraph::dyn_open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_open");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "open"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 graphIndex
[[deprecated("Use field access instead!")]] uint& Pathfinding::NavGraph::dyn_graphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_graphIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::NavGraph::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean drawGizmos
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavGraph::dyn_drawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_drawGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean infoScreenOpen
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavGraph::dyn_infoScreenOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_infoScreenOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infoScreenOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String serializedEditorSettings
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::NavGraph::dyn_serializedEditorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_serializedEditorSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedEditorSettings"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Matrix4x4 matrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::NavGraph::dyn_matrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_matrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Matrix4x4 inverseMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::NavGraph::dyn_inverseMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_inverseMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inverseMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph.get_exists
bool Pathfinding::NavGraph::get_exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::get_exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.CountNodes
int Pathfinding::NavGraph::CountNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::CountNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.GetNodes
void Pathfinding::NavGraph::GetNodes(::System::Func_2<::Pathfinding::GraphNode*, bool>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.NavGraph.GetNodes
void Pathfinding::NavGraph::GetNodes(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.NavGraph.SetMatrix
void Pathfinding::NavGraph::SetMatrix(::UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::SetMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: Pathfinding.NavGraph.RelocateNodes
void Pathfinding::NavGraph::RelocateNodes(::UnityEngine::Matrix4x4 oldMatrix, ::UnityEngine::Matrix4x4 newMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::RelocateNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RelocateNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldMatrix), ::il2cpp_utils::ExtractType(newMatrix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldMatrix, newMatrix);
}
// Autogenerated method: Pathfinding.NavGraph.AssertSafeToUpdateGraph
void Pathfinding::NavGraph::AssertSafeToUpdateGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::AssertSafeToUpdateGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertSafeToUpdateGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.RelocateNodes
void Pathfinding::NavGraph::RelocateNodes(::UnityEngine::Matrix4x4 deltaMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::RelocateNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaMatrix);
}
// Autogenerated method: Pathfinding.NavGraph.GetNearest
::Pathfinding::NNInfoInternal Pathfinding::NavGraph::GetNearest(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.NavGraph.GetNearest
::Pathfinding::NNInfoInternal Pathfinding::NavGraph::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.NavGraph.GetNearest
::Pathfinding::NNInfoInternal Pathfinding::NavGraph::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNearest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: Pathfinding.NavGraph.GetNearestForce
::Pathfinding::NNInfoInternal Pathfinding::NavGraph::GetNearestForce(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNearestForce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.NavGraph.OnDestroy
void Pathfinding::NavGraph::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.DestroyAllNodes
void Pathfinding::NavGraph::DestroyAllNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::DestroyAllNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.ScanGraph
void Pathfinding::NavGraph::ScanGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::ScanGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.Scan
void Pathfinding::NavGraph::Scan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.ScanInternal
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding::NavGraph::ScanInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.SerializeExtraInfo
void Pathfinding::NavGraph::SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavGraph.DeserializeExtraInfo
void Pathfinding::NavGraph::DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavGraph.PostDeserialization
void Pathfinding::NavGraph::PostDeserialization(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::PostDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavGraph.DeserializeSettingsCompatibility
void Pathfinding::NavGraph::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavGraph.OnDrawGizmos
void Pathfinding::NavGraph::OnDrawGizmos(::Pathfinding::Util::RetainedGizmos* gizmos, bool drawNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::OnDrawGizmos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gizmos, drawNodes);
}
// Autogenerated method: Pathfinding.NavGraph.DrawUnwalkableNodes
void Pathfinding::NavGraph::DrawUnwalkableNodes(float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::DrawUnwalkableNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawUnwalkableNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: Pathfinding.NavGraph.Pathfinding.IGraphInternals.get_SerializedEditorSettings
::StringW Pathfinding::NavGraph::Pathfinding_IGraphInternals_get_SerializedEditorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Pathfinding.IGraphInternals.get_SerializedEditorSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.Pathfinding.IGraphInternals.set_SerializedEditorSettings
void Pathfinding::NavGraph::Pathfinding_IGraphInternals_set_SerializedEditorSettings(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Pathfinding.IGraphInternals.set_SerializedEditorSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.NavGraph.Pathfinding.IGraphInternals.OnDestroy
void Pathfinding::NavGraph::Pathfinding_IGraphInternals_OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Pathfinding.IGraphInternals.OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.Pathfinding.IGraphInternals.DestroyAllNodes
void Pathfinding::NavGraph::Pathfinding_IGraphInternals_DestroyAllNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Pathfinding.IGraphInternals.DestroyAllNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.Pathfinding.IGraphInternals.ScanInternal
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding::NavGraph::Pathfinding_IGraphInternals_ScanInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Pathfinding.IGraphInternals.ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.Pathfinding.IGraphInternals.SerializeExtraInfo
void Pathfinding::NavGraph::Pathfinding_IGraphInternals_SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Pathfinding.IGraphInternals.SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavGraph.Pathfinding.IGraphInternals.DeserializeExtraInfo
void Pathfinding::NavGraph::Pathfinding_IGraphInternals_DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Pathfinding.IGraphInternals.DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavGraph.Pathfinding.IGraphInternals.PostDeserialization
void Pathfinding::NavGraph::Pathfinding_IGraphInternals_PostDeserialization(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Pathfinding.IGraphInternals.PostDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavGraph.Pathfinding.IGraphInternals.DeserializeSettingsCompatibility
void Pathfinding::NavGraph::Pathfinding_IGraphInternals_DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Pathfinding.IGraphInternals.DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c
#include "Pathfinding/NavGraph_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.NavGraph/<>c <>9
::Pathfinding::NavGraph::$$c* Pathfinding::NavGraph::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Pathfinding::NavGraph::$$c*>("Pathfinding", "NavGraph/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.NavGraph/<>c <>9
void Pathfinding::NavGraph::$$c::_set_$$9(::Pathfinding::NavGraph::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "NavGraph/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Pathfinding.GraphNode> <>9__25_0
::System::Action_1<::Pathfinding::GraphNode*>* Pathfinding::NavGraph::$$c::_get_$$9__25_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::_get_$$9__25_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Pathfinding::GraphNode*>*>("Pathfinding", "NavGraph/<>c", "<>9__25_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Pathfinding.GraphNode> <>9__25_0
void Pathfinding::NavGraph::$$c::_set_$$9__25_0(::System::Action_1<::Pathfinding::GraphNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::_set_$$9__25_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "NavGraph/<>c", "<>9__25_0", value)));
}
// Autogenerated method: Pathfinding.NavGraph/<>c..cctor
void Pathfinding::NavGraph::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavGraph/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph/<>c.<DestroyAllNodes>b__25_0
void Pathfinding::NavGraph::$$c::$DestroyAllNodes$b__25_0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::<DestroyAllNodes>b__25_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DestroyAllNodes>b__25_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c__DisplayClass11_0
#include "Pathfinding/NavGraph_--c__DisplayClass11_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& Pathfinding::NavGraph::$$c__DisplayClass11_0::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass11_0::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass11_0.<CountNodes>b__0
void Pathfinding::NavGraph::$$c__DisplayClass11_0::$CountNodes$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass11_0::<CountNodes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CountNodes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c__DisplayClass12_0
#include "Pathfinding/NavGraph_--c__DisplayClass12_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean cont
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavGraph::$$c__DisplayClass12_0::dyn_cont() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass12_0::dyn_cont");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cont"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Pathfinding.GraphNode,System.Boolean> action
[[deprecated("Use field access instead!")]] ::System::Func_2<::Pathfinding::GraphNode*, bool>*& Pathfinding::NavGraph::$$c__DisplayClass12_0::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass12_0::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Func_2<::Pathfinding::GraphNode*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass12_0.<GetNodes>b__0
void Pathfinding::NavGraph::$$c__DisplayClass12_0::$GetNodes$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass12_0::<GetNodes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetNodes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c__DisplayClass19_0
#include "Pathfinding/NavGraph_--c__DisplayClass19_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Matrix4x4 deltaMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::NavGraph::$$c__DisplayClass19_0::dyn_deltaMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass19_0::dyn_deltaMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deltaMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass19_0.<RelocateNodes>b__0
void Pathfinding::NavGraph::$$c__DisplayClass19_0::$RelocateNodes$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass19_0::<RelocateNodes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RelocateNodes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c__DisplayClass22_0
#include "Pathfinding/NavGraph_--c__DisplayClass22_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDist
[[deprecated("Use field access instead!")]] float& Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_minDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_minDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode minNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_minNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_minNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minConstDist
[[deprecated("Use field access instead!")]] float& Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_minConstDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_minConstDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minConstDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDistSqr
[[deprecated("Use field access instead!")]] float& Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_maxDistSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_maxDistSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NNConstraint constraint
[[deprecated("Use field access instead!")]] ::Pathfinding::NNConstraint*& Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_constraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_constraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constraint"))->offset;
  return *reinterpret_cast<::Pathfinding::NNConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode minConstNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_minConstNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass22_0::dyn_minConstNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minConstNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass22_0.<GetNearest>b__0
void Pathfinding::NavGraph::$$c__DisplayClass22_0::$GetNearest$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass22_0::<GetNearest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetNearest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c__DisplayClass33_0
#include "Pathfinding/NavGraph_--c__DisplayClass33_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.RetainedGizmos/Hasher hasher
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::RetainedGizmos::Hasher& Pathfinding::NavGraph::$$c__DisplayClass33_0::dyn_hasher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass33_0::dyn_hasher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasher"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::RetainedGizmos::Hasher*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass33_0.<OnDrawGizmos>b__0
void Pathfinding::NavGraph::$$c__DisplayClass33_0::$OnDrawGizmos$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass33_0::<OnDrawGizmos>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnDrawGizmos>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c__DisplayClass34_0
#include "Pathfinding/NavGraph_--c__DisplayClass34_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single size
[[deprecated("Use field access instead!")]] float& Pathfinding::NavGraph::$$c__DisplayClass34_0::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass34_0::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass34_0.<DrawUnwalkableNodes>b__0
void Pathfinding::NavGraph::$$c__DisplayClass34_0::$DrawUnwalkableNodes$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass34_0::<DrawUnwalkableNodes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DrawUnwalkableNodes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphCollision
#include "Pathfinding/GraphCollision.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Collider2D[] dummyArray
::ArrayW<::UnityEngine::Collider2D*> Pathfinding::GraphCollision::_get_dummyArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::_get_dummyArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Collider2D*>>("Pathfinding", "GraphCollision", "dummyArray"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Collider2D[] dummyArray
void Pathfinding::GraphCollision::_set_dummyArray(::ArrayW<::UnityEngine::Collider2D*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::_set_dummyArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphCollision", "dummyArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single RaycastErrorMargin
float Pathfinding::GraphCollision::_get_RaycastErrorMargin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::_get_RaycastErrorMargin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding", "GraphCollision", "RaycastErrorMargin"));
}
// Autogenerated static field setter
// Set static field: static public System.Single RaycastErrorMargin
void Pathfinding::GraphCollision::_set_RaycastErrorMargin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::_set_RaycastErrorMargin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphCollision", "RaycastErrorMargin", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ColliderType type
[[deprecated("Use field access instead!")]] ::Pathfinding::ColliderType& Pathfinding::GraphCollision::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Pathfinding::ColliderType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single diameter
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_diameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_diameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diameter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single collisionOffset
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_collisionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_collisionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collisionOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RayDirection rayDirection
[[deprecated("Use field access instead!")]] ::Pathfinding::RayDirection& Pathfinding::GraphCollision::dyn_rayDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_rayDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayDirection"))->offset;
  return *reinterpret_cast<::Pathfinding::RayDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::GraphCollision::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask heightMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::GraphCollision::dyn_heightMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_heightMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fromHeight
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_fromHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_fromHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean thickRaycast
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphCollision::dyn_thickRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_thickRaycast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single thickRaycastDiameter
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_thickRaycastDiameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_thickRaycastDiameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycastDiameter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean unwalkableWhenNoGround
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphCollision::dyn_unwalkableWhenNoGround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_unwalkableWhenNoGround");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unwalkableWhenNoGround"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean use2D
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphCollision::dyn_use2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_use2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "use2D"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean collisionCheck
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphCollision::dyn_collisionCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_collisionCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collisionCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean heightCheck
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphCollision::dyn_heightCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_heightCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 up
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphCollision::dyn_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_up");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "up"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 upheight
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphCollision::dyn_upheight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_upheight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upheight"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ContactFilter2D contactFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::ContactFilter2D& Pathfinding::GraphCollision::dyn_contactFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_contactFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contactFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::ContactFilter2D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single finalRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_finalRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_finalRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single finalRaycastRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_finalRaycastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_finalRaycastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalRaycastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] hitBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& Pathfinding::GraphCollision::dyn_hitBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_hitBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphCollision.Initialize
void Pathfinding::GraphCollision::Initialize(::Pathfinding::Util::GraphTransform* transform, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, scale);
}
// Autogenerated method: Pathfinding.GraphCollision.Check
bool Pathfinding::GraphCollision::Check(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.GraphCollision.CheckHeight
::UnityEngine::Vector3 Pathfinding::GraphCollision::CheckHeight(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::CheckHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.GraphCollision.CheckHeight
::UnityEngine::Vector3 Pathfinding::GraphCollision::CheckHeight(::UnityEngine::Vector3 position, ByRef<::UnityEngine::RaycastHit> hit, ByRef<bool> walkable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::CheckHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, byref(hit), byref(walkable));
}
// Autogenerated method: Pathfinding.GraphCollision.CheckHeightAll
::ArrayW<::UnityEngine::RaycastHit> Pathfinding::GraphCollision::CheckHeightAll(::UnityEngine::Vector3 position, ByRef<int> numHits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::CheckHeightAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHeightAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(this, ___internal__method, position, byref(numHits));
}
// Autogenerated method: Pathfinding.GraphCollision.DeserializeSettingsCompatibility
void Pathfinding::GraphCollision::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::DeserializeSettingsCompatibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSettingsCompatibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GraphCollision..cctor
void Pathfinding::GraphCollision::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphCollision", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ColliderType
#include "Pathfinding/ColliderType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.ColliderType Sphere
::Pathfinding::ColliderType Pathfinding::ColliderType::_get_Sphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_get_Sphere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ColliderType>("Pathfinding", "ColliderType", "Sphere"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ColliderType Sphere
void Pathfinding::ColliderType::_set_Sphere(::Pathfinding::ColliderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_set_Sphere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ColliderType", "Sphere", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ColliderType Capsule
::Pathfinding::ColliderType Pathfinding::ColliderType::_get_Capsule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_get_Capsule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ColliderType>("Pathfinding", "ColliderType", "Capsule"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ColliderType Capsule
void Pathfinding::ColliderType::_set_Capsule(::Pathfinding::ColliderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_set_Capsule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ColliderType", "Capsule", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ColliderType Ray
::Pathfinding::ColliderType Pathfinding::ColliderType::_get_Ray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_get_Ray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ColliderType>("Pathfinding", "ColliderType", "Ray"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ColliderType Ray
void Pathfinding::ColliderType::_set_Ray(::Pathfinding::ColliderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_set_Ray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ColliderType", "Ray", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::ColliderType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RayDirection
#include "Pathfinding/RayDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.RayDirection Up
::Pathfinding::RayDirection Pathfinding::RayDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RayDirection>("Pathfinding", "RayDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RayDirection Up
void Pathfinding::RayDirection::_set_Up(::Pathfinding::RayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RayDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RayDirection Down
::Pathfinding::RayDirection Pathfinding::RayDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RayDirection>("Pathfinding", "RayDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RayDirection Down
void Pathfinding::RayDirection::_set_Down(::Pathfinding::RayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RayDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RayDirection Both
::Pathfinding::RayDirection Pathfinding::RayDirection::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RayDirection>("Pathfinding", "RayDirection", "Both"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RayDirection Both
void Pathfinding::RayDirection::_set_Both(::Pathfinding::RayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RayDirection", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::RayDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GridGraph
#include "Pathfinding/GridGraph.hpp"
// Including type: Pathfinding.GridGraph/TextureData
#include "Pathfinding/GridGraph_TextureData.hpp"
// Including type: Pathfinding.GridGraph/<>c
#include "Pathfinding/GridGraph_--c.hpp"
// Including type: Pathfinding.GridGraph/<>c__DisplayClass64_0
#include "Pathfinding/GridGraph_--c__DisplayClass64_0.hpp"
// Including type: Pathfinding.GridGraph/<ScanInternal>d__92
#include "Pathfinding/GridGraph_-ScanInternal-d__92.hpp"
// Including type: Pathfinding.GraphCollision
#include "Pathfinding/GraphCollision.hpp"
// Including type: Pathfinding.GridNodeBase
#include "Pathfinding/GridNodeBase.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: Pathfinding.GridNode
#include "Pathfinding/GridNode.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.Util.GraphGizmoHelper
#include "Pathfinding/Util/GraphGizmoHelper.hpp"
// Including type: Pathfinding.IntRect
#include "Pathfinding/IntRect.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphUpdateShape
#include "Pathfinding/GraphUpdateShape.hpp"
// Including type: Pathfinding.GraphUpdateThreading
#include "Pathfinding/GraphUpdateThreading.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.GraphHitInfo
#include "Pathfinding/GraphHitInfo.hpp"
// Including type: Pathfinding.Int2
#include "Pathfinding/Int2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Pathfinding.GridHitInfo
#include "Pathfinding/GridHitInfo.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: Pathfinding.NNInfoInternal
#include "Pathfinding/NNInfoInternal.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Pathfinding.Util.RetainedGizmos
#include "Pathfinding/Util/RetainedGizmos.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Single StandardIsometricAngle
float Pathfinding::GridGraph::_get_StandardIsometricAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_get_StandardIsometricAngle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding", "GridGraph", "StandardIsometricAngle"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single StandardIsometricAngle
void Pathfinding::GridGraph::_set_StandardIsometricAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_set_StandardIsometricAngle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph", "StandardIsometricAngle", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single StandardDimetricAngle
float Pathfinding::GridGraph::_get_StandardDimetricAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_get_StandardDimetricAngle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding", "GridGraph", "StandardDimetricAngle"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single StandardDimetricAngle
void Pathfinding::GridGraph::_set_StandardDimetricAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_set_StandardDimetricAngle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph", "StandardDimetricAngle", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] hexagonNeighbourIndices
::ArrayW<int> Pathfinding::GridGraph::_get_hexagonNeighbourIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_get_hexagonNeighbourIndices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding", "GridGraph", "hexagonNeighbourIndices"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] hexagonNeighbourIndices
void Pathfinding::GridGraph::_set_hexagonNeighbourIndices(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_set_hexagonNeighbourIndices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph", "hexagonNeighbourIndices", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 getNearestForceOverlap
int Pathfinding::GridGraph::_get_getNearestForceOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_get_getNearestForceOverlap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridGraph", "getNearestForceOverlap"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 getNearestForceOverlap
void Pathfinding::GridGraph::_set_getNearestForceOverlap(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_set_getNearestForceOverlap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph", "getNearestForceOverlap", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FixedPrecisionScale
int Pathfinding::GridGraph::_get_FixedPrecisionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_get_FixedPrecisionScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridGraph", "FixedPrecisionScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FixedPrecisionScale
void Pathfinding::GridGraph::_set_FixedPrecisionScale(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_set_FixedPrecisionScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph", "FixedPrecisionScale", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.InspectorGridMode inspectorGridMode
[[deprecated("Use field access instead!")]] ::Pathfinding::InspectorGridMode& Pathfinding::GridGraph::dyn_inspectorGridMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_inspectorGridMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inspectorGridMode"))->offset;
  return *reinterpret_cast<::Pathfinding::InspectorGridMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.InspectorGridHexagonNodeSize inspectorHexagonSizeMode
[[deprecated("Use field access instead!")]] ::Pathfinding::InspectorGridHexagonNodeSize& Pathfinding::GridGraph::dyn_inspectorHexagonSizeMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_inspectorHexagonSizeMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inspectorHexagonSizeMode"))->offset;
  return *reinterpret_cast<::Pathfinding::InspectorGridHexagonNodeSize*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 depth
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single aspectRatio
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_aspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_aspectRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aspectRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single isometricAngle
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_isometricAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_isometricAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isometricAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean uniformEdgeCosts
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_uniformEdgeCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_uniformEdgeCosts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uniformEdgeCosts"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GridGraph::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GridGraph::dyn_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 unclampedSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::GridGraph::dyn_unclampedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_unclampedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unclampedSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nodeSize
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_nodeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_nodeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphCollision collision
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphCollision*& Pathfinding::GridGraph::dyn_collision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_collision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collision"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphCollision**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxClimb
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_maxClimb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_maxClimb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxClimb"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSlope
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_maxSlope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_maxSlope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSlope"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 erodeIterations
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::dyn_erodeIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_erodeIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "erodeIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean erosionUseTags
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_erosionUseTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_erosionUseTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "erosionUseTags"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 erosionFirstTag
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::dyn_erosionFirstTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_erosionFirstTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "erosionFirstTag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NumNeighbours neighbours
[[deprecated("Use field access instead!")]] ::Pathfinding::NumNeighbours& Pathfinding::GridGraph::dyn_neighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_neighbours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbours"))->offset;
  return *reinterpret_cast<::Pathfinding::NumNeighbours*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cutCorners
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_cutCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_cutCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutCorners"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single penaltyPositionOffset
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_penaltyPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyPositionOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean penaltyPosition
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_penaltyPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single penaltyPositionFactor
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_penaltyPositionFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyPositionFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyPositionFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean penaltyAngle
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_penaltyAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyAngle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single penaltyAngleFactor
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_penaltyAngleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyAngleFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyAngleFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single penaltyAnglePower
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_penaltyAnglePower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyAnglePower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyAnglePower"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useJumpPointSearch
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_useJumpPointSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_useJumpPointSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useJumpPointSearch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showMeshOutline
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_showMeshOutline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_showMeshOutline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showMeshOutline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showNodeConnections
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_showNodeConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_showNodeConnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showNodeConnections"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showMeshSurface
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_showMeshSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_showMeshSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showMeshSurface"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GridGraph/TextureData textureData
[[deprecated("Use field access instead!")]] ::Pathfinding::GridGraph::TextureData*& Pathfinding::GridGraph::dyn_textureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_textureData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureData"))->offset;
  return *reinterpret_cast<::Pathfinding::GridGraph::TextureData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <size>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::GridGraph::dyn_$size$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_$size$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<size>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] neighbourOffsets
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::GridGraph::dyn_neighbourOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_neighbourOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbourOffsets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32[] neighbourCosts
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Pathfinding::GridGraph::dyn_neighbourCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_neighbourCosts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbourCosts"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] neighbourXOffsets
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::GridGraph::dyn_neighbourXOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_neighbourXOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbourXOffsets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] neighbourZOffsets
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::GridGraph::dyn_neighbourZOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_neighbourZOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbourZOffsets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GridNodeBase[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GridNodeBase*>& Pathfinding::GridGraph::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GridNodeBase*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Util.GraphTransform <transform>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::GraphTransform*& Pathfinding::GridGraph::dyn_$transform$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_$transform$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<transform>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::GraphTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GridGraph.RemoveGridGraphFromStatic
void Pathfinding::GridGraph::RemoveGridGraphFromStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::RemoveGridGraphFromStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGridGraphFromStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.get_uniformWidthDepthGrid
bool Pathfinding::GridGraph::get_uniformWidthDepthGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_uniformWidthDepthGrid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.get_LayerCount
int Pathfinding::GridGraph::get_LayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_LayerCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 37));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.get_useRaycastNormal
bool Pathfinding::GridGraph::get_useRaycastNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_useRaycastNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useRaycastNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.get_size
::UnityEngine::Vector2 Pathfinding::GridGraph::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.set_size
void Pathfinding::GridGraph::set_size(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridGraph.get_transform
::Pathfinding::Util::GraphTransform* Pathfinding::GridGraph::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.set_transform
void Pathfinding::GridGraph::set_transform(::Pathfinding::Util::GraphTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::set_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridGraph.get_is2D
bool Pathfinding::GridGraph::get_is2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_is2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_is2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.set_is2D
void Pathfinding::GridGraph::set_is2D(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::set_is2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_is2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridGraph.RelocateNodes
void Pathfinding::GridGraph::RelocateNodes(::UnityEngine::Vector3 center, ::UnityEngine::Quaternion rotation, float nodeSize, float aspectRatio, float isometricAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::RelocateNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RelocateNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(nodeSize), ::il2cpp_utils::ExtractType(aspectRatio), ::il2cpp_utils::ExtractType(isometricAngle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, center, rotation, nodeSize, aspectRatio, isometricAngle);
}
// Autogenerated method: Pathfinding.GridGraph.GraphPointToWorld
::Pathfinding::Int3 Pathfinding::GridGraph::GraphPointToWorld(int x, int z, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GraphPointToWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphPointToWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, x, z, height);
}
// Autogenerated method: Pathfinding.GridGraph.ConvertHexagonSizeToNodeSize
float Pathfinding::GridGraph::ConvertHexagonSizeToNodeSize(::Pathfinding::InspectorGridHexagonNodeSize mode, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ConvertHexagonSizeToNodeSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridGraph", "ConvertHexagonSizeToNodeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode, value);
}
// Autogenerated method: Pathfinding.GridGraph.ConvertNodeSizeToHexagonSize
float Pathfinding::GridGraph::ConvertNodeSizeToHexagonSize(::Pathfinding::InspectorGridHexagonNodeSize mode, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ConvertNodeSizeToHexagonSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridGraph", "ConvertNodeSizeToHexagonSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode, value);
}
// Autogenerated method: Pathfinding.GridGraph.get_Width
int Pathfinding::GridGraph::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.set_Width
void Pathfinding::GridGraph::set_Width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::set_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridGraph.get_Depth
int Pathfinding::GridGraph::get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_Depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.set_Depth
void Pathfinding::GridGraph::set_Depth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::set_Depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridGraph.GetConnectionCost
uint Pathfinding::GridGraph::GetConnectionCost(int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetConnectionCost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionCost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, dir);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodeConnection
::Pathfinding::GridNode* Pathfinding::GridGraph::GetNodeConnection(::Pathfinding::GridNode* node, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNode*, false>(this, ___internal__method, node, dir);
}
// Autogenerated method: Pathfinding.GridGraph.HasNodeConnection
bool Pathfinding::GridGraph::HasNodeConnection(::Pathfinding::GridNode* node, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::HasNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, dir);
}
// Autogenerated method: Pathfinding.GridGraph.SetNodeConnection
void Pathfinding::GridGraph::SetNodeConnection(::Pathfinding::GridNode* node, int dir, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SetNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, dir, value);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodeConnection
::Pathfinding::GridNode* Pathfinding::GridGraph::GetNodeConnection(int index, int x, int z, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNode*, false>(this, ___internal__method, index, x, z, dir);
}
// Autogenerated method: Pathfinding.GridGraph.SetNodeConnection
void Pathfinding::GridGraph::SetNodeConnection(int index, int x, int z, int dir, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SetNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, x, z, dir, value);
}
// Autogenerated method: Pathfinding.GridGraph.HasNodeConnection
bool Pathfinding::GridGraph::HasNodeConnection(int index, int x, int z, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::HasNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, x, z, dir);
}
// Autogenerated method: Pathfinding.GridGraph.SetGridShape
void Pathfinding::GridGraph::SetGridShape(::Pathfinding::InspectorGridMode shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SetGridShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGridShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shape);
}
// Autogenerated method: Pathfinding.GridGraph.SetDimensions
void Pathfinding::GridGraph::SetDimensions(int width, int depth, float nodeSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SetDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(nodeSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width, depth, nodeSize);
}
// Autogenerated method: Pathfinding.GridGraph.UpdateSizeFromWidthDepth
void Pathfinding::GridGraph::UpdateSizeFromWidthDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::UpdateSizeFromWidthDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSizeFromWidthDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.GenerateMatrix
void Pathfinding::GridGraph::GenerateMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GenerateMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.UpdateTransform
void Pathfinding::GridGraph::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::UpdateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateTransform
::Pathfinding::Util::GraphTransform* Pathfinding::GridGraph::CalculateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateDimensions
void Pathfinding::GridGraph::CalculateDimensions(ByRef<int> width, ByRef<int> depth, ByRef<float> nodeSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(width), byref(depth), byref(nodeSize));
}
// Autogenerated method: Pathfinding.GridGraph.GetNearestFromGraphSpace
::Pathfinding::GridNodeBase* Pathfinding::GridGraph::GetNearestFromGraphSpace(::UnityEngine::Vector3 positionGraphSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNearestFromGraphSpace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNodeBase*, false>(this, ___internal__method, positionGraphSpace);
}
// Autogenerated method: Pathfinding.GridGraph.SetUpOffsetsAndCosts
void Pathfinding::GridGraph::SetUpOffsetsAndCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SetUpOffsetsAndCosts");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.UpdateNodePositionCollision
void Pathfinding::GridGraph::UpdateNodePositionCollision(::Pathfinding::GridNode* node, int x, int z, bool resetPenalty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::UpdateNodePositionCollision");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, x, z, resetPenalty);
}
// Autogenerated method: Pathfinding.GridGraph.RecalculateCell
void Pathfinding::GridGraph::RecalculateCell(int x, int z, bool resetPenalties, bool resetTags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::RecalculateCell");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, resetPenalties, resetTags);
}
// Autogenerated method: Pathfinding.GridGraph.ErosionAnyFalseConnections
bool Pathfinding::GridGraph::ErosionAnyFalseConnections(::Pathfinding::GraphNode* baseNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ErosionAnyFalseConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 42));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, baseNode);
}
// Autogenerated method: Pathfinding.GridGraph.ErodeNode
void Pathfinding::GridGraph::ErodeNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ErodeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ErodeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridGraph.ErodeNodeWithTagsInit
void Pathfinding::GridGraph::ErodeNodeWithTagsInit(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ErodeNodeWithTagsInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ErodeNodeWithTagsInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridGraph.ErodeNodeWithTags
void Pathfinding::GridGraph::ErodeNodeWithTags(::Pathfinding::GraphNode* node, int iteration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ErodeNodeWithTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ErodeNodeWithTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(iteration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, iteration);
}
// Autogenerated method: Pathfinding.GridGraph.ErodeWalkableArea
void Pathfinding::GridGraph::ErodeWalkableArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ErodeWalkableArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.ErodeWalkableArea
void Pathfinding::GridGraph::ErodeWalkableArea(int xmin, int zmin, int xmax, int zmax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ErodeWalkableArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ErodeWalkableArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmin), ::il2cpp_utils::ExtractType(zmin), ::il2cpp_utils::ExtractType(xmax), ::il2cpp_utils::ExtractType(zmax)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmin, zmin, xmax, zmax);
}
// Autogenerated method: Pathfinding.GridGraph.IsValidConnection
bool Pathfinding::GridGraph::IsValidConnection(::Pathfinding::GridNodeBase* node1, ::Pathfinding::GridNodeBase* node2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::IsValidConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 44));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node1, node2);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateConnectionsForCellAndNeighbours
void Pathfinding::GridGraph::CalculateConnectionsForCellAndNeighbours(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateConnectionsForCellAndNeighbours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateConnectionsForCellAndNeighbours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateConnections
void Pathfinding::GridGraph::CalculateConnections(::Pathfinding::GridNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridGraph", "CalculateConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateConnections
void Pathfinding::GridGraph::CalculateConnections(::Pathfinding::GridNodeBase* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateConnections
void Pathfinding::GridGraph::CalculateConnections(int x, int z, ::Pathfinding::GridNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, node);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateConnections
void Pathfinding::GridGraph::CalculateConnections(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.GridGraph.CreateNavmeshSurfaceVisualization
void Pathfinding::GridGraph::CreateNavmeshSurfaceVisualization(::ArrayW<::Pathfinding::GridNodeBase*> nodes, int nodeCount, ::Pathfinding::Util::GraphGizmoHelper* helper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CreateNavmeshSurfaceVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNavmeshSurfaceVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(nodeCount), ::il2cpp_utils::ExtractType(helper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodes, nodeCount, helper);
}
// Autogenerated method: Pathfinding.GridGraph.GetRectFromBounds
::Pathfinding::IntRect Pathfinding::GridGraph::GetRectFromBounds(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetRectFromBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRectFromBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::IntRect, false>(this, ___internal__method, bounds);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInArea
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::GetNodesInArea(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodesInArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, bounds);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInArea
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::GetNodesInArea(::Pathfinding::GraphUpdateShape* shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodesInArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, shape);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInArea
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::GetNodesInArea(::UnityEngine::Bounds bounds, ::Pathfinding::GraphUpdateShape* shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodesInArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(shape)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, bounds, shape);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInRegion
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::GetNodesInRegion(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodesInRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, bounds);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInRegion
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::GetNodesInRegion(::Pathfinding::GraphUpdateShape* shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodesInRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, shape);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInRegion
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::GetNodesInRegion(::UnityEngine::Bounds bounds, ::Pathfinding::GraphUpdateShape* shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInRegion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, bounds, shape);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInRegion
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::GetNodesInRegion(::Pathfinding::IntRect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInRegion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, rect);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInRegion
int Pathfinding::GridGraph::GetNodesInRegion(::Pathfinding::IntRect rect, ::ArrayW<::Pathfinding::GridNodeBase*> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInRegion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 50));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, rect, buffer);
}
// Autogenerated method: Pathfinding.GridGraph.GetNode
::Pathfinding::GridNodeBase* Pathfinding::GridGraph::GetNode(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 51));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNodeBase*, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.GridGraph.Pathfinding.IUpdatableGraph.CanUpdateAsync
::Pathfinding::GraphUpdateThreading Pathfinding::GridGraph::Pathfinding_IUpdatableGraph_CanUpdateAsync(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Pathfinding.IUpdatableGraph.CanUpdateAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphUpdateThreading, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.GridGraph.Pathfinding.IUpdatableGraph.UpdateAreaInit
void Pathfinding::GridGraph::Pathfinding_IUpdatableGraph_UpdateAreaInit(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Pathfinding.IUpdatableGraph.UpdateAreaInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.GridGraph.Pathfinding.IUpdatableGraph.UpdateAreaPost
void Pathfinding::GridGraph::Pathfinding_IUpdatableGraph_UpdateAreaPost(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Pathfinding.IUpdatableGraph.UpdateAreaPost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateAffectedRegions
void Pathfinding::GridGraph::CalculateAffectedRegions(::Pathfinding::GraphUpdateObject* o, ByRef<::Pathfinding::IntRect> originalRect, ByRef<::Pathfinding::IntRect> affectRect, ByRef<::Pathfinding::IntRect> physicsRect, ByRef<bool> willChangeWalkability, ByRef<int> erosion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateAffectedRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateAffectedRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::IntRect&>(), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::IntRect&>(), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::IntRect&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, byref(originalRect), byref(affectRect), byref(physicsRect), byref(willChangeWalkability), byref(erosion));
}
// Autogenerated method: Pathfinding.GridGraph.Pathfinding.IUpdatableGraph.UpdateArea
void Pathfinding::GridGraph::Pathfinding_IUpdatableGraph_UpdateArea(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Pathfinding.IUpdatableGraph.UpdateArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.GridGraph.Linecast
bool Pathfinding::GridGraph::Linecast(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, from, to);
}
// Autogenerated method: Pathfinding.GridGraph.Linecast
bool Pathfinding::GridGraph::Linecast(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, from, to, hint);
}
// Autogenerated method: Pathfinding.GridGraph.Linecast
bool Pathfinding::GridGraph::Linecast(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ::Pathfinding::GraphNode* hint, ByRef<::Pathfinding::GraphHitInfo> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, from, to, hint, byref(hit));
}
// Autogenerated method: Pathfinding.GridGraph.CrossMagnitude
int64_t Pathfinding::GridGraph::CrossMagnitude(::Pathfinding::Int2 a, ::Pathfinding::Int2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CrossMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridGraph", "CrossMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.GridGraph.ClipLineSegmentToBounds
bool Pathfinding::GridGraph::ClipLineSegmentToBounds(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ByRef<::UnityEngine::Vector3> outA, ByRef<::UnityEngine::Vector3> outB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ClipLineSegmentToBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipLineSegmentToBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, b, byref(outA), byref(outB));
}
// Autogenerated method: Pathfinding.GridGraph.Linecast
bool Pathfinding::GridGraph::Linecast(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ::Pathfinding::GraphNode* hint, ByRef<::Pathfinding::GraphHitInfo> hit, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* trace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, from, to, hint, byref(hit), trace);
}
// Autogenerated method: Pathfinding.GridGraph.Linecast
bool Pathfinding::GridGraph::Linecast(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ByRef<::Pathfinding::GraphHitInfo> hit, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* trace, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, from, to, byref(hit), trace, filter);
}
// Autogenerated method: Pathfinding.GridGraph.SnappedLinecast
bool Pathfinding::GridGraph::SnappedLinecast(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ::Pathfinding::GraphNode* hint, ByRef<::Pathfinding::GraphHitInfo> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SnappedLinecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SnappedLinecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(hint), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::GraphHitInfo&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, from, to, hint, byref(hit));
}
// Autogenerated method: Pathfinding.GridGraph.Linecast
bool Pathfinding::GridGraph::Linecast(::Pathfinding::GridNodeBase* fromNode, ::Pathfinding::GridNodeBase* toNode, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromNode), ::il2cpp_utils::ExtractType(toNode), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fromNode, toNode, filter);
}
// Autogenerated method: Pathfinding.GridGraph.Linecast
bool Pathfinding::GridGraph::Linecast(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ByRef<::Pathfinding::GridHitInfo> hit, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* trace, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::GridHitInfo&>(), ::il2cpp_utils::ExtractType(trace), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, from, to, byref(hit), trace, filter);
}
// Autogenerated method: Pathfinding.GridGraph.Linecast
bool Pathfinding::GridGraph::Linecast(::Pathfinding::GridNodeBase* fromNode, ::UnityEngine::Vector2 normalizedFromPoint, ::Pathfinding::GridNodeBase* toNode, ::UnityEngine::Vector2 normalizedToPoint, ByRef<::Pathfinding::GridHitInfo> hit, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* trace, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter, bool continuePastEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromNode), ::il2cpp_utils::ExtractType(normalizedFromPoint), ::il2cpp_utils::ExtractType(toNode), ::il2cpp_utils::ExtractType(normalizedToPoint), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::GridHitInfo&>(), ::il2cpp_utils::ExtractType(trace), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(continuePastEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fromNode, normalizedFromPoint, toNode, normalizedToPoint, byref(hit), trace, filter, continuePastEnd);
}
// Autogenerated method: Pathfinding.GridGraph.Linecast
bool Pathfinding::GridGraph::Linecast(::Pathfinding::GridNodeBase* fromNode, ::Pathfinding::Int2 fixedNormalizedFromPoint, ::Pathfinding::GridNodeBase* toNode, ::Pathfinding::Int2 fixedNormalizedToPoint, ByRef<::Pathfinding::GridHitInfo> hit, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* trace, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter, bool continuePastEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromNode), ::il2cpp_utils::ExtractType(fixedNormalizedFromPoint), ::il2cpp_utils::ExtractType(toNode), ::il2cpp_utils::ExtractType(fixedNormalizedToPoint), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::GridHitInfo&>(), ::il2cpp_utils::ExtractType(trace), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(continuePastEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fromNode, fixedNormalizedFromPoint, toNode, fixedNormalizedToPoint, byref(hit), trace, filter, continuePastEnd);
}
// Autogenerated method: Pathfinding.GridGraph.CheckConnection
bool Pathfinding::GridGraph::CheckConnection(::Pathfinding::GridNode* node, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CheckConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, dir);
}
// Autogenerated method: Pathfinding.GridGraph..cctor
void Pathfinding::GridGraph::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridGraph", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.OnDestroy
void Pathfinding::GridGraph::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.DestroyAllNodes
void Pathfinding::GridGraph::DestroyAllNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::DestroyAllNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.CountNodes
int Pathfinding::GridGraph::CountNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CountNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodes
void Pathfinding::GridGraph::GetNodes(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.GridGraph.RelocateNodes
void Pathfinding::GridGraph::RelocateNodes(::UnityEngine::Matrix4x4 deltaMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::RelocateNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaMatrix);
}
// Autogenerated method: Pathfinding.GridGraph.GetNearest
::Pathfinding::NNInfoInternal Pathfinding::GridGraph::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNearest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: Pathfinding.GridGraph.GetNearestForce
::Pathfinding::NNInfoInternal Pathfinding::GridGraph::GetNearestForce(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNearestForce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.GridGraph.ScanInternal
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding::GridGraph::ScanInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.OnDrawGizmos
void Pathfinding::GridGraph::OnDrawGizmos(::Pathfinding::Util::RetainedGizmos* gizmos, bool drawNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::OnDrawGizmos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gizmos, drawNodes);
}
// Autogenerated method: Pathfinding.GridGraph.SerializeExtraInfo
void Pathfinding::GridGraph::SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridGraph.DeserializeExtraInfo
void Pathfinding::GridGraph::DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridGraph.DeserializeSettingsCompatibility
void Pathfinding::GridGraph::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridGraph.PostDeserialization
void Pathfinding::GridGraph::PostDeserialization(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::PostDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GridGraph/TextureData
#include "Pathfinding/GridGraph_TextureData.hpp"
// Including type: Pathfinding.GridNodeBase
#include "Pathfinding/GridNodeBase.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enabled
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::TextureData::dyn_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::dyn_enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D source
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& Pathfinding::GridGraph::TextureData::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] factors
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::GridGraph::TextureData::dyn_factors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::dyn_factors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "factors"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GridGraph/TextureData/ChannelUse[] channels
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GridGraph::TextureData::ChannelUse>& Pathfinding::GridGraph::TextureData::dyn_channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::dyn_channels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channels"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GridGraph::TextureData::ChannelUse>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32[] data
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color32>& Pathfinding::GridGraph::TextureData::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GridGraph/TextureData.Initialize
void Pathfinding::GridGraph::TextureData::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph/TextureData.Apply
void Pathfinding::GridGraph::TextureData::Apply(::Pathfinding::GridNodeBase* node, int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, x, z);
}
// Autogenerated method: Pathfinding.GridGraph/TextureData.ApplyChannel
void Pathfinding::GridGraph::TextureData::ApplyChannel(::Pathfinding::GridNodeBase* node, int x, int z, int value, ::Pathfinding::GridGraph::TextureData::ChannelUse channelUse, float factor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::ApplyChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(channelUse), ::il2cpp_utils::ExtractType(factor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, x, z, value, channelUse, factor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GridGraph/TextureData/ChannelUse
#include "Pathfinding/GridGraph_TextureData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.GridGraph/TextureData/ChannelUse None
::Pathfinding::GridGraph::TextureData::ChannelUse Pathfinding::GridGraph::TextureData::ChannelUse::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::ChannelUse::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GridGraph::TextureData::ChannelUse>("Pathfinding", "GridGraph/TextureData/ChannelUse", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GridGraph/TextureData/ChannelUse None
void Pathfinding::GridGraph::TextureData::ChannelUse::_set_None(::Pathfinding::GridGraph::TextureData::ChannelUse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::ChannelUse::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph/TextureData/ChannelUse", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GridGraph/TextureData/ChannelUse Penalty
::Pathfinding::GridGraph::TextureData::ChannelUse Pathfinding::GridGraph::TextureData::ChannelUse::_get_Penalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::ChannelUse::_get_Penalty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GridGraph::TextureData::ChannelUse>("Pathfinding", "GridGraph/TextureData/ChannelUse", "Penalty"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GridGraph/TextureData/ChannelUse Penalty
void Pathfinding::GridGraph::TextureData::ChannelUse::_set_Penalty(::Pathfinding::GridGraph::TextureData::ChannelUse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::ChannelUse::_set_Penalty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph/TextureData/ChannelUse", "Penalty", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GridGraph/TextureData/ChannelUse Position
::Pathfinding::GridGraph::TextureData::ChannelUse Pathfinding::GridGraph::TextureData::ChannelUse::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::ChannelUse::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GridGraph::TextureData::ChannelUse>("Pathfinding", "GridGraph/TextureData/ChannelUse", "Position"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GridGraph/TextureData/ChannelUse Position
void Pathfinding::GridGraph::TextureData::ChannelUse::_set_Position(::Pathfinding::GridGraph::TextureData::ChannelUse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::ChannelUse::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph/TextureData/ChannelUse", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GridGraph/TextureData/ChannelUse WalkablePenalty
::Pathfinding::GridGraph::TextureData::ChannelUse Pathfinding::GridGraph::TextureData::ChannelUse::_get_WalkablePenalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::ChannelUse::_get_WalkablePenalty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::GridGraph::TextureData::ChannelUse>("Pathfinding", "GridGraph/TextureData/ChannelUse", "WalkablePenalty"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GridGraph/TextureData/ChannelUse WalkablePenalty
void Pathfinding::GridGraph::TextureData::ChannelUse::_set_WalkablePenalty(::Pathfinding::GridGraph::TextureData::ChannelUse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::ChannelUse::_set_WalkablePenalty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph/TextureData/ChannelUse", "WalkablePenalty", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::TextureData::ChannelUse::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::TextureData::ChannelUse::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GridGraph/<>c
#include "Pathfinding/GridGraph_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.GridGraph/<>c <>9
::Pathfinding::GridGraph::$$c* Pathfinding::GridGraph::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Pathfinding::GridGraph::$$c*>("Pathfinding", "GridGraph/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.GridGraph/<>c <>9
void Pathfinding::GridGraph::$$c::_set_$$9(::Pathfinding::GridGraph::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Pathfinding.GraphNode> <>9__1_0
::System::Action_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Pathfinding::GraphNode*>*>("Pathfinding", "GridGraph/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Pathfinding.GraphNode> <>9__1_0
void Pathfinding::GridGraph::$$c::_set_$$9__1_0(::System::Action_1<::Pathfinding::GraphNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph/<>c", "<>9__1_0", value)));
}
// Autogenerated method: Pathfinding.GridGraph/<>c..cctor
void Pathfinding::GridGraph::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridGraph/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph/<>c.<DestroyAllNodes>b__1_0
void Pathfinding::GridGraph::$$c::$DestroyAllNodes$b__1_0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$$c::<DestroyAllNodes>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DestroyAllNodes>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GridGraph/<>c__DisplayClass64_0
#include "Pathfinding/GridGraph_--c__DisplayClass64_0.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.GraphTransform previousTransform
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::GraphTransform*& Pathfinding::GridGraph::$$c__DisplayClass64_0::dyn_previousTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$$c__DisplayClass64_0::dyn_previousTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousTransform"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::GraphTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GridGraph <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::GridGraph*& Pathfinding::GridGraph::$$c__DisplayClass64_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$$c__DisplayClass64_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::GridGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GridGraph/<>c__DisplayClass64_0.<RelocateNodes>b__0
void Pathfinding::GridGraph::$$c__DisplayClass64_0::$RelocateNodes$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$$c__DisplayClass64_0::<RelocateNodes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RelocateNodes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.GridGraph/<ScanInternal>d__92
#include "Pathfinding/GridGraph_-ScanInternal-d__92.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Progress <>2__current
[[deprecated("Use field access instead!")]] ::Pathfinding::Progress& Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Pathfinding::Progress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GridGraph <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::GridGraph*& Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::GridGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <progressCounter>5__2
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$progressCounter$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$progressCounter$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<progressCounter>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <z>5__3
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$z$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::dyn_$z$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<z>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GridGraph/<ScanInternal>d__92.System.IDisposable.Dispose
void Pathfinding::GridGraph::$ScanInternal$d__92::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph::$ScanInternal$d__92*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph/<ScanInternal>d__92.MoveNext
bool Pathfinding::GridGraph::$ScanInternal$d__92::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph::$ScanInternal$d__92*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph/<ScanInternal>d__92.System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current
::Pathfinding::Progress Pathfinding::GridGraph::$ScanInternal$d__92::System_Collections_Generic_IEnumerator$Pathfinding_Progress$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph::$ScanInternal$d__92*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Progress, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph/<ScanInternal>d__92.System.Collections.IEnumerator.Reset
void Pathfinding::GridGraph::$ScanInternal$d__92::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph::$ScanInternal$d__92*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph/<ScanInternal>d__92.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::GridGraph::$ScanInternal$d__92::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph::$ScanInternal$d__92*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph/<ScanInternal>d__92.System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>* Pathfinding::GridGraph::$ScanInternal$d__92::System_Collections_Generic_IEnumerable$Pathfinding_Progress$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph::$ScanInternal$d__92*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph/<ScanInternal>d__92.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Pathfinding::GridGraph::$ScanInternal$d__92::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::$ScanInternal$d__92::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph::$ScanInternal$d__92*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NumNeighbours
#include "Pathfinding/NumNeighbours.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.NumNeighbours Four
::Pathfinding::NumNeighbours Pathfinding::NumNeighbours::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NumNeighbours>("Pathfinding", "NumNeighbours", "Four"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NumNeighbours Four
void Pathfinding::NumNeighbours::_set_Four(::Pathfinding::NumNeighbours value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NumNeighbours", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.NumNeighbours Eight
::Pathfinding::NumNeighbours Pathfinding::NumNeighbours::_get_Eight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_get_Eight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NumNeighbours>("Pathfinding", "NumNeighbours", "Eight"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NumNeighbours Eight
void Pathfinding::NumNeighbours::_set_Eight(::Pathfinding::NumNeighbours value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_set_Eight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NumNeighbours", "Eight", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.NumNeighbours Six
::Pathfinding::NumNeighbours Pathfinding::NumNeighbours::_get_Six() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_get_Six");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NumNeighbours>("Pathfinding", "NumNeighbours", "Six"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NumNeighbours Six
void Pathfinding::NumNeighbours::_set_Six(::Pathfinding::NumNeighbours value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_set_Six");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NumNeighbours", "Six", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::NumNeighbours::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.LayerGridGraph
#include "Pathfinding/LayerGridGraph.hpp"
// Including type: Pathfinding.GridNodeBase
#include "Pathfinding/GridNodeBase.hpp"
// Including type: Pathfinding.LayerGridGraph/HitComparer
#include "Pathfinding/LayerGridGraph_HitComparer.hpp"
// Including type: Pathfinding.LayerGridGraph/<ScanInternal>d__19
#include "Pathfinding/LayerGridGraph_-ScanInternal-d__19.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.GraphCollision
#include "Pathfinding/GraphCollision.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.LevelGridNode
#include "Pathfinding/LevelGridNode.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: Pathfinding.GraphUpdateShape
#include "Pathfinding/GraphUpdateShape.hpp"
// Including type: Pathfinding.IntRect
#include "Pathfinding/IntRect.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Pathfinding.NNInfoInternal
#include "Pathfinding/NNInfoInternal.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Pathfinding.LayerGridGraph/HitComparer comparer
::Pathfinding::LayerGridGraph::HitComparer* Pathfinding::LayerGridGraph::_get_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::_get_comparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::LayerGridGraph::HitComparer*>("Pathfinding", "LayerGridGraph", "comparer"));
}
// Autogenerated static field setter
// Set static field: static private readonly Pathfinding.LayerGridGraph/HitComparer comparer
void Pathfinding::LayerGridGraph::_set_comparer(::Pathfinding::LayerGridGraph::HitComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::_set_comparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "LayerGridGraph", "comparer", value));
}
// Autogenerated static field getter
// Get static field: static private Pathfinding.LayerGridGraph/HeightSample[] heightSampleBuffer
::ArrayW<::Pathfinding::LayerGridGraph::HeightSample> Pathfinding::LayerGridGraph::_get_heightSampleBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::_get_heightSampleBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::LayerGridGraph::HeightSample>>("Pathfinding", "LayerGridGraph", "heightSampleBuffer"));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.LayerGridGraph/HeightSample[] heightSampleBuffer
void Pathfinding::LayerGridGraph::_set_heightSampleBuffer(::ArrayW<::Pathfinding::LayerGridGraph::HeightSample> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::_set_heightSampleBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "LayerGridGraph", "heightSampleBuffer", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 layerCount
[[deprecated("Use field access instead!")]] int& Pathfinding::LayerGridGraph::dyn_layerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::dyn_layerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single mergeSpanRange
[[deprecated("Use field access instead!")]] float& Pathfinding::LayerGridGraph::dyn_mergeSpanRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::dyn_mergeSpanRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mergeSpanRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single characterHeight
[[deprecated("Use field access instead!")]] float& Pathfinding::LayerGridGraph::dyn_characterHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::dyn_characterHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lastScannedWidth
[[deprecated("Use field access instead!")]] int& Pathfinding::LayerGridGraph::dyn_lastScannedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::dyn_lastScannedWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastScannedWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lastScannedDepth
[[deprecated("Use field access instead!")]] int& Pathfinding::LayerGridGraph::dyn_lastScannedDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::dyn_lastScannedDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastScannedDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.LayerGridGraph.GetNode
::Pathfinding::GridNodeBase* Pathfinding::LayerGridGraph::GetNode(int x, int z, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::GetNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(layer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNodeBase*, false>(this, ___internal__method, x, z, layer);
}
// Autogenerated method: Pathfinding.LayerGridGraph.Pathfinding.IUpdatableGraph.UpdateArea
void Pathfinding::LayerGridGraph::Pathfinding_IUpdatableGraph_UpdateArea(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::Pathfinding.IUpdatableGraph.UpdateArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::LayerGridGraph*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.LayerGridGraph.SampleHeights
::ArrayW<::Pathfinding::LayerGridGraph::HeightSample> Pathfinding::LayerGridGraph::SampleHeights(::Pathfinding::GraphCollision* collision, float mergeSpanRange, ::UnityEngine::Vector3 position, ByRef<int> numHits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::SampleHeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "LayerGridGraph", "SampleHeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision), ::il2cpp_utils::ExtractType(mergeSpanRange), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::LayerGridGraph::HeightSample>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collision, mergeSpanRange, position, byref(numHits));
}
// Autogenerated method: Pathfinding.LayerGridGraph.AddLayers
void Pathfinding::LayerGridGraph::AddLayers(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::AddLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: Pathfinding.LayerGridGraph.CalculateConnections
void Pathfinding::LayerGridGraph::CalculateConnections(int x, int z, int layerIndex, ::Pathfinding::LevelGridNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::CalculateConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, layerIndex, node);
}
// Autogenerated method: Pathfinding.LayerGridGraph.CalculateConnections
void Pathfinding::LayerGridGraph::CalculateConnections(int x, int z, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::CalculateConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(layerIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, layerIndex);
}
// Autogenerated method: Pathfinding.LayerGridGraph.GetNearestNode
::Pathfinding::GridNodeBase* Pathfinding::LayerGridGraph::GetNearestNode(::UnityEngine::Vector3 position, int x, int z, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::GetNearestNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearestNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNodeBase*, false>(this, ___internal__method, position, x, z, constraint);
}
// Autogenerated method: Pathfinding.LayerGridGraph.CheckConnection
bool Pathfinding::LayerGridGraph::CheckConnection(::Pathfinding::LevelGridNode* node, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::CheckConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "LayerGridGraph", "CheckConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, dir);
}
// Autogenerated method: Pathfinding.LayerGridGraph.OnDestroy
void Pathfinding::LayerGridGraph::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph.RemoveGridGraphFromStatic
void Pathfinding::LayerGridGraph::RemoveGridGraphFromStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::RemoveGridGraphFromStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGridGraphFromStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph.get_uniformWidthDepthGrid
bool Pathfinding::LayerGridGraph::get_uniformWidthDepthGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::get_uniformWidthDepthGrid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph.get_LayerCount
int Pathfinding::LayerGridGraph::get_LayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::get_LayerCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 37));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph.CountNodes
int Pathfinding::LayerGridGraph::CountNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::CountNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph.GetNodes
void Pathfinding::LayerGridGraph::GetNodes(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.LayerGridGraph.GetNodesInRegion
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::LayerGridGraph::GetNodesInRegion(::UnityEngine::Bounds b, ::Pathfinding::GraphUpdateShape* shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::GetNodesInRegion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, b, shape);
}
// Autogenerated method: Pathfinding.LayerGridGraph.GetNodesInRegion
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::LayerGridGraph::GetNodesInRegion(::Pathfinding::IntRect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::GetNodesInRegion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, rect);
}
// Autogenerated method: Pathfinding.LayerGridGraph.GetNodesInRegion
int Pathfinding::LayerGridGraph::GetNodesInRegion(::Pathfinding::IntRect rect, ::ArrayW<::Pathfinding::GridNodeBase*> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::GetNodesInRegion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 50));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, rect, buffer);
}
// Autogenerated method: Pathfinding.LayerGridGraph.GetNode
::Pathfinding::GridNodeBase* Pathfinding::LayerGridGraph::GetNode(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::GetNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 51));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNodeBase*, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.LayerGridGraph.ScanInternal
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding::LayerGridGraph::ScanInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph.RecalculateCell
void Pathfinding::LayerGridGraph::RecalculateCell(int x, int z, bool resetPenalties, bool resetTags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::RecalculateCell");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, resetPenalties, resetTags);
}
// Autogenerated method: Pathfinding.LayerGridGraph.ErosionAnyFalseConnections
bool Pathfinding::LayerGridGraph::ErosionAnyFalseConnections(::Pathfinding::GraphNode* baseNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::ErosionAnyFalseConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 42));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, baseNode);
}
// Autogenerated method: Pathfinding.LayerGridGraph.CalculateConnections
void Pathfinding::LayerGridGraph::CalculateConnections(::Pathfinding::GridNodeBase* baseNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::CalculateConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseNode);
}
// Autogenerated method: Pathfinding.LayerGridGraph.CalculateConnections
void Pathfinding::LayerGridGraph::CalculateConnections(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::CalculateConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.LayerGridGraph.GetNearest
::Pathfinding::NNInfoInternal Pathfinding::LayerGridGraph::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::GetNearest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: Pathfinding.LayerGridGraph.GetNearestFromGraphSpace
::Pathfinding::GridNodeBase* Pathfinding::LayerGridGraph::GetNearestFromGraphSpace(::UnityEngine::Vector3 positionGraphSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::GetNearestFromGraphSpace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNodeBase*, false>(this, ___internal__method, positionGraphSpace);
}
// Autogenerated method: Pathfinding.LayerGridGraph.SerializeExtraInfo
void Pathfinding::LayerGridGraph::SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.LayerGridGraph.DeserializeExtraInfo
void Pathfinding::LayerGridGraph::DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.LayerGridGraph.PostDeserialization
void Pathfinding::LayerGridGraph::PostDeserialization(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::PostDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.LayerGridGraph..cctor
void Pathfinding::LayerGridGraph::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "LayerGridGraph", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.LayerGridGraph/HitComparer
#include "Pathfinding/LayerGridGraph_HitComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.LayerGridGraph/HitComparer.Compare
int Pathfinding::LayerGridGraph::HitComparer::Compare(::UnityEngine::RaycastHit a, ::UnityEngine::RaycastHit b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::HitComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::LayerGridGraph::HitComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.LayerGridGraph/<ScanInternal>d__19
#include "Pathfinding/LayerGridGraph_-ScanInternal-d__19.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Progress <>2__current
[[deprecated("Use field access instead!")]] ::Pathfinding::Progress& Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Pathfinding::Progress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.LayerGridGraph <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::LayerGridGraph*& Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::LayerGridGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <progressCounter>5__2
[[deprecated("Use field access instead!")]] int& Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$progressCounter$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$progressCounter$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<progressCounter>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <z>5__3
[[deprecated("Use field access instead!")]] int& Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$z$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::dyn_$z$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<z>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.LayerGridGraph/<ScanInternal>d__19.System.IDisposable.Dispose
void Pathfinding::LayerGridGraph::$ScanInternal$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::LayerGridGraph::$ScanInternal$d__19*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph/<ScanInternal>d__19.MoveNext
bool Pathfinding::LayerGridGraph::$ScanInternal$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::LayerGridGraph::$ScanInternal$d__19*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph/<ScanInternal>d__19.System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current
::Pathfinding::Progress Pathfinding::LayerGridGraph::$ScanInternal$d__19::System_Collections_Generic_IEnumerator$Pathfinding_Progress$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::LayerGridGraph::$ScanInternal$d__19*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Progress, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph/<ScanInternal>d__19.System.Collections.IEnumerator.Reset
void Pathfinding::LayerGridGraph::$ScanInternal$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::LayerGridGraph::$ScanInternal$d__19*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph/<ScanInternal>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::LayerGridGraph::$ScanInternal$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::LayerGridGraph::$ScanInternal$d__19*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph/<ScanInternal>d__19.System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>* Pathfinding::LayerGridGraph::$ScanInternal$d__19::System_Collections_Generic_IEnumerable$Pathfinding_Progress$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::LayerGridGraph::$ScanInternal$d__19*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LayerGridGraph/<ScanInternal>d__19.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Pathfinding::LayerGridGraph::$ScanInternal$d__19::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraph::$ScanInternal$d__19::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::LayerGridGraph::$ScanInternal$d__19*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.LevelGridNode
#include "Pathfinding/LevelGridNode.hpp"
// Including type: Pathfinding.LayerGridGraph
#include "Pathfinding/LayerGridGraph.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Pathfinding.LayerGridGraph[] _gridGraphs
::ArrayW<::Pathfinding::LayerGridGraph*> Pathfinding::LevelGridNode::_get__gridGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_get__gridGraphs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::LayerGridGraph*>>("Pathfinding", "LevelGridNode", "_gridGraphs"));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.LayerGridGraph[] _gridGraphs
void Pathfinding::LevelGridNode::_set__gridGraphs(::ArrayW<::Pathfinding::LayerGridGraph*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_set__gridGraphs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "LevelGridNode", "_gridGraphs", value));
}
// Autogenerated static field getter
// Get static field: static protected Pathfinding.LayerGridGraph[] gridGraphs
::ArrayW<::Pathfinding::LayerGridGraph*> Pathfinding::LevelGridNode::_get_gridGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_get_gridGraphs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::LayerGridGraph*>>("Pathfinding", "LevelGridNode", "gridGraphs"));
}
// Autogenerated static field setter
// Set static field: static protected Pathfinding.LayerGridGraph[] gridGraphs
void Pathfinding::LevelGridNode::_set_gridGraphs(::ArrayW<::Pathfinding::LayerGridGraph*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_set_gridGraphs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "LevelGridNode", "gridGraphs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 NoConnection
int Pathfinding::LevelGridNode::_get_NoConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_get_NoConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "LevelGridNode", "NoConnection"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 NoConnection
void Pathfinding::LevelGridNode::_set_NoConnection(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_set_NoConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "LevelGridNode", "NoConnection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ConnectionMask
int Pathfinding::LevelGridNode::_get_ConnectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_get_ConnectionMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "LevelGridNode", "ConnectionMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ConnectionMask
void Pathfinding::LevelGridNode::_set_ConnectionMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_set_ConnectionMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "LevelGridNode", "ConnectionMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ConnectionStride
int Pathfinding::LevelGridNode::_get_ConnectionStride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_get_ConnectionStride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "LevelGridNode", "ConnectionStride"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ConnectionStride
void Pathfinding::LevelGridNode::_set_ConnectionStride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_set_ConnectionStride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "LevelGridNode", "ConnectionStride", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxLayerCount
int Pathfinding::LevelGridNode::_get_MaxLayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_get_MaxLayerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "LevelGridNode", "MaxLayerCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxLayerCount
void Pathfinding::LevelGridNode::_set_MaxLayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::_set_MaxLayerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "LevelGridNode", "MaxLayerCount", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 gridConnections
[[deprecated("Use field access instead!")]] uint64_t& Pathfinding::LevelGridNode::dyn_gridConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::dyn_gridConnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gridConnections"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.LevelGridNode.GetGridGraph
::Pathfinding::LayerGridGraph* Pathfinding::LevelGridNode::GetGridGraph(uint graphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::GetGridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "LevelGridNode", "GetGridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::LayerGridGraph*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex);
}
// Autogenerated method: Pathfinding.LevelGridNode.SetGridGraph
void Pathfinding::LevelGridNode::SetGridGraph(int graphIndex, ::Pathfinding::LayerGridGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::SetGridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "LevelGridNode", "SetGridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex), ::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex, graph);
}
// Autogenerated method: Pathfinding.LevelGridNode.ResetAllGridConnections
void Pathfinding::LevelGridNode::ResetAllGridConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::ResetAllGridConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAllGridConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LevelGridNode.HasAnyGridConnections
bool Pathfinding::LevelGridNode::HasAnyGridConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::HasAnyGridConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasAnyGridConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LevelGridNode.get_LayerCoordinateInGrid
int Pathfinding::LevelGridNode::get_LayerCoordinateInGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::get_LayerCoordinateInGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LayerCoordinateInGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LevelGridNode.set_LayerCoordinateInGrid
void Pathfinding::LevelGridNode::set_LayerCoordinateInGrid(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::set_LayerCoordinateInGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LayerCoordinateInGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.LevelGridNode.SetPosition
void Pathfinding::LevelGridNode::SetPosition(::Pathfinding::Int3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.LevelGridNode.GetConnection
bool Pathfinding::LevelGridNode::GetConnection(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::GetConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.LevelGridNode.SetConnectionValue
void Pathfinding::LevelGridNode::SetConnectionValue(int dir, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::SetConnectionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnectionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dir, value);
}
// Autogenerated method: Pathfinding.LevelGridNode.GetConnectionValue
int Pathfinding::LevelGridNode::GetConnectionValue(int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::GetConnectionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dir);
}
// Autogenerated method: Pathfinding.LevelGridNode.RemoveGridConnection
void Pathfinding::LevelGridNode::RemoveGridConnection(::Pathfinding::LevelGridNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::RemoveGridConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGridConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.LevelGridNode..cctor
void Pathfinding::LevelGridNode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "LevelGridNode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.LevelGridNode.get_HasConnectionsToAllEightNeighbours
bool Pathfinding::LevelGridNode::get_HasConnectionsToAllEightNeighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::get_HasConnectionsToAllEightNeighbours");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LevelGridNode.GetGizmoHashCode
int Pathfinding::LevelGridNode::GetGizmoHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::GetGizmoHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.LevelGridNode.GetNeighbourAlongDirection
::Pathfinding::GridNodeBase* Pathfinding::LevelGridNode::GetNeighbourAlongDirection(int direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::GetNeighbourAlongDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNodeBase*, false>(this, ___internal__method, direction);
}
// Autogenerated method: Pathfinding.LevelGridNode.ClearConnections
void Pathfinding::LevelGridNode::ClearConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::ClearConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.LevelGridNode.GetConnections
void Pathfinding::LevelGridNode::GetConnections(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::GetConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.LevelGridNode.HasConnectionInDirection
bool Pathfinding::LevelGridNode::HasConnectionInDirection(int direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::HasConnectionInDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, direction);
}
// Autogenerated method: Pathfinding.LevelGridNode.AddConnection
void Pathfinding::LevelGridNode::AddConnection(::Pathfinding::GraphNode* node, uint cost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::AddConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, cost);
}
// Autogenerated method: Pathfinding.LevelGridNode.RemoveConnection
void Pathfinding::LevelGridNode::RemoveConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::RemoveConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.LevelGridNode.GetPortal
bool Pathfinding::LevelGridNode::GetPortal(::Pathfinding::GraphNode* other, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, bool backwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::GetPortal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, left, right, backwards);
}
// Autogenerated method: Pathfinding.LevelGridNode.UpdateRecursiveG
void Pathfinding::LevelGridNode::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.LevelGridNode.Open
void Pathfinding::LevelGridNode::Open(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.LevelGridNode.ClosestPointOnNode
::UnityEngine::Vector3 Pathfinding::LevelGridNode::ClosestPointOnNode(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::ClosestPointOnNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.LevelGridNode.SerializeNode
void Pathfinding::LevelGridNode::SerializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::SerializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.LevelGridNode.DeserializeNode
void Pathfinding::LevelGridNode::DeserializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LevelGridNode::DeserializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.LayerGridGraphUpdate
#include "Pathfinding/LayerGridGraphUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean recalculateNodes
[[deprecated("Use field access instead!")]] bool& Pathfinding::LayerGridGraphUpdate::dyn_recalculateNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraphUpdate::dyn_recalculateNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recalculateNodes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean preserveExistingNodes
[[deprecated("Use field access instead!")]] bool& Pathfinding::LayerGridGraphUpdate::dyn_preserveExistingNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::LayerGridGraphUpdate::dyn_preserveExistingNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preserveExistingNodes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshBase
#include "Pathfinding/NavmeshBase.hpp"
// Including type: Pathfinding.NavmeshBase/<>c
#include "Pathfinding/NavmeshBase_--c.hpp"
// Including type: Pathfinding.NavmeshBase/<>c__DisplayClass84_0
#include "Pathfinding/NavmeshBase_--c__DisplayClass84_0.hpp"
// Including type: Pathfinding.NavmeshBase/<>c__DisplayClass84_1
#include "Pathfinding/NavmeshBase_--c__DisplayClass84_1.hpp"
// Including type: Pathfinding.NavmeshTile
#include "Pathfinding/NavmeshTile.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.MeshNode
#include "Pathfinding/MeshNode.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: Pathfinding.GraphHitInfo
#include "Pathfinding/GraphHitInfo.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: Pathfinding.IntRect
#include "Pathfinding/IntRect.hpp"
// Including type: Pathfinding.Int2
#include "Pathfinding/Int2.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Pathfinding.Util.GraphGizmoHelper
#include "Pathfinding/Util/GraphGizmoHelper.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: Pathfinding.NNInfoInternal
#include "Pathfinding/NNInfoInternal.hpp"
// Including type: Pathfinding.Util.RetainedGizmos
#include "Pathfinding/Util/RetainedGizmos.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: Pathfinding.NavmeshUpdates/NavmeshUpdateSettings
#include "Pathfinding/NavmeshUpdates_NavmeshUpdateSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 VertexIndexMask
int Pathfinding::NavmeshBase::_get_VertexIndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_get_VertexIndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "NavmeshBase", "VertexIndexMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 VertexIndexMask
void Pathfinding::NavmeshBase::_set_VertexIndexMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_set_VertexIndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshBase", "VertexIndexMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 TileIndexMask
int Pathfinding::NavmeshBase::_get_TileIndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_get_TileIndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "NavmeshBase", "TileIndexMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 TileIndexMask
void Pathfinding::NavmeshBase::_set_TileIndexMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_set_TileIndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshBase", "TileIndexMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 TileIndexOffset
int Pathfinding::NavmeshBase::_get_TileIndexOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_get_TileIndexOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "NavmeshBase", "TileIndexOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 TileIndexOffset
void Pathfinding::NavmeshBase::_set_TileIndexOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_set_TileIndexOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshBase", "TileIndexOffset", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Pathfinding.NNConstraint NNConstraintDistanceXZ
::Pathfinding::NNConstraint* Pathfinding::NavmeshBase::_get_NNConstraintDistanceXZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_get_NNConstraintDistanceXZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NNConstraint*>("Pathfinding", "NavmeshBase", "NNConstraintDistanceXZ"));
}
// Autogenerated static field setter
// Set static field: static private readonly Pathfinding.NNConstraint NNConstraintDistanceXZ
void Pathfinding::NavmeshBase::_set_NNConstraintDistanceXZ(::Pathfinding::NNConstraint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_set_NNConstraintDistanceXZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshBase", "NNConstraintDistanceXZ", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Pathfinding.NNConstraint NNConstraintNoneXZ
::Pathfinding::NNConstraint* Pathfinding::NavmeshBase::_get_NNConstraintNoneXZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_get_NNConstraintNoneXZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NNConstraint*>("Pathfinding", "NavmeshBase", "NNConstraintNoneXZ"));
}
// Autogenerated static field setter
// Set static field: static private readonly Pathfinding.NNConstraint NNConstraintNoneXZ
void Pathfinding::NavmeshBase::_set_NNConstraintNoneXZ(::Pathfinding::NNConstraint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_set_NNConstraintNoneXZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshBase", "NNConstraintNoneXZ", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] LinecastShapeEdgeLookup
::ArrayW<uint8_t> Pathfinding::NavmeshBase::_get_LinecastShapeEdgeLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_get_LinecastShapeEdgeLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Pathfinding", "NavmeshBase", "LinecastShapeEdgeLookup"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] LinecastShapeEdgeLookup
void Pathfinding::NavmeshBase::_set_LinecastShapeEdgeLookup(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::_set_LinecastShapeEdgeLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshBase", "LinecastShapeEdgeLookup", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 forcedBoundsSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavmeshBase::dyn_forcedBoundsSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_forcedBoundsSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forcedBoundsSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showMeshOutline
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshBase::dyn_showMeshOutline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_showMeshOutline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showMeshOutline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showNodeConnections
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshBase::dyn_showNodeConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_showNodeConnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showNodeConnections"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showMeshSurface
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshBase::dyn_showMeshSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_showMeshSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showMeshSurface"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tileXCount
[[deprecated("Use field access instead!")]] int& Pathfinding::NavmeshBase::dyn_tileXCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_tileXCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileXCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tileZCount
[[deprecated("Use field access instead!")]] int& Pathfinding::NavmeshBase::dyn_tileZCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_tileZCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileZCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.NavmeshTile[] tiles
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::NavmeshTile*>& Pathfinding::NavmeshBase::dyn_tiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_tiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tiles"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::NavmeshTile*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean nearestSearchOnlyXZ
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshBase::dyn_nearestSearchOnlyXZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_nearestSearchOnlyXZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearestSearchOnlyXZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableNavmeshCutting
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshBase::dyn_enableNavmeshCutting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_enableNavmeshCutting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableNavmeshCutting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Pathfinding.NavmeshUpdates/NavmeshUpdateSettings navmeshUpdateData
[[deprecated("Use field access instead!")]] ::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings*& Pathfinding::NavmeshBase::dyn_navmeshUpdateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_navmeshUpdateData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "navmeshUpdateData"))->offset;
  return *reinterpret_cast<::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean batchTileUpdate
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshBase::dyn_batchTileUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_batchTileUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "batchTileUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> batchUpdatedTiles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Pathfinding::NavmeshBase::dyn_batchUpdatedTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_batchUpdatedTiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "batchUpdatedTiles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.MeshNode> batchNodesToDestroy
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::MeshNode*>*& Pathfinding::NavmeshBase::dyn_batchNodesToDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_batchNodesToDestroy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "batchNodesToDestroy"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::MeshNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.GraphTransform transform
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::GraphTransform*& Pathfinding::NavmeshBase::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::GraphTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.NavmeshTile[]> OnRecalculatedTiles
[[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<::Pathfinding::NavmeshTile*>>*& Pathfinding::NavmeshBase::dyn_OnRecalculatedTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_OnRecalculatedTiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnRecalculatedTiles"))->offset;
  return *reinterpret_cast<::System::Action_1<::ArrayW<::Pathfinding::NavmeshTile*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> nodeRecyclingHashBuffer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& Pathfinding::NavmeshBase::dyn_nodeRecyclingHashBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::dyn_nodeRecyclingHashBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeRecyclingHashBuffer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavmeshBase.get_TileWorldSizeX
float Pathfinding::NavmeshBase::get_TileWorldSizeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::get_TileWorldSizeX");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.get_TileWorldSizeZ
float Pathfinding::NavmeshBase::get_TileWorldSizeZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::get_TileWorldSizeZ");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.get_MaxTileConnectionEdgeDistance
float Pathfinding::NavmeshBase::get_MaxTileConnectionEdgeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::get_MaxTileConnectionEdgeDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.Pathfinding.ITransformedGraph.get_transform
::Pathfinding::Util::GraphTransform* Pathfinding::NavmeshBase::Pathfinding_ITransformedGraph_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::Pathfinding.ITransformedGraph.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.get_RecalculateNormals
bool Pathfinding::NavmeshBase::get_RecalculateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::get_RecalculateNormals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.CalculateTransform
::Pathfinding::Util::GraphTransform* Pathfinding::NavmeshBase::CalculateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::CalculateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTile
::Pathfinding::NavmeshTile* Pathfinding::NavmeshBase::GetTile(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavmeshTile*, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetVertex
::Pathfinding::Int3 Pathfinding::NavmeshBase::GetVertex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetVertex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetVertexInGraphSpace
::Pathfinding::Int3 Pathfinding::NavmeshBase::GetVertexInGraphSpace(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetVertexInGraphSpace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTileIndex
int Pathfinding::NavmeshBase::GetTileIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTileIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshBase", "GetTileIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetVertexArrayIndex
int Pathfinding::NavmeshBase::GetVertexArrayIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetVertexArrayIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 29));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTileCoordinates
void Pathfinding::NavmeshBase::GetTileCoordinates(int tileIndex, ByRef<int> x, ByRef<int> z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTileCoordinates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tileIndex, byref(x), byref(z));
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTiles
::ArrayW<::Pathfinding::NavmeshTile*> Pathfinding::NavmeshBase::GetTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::NavmeshTile*>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTileBounds
::UnityEngine::Bounds Pathfinding::NavmeshBase::GetTileBounds(::Pathfinding::IntRect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTileBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTileBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method, rect);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTileBounds
::UnityEngine::Bounds Pathfinding::NavmeshBase::GetTileBounds(int x, int z, int width, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTileBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTileBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method, x, z, width, depth);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTileBoundsInGraphSpace
::UnityEngine::Bounds Pathfinding::NavmeshBase::GetTileBoundsInGraphSpace(::Pathfinding::IntRect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTileBoundsInGraphSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTileBoundsInGraphSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method, rect);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTileBoundsInGraphSpace
::UnityEngine::Bounds Pathfinding::NavmeshBase::GetTileBoundsInGraphSpace(int x, int z, int width, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTileBoundsInGraphSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTileBoundsInGraphSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method, x, z, width, depth);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTileCoordinates
::Pathfinding::Int2 Pathfinding::NavmeshBase::GetTileCoordinates(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTileCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTileCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int2, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.NavmeshBase.RelocateNodes
void Pathfinding::NavmeshBase::RelocateNodes(::Pathfinding::Util::GraphTransform* newTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::RelocateNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RelocateNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newTransform);
}
// Autogenerated method: Pathfinding.NavmeshBase.NewEmptyTile
::Pathfinding::NavmeshTile* Pathfinding::NavmeshBase::NewEmptyTile(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::NewEmptyTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewEmptyTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavmeshTile*, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTouchingTiles
::Pathfinding::IntRect Pathfinding::NavmeshBase::GetTouchingTiles(::UnityEngine::Bounds bounds, float margin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTouchingTiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTouchingTiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(margin)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::IntRect, false>(this, ___internal__method, bounds, margin);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTouchingTilesInGraphSpace
::Pathfinding::IntRect Pathfinding::NavmeshBase::GetTouchingTilesInGraphSpace(::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTouchingTilesInGraphSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTouchingTilesInGraphSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::IntRect, false>(this, ___internal__method, rect);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetTouchingTilesRound
::Pathfinding::IntRect Pathfinding::NavmeshBase::GetTouchingTilesRound(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetTouchingTilesRound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTouchingTilesRound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::IntRect, false>(this, ___internal__method, bounds);
}
// Autogenerated method: Pathfinding.NavmeshBase.ConnectTileWithNeighbours
void Pathfinding::NavmeshBase::ConnectTileWithNeighbours(::Pathfinding::NavmeshTile* tile, bool onlyUnflagged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::ConnectTileWithNeighbours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectTileWithNeighbours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tile), ::il2cpp_utils::ExtractType(onlyUnflagged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tile, onlyUnflagged);
}
// Autogenerated method: Pathfinding.NavmeshBase.RemoveConnectionsFromTile
void Pathfinding::NavmeshBase::RemoveConnectionsFromTile(::Pathfinding::NavmeshTile* tile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::RemoveConnectionsFromTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnectionsFromTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tile)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tile);
}
// Autogenerated method: Pathfinding.NavmeshBase.RemoveConnectionsFromTo
void Pathfinding::NavmeshBase::RemoveConnectionsFromTo(::Pathfinding::NavmeshTile* a, ::Pathfinding::NavmeshTile* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::RemoveConnectionsFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnectionsFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.NavmeshBase.PointOnNavmesh
::Pathfinding::GraphNode* Pathfinding::NavmeshBase::PointOnNavmesh(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::PointOnNavmesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointOnNavmesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.NavmeshBase.FillWithEmptyTiles
void Pathfinding::NavmeshBase::FillWithEmptyTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::FillWithEmptyTiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillWithEmptyTiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.CreateNodeConnections
void Pathfinding::NavmeshBase::CreateNodeConnections(::ArrayW<::Pathfinding::TriangleMeshNode*> nodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::CreateNodeConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshBase", "CreateNodeConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodes);
}
// Autogenerated method: Pathfinding.NavmeshBase.ConnectTiles
void Pathfinding::NavmeshBase::ConnectTiles(::Pathfinding::NavmeshTile* tile1, ::Pathfinding::NavmeshTile* tile2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::ConnectTiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectTiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tile1), ::il2cpp_utils::ExtractType(tile2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tile1, tile2);
}
// Autogenerated method: Pathfinding.NavmeshBase.StartBatchTileUpdate
void Pathfinding::NavmeshBase::StartBatchTileUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::StartBatchTileUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBatchTileUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.DestroyNodes
void Pathfinding::NavmeshBase::DestroyNodes(::System::Collections::Generic::List_1<::Pathfinding::MeshNode*>* nodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::DestroyNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodes);
}
// Autogenerated method: Pathfinding.NavmeshBase.TryConnect
void Pathfinding::NavmeshBase::TryConnect(int tileIdx1, int tileIdx2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::TryConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tileIdx1), ::il2cpp_utils::ExtractType(tileIdx2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tileIdx1, tileIdx2);
}
// Autogenerated method: Pathfinding.NavmeshBase.EndBatchTileUpdate
void Pathfinding::NavmeshBase::EndBatchTileUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::EndBatchTileUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndBatchTileUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.ClearTile
void Pathfinding::NavmeshBase::ClearTile(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::ClearTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.NavmeshBase.PrepareNodeRecycling
void Pathfinding::NavmeshBase::PrepareNodeRecycling(int x, int z, ::ArrayW<::Pathfinding::Int3> verts, ::ArrayW<int> tris, ::ArrayW<::Pathfinding::TriangleMeshNode*> recycledNodeBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::PrepareNodeRecycling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareNodeRecycling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(tris), ::il2cpp_utils::ExtractType(recycledNodeBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, verts, tris, recycledNodeBuffer);
}
// Autogenerated method: Pathfinding.NavmeshBase.ReplaceTile
void Pathfinding::NavmeshBase::ReplaceTile(int x, int z, ::ArrayW<::Pathfinding::Int3> verts, ::ArrayW<int> tris) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::ReplaceTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(tris)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, verts, tris);
}
// Autogenerated method: Pathfinding.NavmeshBase.CreateNodes
void Pathfinding::NavmeshBase::CreateNodes(::ArrayW<::Pathfinding::TriangleMeshNode*> buffer, ::ArrayW<int> tris, int tileIndex, uint graphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::CreateNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(tris), ::il2cpp_utils::ExtractType(tileIndex), ::il2cpp_utils::ExtractType(graphIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, tris, tileIndex, graphIndex);
}
// Autogenerated method: Pathfinding.NavmeshBase.Linecast
bool Pathfinding::NavmeshBase::Linecast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, end);
}
// Autogenerated method: Pathfinding.NavmeshBase.Linecast
bool Pathfinding::NavmeshBase::Linecast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 end, ::Pathfinding::GraphNode* hint, ByRef<::Pathfinding::GraphHitInfo> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, end, hint, byref(hit));
}
// Autogenerated method: Pathfinding.NavmeshBase.Linecast
bool Pathfinding::NavmeshBase::Linecast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 end, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, end, hint);
}
// Autogenerated method: Pathfinding.NavmeshBase.Linecast
bool Pathfinding::NavmeshBase::Linecast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 end, ::Pathfinding::GraphNode* hint, ByRef<::Pathfinding::GraphHitInfo> hit, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* trace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, end, hint, byref(hit), trace);
}
// Autogenerated method: Pathfinding.NavmeshBase.Linecast
bool Pathfinding::NavmeshBase::Linecast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 end, ByRef<::Pathfinding::GraphHitInfo> hit, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* trace, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::Linecast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, end, byref(hit), trace, filter);
}
// Autogenerated method: Pathfinding.NavmeshBase.Linecast
bool Pathfinding::NavmeshBase::Linecast(::Pathfinding::NavmeshBase* graph, ::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 end, ::Pathfinding::GraphNode* hint, ByRef<::Pathfinding::GraphHitInfo> hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshBase", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(hint), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::GraphHitInfo&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, origin, end, hint, byref(hit));
}
// Autogenerated method: Pathfinding.NavmeshBase..cctor
void Pathfinding::NavmeshBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.Linecast
bool Pathfinding::NavmeshBase::Linecast(::Pathfinding::NavmeshBase* graph, ::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 end, ::Pathfinding::GraphNode* hint, ByRef<::Pathfinding::GraphHitInfo> hit, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* trace, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshBase", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(hint), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::GraphHitInfo&>(), ::il2cpp_utils::ExtractType(trace), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, origin, end, hint, byref(hit), trace, filter);
}
// Autogenerated method: Pathfinding.NavmeshBase.CreateNavmeshSurfaceVisualization
void Pathfinding::NavmeshBase::CreateNavmeshSurfaceVisualization(::ArrayW<::Pathfinding::NavmeshTile*> tiles, int startTile, int endTile, ::Pathfinding::Util::GraphGizmoHelper* helper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::CreateNavmeshSurfaceVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNavmeshSurfaceVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tiles), ::il2cpp_utils::ExtractType(startTile), ::il2cpp_utils::ExtractType(endTile), ::il2cpp_utils::ExtractType(helper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tiles, startTile, endTile, helper);
}
// Autogenerated method: Pathfinding.NavmeshBase.CreateNavmeshOutlineVisualization
void Pathfinding::NavmeshBase::CreateNavmeshOutlineVisualization(::ArrayW<::Pathfinding::NavmeshTile*> tiles, int startTile, int endTile, ::Pathfinding::Util::GraphGizmoHelper* helper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::CreateNavmeshOutlineVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshBase", "CreateNavmeshOutlineVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tiles), ::il2cpp_utils::ExtractType(startTile), ::il2cpp_utils::ExtractType(endTile), ::il2cpp_utils::ExtractType(helper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tiles, startTile, endTile, helper);
}
// Autogenerated method: Pathfinding.NavmeshBase.OnDestroy
void Pathfinding::NavmeshBase::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase.RelocateNodes
void Pathfinding::NavmeshBase::RelocateNodes(::UnityEngine::Matrix4x4 deltaMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::RelocateNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaMatrix);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetNodes
void Pathfinding::NavmeshBase::GetNodes(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetNearest
::Pathfinding::NNInfoInternal Pathfinding::NavmeshBase::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetNearest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: Pathfinding.NavmeshBase.GetNearestForce
::Pathfinding::NNInfoInternal Pathfinding::NavmeshBase::GetNearestForce(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::GetNearestForce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.NavmeshBase.OnDrawGizmos
void Pathfinding::NavmeshBase::OnDrawGizmos(::Pathfinding::Util::RetainedGizmos* gizmos, bool drawNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::OnDrawGizmos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gizmos, drawNodes);
}
// Autogenerated method: Pathfinding.NavmeshBase.SerializeExtraInfo
void Pathfinding::NavmeshBase::SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavmeshBase.DeserializeExtraInfo
void Pathfinding::NavmeshBase::DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavmeshBase.PostDeserialization
void Pathfinding::NavmeshBase::PostDeserialization(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::PostDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshBase/<>c
#include "Pathfinding/NavmeshBase_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Pathfinding.NavmeshTile
#include "Pathfinding/NavmeshTile.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.NavmeshBase/<>c <>9
::Pathfinding::NavmeshBase::$$c* Pathfinding::NavmeshBase::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Pathfinding::NavmeshBase::$$c*>("Pathfinding", "NavmeshBase/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.NavmeshBase/<>c <>9
void Pathfinding::NavmeshBase::$$c::_set_$$9(::Pathfinding::NavmeshBase::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshBase/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Pathfinding.NavmeshTile,System.Collections.Generic.IEnumerable`1<Pathfinding.TriangleMeshNode>> <>9__84_0
::System::Func_2<::Pathfinding::NavmeshTile*, ::System::Collections::Generic::IEnumerable_1<::Pathfinding::TriangleMeshNode*>*>* Pathfinding::NavmeshBase::$$c::_get_$$9__84_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::_get_$$9__84_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Pathfinding::NavmeshTile*, ::System::Collections::Generic::IEnumerable_1<::Pathfinding::TriangleMeshNode*>*>*>("Pathfinding", "NavmeshBase/<>c", "<>9__84_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Pathfinding.NavmeshTile,System.Collections.Generic.IEnumerable`1<Pathfinding.TriangleMeshNode>> <>9__84_0
void Pathfinding::NavmeshBase::$$c::_set_$$9__84_0(::System::Func_2<::Pathfinding::NavmeshTile*, ::System::Collections::Generic::IEnumerable_1<::Pathfinding::TriangleMeshNode*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::_set_$$9__84_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshBase/<>c", "<>9__84_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Pathfinding.TriangleMeshNode,Pathfinding.TriangleMeshNode> <>9__84_1
::System::Func_2<::Pathfinding::TriangleMeshNode*, ::Pathfinding::TriangleMeshNode*>* Pathfinding::NavmeshBase::$$c::_get_$$9__84_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::_get_$$9__84_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Pathfinding::TriangleMeshNode*, ::Pathfinding::TriangleMeshNode*>*>("Pathfinding", "NavmeshBase/<>c", "<>9__84_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Pathfinding.TriangleMeshNode,Pathfinding.TriangleMeshNode> <>9__84_1
void Pathfinding::NavmeshBase::$$c::_set_$$9__84_1(::System::Func_2<::Pathfinding::TriangleMeshNode*, ::Pathfinding::TriangleMeshNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::_set_$$9__84_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshBase/<>c", "<>9__84_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Pathfinding.TriangleMeshNode,Pathfinding.Connection[]> <>9__84_2
::System::Func_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>* Pathfinding::NavmeshBase::$$c::_get_$$9__84_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::_get_$$9__84_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>*>("Pathfinding", "NavmeshBase/<>c", "<>9__84_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Pathfinding.TriangleMeshNode,Pathfinding.Connection[]> <>9__84_2
void Pathfinding::NavmeshBase::$$c::_set_$$9__84_2(::System::Func_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::_set_$$9__84_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshBase/<>c", "<>9__84_2", value)));
}
// Autogenerated method: Pathfinding.NavmeshBase/<>c..cctor
void Pathfinding::NavmeshBase::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshBase/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshBase/<>c.<PostDeserialization>b__84_0
::System::Collections::Generic::IEnumerable_1<::Pathfinding::TriangleMeshNode*>* Pathfinding::NavmeshBase::$$c::$PostDeserialization$b__84_0(::Pathfinding::NavmeshTile* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::<PostDeserialization>b__84_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PostDeserialization>b__84_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::TriangleMeshNode*>*, false>(this, ___internal__method, s);
}
// Autogenerated method: Pathfinding.NavmeshBase/<>c.<PostDeserialization>b__84_1
::Pathfinding::TriangleMeshNode* Pathfinding::NavmeshBase::$$c::$PostDeserialization$b__84_1(::Pathfinding::TriangleMeshNode* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::<PostDeserialization>b__84_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PostDeserialization>b__84_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::TriangleMeshNode*, false>(this, ___internal__method, n);
}
// Autogenerated method: Pathfinding.NavmeshBase/<>c.<PostDeserialization>b__84_2
::ArrayW<::Pathfinding::Connection> Pathfinding::NavmeshBase::$$c::$PostDeserialization$b__84_2(::Pathfinding::TriangleMeshNode* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c::<PostDeserialization>b__84_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PostDeserialization>b__84_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::Connection>, false>(this, ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshBase/<>c__DisplayClass84_0
#include "Pathfinding/NavmeshBase_--c__DisplayClass84_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<Pathfinding.TriangleMeshNode,Pathfinding.Connection[]> conns
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>*& Pathfinding::NavmeshBase::$$c__DisplayClass84_0::dyn_conns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c__DisplayClass84_0::dyn_conns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "conns"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::ArrayW<::Pathfinding::Connection>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavmeshBase/<>c__DisplayClass84_0.<PostDeserialization>b__3
void Pathfinding::NavmeshBase::$$c__DisplayClass84_0::$PostDeserialization$b__3(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c__DisplayClass84_0::<PostDeserialization>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PostDeserialization>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshBase/<>c__DisplayClass84_1
#include "Pathfinding/NavmeshBase_--c__DisplayClass84_1.hpp"
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.TriangleMeshNode triNode
[[deprecated("Use field access instead!")]] ::Pathfinding::TriangleMeshNode*& Pathfinding::NavmeshBase::$$c__DisplayClass84_1::dyn_triNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c__DisplayClass84_1::dyn_triNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triNode"))->offset;
  return *reinterpret_cast<::Pathfinding::TriangleMeshNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Pathfinding.Connection,System.Boolean> <>9__4
[[deprecated("Use field access instead!")]] ::System::Func_2<::Pathfinding::Connection, bool>*& Pathfinding::NavmeshBase::$$c__DisplayClass84_1::dyn_$$9__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c__DisplayClass84_1::dyn_$$9__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__4"))->offset;
  return *reinterpret_cast<::System::Func_2<::Pathfinding::Connection, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavmeshBase/<>c__DisplayClass84_1.<PostDeserialization>b__4
bool Pathfinding::NavmeshBase::$$c__DisplayClass84_1::$PostDeserialization$b__4(::Pathfinding::Connection conn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshBase::$$c__DisplayClass84_1::<PostDeserialization>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PostDeserialization>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(conn)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, conn);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.INavmesh
#include "Pathfinding/INavmesh.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.INavmesh.GetNodes
void Pathfinding::INavmesh::GetNodes(::System::Action_1<::Pathfinding::GraphNode*>* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::INavmesh::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::INavmesh*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, del);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavMeshGraph
#include "Pathfinding/NavMeshGraph.hpp"
// Including type: Pathfinding.NavMeshGraph/<>c__DisplayClass19_0
#include "Pathfinding/NavMeshGraph_--c__DisplayClass19_0.hpp"
// Including type: Pathfinding.NavMeshGraph/<ScanInternal>d__20
#include "Pathfinding/NavMeshGraph_-ScanInternal-d__20.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: Pathfinding.GraphUpdateThreading
#include "Pathfinding/GraphUpdateThreading.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.INavmeshHolder
#include "Pathfinding/INavmeshHolder.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh sourceMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Pathfinding::NavMeshGraph::dyn_sourceMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_sourceMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavMeshGraph::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavMeshGraph::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single scale
[[deprecated("Use field access instead!")]] float& Pathfinding::NavMeshGraph::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean recalculateNormals
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavMeshGraph::dyn_recalculateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_recalculateNormals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recalculateNormals"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 cachedSourceMeshBoundsMin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavMeshGraph::dyn_cachedSourceMeshBoundsMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_cachedSourceMeshBoundsMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedSourceMeshBoundsMin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavMeshGraph.Pathfinding.IUpdatableGraph.CanUpdateAsync
::Pathfinding::GraphUpdateThreading Pathfinding::NavMeshGraph::Pathfinding_IUpdatableGraph_CanUpdateAsync(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::Pathfinding.IUpdatableGraph.CanUpdateAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphUpdateThreading, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.NavMeshGraph.Pathfinding.IUpdatableGraph.UpdateAreaInit
void Pathfinding::NavMeshGraph::Pathfinding_IUpdatableGraph_UpdateAreaInit(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::Pathfinding.IUpdatableGraph.UpdateAreaInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.NavMeshGraph.Pathfinding.IUpdatableGraph.UpdateAreaPost
void Pathfinding::NavMeshGraph::Pathfinding_IUpdatableGraph_UpdateAreaPost(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::Pathfinding.IUpdatableGraph.UpdateAreaPost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.NavMeshGraph.Pathfinding.IUpdatableGraph.UpdateArea
void Pathfinding::NavMeshGraph::Pathfinding_IUpdatableGraph_UpdateArea(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::Pathfinding.IUpdatableGraph.UpdateArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.NavMeshGraph.UpdateArea
void Pathfinding::NavMeshGraph::UpdateArea(::Pathfinding::GraphUpdateObject* o, ::Pathfinding::INavmeshHolder* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::UpdateArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavMeshGraph", "UpdateArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o, graph);
}
// Autogenerated method: Pathfinding.NavMeshGraph.get_RecalculateNormals
bool Pathfinding::NavMeshGraph::get_RecalculateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::get_RecalculateNormals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 40));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.get_TileWorldSizeX
float Pathfinding::NavMeshGraph::get_TileWorldSizeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::get_TileWorldSizeX");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 37));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.get_TileWorldSizeZ
float Pathfinding::NavMeshGraph::get_TileWorldSizeZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::get_TileWorldSizeZ");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 38));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.get_MaxTileConnectionEdgeDistance
float Pathfinding::NavMeshGraph::get_MaxTileConnectionEdgeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::get_MaxTileConnectionEdgeDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 39));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.CalculateTransform
::Pathfinding::Util::GraphTransform* Pathfinding::NavMeshGraph::CalculateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::CalculateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.ScanInternal
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding::NavMeshGraph::ScanInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.DeserializeSettingsCompatibility
void Pathfinding::NavMeshGraph::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavMeshGraph/<>c__DisplayClass19_0
#include "Pathfinding/NavMeshGraph_--c__DisplayClass19_0.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.IntRect irect
[[deprecated("Use field access instead!")]] ::Pathfinding::IntRect& Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_irect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_irect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "irect"))->offset;
  return *reinterpret_cast<::Pathfinding::IntRect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 a
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_a");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 b
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 c
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 d
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ymin
[[deprecated("Use field access instead!")]] int& Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_ymin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_ymin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ymin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ymax
[[deprecated("Use field access instead!")]] int& Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_ymax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_ymax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ymax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphUpdateObject o
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphUpdateObject*& Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_o() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::dyn_o");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "o"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphUpdateObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavMeshGraph/<>c__DisplayClass19_0.<UpdateArea>b__0
void Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::$UpdateArea$b__0(::Pathfinding::GraphNode* _node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass19_0::<UpdateArea>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateArea>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.NavMeshGraph/<ScanInternal>d__20
#include "Pathfinding/NavMeshGraph_-ScanInternal-d__20.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Progress <>2__current
[[deprecated("Use field access instead!")]] ::Pathfinding::Progress& Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Pathfinding::Progress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NavMeshGraph <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::NavMeshGraph*& Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::NavMeshGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.Int3> <intVertices>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::Int3>*& Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$intVertices$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$intVertices$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<intVertices>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::Int3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Int3[] <compressedVertices>5__3
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Int3>& Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$compressedVertices$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$compressedVertices$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<compressedVertices>5__3"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Int3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] <compressedTriangles>5__4
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$compressedTriangles$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::dyn_$compressedTriangles$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<compressedTriangles>5__4"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavMeshGraph/<ScanInternal>d__20.System.IDisposable.Dispose
void Pathfinding::NavMeshGraph::$ScanInternal$d__20::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph::$ScanInternal$d__20*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph/<ScanInternal>d__20.MoveNext
bool Pathfinding::NavMeshGraph::$ScanInternal$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph::$ScanInternal$d__20*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph/<ScanInternal>d__20.System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current
::Pathfinding::Progress Pathfinding::NavMeshGraph::$ScanInternal$d__20::System_Collections_Generic_IEnumerator$Pathfinding_Progress$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph::$ScanInternal$d__20*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Progress, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph/<ScanInternal>d__20.System.Collections.IEnumerator.Reset
void Pathfinding::NavMeshGraph::$ScanInternal$d__20::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph::$ScanInternal$d__20*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph/<ScanInternal>d__20.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::NavMeshGraph::$ScanInternal$d__20::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph::$ScanInternal$d__20*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph/<ScanInternal>d__20.System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>* Pathfinding::NavMeshGraph::$ScanInternal$d__20::System_Collections_Generic_IEnumerable$Pathfinding_Progress$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph::$ScanInternal$d__20*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph/<ScanInternal>d__20.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Pathfinding::NavMeshGraph::$ScanInternal$d__20::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$ScanInternal$d__20::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph::$ScanInternal$d__20*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GridNode
#include "Pathfinding/GridNode.hpp"
// Including type: Pathfinding.GridGraph
#include "Pathfinding/GridGraph.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Pathfinding.GridGraph[] _gridGraphs
::ArrayW<::Pathfinding::GridGraph*> Pathfinding::GridNode::_get__gridGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get__gridGraphs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::GridGraph*>>("Pathfinding", "GridNode", "_gridGraphs"));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.GridGraph[] _gridGraphs
void Pathfinding::GridNode::_set__gridGraphs(::ArrayW<::Pathfinding::GridGraph*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set__gridGraphs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "_gridGraphs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsConnectionOffset
int Pathfinding::GridNode::_get_GridFlagsConnectionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get_GridFlagsConnectionOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNode", "GridFlagsConnectionOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsConnectionOffset
void Pathfinding::GridNode::_set_GridFlagsConnectionOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set_GridFlagsConnectionOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "GridFlagsConnectionOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsConnectionBit0
int Pathfinding::GridNode::_get_GridFlagsConnectionBit0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get_GridFlagsConnectionBit0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNode", "GridFlagsConnectionBit0"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsConnectionBit0
void Pathfinding::GridNode::_set_GridFlagsConnectionBit0(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set_GridFlagsConnectionBit0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "GridFlagsConnectionBit0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsConnectionMask
int Pathfinding::GridNode::_get_GridFlagsConnectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get_GridFlagsConnectionMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNode", "GridFlagsConnectionMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsConnectionMask
void Pathfinding::GridNode::_set_GridFlagsConnectionMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set_GridFlagsConnectionMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "GridFlagsConnectionMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsEdgeNodeOffset
int Pathfinding::GridNode::_get_GridFlagsEdgeNodeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get_GridFlagsEdgeNodeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNode", "GridFlagsEdgeNodeOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsEdgeNodeOffset
void Pathfinding::GridNode::_set_GridFlagsEdgeNodeOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set_GridFlagsEdgeNodeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "GridFlagsEdgeNodeOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsEdgeNodeMask
int Pathfinding::GridNode::_get_GridFlagsEdgeNodeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get_GridFlagsEdgeNodeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNode", "GridFlagsEdgeNodeMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsEdgeNodeMask
void Pathfinding::GridNode::_set_GridFlagsEdgeNodeMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set_GridFlagsEdgeNodeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "GridFlagsEdgeNodeMask", value));
}
// Autogenerated method: Pathfinding.GridNode.GetGridGraph
::Pathfinding::GridGraph* Pathfinding::GridNode::GetGridGraph(uint graphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::GetGridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridNode", "GetGridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridGraph*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex);
}
// Autogenerated method: Pathfinding.GridNode.SetGridGraph
void Pathfinding::GridNode::SetGridGraph(int graphIndex, ::Pathfinding::GridGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::SetGridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridNode", "SetGridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex), ::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex, graph);
}
// Autogenerated method: Pathfinding.GridNode.ClearGridGraph
void Pathfinding::GridNode::ClearGridGraph(int graphIndex, ::Pathfinding::GridGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::ClearGridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridNode", "ClearGridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex), ::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex, graph);
}
// Autogenerated method: Pathfinding.GridNode.get_InternalGridFlags
uint16_t Pathfinding::GridNode::get_InternalGridFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::get_InternalGridFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalGridFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNode.set_InternalGridFlags
void Pathfinding::GridNode::set_InternalGridFlags(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::set_InternalGridFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InternalGridFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridNode.GetConnectionInternal
bool Pathfinding::GridNode::GetConnectionInternal(int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::GetConnectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dir);
}
// Autogenerated method: Pathfinding.GridNode.SetConnectionInternal
void Pathfinding::GridNode::SetConnectionInternal(int dir, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::SetConnectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dir, value);
}
// Autogenerated method: Pathfinding.GridNode.SetAllConnectionInternal
void Pathfinding::GridNode::SetAllConnectionInternal(int connections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::SetAllConnectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllConnectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connections);
}
// Autogenerated method: Pathfinding.GridNode.ResetConnectionsInternal
void Pathfinding::GridNode::ResetConnectionsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::ResetConnectionsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetConnectionsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNode.get_EdgeNode
bool Pathfinding::GridNode::get_EdgeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::get_EdgeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EdgeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNode.set_EdgeNode
void Pathfinding::GridNode::set_EdgeNode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::set_EdgeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EdgeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridNode.RemoveGridConnection
void Pathfinding::GridNode::RemoveGridConnection(::Pathfinding::GridNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::RemoveGridConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGridConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridNode..cctor
void Pathfinding::GridNode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridNode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.GridNode.get_HasConnectionsToAllEightNeighbours
bool Pathfinding::GridNode::get_HasConnectionsToAllEightNeighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::get_HasConnectionsToAllEightNeighbours");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNode.HasConnectionInDirection
bool Pathfinding::GridNode::HasConnectionInDirection(int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::HasConnectionInDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dir);
}
// Autogenerated method: Pathfinding.GridNode.GetNeighbourAlongDirection
::Pathfinding::GridNodeBase* Pathfinding::GridNode::GetNeighbourAlongDirection(int direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::GetNeighbourAlongDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNodeBase*, false>(this, ___internal__method, direction);
}
// Autogenerated method: Pathfinding.GridNode.ClearConnections
void Pathfinding::GridNode::ClearConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::ClearConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.GridNode.GetConnections
void Pathfinding::GridNode::GetConnections(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::GetConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.GridNode.ClosestPointOnNode
::UnityEngine::Vector3 Pathfinding::GridNode::ClosestPointOnNode(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::ClosestPointOnNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.GridNode.GetPortal
bool Pathfinding::GridNode::GetPortal(::Pathfinding::GraphNode* other, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, bool backwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::GetPortal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, left, right, backwards);
}
// Autogenerated method: Pathfinding.GridNode.UpdateRecursiveG
void Pathfinding::GridNode::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.GridNode.Open
void Pathfinding::GridNode::Open(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.GridNode.SerializeNode
void Pathfinding::GridNode::SerializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::SerializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridNode.DeserializeNode
void Pathfinding::GridNode::DeserializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::DeserializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridNode.AddConnection
void Pathfinding::GridNode::AddConnection(::Pathfinding::GraphNode* node, uint cost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::AddConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, cost);
}
// Autogenerated method: Pathfinding.GridNode.RemoveConnection
void Pathfinding::GridNode::RemoveConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::RemoveConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.GridNodeBase
#include "Pathfinding/GridNodeBase.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsWalkableErosionOffset
int Pathfinding::GridNodeBase::_get_GridFlagsWalkableErosionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_GridFlagsWalkableErosionOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNodeBase", "GridFlagsWalkableErosionOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsWalkableErosionOffset
void Pathfinding::GridNodeBase::_set_GridFlagsWalkableErosionOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_GridFlagsWalkableErosionOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "GridFlagsWalkableErosionOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsWalkableErosionMask
int Pathfinding::GridNodeBase::_get_GridFlagsWalkableErosionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_GridFlagsWalkableErosionMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNodeBase", "GridFlagsWalkableErosionMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsWalkableErosionMask
void Pathfinding::GridNodeBase::_set_GridFlagsWalkableErosionMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_GridFlagsWalkableErosionMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "GridFlagsWalkableErosionMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsWalkableTmpOffset
int Pathfinding::GridNodeBase::_get_GridFlagsWalkableTmpOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_GridFlagsWalkableTmpOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNodeBase", "GridFlagsWalkableTmpOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsWalkableTmpOffset
void Pathfinding::GridNodeBase::_set_GridFlagsWalkableTmpOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_GridFlagsWalkableTmpOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "GridFlagsWalkableTmpOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsWalkableTmpMask
int Pathfinding::GridNodeBase::_get_GridFlagsWalkableTmpMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_GridFlagsWalkableTmpMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNodeBase", "GridFlagsWalkableTmpMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsWalkableTmpMask
void Pathfinding::GridNodeBase::_set_GridFlagsWalkableTmpMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_GridFlagsWalkableTmpMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "GridFlagsWalkableTmpMask", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 NodeInGridIndexLayerOffset
int Pathfinding::GridNodeBase::_get_NodeInGridIndexLayerOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_NodeInGridIndexLayerOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNodeBase", "NodeInGridIndexLayerOffset"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 NodeInGridIndexLayerOffset
void Pathfinding::GridNodeBase::_set_NodeInGridIndexLayerOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_NodeInGridIndexLayerOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "NodeInGridIndexLayerOffset", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 NodeInGridIndexMask
int Pathfinding::GridNodeBase::_get_NodeInGridIndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_NodeInGridIndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNodeBase", "NodeInGridIndexMask"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 NodeInGridIndexMask
void Pathfinding::GridNodeBase::_set_NodeInGridIndexMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_NodeInGridIndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "NodeInGridIndexMask", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 nodeInGridIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::GridNodeBase::dyn_nodeInGridIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::dyn_nodeInGridIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeInGridIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.UInt16 gridFlags
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::GridNodeBase::dyn_gridFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::dyn_gridFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gridFlags"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Connection[] connections
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Connection>& Pathfinding::GridNodeBase::dyn_connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::dyn_connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connections"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Connection>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GridNodeBase.get_NodeInGridIndex
int Pathfinding::GridNodeBase::get_NodeInGridIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::get_NodeInGridIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeInGridIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.set_NodeInGridIndex
void Pathfinding::GridNodeBase::set_NodeInGridIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::set_NodeInGridIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NodeInGridIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridNodeBase.get_XCoordinateInGrid
int Pathfinding::GridNodeBase::get_XCoordinateInGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::get_XCoordinateInGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XCoordinateInGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.get_ZCoordinateInGrid
int Pathfinding::GridNodeBase::get_ZCoordinateInGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::get_ZCoordinateInGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ZCoordinateInGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.get_WalkableErosion
bool Pathfinding::GridNodeBase::get_WalkableErosion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::get_WalkableErosion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WalkableErosion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.set_WalkableErosion
void Pathfinding::GridNodeBase::set_WalkableErosion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::set_WalkableErosion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WalkableErosion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridNodeBase.get_TmpWalkable
bool Pathfinding::GridNodeBase::get_TmpWalkable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::get_TmpWalkable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TmpWalkable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.set_TmpWalkable
void Pathfinding::GridNodeBase::set_TmpWalkable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::set_TmpWalkable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TmpWalkable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridNodeBase.get_HasConnectionsToAllEightNeighbours
bool Pathfinding::GridNodeBase::get_HasConnectionsToAllEightNeighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::get_HasConnectionsToAllEightNeighbours");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.NormalizePoint
::UnityEngine::Vector2 Pathfinding::GridNodeBase::NormalizePoint(::UnityEngine::Vector3 worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::NormalizePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, worldPoint);
}
// Autogenerated method: Pathfinding.GridNodeBase.UnNormalizePoint
::UnityEngine::Vector3 Pathfinding::GridNodeBase::UnNormalizePoint(::UnityEngine::Vector2 normalizedPointOnSurface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::UnNormalizePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnNormalizePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalizedPointOnSurface)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, normalizedPointOnSurface);
}
// Autogenerated method: Pathfinding.GridNodeBase.GetNeighbourAlongDirection
::Pathfinding::GridNodeBase* Pathfinding::GridNodeBase::GetNeighbourAlongDirection(int direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::GetNeighbourAlongDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNodeBase*, false>(this, ___internal__method, direction);
}
// Autogenerated method: Pathfinding.GridNodeBase.HasConnectionInDirection
bool Pathfinding::GridNodeBase::HasConnectionInDirection(int direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::HasConnectionInDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, direction);
}
// Autogenerated method: Pathfinding.GridNodeBase.ClearCustomConnections
void Pathfinding::GridNodeBase::ClearCustomConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::ClearCustomConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCustomConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alsoReverse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.GridNodeBase.SurfaceArea
float Pathfinding::GridNodeBase::SurfaceArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::SurfaceArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.RandomPointOnSurface
::UnityEngine::Vector3 Pathfinding::GridNodeBase::RandomPointOnSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::RandomPointOnSurface");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.GetGizmoHashCode
int Pathfinding::GridNodeBase::GetGizmoHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::GetGizmoHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.ContainsConnection
bool Pathfinding::GridNodeBase::ContainsConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::ContainsConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridNodeBase.ClearConnections
void Pathfinding::GridNodeBase::ClearConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::ClearConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.GridNodeBase.GetConnections
void Pathfinding::GridNodeBase::GetConnections(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::GetConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.GridNodeBase.UpdateRecursiveG
void Pathfinding::GridNodeBase::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.GridNodeBase.Open
void Pathfinding::GridNodeBase::Open(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.GridNodeBase.AddConnection
void Pathfinding::GridNodeBase::AddConnection(::Pathfinding::GraphNode* node, uint cost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::AddConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, cost);
}
// Autogenerated method: Pathfinding.GridNodeBase.RemoveConnection
void Pathfinding::GridNodeBase::RemoveConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::RemoveConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridNodeBase.SerializeReferences
void Pathfinding::GridNodeBase::SerializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::SerializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridNodeBase.DeserializeReferences
void Pathfinding::GridNodeBase::DeserializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::DeserializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PointNode
#include "Pathfinding/PointNode.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Connection[] connections
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Connection>& Pathfinding::PointNode::dyn_connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::dyn_connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connections"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Connection>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::PointNode::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PointNode.SetPosition
void Pathfinding::PointNode::SetPosition(::Pathfinding::Int3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PointNode.ClosestPointOnNode
::UnityEngine::Vector3 Pathfinding::PointNode::ClosestPointOnNode(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::ClosestPointOnNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.PointNode.GetConnections
void Pathfinding::PointNode::GetConnections(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::GetConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.PointNode.ClearConnections
void Pathfinding::PointNode::ClearConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::ClearConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.PointNode.UpdateRecursiveG
void Pathfinding::PointNode::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.PointNode.ContainsConnection
bool Pathfinding::PointNode::ContainsConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::ContainsConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PointNode.AddConnection
void Pathfinding::PointNode::AddConnection(::Pathfinding::GraphNode* node, uint cost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::AddConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, cost);
}
// Autogenerated method: Pathfinding.PointNode.RemoveConnection
void Pathfinding::PointNode::RemoveConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::RemoveConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PointNode.Open
void Pathfinding::PointNode::Open(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.PointNode.GetGizmoHashCode
int Pathfinding::PointNode::GetGizmoHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::GetGizmoHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointNode.SerializeNode
void Pathfinding::PointNode::SerializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::SerializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointNode.DeserializeNode
void Pathfinding::PointNode::DeserializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::DeserializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointNode.SerializeReferences
void Pathfinding::PointNode::SerializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::SerializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointNode.DeserializeReferences
void Pathfinding::PointNode::DeserializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::DeserializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.INavmeshHolder
#include "Pathfinding/INavmeshHolder.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.INavmeshHolder.GetVertex
::Pathfinding::Int3 Pathfinding::INavmeshHolder::GetVertex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::INavmeshHolder::GetVertex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::INavmeshHolder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.INavmeshHolder.GetVertexInGraphSpace
::Pathfinding::Int3 Pathfinding::INavmeshHolder::GetVertexInGraphSpace(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::INavmeshHolder::GetVertexInGraphSpace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::INavmeshHolder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.INavmeshHolder.GetVertexArrayIndex
int Pathfinding::INavmeshHolder::GetVertexArrayIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::INavmeshHolder::GetVertexArrayIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::INavmeshHolder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.INavmeshHolder.GetTileCoordinates
void Pathfinding::INavmeshHolder::GetTileCoordinates(int tileIndex, ByRef<int> x, ByRef<int> z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::INavmeshHolder::GetTileCoordinates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::INavmeshHolder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tileIndex, byref(x), byref(z));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
// Including type: Pathfinding.INavmeshHolder
#include "Pathfinding/INavmeshHolder.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected Pathfinding.INavmeshHolder[] _navmeshHolders
::ArrayW<::Pathfinding::INavmeshHolder*> Pathfinding::TriangleMeshNode::_get__navmeshHolders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::_get__navmeshHolders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::INavmeshHolder*>>("Pathfinding", "TriangleMeshNode", "_navmeshHolders"));
}
// Autogenerated static field setter
// Set static field: static protected Pathfinding.INavmeshHolder[] _navmeshHolders
void Pathfinding::TriangleMeshNode::_set__navmeshHolders(::ArrayW<::Pathfinding::INavmeshHolder*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::_set__navmeshHolders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "TriangleMeshNode", "_navmeshHolders", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Object lockObject
::Il2CppObject* Pathfinding::TriangleMeshNode::_get_lockObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::_get_lockObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Pathfinding", "TriangleMeshNode", "lockObject"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Object lockObject
void Pathfinding::TriangleMeshNode::_set_lockObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::_set_lockObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "TriangleMeshNode", "lockObject", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 v0
[[deprecated("Use field access instead!")]] int& Pathfinding::TriangleMeshNode::dyn_v0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::dyn_v0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v0"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 v1
[[deprecated("Use field access instead!")]] int& Pathfinding::TriangleMeshNode::dyn_v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::dyn_v1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 v2
[[deprecated("Use field access instead!")]] int& Pathfinding::TriangleMeshNode::dyn_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::dyn_v2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetNavmeshHolder
::Pathfinding::INavmeshHolder* Pathfinding::TriangleMeshNode::GetNavmeshHolder(uint graphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetNavmeshHolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "TriangleMeshNode", "GetNavmeshHolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::INavmeshHolder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.SetNavmeshHolder
void Pathfinding::TriangleMeshNode::SetNavmeshHolder(int graphIndex, ::Pathfinding::INavmeshHolder* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::SetNavmeshHolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "TriangleMeshNode", "SetNavmeshHolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex), ::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex, graph);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.UpdatePositionFromVertices
void Pathfinding::TriangleMeshNode::UpdatePositionFromVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::UpdatePositionFromVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePositionFromVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVertexIndex
int Pathfinding::TriangleMeshNode::GetVertexIndex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVertexIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVertexArrayIndex
int Pathfinding::TriangleMeshNode::GetVertexArrayIndex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVertexArrayIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexArrayIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVertices
void Pathfinding::TriangleMeshNode::GetVertices(ByRef<::Pathfinding::Int3> v0, ByRef<::Pathfinding::Int3> v1, ByRef<::Pathfinding::Int3> v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Pathfinding::Int3&>(), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::Int3&>(), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::Int3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(v0), byref(v1), byref(v2));
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVerticesInGraphSpace
void Pathfinding::TriangleMeshNode::GetVerticesInGraphSpace(ByRef<::Pathfinding::Int3> v0, ByRef<::Pathfinding::Int3> v1, ByRef<::Pathfinding::Int3> v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVerticesInGraphSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVerticesInGraphSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Pathfinding::Int3&>(), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::Int3&>(), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::Int3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(v0), byref(v1), byref(v2));
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVertexInGraphSpace
::Pathfinding::Int3 Pathfinding::TriangleMeshNode::GetVertexInGraphSpace(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVertexInGraphSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexInGraphSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.ClosestPointOnNodeXZInGraphSpace
::Pathfinding::Int3 Pathfinding::TriangleMeshNode::ClosestPointOnNodeXZInGraphSpace(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::ClosestPointOnNodeXZInGraphSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPointOnNodeXZInGraphSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.SharedEdge
int Pathfinding::TriangleMeshNode::SharedEdge(::Pathfinding::GraphNode* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::SharedEdge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SharedEdge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetPortal
bool Pathfinding::TriangleMeshNode::GetPortal(::Pathfinding::GraphNode* toNode, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, bool backwards, ByRef<int> aIndex, ByRef<int> bIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetPortal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPortal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toNode), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(backwards), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, toNode, left, right, backwards, byref(aIndex), byref(bIndex));
}
// Autogenerated method: Pathfinding.TriangleMeshNode..cctor
void Pathfinding::TriangleMeshNode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "TriangleMeshNode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVertex
::Pathfinding::Int3 Pathfinding::TriangleMeshNode::GetVertex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVertex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVertexCount
int Pathfinding::TriangleMeshNode::GetVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVertexCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.ClosestPointOnNode
::UnityEngine::Vector3 Pathfinding::TriangleMeshNode::ClosestPointOnNode(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::ClosestPointOnNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.ClosestPointOnNodeXZ
::UnityEngine::Vector3 Pathfinding::TriangleMeshNode::ClosestPointOnNodeXZ(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::ClosestPointOnNodeXZ");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.ContainsPoint
bool Pathfinding::TriangleMeshNode::ContainsPoint(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::ContainsPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.ContainsPointInGraphSpace
bool Pathfinding::TriangleMeshNode::ContainsPointInGraphSpace(::Pathfinding::Int3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::ContainsPointInGraphSpace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.UpdateRecursiveG
void Pathfinding::TriangleMeshNode::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.Open
void Pathfinding::TriangleMeshNode::Open(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetPortal
bool Pathfinding::TriangleMeshNode::GetPortal(::Pathfinding::GraphNode* toNode, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, bool backwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetPortal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, toNode, left, right, backwards);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.SurfaceArea
float Pathfinding::TriangleMeshNode::SurfaceArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::SurfaceArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.RandomPointOnSurface
::UnityEngine::Vector3 Pathfinding::TriangleMeshNode::RandomPointOnSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::RandomPointOnSurface");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.SerializeNode
void Pathfinding::TriangleMeshNode::SerializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::SerializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.DeserializeNode
void Pathfinding::TriangleMeshNode::DeserializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::DeserializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PointGraph
#include "Pathfinding/PointGraph.hpp"
// Including type: Pathfinding.NNInfoInternal
#include "Pathfinding/NNInfoInternal.hpp"
// Including type: Pathfinding.PointGraph/<ConnectNodesAsync>d__37
#include "Pathfinding/PointGraph_-ConnectNodesAsync-d__37.hpp"
// Including type: Pathfinding.PointGraph/<ScanInternal>d__35
#include "Pathfinding/PointGraph_-ScanInternal-d__35.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.PointKDTree
#include "Pathfinding/PointKDTree.hpp"
// Including type: Pathfinding.PointNode
#include "Pathfinding/PointNode.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.GraphUpdateThreading
#include "Pathfinding/GraphUpdateThreading.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::PointGraph::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String searchTag
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::PointGraph::dyn_searchTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_searchTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchTag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::PointGraph::dyn_maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 limits
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::PointGraph::dyn_limits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_limits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "limits"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean raycast
[[deprecated("Use field access instead!")]] bool& Pathfinding::PointGraph::dyn_raycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_raycast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean use2DPhysics
[[deprecated("Use field access instead!")]] bool& Pathfinding::PointGraph::dyn_use2DPhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_use2DPhysics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "use2DPhysics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean thickRaycast
[[deprecated("Use field access instead!")]] bool& Pathfinding::PointGraph::dyn_thickRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_thickRaycast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single thickRaycastRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::PointGraph::dyn_thickRaycastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_thickRaycastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean recursive
[[deprecated("Use field access instead!")]] bool& Pathfinding::PointGraph::dyn_recursive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_recursive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recursive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::PointGraph::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean optimizeForSparseGraph
[[deprecated("Use field access instead!")]] bool& Pathfinding::PointGraph::dyn_optimizeForSparseGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_optimizeForSparseGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "optimizeForSparseGraph"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PointKDTree lookupTree
[[deprecated("Use field access instead!")]] ::Pathfinding::PointKDTree*& Pathfinding::PointGraph::dyn_lookupTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_lookupTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookupTree"))->offset;
  return *reinterpret_cast<::Pathfinding::PointKDTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 maximumConnectionLength
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::PointGraph::dyn_maximumConnectionLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_maximumConnectionLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumConnectionLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PointNode[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::PointNode*>& Pathfinding::PointGraph::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::PointNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PointGraph/NodeDistanceMode nearestNodeDistanceMode
[[deprecated("Use field access instead!")]] ::Pathfinding::PointGraph::NodeDistanceMode& Pathfinding::PointGraph::dyn_nearestNodeDistanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_nearestNodeDistanceMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearestNodeDistanceMode"))->offset;
  return *reinterpret_cast<::Pathfinding::PointGraph::NodeDistanceMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <nodeCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Pathfinding::PointGraph::dyn_$nodeCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_$nodeCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<nodeCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PointGraph.get_nodeCount
int Pathfinding::PointGraph::get_nodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::get_nodeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nodeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.set_nodeCount
void Pathfinding::PointGraph::set_nodeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::set_nodeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nodeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PointGraph.GetNearestInternal
::Pathfinding::NNInfoInternal Pathfinding::PointGraph::GetNearestInternal(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, bool fastCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearestInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(fastCheck)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint, fastCheck);
}
// Autogenerated method: Pathfinding.PointGraph.FindClosestConnectionPoint
::Pathfinding::NNInfoInternal Pathfinding::PointGraph::FindClosestConnectionPoint(::Pathfinding::PointNode* node, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::FindClosestConnectionPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindClosestConnectionPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, node, position);
}
// Autogenerated method: Pathfinding.PointGraph.AddNode
::Pathfinding::PointNode* Pathfinding::PointGraph::AddNode(::Pathfinding::Int3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::AddNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PointNode*, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.PointGraph.CountChildren
int Pathfinding::PointGraph::CountChildren(::UnityEngine::Transform* tr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::CountChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PointGraph", "CountChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tr);
}
// Autogenerated method: Pathfinding.PointGraph.AddChildren
void Pathfinding::PointGraph::AddChildren(ByRef<int> c, ::UnityEngine::Transform* tr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::AddChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(tr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(c), tr);
}
// Autogenerated method: Pathfinding.PointGraph.RebuildNodeLookup
void Pathfinding::PointGraph::RebuildNodeLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::RebuildNodeLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildNodeLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.RebuildConnectionDistanceLookup
void Pathfinding::PointGraph::RebuildConnectionDistanceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::RebuildConnectionDistanceLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildConnectionDistanceLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.AddToLookup
void Pathfinding::PointGraph::AddToLookup(::Pathfinding::PointNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::AddToLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PointGraph.RegisterConnectionLength
void Pathfinding::PointGraph::RegisterConnectionLength(int64_t sqrLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::RegisterConnectionLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterConnectionLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sqrLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sqrLength);
}
// Autogenerated method: Pathfinding.PointGraph.CreateNodes
::ArrayW<::Pathfinding::PointNode*> Pathfinding::PointGraph::CreateNodes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::CreateNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::PointNode*>, false>(this, ___internal__method, count);
}
// Autogenerated method: Pathfinding.PointGraph.ConnectNodes
void Pathfinding::PointGraph::ConnectNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::ConnectNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.ConnectNodesAsync
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding::PointGraph::ConnectNodesAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::ConnectNodesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectNodesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.IsValidConnection
bool Pathfinding::PointGraph::IsValidConnection(::Pathfinding::GraphNode* a, ::Pathfinding::GraphNode* b, ByRef<float> dist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::IsValidConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, b, byref(dist));
}
// Autogenerated method: Pathfinding.PointGraph.Pathfinding.IUpdatableGraph.CanUpdateAsync
::Pathfinding::GraphUpdateThreading Pathfinding::PointGraph::Pathfinding_IUpdatableGraph_CanUpdateAsync(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::Pathfinding.IUpdatableGraph.CanUpdateAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphUpdateThreading, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.PointGraph.Pathfinding.IUpdatableGraph.UpdateAreaInit
void Pathfinding::PointGraph::Pathfinding_IUpdatableGraph_UpdateAreaInit(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::Pathfinding.IUpdatableGraph.UpdateAreaInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.PointGraph.Pathfinding.IUpdatableGraph.UpdateAreaPost
void Pathfinding::PointGraph::Pathfinding_IUpdatableGraph_UpdateAreaPost(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::Pathfinding.IUpdatableGraph.UpdateAreaPost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.PointGraph.Pathfinding.IUpdatableGraph.UpdateArea
void Pathfinding::PointGraph::Pathfinding_IUpdatableGraph_UpdateArea(::Pathfinding::GraphUpdateObject* guo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::Pathfinding.IUpdatableGraph.UpdateArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, guo);
}
// Autogenerated method: Pathfinding.PointGraph.CountNodes
int Pathfinding::PointGraph::CountNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::CountNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.GetNodes
void Pathfinding::PointGraph::GetNodes(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Pathfinding.PointGraph.GetNearest
::Pathfinding::NNInfoInternal Pathfinding::PointGraph::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: Pathfinding.PointGraph.GetNearestForce
::Pathfinding::NNInfoInternal Pathfinding::PointGraph::GetNearestForce(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestForce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.PointGraph.ScanInternal
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding::PointGraph::ScanInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.PostDeserialization
void Pathfinding::PointGraph::PostDeserialization(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::PostDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointGraph.RelocateNodes
void Pathfinding::PointGraph::RelocateNodes(::UnityEngine::Matrix4x4 deltaMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::RelocateNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaMatrix);
}
// Autogenerated method: Pathfinding.PointGraph.DeserializeSettingsCompatibility
void Pathfinding::PointGraph::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointGraph.SerializeExtraInfo
void Pathfinding::PointGraph::SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointGraph.DeserializeExtraInfo
void Pathfinding::PointGraph::DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PointGraph/NodeDistanceMode
#include "Pathfinding/PointGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.PointGraph/NodeDistanceMode Node
::Pathfinding::PointGraph::NodeDistanceMode Pathfinding::PointGraph::NodeDistanceMode::_get_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::NodeDistanceMode::_get_Node");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PointGraph::NodeDistanceMode>("Pathfinding", "PointGraph/NodeDistanceMode", "Node"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PointGraph/NodeDistanceMode Node
void Pathfinding::PointGraph::NodeDistanceMode::_set_Node(::Pathfinding::PointGraph::NodeDistanceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::NodeDistanceMode::_set_Node");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PointGraph/NodeDistanceMode", "Node", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.PointGraph/NodeDistanceMode Connection
::Pathfinding::PointGraph::NodeDistanceMode Pathfinding::PointGraph::NodeDistanceMode::_get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::NodeDistanceMode::_get_Connection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::PointGraph::NodeDistanceMode>("Pathfinding", "PointGraph/NodeDistanceMode", "Connection"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.PointGraph/NodeDistanceMode Connection
void Pathfinding::PointGraph::NodeDistanceMode::_set_Connection(::Pathfinding::PointGraph::NodeDistanceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::NodeDistanceMode::_set_Connection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PointGraph/NodeDistanceMode", "Connection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::PointGraph::NodeDistanceMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::NodeDistanceMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.PointGraph/<ConnectNodesAsync>d__37
#include "Pathfinding/PointGraph_-ConnectNodesAsync-d__37.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Progress <>2__current
[[deprecated("Use field access instead!")]] ::Pathfinding::Progress& Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Pathfinding::Progress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PointGraph <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::PointGraph*& Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::PointGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.Connection> <connections>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::Connection>*& Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$connections$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$connections$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connections>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::Connection>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.GraphNode> <candidateConnections>5__3
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$candidateConnections$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$candidateConnections$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<candidateConnections>5__3"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <maxSquaredRange>5__4
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$maxSquaredRange$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$maxSquaredRange$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxSquaredRange>5__4"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__5
[[deprecated("Use field access instead!")]] int& Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$i$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::dyn_$i$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PointGraph/<ConnectNodesAsync>d__37.System.IDisposable.Dispose
void Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ConnectNodesAsync$d__37*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ConnectNodesAsync>d__37.MoveNext
bool Pathfinding::PointGraph::$ConnectNodesAsync$d__37::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ConnectNodesAsync$d__37*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ConnectNodesAsync>d__37.System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current
::Pathfinding::Progress Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System_Collections_Generic_IEnumerator$Pathfinding_Progress$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ConnectNodesAsync$d__37*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Progress, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ConnectNodesAsync>d__37.System.Collections.IEnumerator.Reset
void Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ConnectNodesAsync$d__37*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ConnectNodesAsync>d__37.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ConnectNodesAsync$d__37*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ConnectNodesAsync>d__37.System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>* Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System_Collections_Generic_IEnumerable$Pathfinding_Progress$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ConnectNodesAsync$d__37*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ConnectNodesAsync>d__37.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ConnectNodesAsync$d__37::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ConnectNodesAsync$d__37*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.PointGraph/<ScanInternal>d__35
#include "Pathfinding/PointGraph_-ScanInternal-d__35.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Progress <>2__current
[[deprecated("Use field access instead!")]] ::Pathfinding::Progress& Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Pathfinding::Progress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PointGraph <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::PointGraph*& Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::PointGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] <gos>5__2
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$gos$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$gos$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gos>5__2"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Pathfinding.Progress> <>7__wrap2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*& Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PointGraph/<ScanInternal>d__35.System.IDisposable.Dispose
void Pathfinding::PointGraph::$ScanInternal$d__35::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ScanInternal$d__35*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ScanInternal>d__35.MoveNext
bool Pathfinding::PointGraph::$ScanInternal$d__35::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ScanInternal$d__35*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ScanInternal>d__35.<>m__Finally1
void Pathfinding::PointGraph::$ScanInternal$d__35::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ScanInternal>d__35.System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current
::Pathfinding::Progress Pathfinding::PointGraph::$ScanInternal$d__35::System_Collections_Generic_IEnumerator$Pathfinding_Progress$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ScanInternal$d__35*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Progress, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ScanInternal>d__35.System.Collections.IEnumerator.Reset
void Pathfinding::PointGraph::$ScanInternal$d__35::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ScanInternal$d__35*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ScanInternal>d__35.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::PointGraph::$ScanInternal$d__35::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ScanInternal$d__35*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ScanInternal>d__35.System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>* Pathfinding::PointGraph::$ScanInternal$d__35::System_Collections_Generic_IEnumerable$Pathfinding_Progress$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ScanInternal$d__35*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph/<ScanInternal>d__35.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Pathfinding::PointGraph::$ScanInternal$d__35::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::$ScanInternal$d__35::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph::$ScanInternal$d__35*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RecastGraph
#include "Pathfinding/RecastGraph.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.RecastGraph/<>c__DisplayClass50_0
#include "Pathfinding/RecastGraph_--c__DisplayClass50_0.hpp"
// Including type: Pathfinding.RecastGraph/<>c__DisplayClass50_1
#include "Pathfinding/RecastGraph_--c__DisplayClass50_1.hpp"
// Including type: Pathfinding.RecastGraph/<ScanAllTiles>d__50
#include "Pathfinding/RecastGraph_-ScanAllTiles-d__50.hpp"
// Including type: Pathfinding.RecastGraph/<ScanInternal>d__46
#include "Pathfinding/RecastGraph_-ScanInternal-d__46.hpp"
// Including type: Pathfinding.Voxels.Voxelize
#include "Pathfinding/Voxels/Voxelize.hpp"
// Including type: Pathfinding.NavmeshTile
#include "Pathfinding/NavmeshTile.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
// Including type: Pathfinding.GraphUpdateThreading
#include "Pathfinding/GraphUpdateThreading.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.Voxels.RasterizationMesh
#include "Pathfinding/Voxels/RasterizationMesh.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Pathfinding.Voxels.VoxelMesh
#include "Pathfinding/Voxels/VoxelMesh.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 BorderVertexMask
int Pathfinding::RecastGraph::_get_BorderVertexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::_get_BorderVertexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "RecastGraph", "BorderVertexMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BorderVertexMask
void Pathfinding::RecastGraph::_set_BorderVertexMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::_set_BorderVertexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RecastGraph", "BorderVertexMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BorderVertexOffset
int Pathfinding::RecastGraph::_get_BorderVertexOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::_get_BorderVertexOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "RecastGraph", "BorderVertexOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BorderVertexOffset
void Pathfinding::RecastGraph::_set_BorderVertexOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::_set_BorderVertexOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RecastGraph", "BorderVertexOffset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single characterRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastGraph::dyn_characterRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_characterRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single contourMaxError
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastGraph::dyn_contourMaxError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_contourMaxError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contourMaxError"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cellSize
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastGraph::dyn_cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_cellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single walkableHeight
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastGraph::dyn_walkableHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_walkableHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "walkableHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single walkableClimb
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastGraph::dyn_walkableClimb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_walkableClimb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "walkableClimb"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSlope
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastGraph::dyn_maxSlope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_maxSlope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSlope"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxEdgeLength
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastGraph::dyn_maxEdgeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_maxEdgeLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxEdgeLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minRegionSize
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastGraph::dyn_minRegionSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_minRegionSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minRegionSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 editorTileSize
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::dyn_editorTileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_editorTileSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorTileSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tileSizeX
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::dyn_tileSizeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_tileSizeX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileSizeX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tileSizeZ
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::dyn_tileSizeZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_tileSizeZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileSizeZ"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useTiles
[[deprecated("Use field access instead!")]] bool& Pathfinding::RecastGraph::dyn_useTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_useTiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useTiles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean scanEmptyGraph
[[deprecated("Use field access instead!")]] bool& Pathfinding::RecastGraph::dyn_scanEmptyGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_scanEmptyGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scanEmptyGraph"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RecastGraph/RelevantGraphSurfaceMode relevantGraphSurfaceMode
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph::RelevantGraphSurfaceMode& Pathfinding::RecastGraph::dyn_relevantGraphSurfaceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_relevantGraphSurfaceMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relevantGraphSurfaceMode"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastGraph::RelevantGraphSurfaceMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rasterizeColliders
[[deprecated("Use field access instead!")]] bool& Pathfinding::RecastGraph::dyn_rasterizeColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_rasterizeColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rasterizeColliders"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rasterizeMeshes
[[deprecated("Use field access instead!")]] bool& Pathfinding::RecastGraph::dyn_rasterizeMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_rasterizeMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rasterizeMeshes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rasterizeTerrain
[[deprecated("Use field access instead!")]] bool& Pathfinding::RecastGraph::dyn_rasterizeTerrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_rasterizeTerrain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rasterizeTerrain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rasterizeTrees
[[deprecated("Use field access instead!")]] bool& Pathfinding::RecastGraph::dyn_rasterizeTrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_rasterizeTrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rasterizeTrees"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single colliderRasterizeDetail
[[deprecated("Use field access instead!")]] float& Pathfinding::RecastGraph::dyn_colliderRasterizeDetail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_colliderRasterizeDetail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliderRasterizeDetail"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::RecastGraph::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> tagMask
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Pathfinding::RecastGraph::dyn_tagMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_tagMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagMask"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 terrainSampleSize
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::dyn_terrainSampleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_terrainSampleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "terrainSampleSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RecastGraph::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 forcedBoundsCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RecastGraph::dyn_forcedBoundsCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_forcedBoundsCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forcedBoundsCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Voxels.Voxelize globalVox
[[deprecated("Use field access instead!")]] ::Pathfinding::Voxels::Voxelize*& Pathfinding::RecastGraph::dyn_globalVox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_globalVox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalVox"))->offset;
  return *reinterpret_cast<::Pathfinding::Voxels::Voxelize**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.NavmeshTile> stagingTiles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::NavmeshTile*>*& Pathfinding::RecastGraph::dyn_stagingTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::dyn_stagingTiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stagingTiles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::NavmeshTile*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RecastGraph.get_forcedBounds
::UnityEngine::Bounds Pathfinding::RecastGraph::get_forcedBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::get_forcedBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forcedBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.ClosestPointOnNode
::UnityEngine::Vector3 Pathfinding::RecastGraph::ClosestPointOnNode(::Pathfinding::TriangleMeshNode* node, ::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::ClosestPointOnNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPointOnNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, node, pos);
}
// Autogenerated method: Pathfinding.RecastGraph.ContainsPoint
bool Pathfinding::RecastGraph::ContainsPoint(::Pathfinding::TriangleMeshNode* node, ::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::ContainsPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, pos);
}
// Autogenerated method: Pathfinding.RecastGraph.SnapForceBoundsToScene
void Pathfinding::RecastGraph::SnapForceBoundsToScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::SnapForceBoundsToScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SnapForceBoundsToScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.Pathfinding.IUpdatableGraph.CanUpdateAsync
::Pathfinding::GraphUpdateThreading Pathfinding::RecastGraph::Pathfinding_IUpdatableGraph_CanUpdateAsync(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::Pathfinding.IUpdatableGraph.CanUpdateAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphUpdateThreading, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.RecastGraph.Pathfinding.IUpdatableGraph.UpdateAreaInit
void Pathfinding::RecastGraph::Pathfinding_IUpdatableGraph_UpdateAreaInit(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::Pathfinding.IUpdatableGraph.UpdateAreaInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.RecastGraph.Pathfinding.IUpdatableGraph.UpdateArea
void Pathfinding::RecastGraph::Pathfinding_IUpdatableGraph_UpdateArea(::Pathfinding::GraphUpdateObject* guo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::Pathfinding.IUpdatableGraph.UpdateArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, guo);
}
// Autogenerated method: Pathfinding.RecastGraph.Pathfinding.IUpdatableGraph.UpdateAreaPost
void Pathfinding::RecastGraph::Pathfinding_IUpdatableGraph_UpdateAreaPost(::Pathfinding::GraphUpdateObject* guo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::Pathfinding.IUpdatableGraph.UpdateAreaPost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, guo);
}
// Autogenerated method: Pathfinding.RecastGraph.InitializeTileInfo
void Pathfinding::RecastGraph::InitializeTileInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::InitializeTileInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeTileInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.PutMeshesIntoTileBuckets
::ArrayW<::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>*> Pathfinding::RecastGraph::PutMeshesIntoTileBuckets(::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>* meshes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::PutMeshesIntoTileBuckets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutMeshesIntoTileBuckets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>*>, false>(this, ___internal__method, meshes);
}
// Autogenerated method: Pathfinding.RecastGraph.ScanAllTiles
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding::RecastGraph::ScanAllTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::ScanAllTiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAllTiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.CollectMeshes
::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>* Pathfinding::RecastGraph::CollectMeshes(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::CollectMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>*, false>(this, ___internal__method, bounds);
}
// Autogenerated method: Pathfinding.RecastGraph.get_CellHeight
float Pathfinding::RecastGraph::get_CellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::get_CellHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CellHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.get_CharacterRadiusInVoxels
int Pathfinding::RecastGraph::get_CharacterRadiusInVoxels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::get_CharacterRadiusInVoxels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CharacterRadiusInVoxels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.get_TileBorderSizeInVoxels
int Pathfinding::RecastGraph::get_TileBorderSizeInVoxels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::get_TileBorderSizeInVoxels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TileBorderSizeInVoxels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.get_TileBorderSizeInWorldUnits
float Pathfinding::RecastGraph::get_TileBorderSizeInWorldUnits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::get_TileBorderSizeInWorldUnits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TileBorderSizeInWorldUnits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.CalculateTileBoundsWithBorder
::UnityEngine::Bounds Pathfinding::RecastGraph::CalculateTileBoundsWithBorder(int x, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::CalculateTileBoundsWithBorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTileBoundsWithBorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method, x, z);
}
// Autogenerated method: Pathfinding.RecastGraph.BuildTileMesh
::Pathfinding::NavmeshTile* Pathfinding::RecastGraph::BuildTileMesh(::Pathfinding::Voxels::Voxelize* vox, int x, int z, int threadIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::BuildTileMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildTileMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vox), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(threadIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavmeshTile*, false>(this, ___internal__method, vox, x, z, threadIndex);
}
// Autogenerated method: Pathfinding.RecastGraph.CreateTile
::Pathfinding::NavmeshTile* Pathfinding::RecastGraph::CreateTile(::Pathfinding::Voxels::Voxelize* vox, ::Pathfinding::Voxels::VoxelMesh mesh, int x, int z, int threadIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::CreateTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vox), ::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(threadIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavmeshTile*, false>(this, ___internal__method, vox, mesh, x, z, threadIndex);
}
// Autogenerated method: Pathfinding.RecastGraph.get_RecalculateNormals
bool Pathfinding::RecastGraph::get_RecalculateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::get_RecalculateNormals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 40));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.get_TileWorldSizeX
float Pathfinding::RecastGraph::get_TileWorldSizeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::get_TileWorldSizeX");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 37));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.get_TileWorldSizeZ
float Pathfinding::RecastGraph::get_TileWorldSizeZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::get_TileWorldSizeZ");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 38));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.get_MaxTileConnectionEdgeDistance
float Pathfinding::RecastGraph::get_MaxTileConnectionEdgeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::get_MaxTileConnectionEdgeDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 39));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.ScanInternal
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* Pathfinding::RecastGraph::ScanInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.CalculateTransform
::Pathfinding::Util::GraphTransform* Pathfinding::RecastGraph::CalculateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::CalculateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshBase*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph.DeserializeSettingsCompatibility
void Pathfinding::RecastGraph::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RecastGraph/RelevantGraphSurfaceMode
#include "Pathfinding/RecastGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.RecastGraph/RelevantGraphSurfaceMode DoNotRequire
::Pathfinding::RecastGraph::RelevantGraphSurfaceMode Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_get_DoNotRequire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_get_DoNotRequire");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RecastGraph::RelevantGraphSurfaceMode>("Pathfinding", "RecastGraph/RelevantGraphSurfaceMode", "DoNotRequire"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RecastGraph/RelevantGraphSurfaceMode DoNotRequire
void Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_set_DoNotRequire(::Pathfinding::RecastGraph::RelevantGraphSurfaceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_set_DoNotRequire");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RecastGraph/RelevantGraphSurfaceMode", "DoNotRequire", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RecastGraph/RelevantGraphSurfaceMode OnlyForCompletelyInsideTile
::Pathfinding::RecastGraph::RelevantGraphSurfaceMode Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_get_OnlyForCompletelyInsideTile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_get_OnlyForCompletelyInsideTile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RecastGraph::RelevantGraphSurfaceMode>("Pathfinding", "RecastGraph/RelevantGraphSurfaceMode", "OnlyForCompletelyInsideTile"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RecastGraph/RelevantGraphSurfaceMode OnlyForCompletelyInsideTile
void Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_set_OnlyForCompletelyInsideTile(::Pathfinding::RecastGraph::RelevantGraphSurfaceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_set_OnlyForCompletelyInsideTile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RecastGraph/RelevantGraphSurfaceMode", "OnlyForCompletelyInsideTile", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RecastGraph/RelevantGraphSurfaceMode RequireForAll
::Pathfinding::RecastGraph::RelevantGraphSurfaceMode Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_get_RequireForAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_get_RequireForAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RecastGraph::RelevantGraphSurfaceMode>("Pathfinding", "RecastGraph/RelevantGraphSurfaceMode", "RequireForAll"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RecastGraph/RelevantGraphSurfaceMode RequireForAll
void Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_set_RequireForAll(::Pathfinding::RecastGraph::RelevantGraphSurfaceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::RelevantGraphSurfaceMode::_set_RequireForAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RecastGraph/RelevantGraphSurfaceMode", "RequireForAll", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::RelevantGraphSurfaceMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::RelevantGraphSurfaceMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RecastGraph/<>c__DisplayClass50_0
#include "Pathfinding/RecastGraph_--c__DisplayClass50_0.hpp"
// Including type: Pathfinding.Voxels.Voxelize
#include "Pathfinding/Voxels/Voxelize.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Voxels.RasterizationMesh
#include "Pathfinding/Voxels/RasterizationMesh.hpp"
// Including type: Pathfinding.Int2
#include "Pathfinding/Int2.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Voxels.Voxelize[] voxelizers
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Voxels::Voxelize*>& Pathfinding::RecastGraph::$$c__DisplayClass50_0::dyn_voxelizers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$$c__DisplayClass50_0::dyn_voxelizers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voxelizers"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Voxels::Voxelize*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.Voxels.RasterizationMesh>[] buckets
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>*>& Pathfinding::RecastGraph::$$c__DisplayClass50_0::dyn_buckets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$$c__DisplayClass50_0::dyn_buckets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buckets"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RecastGraph <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph*& Pathfinding::RecastGraph::$$c__DisplayClass50_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$$c__DisplayClass50_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 graphIndex
[[deprecated("Use field access instead!")]] uint& Pathfinding::RecastGraph::$$c__DisplayClass50_0::dyn_graphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$$c__DisplayClass50_0::dyn_graphIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RecastGraph/<>c__DisplayClass50_0.<ScanAllTiles>b__0
void Pathfinding::RecastGraph::$$c__DisplayClass50_0::$ScanAllTiles$b__0(::Pathfinding::Int2 tile, int threadIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$$c__DisplayClass50_0::<ScanAllTiles>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ScanAllTiles>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tile), ::il2cpp_utils::ExtractType(threadIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tile, threadIndex);
}
// Autogenerated method: Pathfinding.RecastGraph/<>c__DisplayClass50_0.<ScanAllTiles>b__1
void Pathfinding::RecastGraph::$$c__DisplayClass50_0::$ScanAllTiles$b__1(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$$c__DisplayClass50_0::<ScanAllTiles>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ScanAllTiles>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RecastGraph/<>c__DisplayClass50_1
#include "Pathfinding/RecastGraph_--c__DisplayClass50_1.hpp"
// Including type: Pathfinding.Int2
#include "Pathfinding/Int2.hpp"
// Including type: Pathfinding.RecastGraph/<>c__DisplayClass50_0
#include "Pathfinding/RecastGraph_--c__DisplayClass50_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 direction
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::$$c__DisplayClass50_1::dyn_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$$c__DisplayClass50_1::dyn_direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direction"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RecastGraph/<>c__DisplayClass50_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph::$$c__DisplayClass50_0*& Pathfinding::RecastGraph::$$c__DisplayClass50_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$$c__DisplayClass50_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastGraph::$$c__DisplayClass50_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RecastGraph/<>c__DisplayClass50_1.<ScanAllTiles>b__2
void Pathfinding::RecastGraph::$$c__DisplayClass50_1::$ScanAllTiles$b__2(::Pathfinding::Int2 tile, int threadIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$$c__DisplayClass50_1::<ScanAllTiles>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ScanAllTiles>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tile), ::il2cpp_utils::ExtractType(threadIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tile, threadIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.RecastGraph/<ScanAllTiles>d__50
#include "Pathfinding/RecastGraph_-ScanAllTiles-d__50.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Voxels.RasterizationMesh
#include "Pathfinding/Voxels/RasterizationMesh.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Pathfinding.RecastGraph/<>c__DisplayClass50_0
#include "Pathfinding/RecastGraph_--c__DisplayClass50_0.hpp"
// Including type: Pathfinding.RecastGraph/<>c__DisplayClass50_1
#include "Pathfinding/RecastGraph_--c__DisplayClass50_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Progress <>2__current
[[deprecated("Use field access instead!")]] ::Pathfinding::Progress& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Pathfinding::Progress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RecastGraph <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph*& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RecastGraph/<>c__DisplayClass50_0 <>8__1
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph::$$c__DisplayClass50_0*& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastGraph::$$c__DisplayClass50_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RecastGraph/<>c__DisplayClass50_1 <>8__2
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph::$$c__DisplayClass50_1*& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$8__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$8__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__2"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastGraph::$$c__DisplayClass50_1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.Voxels.RasterizationMesh> <meshes>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>*& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$meshes$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$meshes$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<meshes>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::Voxels::RasterizationMesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Pathfinding.Int2> <tileQueue>5__3
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::Int2>*& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$tileQueue$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$tileQueue$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tileQueue>5__3"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::Int2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <timeoutMillis>5__4
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$timeoutMillis$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$timeoutMillis$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timeoutMillis>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<System.Int32> <>7__wrap4
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<int>*& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$7__wrap4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$$7__wrap4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <coordinateSum>5__6
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$coordinateSum$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$coordinateSum$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<coordinateSum>5__6"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <numTilesInQueue>5__7
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$numTilesInQueue$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::dyn_$numTilesInQueue$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<numTilesInQueue>5__7"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanAllTiles>d__50.System.IDisposable.Dispose
void Pathfinding::RecastGraph::$ScanAllTiles$d__50::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanAllTiles$d__50*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanAllTiles>d__50.MoveNext
bool Pathfinding::RecastGraph::$ScanAllTiles$d__50::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanAllTiles$d__50*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanAllTiles>d__50.<>m__Finally1
void Pathfinding::RecastGraph::$ScanAllTiles$d__50::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanAllTiles>d__50.<>m__Finally2
void Pathfinding::RecastGraph::$ScanAllTiles$d__50::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanAllTiles>d__50.System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current
::Pathfinding::Progress Pathfinding::RecastGraph::$ScanAllTiles$d__50::System_Collections_Generic_IEnumerator$Pathfinding_Progress$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanAllTiles$d__50*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Progress, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanAllTiles>d__50.System.Collections.IEnumerator.Reset
void Pathfinding::RecastGraph::$ScanAllTiles$d__50::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanAllTiles$d__50*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanAllTiles>d__50.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::RecastGraph::$ScanAllTiles$d__50::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanAllTiles$d__50*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanAllTiles>d__50.System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>* Pathfinding::RecastGraph::$ScanAllTiles$d__50::System_Collections_Generic_IEnumerable$Pathfinding_Progress$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanAllTiles$d__50*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanAllTiles>d__50.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Pathfinding::RecastGraph::$ScanAllTiles$d__50::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanAllTiles$d__50::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanAllTiles$d__50*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.RecastGraph/<ScanInternal>d__46
#include "Pathfinding/RecastGraph_-ScanInternal-d__46.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::$ScanInternal$d__46::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Progress <>2__current
[[deprecated("Use field access instead!")]] ::Pathfinding::Progress& Pathfinding::RecastGraph::$ScanInternal$d__46::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Pathfinding::Progress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastGraph::$ScanInternal$d__46::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RecastGraph <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastGraph*& Pathfinding::RecastGraph::$ScanInternal$d__46::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Pathfinding.Progress> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*& Pathfinding::RecastGraph::$ScanInternal$d__46::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanInternal>d__46.System.IDisposable.Dispose
void Pathfinding::RecastGraph::$ScanInternal$d__46::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanInternal$d__46*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanInternal>d__46.MoveNext
bool Pathfinding::RecastGraph::$ScanInternal$d__46::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanInternal$d__46*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanInternal>d__46.<>m__Finally1
void Pathfinding::RecastGraph::$ScanInternal$d__46::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanInternal>d__46.System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current
::Pathfinding::Progress Pathfinding::RecastGraph::$ScanInternal$d__46::System_Collections_Generic_IEnumerator$Pathfinding_Progress$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanInternal$d__46*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Progress, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanInternal>d__46.System.Collections.IEnumerator.Reset
void Pathfinding::RecastGraph::$ScanInternal$d__46::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanInternal$d__46*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanInternal>d__46.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::RecastGraph::$ScanInternal$d__46::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanInternal$d__46*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanInternal>d__46.System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>* Pathfinding::RecastGraph::$ScanInternal$d__46::System_Collections_Generic_IEnumerable$Pathfinding_Progress$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanInternal$d__46*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastGraph/<ScanInternal>d__46.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Pathfinding::RecastGraph::$ScanInternal$d__46::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastGraph::$ScanInternal$d__46::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RecastGraph::$ScanInternal$d__46*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.BBTree
#include "Pathfinding/BBTree.hpp"
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: Pathfinding.NNInfoInternal
#include "Pathfinding/NNInfoInternal.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MaximumLeafSize
int Pathfinding::BBTree::_get_MaximumLeafSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::_get_MaximumLeafSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "BBTree", "MaximumLeafSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaximumLeafSize
void Pathfinding::BBTree::_set_MaximumLeafSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::_set_MaximumLeafSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "BBTree", "MaximumLeafSize", value));
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.BBTree/BBTreeBox[] tree
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::BBTree::BBTreeBox>& Pathfinding::BBTree::dyn_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::dyn_tree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tree"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::BBTree::BBTreeBox>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.TriangleMeshNode[] nodeLookup
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::TriangleMeshNode*>& Pathfinding::BBTree::dyn_nodeLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::dyn_nodeLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeLookup"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::TriangleMeshNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& Pathfinding::BBTree::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 leafNodes
[[deprecated("Use field access instead!")]] int& Pathfinding::BBTree::dyn_leafNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::dyn_leafNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leafNodes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.BBTree.get_Size
::UnityEngine::Rect Pathfinding::BBTree::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BBTree.Clear
void Pathfinding::BBTree::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BBTree.Pathfinding.Util.IAstarPooledObject.OnEnterPool
void Pathfinding::BBTree::Pathfinding_Util_IAstarPooledObject_OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::Pathfinding.Util.IAstarPooledObject.OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::BBTree*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BBTree.EnsureCapacity
void Pathfinding::BBTree::EnsureCapacity(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: Pathfinding.BBTree.EnsureNodeCapacity
void Pathfinding::BBTree::EnsureNodeCapacity(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::EnsureNodeCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureNodeCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: Pathfinding.BBTree.GetBox
int Pathfinding::BBTree::GetBox(::Pathfinding::IntRect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::GetBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, rect);
}
// Autogenerated method: Pathfinding.BBTree.RebuildFrom
void Pathfinding::BBTree::RebuildFrom(::ArrayW<::Pathfinding::TriangleMeshNode*> nodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::RebuildFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodes);
}
// Autogenerated method: Pathfinding.BBTree.SplitByX
int Pathfinding::BBTree::SplitByX(::ArrayW<::Pathfinding::TriangleMeshNode*> nodes, ::ArrayW<int> permutation, int from, int to, int divider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::SplitByX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "BBTree", "SplitByX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(permutation), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(divider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodes, permutation, from, to, divider);
}
// Autogenerated method: Pathfinding.BBTree.SplitByZ
int Pathfinding::BBTree::SplitByZ(::ArrayW<::Pathfinding::TriangleMeshNode*> nodes, ::ArrayW<int> permutation, int from, int to, int divider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::SplitByZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "BBTree", "SplitByZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(permutation), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(divider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodes, permutation, from, to, divider);
}
// Autogenerated method: Pathfinding.BBTree.RebuildFromInternal
int Pathfinding::BBTree::RebuildFromInternal(::ArrayW<::Pathfinding::TriangleMeshNode*> nodes, ::ArrayW<int> permutation, ::ArrayW<::Pathfinding::IntRect> nodeBounds, int from, int to, bool odd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::RebuildFromInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildFromInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(permutation), ::il2cpp_utils::ExtractType(nodeBounds), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(odd)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, nodes, permutation, nodeBounds, from, to, odd);
}
// Autogenerated method: Pathfinding.BBTree.NodeBounds
::Pathfinding::IntRect Pathfinding::BBTree::NodeBounds(::ArrayW<int> permutation, ::ArrayW<::Pathfinding::IntRect> nodeBounds, int from, int to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::NodeBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "BBTree", "NodeBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permutation), ::il2cpp_utils::ExtractType(nodeBounds), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::IntRect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permutation, nodeBounds, from, to);
}
// Autogenerated method: Pathfinding.BBTree.DrawDebugRect
void Pathfinding::BBTree::DrawDebugRect(::Pathfinding::IntRect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::DrawDebugRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "BBTree", "DrawDebugRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: Pathfinding.BBTree.DrawDebugNode
void Pathfinding::BBTree::DrawDebugNode(::Pathfinding::TriangleMeshNode* node, float yoffset, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::DrawDebugNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "BBTree", "DrawDebugNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(yoffset), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, yoffset, color);
}
// Autogenerated method: Pathfinding.BBTree.QueryClosest
::Pathfinding::NNInfoInternal Pathfinding::BBTree::QueryClosest(::UnityEngine::Vector3 p, ::Pathfinding::NNConstraint* constraint, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::QueryClosest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryClosest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, p, constraint, byref(distance));
}
// Autogenerated method: Pathfinding.BBTree.QueryClosestXZ
::Pathfinding::NNInfoInternal Pathfinding::BBTree::QueryClosestXZ(::UnityEngine::Vector3 p, ::Pathfinding::NNConstraint* constraint, ByRef<float> distance, ::Pathfinding::NNInfoInternal previous) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::QueryClosestXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryClosestXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(previous)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, p, constraint, byref(distance), previous);
}
// Autogenerated method: Pathfinding.BBTree.SearchBoxClosestXZ
void Pathfinding::BBTree::SearchBoxClosestXZ(int boxi, ::UnityEngine::Vector3 p, ByRef<float> closestSqrDist, ::Pathfinding::NNConstraint* constraint, ByRef<::Pathfinding::NNInfoInternal> nnInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::SearchBoxClosestXZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchBoxClosestXZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boxi), ::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(closestSqrDist), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(nnInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boxi, p, byref(closestSqrDist), constraint, byref(nnInfo));
}
// Autogenerated method: Pathfinding.BBTree.QueryClosest
::Pathfinding::NNInfoInternal Pathfinding::BBTree::QueryClosest(::UnityEngine::Vector3 p, ::Pathfinding::NNConstraint* constraint, ByRef<float> distance, ::Pathfinding::NNInfoInternal previous) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::QueryClosest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryClosest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(previous)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfoInternal, false>(this, ___internal__method, p, constraint, byref(distance), previous);
}
// Autogenerated method: Pathfinding.BBTree.SearchBoxClosest
void Pathfinding::BBTree::SearchBoxClosest(int boxi, ::UnityEngine::Vector3 p, ByRef<float> closestSqrDist, ::Pathfinding::NNConstraint* constraint, ByRef<::Pathfinding::NNInfoInternal> nnInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::SearchBoxClosest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchBoxClosest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boxi), ::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(closestSqrDist), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(nnInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boxi, p, byref(closestSqrDist), constraint, byref(nnInfo));
}
// Autogenerated method: Pathfinding.BBTree.GetOrderedChildren
void Pathfinding::BBTree::GetOrderedChildren(ByRef<int> first, ByRef<int> second, ByRef<float> firstDist, ByRef<float> secondDist, ::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::GetOrderedChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrderedChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(first), byref(second), byref(firstDist), byref(secondDist), p);
}
// Autogenerated method: Pathfinding.BBTree.QueryInside
::Pathfinding::TriangleMeshNode* Pathfinding::BBTree::QueryInside(::UnityEngine::Vector3 p, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::QueryInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::TriangleMeshNode*, false>(this, ___internal__method, p, constraint);
}
// Autogenerated method: Pathfinding.BBTree.SearchBoxInside
::Pathfinding::TriangleMeshNode* Pathfinding::BBTree::SearchBoxInside(int boxi, ::UnityEngine::Vector3 p, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::SearchBoxInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchBoxInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boxi), ::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::TriangleMeshNode*, false>(this, ___internal__method, boxi, p, constraint);
}
// Autogenerated method: Pathfinding.BBTree.OnDrawGizmos
void Pathfinding::BBTree::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BBTree.OnDrawGizmos
void Pathfinding::BBTree::OnDrawGizmos(int boxi, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boxi), ::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boxi, depth);
}
// Autogenerated method: Pathfinding.BBTree.NodeIntersectsCircle
bool Pathfinding::BBTree::NodeIntersectsCircle(::Pathfinding::TriangleMeshNode* node, ::UnityEngine::Vector3 p, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::NodeIntersectsCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "BBTree", "NodeIntersectsCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, p, radius);
}
// Autogenerated method: Pathfinding.BBTree.RectIntersectsCircle
bool Pathfinding::BBTree::RectIntersectsCircle(::Pathfinding::IntRect r, ::UnityEngine::Vector3 p, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::RectIntersectsCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "BBTree", "RectIntersectsCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, r, p, radius);
}
// Autogenerated method: Pathfinding.BBTree.SquaredRectPointDistance
float Pathfinding::BBTree::SquaredRectPointDistance(::Pathfinding::IntRect r, ::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::SquaredRectPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "BBTree", "SquaredRectPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, r, p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.BBTree/BBTreeBox
#include "Pathfinding/BBTree.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.IntRect rect
[[deprecated("Use field access instead!")]] ::Pathfinding::IntRect& Pathfinding::BBTree::BBTreeBox::dyn_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::BBTreeBox::dyn_rect");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rect"))->offset;
  return *reinterpret_cast<::Pathfinding::IntRect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 nodeOffset
[[deprecated("Use field access instead!")]] int& Pathfinding::BBTree::BBTreeBox::dyn_nodeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::BBTreeBox::dyn_nodeOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 left
[[deprecated("Use field access instead!")]] int& Pathfinding::BBTree::BBTreeBox::dyn_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::BBTreeBox::dyn_left");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "left"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 right
[[deprecated("Use field access instead!")]] int& Pathfinding::BBTree::BBTreeBox::dyn_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::BBTreeBox::dyn_right");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "right"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.BBTree/BBTreeBox.get_IsLeaf
bool Pathfinding::BBTree::BBTreeBox::get_IsLeaf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::BBTreeBox::get_IsLeaf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsLeaf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BBTree/BBTreeBox..ctor
Pathfinding::BBTree::BBTreeBox::BBTreeBox(::Pathfinding::IntRect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::BBTreeBox::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rect);
}
// Autogenerated method: Pathfinding.BBTree/BBTreeBox..ctor
Pathfinding::BBTree::BBTreeBox::BBTreeBox(int nodeOffset, ::Pathfinding::IntRect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::BBTreeBox::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeOffset), ::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodeOffset, rect);
}
// Autogenerated method: Pathfinding.BBTree/BBTreeBox.Contains
bool Pathfinding::BBTree::BBTreeBox::Contains(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::BBTreeBox::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.HeuristicOptimizationMode
#include "Pathfinding/HeuristicOptimizationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.HeuristicOptimizationMode None
::Pathfinding::HeuristicOptimizationMode Pathfinding::HeuristicOptimizationMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::HeuristicOptimizationMode>("Pathfinding", "HeuristicOptimizationMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.HeuristicOptimizationMode None
void Pathfinding::HeuristicOptimizationMode::_set_None(::Pathfinding::HeuristicOptimizationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HeuristicOptimizationMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.HeuristicOptimizationMode Random
::Pathfinding::HeuristicOptimizationMode Pathfinding::HeuristicOptimizationMode::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::HeuristicOptimizationMode>("Pathfinding", "HeuristicOptimizationMode", "Random"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.HeuristicOptimizationMode Random
void Pathfinding::HeuristicOptimizationMode::_set_Random(::Pathfinding::HeuristicOptimizationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HeuristicOptimizationMode", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.HeuristicOptimizationMode RandomSpreadOut
::Pathfinding::HeuristicOptimizationMode Pathfinding::HeuristicOptimizationMode::_get_RandomSpreadOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_get_RandomSpreadOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::HeuristicOptimizationMode>("Pathfinding", "HeuristicOptimizationMode", "RandomSpreadOut"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.HeuristicOptimizationMode RandomSpreadOut
void Pathfinding::HeuristicOptimizationMode::_set_RandomSpreadOut(::Pathfinding::HeuristicOptimizationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_set_RandomSpreadOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HeuristicOptimizationMode", "RandomSpreadOut", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.HeuristicOptimizationMode Custom
::Pathfinding::HeuristicOptimizationMode Pathfinding::HeuristicOptimizationMode::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::HeuristicOptimizationMode>("Pathfinding", "HeuristicOptimizationMode", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.HeuristicOptimizationMode Custom
void Pathfinding::HeuristicOptimizationMode::_set_Custom(::Pathfinding::HeuristicOptimizationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HeuristicOptimizationMode", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::HeuristicOptimizationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.EuclideanEmbedding
#include "Pathfinding/EuclideanEmbedding.hpp"
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass17_0
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass17_0.hpp"
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass18_0
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass18_0.hpp"
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_0
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass20_0.hpp"
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_1
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass20_1.hpp"
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_2
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass20_2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 ra
uint Pathfinding::EuclideanEmbedding::_get_ra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::_get_ra");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "EuclideanEmbedding", "ra"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 ra
void Pathfinding::EuclideanEmbedding::_set_ra(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::_set_ra");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "EuclideanEmbedding", "ra", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 rc
uint Pathfinding::EuclideanEmbedding::_get_rc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::_get_rc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "EuclideanEmbedding", "rc"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 rc
void Pathfinding::EuclideanEmbedding::_set_rc(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::_set_rc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "EuclideanEmbedding", "rc", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.HeuristicOptimizationMode mode
[[deprecated("Use field access instead!")]] ::Pathfinding::HeuristicOptimizationMode& Pathfinding::EuclideanEmbedding::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::Pathfinding::HeuristicOptimizationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 seed
[[deprecated("Use field access instead!")]] int& Pathfinding::EuclideanEmbedding::dyn_seed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_seed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform pivotPointRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::EuclideanEmbedding::dyn_pivotPointRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_pivotPointRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pivotPointRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 spreadOutCount
[[deprecated("Use field access instead!")]] int& Pathfinding::EuclideanEmbedding::dyn_spreadOutCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_spreadOutCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spreadOutCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dirty
[[deprecated("Use field access instead!")]] bool& Pathfinding::EuclideanEmbedding::dyn_dirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_dirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] costs
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Pathfinding::EuclideanEmbedding::dyn_costs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_costs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "costs"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxNodeIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::EuclideanEmbedding::dyn_maxNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_maxNodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pivotCount
[[deprecated("Use field access instead!")]] int& Pathfinding::EuclideanEmbedding::dyn_pivotCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_pivotCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pivotCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphNode[] pivots
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::EuclideanEmbedding::dyn_pivots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_pivots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pivots"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 rval
[[deprecated("Use field access instead!")]] uint& Pathfinding::EuclideanEmbedding::dyn_rval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_rval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rval"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object lockObj
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::EuclideanEmbedding::dyn_lockObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_lockObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockObj"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.GetRandom
uint Pathfinding::EuclideanEmbedding::GetRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::GetRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.EnsureCapacity
void Pathfinding::EuclideanEmbedding::EnsureCapacity(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.GetHeuristic
uint Pathfinding::EuclideanEmbedding::GetHeuristic(int nodeIndex1, int nodeIndex2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::GetHeuristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeuristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeIndex1), ::il2cpp_utils::ExtractType(nodeIndex2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, nodeIndex1, nodeIndex2);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.GetClosestWalkableNodesToChildrenRecursively
void Pathfinding::EuclideanEmbedding::GetClosestWalkableNodesToChildrenRecursively(::UnityEngine::Transform* tr, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::GetClosestWalkableNodesToChildrenRecursively");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClosestWalkableNodesToChildrenRecursively", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tr), ::il2cpp_utils::ExtractType(nodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tr, nodes);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.PickNRandomNodes
void Pathfinding::EuclideanEmbedding::PickNRandomNodes(int count, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::PickNRandomNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PickNRandomNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count, buffer);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.PickAnyWalkableNode
::Pathfinding::GraphNode* Pathfinding::EuclideanEmbedding::PickAnyWalkableNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::PickAnyWalkableNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PickAnyWalkableNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.RecalculatePivots
void Pathfinding::EuclideanEmbedding::RecalculatePivots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::RecalculatePivots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculatePivots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.RecalculateCosts
void Pathfinding::EuclideanEmbedding::RecalculateCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::RecalculateCosts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateCosts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.ApplyGridGraphEndpointSpecialCase
void Pathfinding::EuclideanEmbedding::ApplyGridGraphEndpointSpecialCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::ApplyGridGraphEndpointSpecialCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyGridGraphEndpointSpecialCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.OnDrawGizmos
void Pathfinding::EuclideanEmbedding::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass17_0
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass17_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 n
[[deprecated("Use field access instead!")]] int& Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::dyn_n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::dyn_n");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "n"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.EuclideanEmbedding <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::EuclideanEmbedding*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::EuclideanEmbedding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> buffer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.GraphNode> <>9__0
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding/<>c__DisplayClass17_0.<PickNRandomNodes>b__0
void Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::$PickNRandomNodes$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass17_0::<PickNRandomNodes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PickNRandomNodes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass18_0
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass18_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode first
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass18_0::dyn_first() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass18_0::dyn_first");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "first"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.GraphNode> <>9__0
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass18_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass18_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding/<>c__DisplayClass18_0.<PickAnyWalkableNode>b__0
void Pathfinding::EuclideanEmbedding::$$c__DisplayClass18_0::$PickAnyWalkableNode$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass18_0::<PickAnyWalkableNode>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PickAnyWalkableNode>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_0
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass20_0.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 numComplete
[[deprecated("Use field access instead!")]] int& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::dyn_numComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::dyn_numComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numComplete"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.EuclideanEmbedding <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::EuclideanEmbedding*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::EuclideanEmbedding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate onComplete
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::dyn_onComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::dyn_onComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onComplete"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Int32> startCostCalculation
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::dyn_startCostCalculation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::dyn_startCostCalculation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startCostCalculation"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_0.<RecalculateCosts>b__0
void Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::$RecalculateCosts$b__0(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::<RecalculateCosts>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RecalculateCosts>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_0.<RecalculateCosts>b__1
void Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::$RecalculateCosts$b__1(int pivotIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0::<RecalculateCosts>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RecalculateCosts>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pivotIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pivotIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_1
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass20_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.FloodPath
#include "Pathfinding/FloodPath.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_0
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass20_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode pivot
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1::dyn_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1::dyn_pivot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pivot"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pivotIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1::dyn_pivotIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1::dyn_pivotIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pivotIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.FloodPath floodPath
[[deprecated("Use field access instead!")]] ::Pathfinding::FloodPath*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1::dyn_floodPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1::dyn_floodPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floodPath"))->offset;
  return *reinterpret_cast<::Pathfinding::FloodPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_1.<RecalculateCosts>b__2
void Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1::$RecalculateCosts$b__2(::Pathfinding::Path* _p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1::<RecalculateCosts>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RecalculateCosts>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_2
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass20_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_1
#include "Pathfinding/EuclideanEmbedding_--c__DisplayClass20_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 costOffset
[[deprecated("Use field access instead!")]] uint& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_2::dyn_costOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_2::dyn_costOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "costOffset"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_1 CS$<>8__locals2
[[deprecated("Use field access instead!")]] ::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_2::dyn_CS$$$8__locals2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_2::dyn_CS$$$8__locals2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals2"))->offset;
  return *reinterpret_cast<::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.GraphNode> <>9__3
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_2::dyn_$$9__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_2::dyn_$$9__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__3"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding/<>c__DisplayClass20_2.<RecalculateCosts>b__3
void Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_2::$RecalculateCosts$b__3(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::$$c__DisplayClass20_2::<RecalculateCosts>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RecalculateCosts>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshTile
#include "Pathfinding/NavmeshTile.hpp"
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
// Including type: Pathfinding.BBTree
#include "Pathfinding/BBTree.hpp"
// Including type: Pathfinding.NavmeshBase
#include "Pathfinding/NavmeshBase.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32[] tris
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::NavmeshTile::dyn_tris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_tris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tris"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3[] verts
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Int3>& Pathfinding::NavmeshTile::dyn_verts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_verts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verts"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Int3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3[] vertsInGraphSpace
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Int3>& Pathfinding::NavmeshTile::dyn_vertsInGraphSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_vertsInGraphSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertsInGraphSpace"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Int3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 x
[[deprecated("Use field access instead!")]] int& Pathfinding::NavmeshTile::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 z
[[deprecated("Use field access instead!")]] int& Pathfinding::NavmeshTile::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 w
[[deprecated("Use field access instead!")]] int& Pathfinding::NavmeshTile::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_w");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 d
[[deprecated("Use field access instead!")]] int& Pathfinding::NavmeshTile::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.TriangleMeshNode[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::TriangleMeshNode*>& Pathfinding::NavmeshTile::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::TriangleMeshNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.BBTree bbTree
[[deprecated("Use field access instead!")]] ::Pathfinding::BBTree*& Pathfinding::NavmeshTile::dyn_bbTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_bbTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bbTree"))->offset;
  return *reinterpret_cast<::Pathfinding::BBTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flag
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshTile::dyn_flag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_flag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NavmeshBase graph
[[deprecated("Use field access instead!")]] ::Pathfinding::NavmeshBase*& Pathfinding::NavmeshTile::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::Pathfinding::NavmeshBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavmeshTile.GetTileCoordinates
void Pathfinding::NavmeshTile::GetTileCoordinates(int tileIndex, ByRef<int> x, ByRef<int> z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::GetTileCoordinates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshTile*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tileIndex, byref(x), byref(z));
}
// Autogenerated method: Pathfinding.NavmeshTile.GetVertexArrayIndex
int Pathfinding::NavmeshTile::GetVertexArrayIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::GetVertexArrayIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshTile*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.NavmeshTile.GetVertex
::Pathfinding::Int3 Pathfinding::NavmeshTile::GetVertex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::GetVertex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshTile*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.NavmeshTile.GetVertexInGraphSpace
::Pathfinding::Int3 Pathfinding::NavmeshTile::GetVertexInGraphSpace(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::GetVertexInGraphSpace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshTile*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.NavmeshTile.get_transform
::Pathfinding::Util::GraphTransform* Pathfinding::NavmeshTile::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshTile*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::GraphTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshTile.GetNodes
void Pathfinding::NavmeshTile::GetNodes(::System::Action_1<::Pathfinding::GraphNode*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshTile::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshTile*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ObjImporter
#include "Pathfinding/ObjImporter.hpp"
// Including type: Pathfinding.ObjImporter/meshStruct
#include "Pathfinding/ObjImporter_meshStruct.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.ObjImporter.ImportFile
::UnityEngine::Mesh* Pathfinding::ObjImporter::ImportFile(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ObjImporter::ImportFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ObjImporter", "ImportFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: Pathfinding.ObjImporter.createMeshStruct
::Pathfinding::ObjImporter::meshStruct Pathfinding::ObjImporter::createMeshStruct(::StringW filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ObjImporter::createMeshStruct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ObjImporter", "createMeshStruct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ObjImporter::meshStruct, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename);
}
// Autogenerated method: Pathfinding.ObjImporter.populateMeshStruct
void Pathfinding::ObjImporter::populateMeshStruct(ByRef<::Pathfinding::ObjImporter::meshStruct> mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ObjImporter::populateMeshStruct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ObjImporter", "populateMeshStruct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(mesh));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PointKDTree
#include "Pathfinding/PointKDTree.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.PointKDTree/CompareX
#include "Pathfinding/PointKDTree_CompareX.hpp"
// Including type: Pathfinding.PointKDTree/CompareY
#include "Pathfinding/PointKDTree_CompareY.hpp"
// Including type: Pathfinding.PointKDTree/CompareZ
#include "Pathfinding/PointKDTree_CompareZ.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 LeafSize
int Pathfinding::PointKDTree::_get_LeafSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::_get_LeafSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "PointKDTree", "LeafSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LeafSize
void Pathfinding::PointKDTree::_set_LeafSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::_set_LeafSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PointKDTree", "LeafSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LeafArraySize
int Pathfinding::PointKDTree::_get_LeafArraySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::_get_LeafArraySize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "PointKDTree", "LeafArraySize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LeafArraySize
void Pathfinding::PointKDTree::_set_LeafArraySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::_set_LeafArraySize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PointKDTree", "LeafArraySize", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.IComparer`1<Pathfinding.GraphNode>[] comparers
::ArrayW<::System::Collections::Generic::IComparer_1<::Pathfinding::GraphNode*>*> Pathfinding::PointKDTree::_get_comparers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::_get_comparers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Collections::Generic::IComparer_1<::Pathfinding::GraphNode*>*>>("Pathfinding", "PointKDTree", "comparers"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.IComparer`1<Pathfinding.GraphNode>[] comparers
void Pathfinding::PointKDTree::_set_comparers(::ArrayW<::System::Collections::Generic::IComparer_1<::Pathfinding::GraphNode*>*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::_set_comparers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PointKDTree", "comparers", value));
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PointKDTree/Node[] tree
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::PointKDTree::Node>& Pathfinding::PointKDTree::dyn_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::dyn_tree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tree"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::PointKDTree::Node>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 numNodes
[[deprecated("Use field access instead!")]] int& Pathfinding::PointKDTree::dyn_numNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::dyn_numNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numNodes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Pathfinding.GraphNode> largeList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::PointKDTree::dyn_largeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::dyn_largeList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "largeList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Stack`1<Pathfinding.GraphNode[]> arrayCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::ArrayW<::Pathfinding::GraphNode*>>*& Pathfinding::PointKDTree::dyn_arrayCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::dyn_arrayCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::ArrayW<::Pathfinding::GraphNode*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PointKDTree.Add
void Pathfinding::PointKDTree::Add(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PointKDTree.Rebuild
void Pathfinding::PointKDTree::Rebuild(::ArrayW<::Pathfinding::GraphNode*> nodes, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::Rebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodes, start, end);
}
// Autogenerated method: Pathfinding.PointKDTree.GetOrCreateList
::ArrayW<::Pathfinding::GraphNode*> Pathfinding::PointKDTree::GetOrCreateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::GetOrCreateList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::GraphNode*>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointKDTree.Size
int Pathfinding::PointKDTree::Size(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.PointKDTree.CollectAndClear
void Pathfinding::PointKDTree::CollectAndClear(int index, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::CollectAndClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectAndClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, buffer);
}
// Autogenerated method: Pathfinding.PointKDTree.MaxAllowedSize
int Pathfinding::PointKDTree::MaxAllowedSize(int numNodes, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::MaxAllowedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PointKDTree", "MaxAllowedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numNodes), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numNodes, depth);
}
// Autogenerated method: Pathfinding.PointKDTree.Rebalance
void Pathfinding::PointKDTree::Rebalance(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::Rebalance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebalance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.PointKDTree.EnsureSize
void Pathfinding::PointKDTree::EnsureSize(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::EnsureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.PointKDTree.Build
void Pathfinding::PointKDTree::Build(int index, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, nodes, start, end);
}
// Autogenerated method: Pathfinding.PointKDTree.Add
void Pathfinding::PointKDTree::Add(::Pathfinding::GraphNode* point, int index, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, index, depth);
}
// Autogenerated method: Pathfinding.PointKDTree.GetNearest
::Pathfinding::GraphNode* Pathfinding::PointKDTree::GetNearest(::Pathfinding::Int3 point, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method, point, constraint);
}
// Autogenerated method: Pathfinding.PointKDTree.GetNearestInternal
void Pathfinding::PointKDTree::GetNearestInternal(int index, ::Pathfinding::Int3 point, ::Pathfinding::NNConstraint* constraint, ByRef<::Pathfinding::GraphNode*> best, ByRef<int64_t> bestSqrDist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::GetNearestInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearestInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(best), ::il2cpp_utils::ExtractType(bestSqrDist)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, point, constraint, byref(best), byref(bestSqrDist));
}
// Autogenerated method: Pathfinding.PointKDTree.GetNearestConnection
::Pathfinding::GraphNode* Pathfinding::PointKDTree::GetNearestConnection(::Pathfinding::Int3 point, ::Pathfinding::NNConstraint* constraint, int64_t maximumSqrConnectionLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::GetNearestConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearestConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(maximumSqrConnectionLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method, point, constraint, maximumSqrConnectionLength);
}
// Autogenerated method: Pathfinding.PointKDTree.GetNearestConnectionInternal
void Pathfinding::PointKDTree::GetNearestConnectionInternal(int index, ::Pathfinding::Int3 point, ::Pathfinding::NNConstraint* constraint, ByRef<::Pathfinding::GraphNode*> best, ByRef<int64_t> bestSqrDist, int64_t distanceThresholdOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::GetNearestConnectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearestConnectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(best), ::il2cpp_utils::ExtractType(bestSqrDist), ::il2cpp_utils::ExtractType(distanceThresholdOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, point, constraint, byref(best), byref(bestSqrDist), distanceThresholdOffset);
}
// Autogenerated method: Pathfinding.PointKDTree.GetInRange
void Pathfinding::PointKDTree::GetInRange(::Pathfinding::Int3 point, int64_t sqrRadius, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::GetInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(sqrRadius), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, sqrRadius, buffer);
}
// Autogenerated method: Pathfinding.PointKDTree.GetInRangeInternal
void Pathfinding::PointKDTree::GetInRangeInternal(int index, ::Pathfinding::Int3 point, int64_t sqrRadius, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::GetInRangeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInRangeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(sqrRadius), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, point, sqrRadius, buffer);
}
// Autogenerated method: Pathfinding.PointKDTree..cctor
void Pathfinding::PointKDTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PointKDTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PointKDTree/CompareX
#include "Pathfinding/PointKDTree_CompareX.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.PointKDTree/CompareX.Compare
int Pathfinding::PointKDTree::CompareX::Compare(::Pathfinding::GraphNode* lhs, ::Pathfinding::GraphNode* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::CompareX::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointKDTree::CompareX*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PointKDTree/CompareY
#include "Pathfinding/PointKDTree_CompareY.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.PointKDTree/CompareY.Compare
int Pathfinding::PointKDTree::CompareY::Compare(::Pathfinding::GraphNode* lhs, ::Pathfinding::GraphNode* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::CompareY::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointKDTree::CompareY*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PointKDTree/CompareZ
#include "Pathfinding/PointKDTree_CompareZ.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.PointKDTree/CompareZ.Compare
int Pathfinding::PointKDTree::CompareZ::Compare(::Pathfinding::GraphNode* lhs, ::Pathfinding::GraphNode* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointKDTree::CompareZ::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointKDTree::CompareZ*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RecastBBTree
#include "Pathfinding/RecastBBTree.hpp"
// Including type: Pathfinding.RecastBBTreeBox
#include "Pathfinding/RecastBBTreeBox.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.RecastMeshObj
#include "Pathfinding/RecastMeshObj.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RecastBBTreeBox root
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastBBTreeBox*& Pathfinding::RecastBBTree::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastBBTreeBox**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RecastBBTree.QueryInBounds
void Pathfinding::RecastBBTree::QueryInBounds(::UnityEngine::Rect bounds, ::System::Collections::Generic::List_1<::Pathfinding::RecastMeshObj*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::QueryInBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryInBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds, buffer);
}
// Autogenerated method: Pathfinding.RecastBBTree.QueryBoxInBounds
void Pathfinding::RecastBBTree::QueryBoxInBounds(::Pathfinding::RecastBBTreeBox* box, ::UnityEngine::Rect bounds, ::System::Collections::Generic::List_1<::Pathfinding::RecastMeshObj*>* boxes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::QueryBoxInBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryBoxInBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box), ::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(boxes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, box, bounds, boxes);
}
// Autogenerated method: Pathfinding.RecastBBTree.Remove
bool Pathfinding::RecastBBTree::Remove(::Pathfinding::RecastMeshObj* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mesh);
}
// Autogenerated method: Pathfinding.RecastBBTree.RemoveBox
::Pathfinding::RecastBBTreeBox* Pathfinding::RecastBBTree::RemoveBox(::Pathfinding::RecastBBTreeBox* c, ::Pathfinding::RecastMeshObj* mesh, ::UnityEngine::Rect bounds, ByRef<bool> found) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::RemoveBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(found)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RecastBBTreeBox*, false>(this, ___internal__method, c, mesh, bounds, byref(found));
}
// Autogenerated method: Pathfinding.RecastBBTree.Insert
void Pathfinding::RecastBBTree::Insert(::Pathfinding::RecastMeshObj* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: Pathfinding.RecastBBTree.RectIntersectsRect
bool Pathfinding::RecastBBTree::RectIntersectsRect(::UnityEngine::Rect r, ::UnityEngine::Rect r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::RectIntersectsRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RecastBBTree", "RectIntersectsRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, r, r2);
}
// Autogenerated method: Pathfinding.RecastBBTree.ExpansionRequired
float Pathfinding::RecastBBTree::ExpansionRequired(::UnityEngine::Rect r, ::UnityEngine::Rect r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::ExpansionRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RecastBBTree", "ExpansionRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, r, r2);
}
// Autogenerated method: Pathfinding.RecastBBTree.ExpandToContain
::UnityEngine::Rect Pathfinding::RecastBBTree::ExpandToContain(::UnityEngine::Rect r, ::UnityEngine::Rect r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::ExpandToContain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RecastBBTree", "ExpandToContain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, r, r2);
}
// Autogenerated method: Pathfinding.RecastBBTree.RectArea
float Pathfinding::RecastBBTree::RectArea(::UnityEngine::Rect r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTree::RectArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RecastBBTree", "RectArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RecastBBTreeBox
#include "Pathfinding/RecastBBTreeBox.hpp"
// Including type: Pathfinding.RecastMeshObj
#include "Pathfinding/RecastMeshObj.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect rect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Pathfinding::RecastBBTreeBox::dyn_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTreeBox::dyn_rect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RecastMeshObj mesh
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastMeshObj*& Pathfinding::RecastBBTreeBox::dyn_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTreeBox::dyn_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mesh"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastMeshObj**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RecastBBTreeBox c1
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastBBTreeBox*& Pathfinding::RecastBBTreeBox::dyn_c1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTreeBox::dyn_c1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c1"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastBBTreeBox**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RecastBBTreeBox c2
[[deprecated("Use field access instead!")]] ::Pathfinding::RecastBBTreeBox*& Pathfinding::RecastBBTreeBox::dyn_c2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTreeBox::dyn_c2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c2"))->offset;
  return *reinterpret_cast<::Pathfinding::RecastBBTreeBox**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RecastBBTreeBox.Contains
bool Pathfinding::RecastBBTreeBox::Contains(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastBBTreeBox::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RecastMeshObj
#include "Pathfinding/RecastMeshObj.hpp"
// Including type: Pathfinding.RecastBBTree
#include "Pathfinding/RecastBBTree.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected Pathfinding.RecastBBTree tree
::Pathfinding::RecastBBTree* Pathfinding::RecastMeshObj::_get_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::_get_tree");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RecastBBTree*>("Pathfinding", "RecastMeshObj", "tree"));
}
// Autogenerated static field setter
// Set static field: static protected Pathfinding.RecastBBTree tree
void Pathfinding::RecastMeshObj::_set_tree(::Pathfinding::RecastBBTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::_set_tree");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RecastMeshObj", "tree", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Collections.Generic.List`1<Pathfinding.RecastMeshObj> dynamicMeshObjs
::System::Collections::Generic::List_1<::Pathfinding::RecastMeshObj*>* Pathfinding::RecastMeshObj::_get_dynamicMeshObjs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::_get_dynamicMeshObjs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Pathfinding::RecastMeshObj*>*>("Pathfinding", "RecastMeshObj", "dynamicMeshObjs"));
}
// Autogenerated static field setter
// Set static field: static protected System.Collections.Generic.List`1<Pathfinding.RecastMeshObj> dynamicMeshObjs
void Pathfinding::RecastMeshObj::_set_dynamicMeshObjs(::System::Collections::Generic::List_1<::Pathfinding::RecastMeshObj*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::_set_dynamicMeshObjs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RecastMeshObj", "dynamicMeshObjs", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Bounds bounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& Pathfinding::RecastMeshObj::dyn_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::dyn_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dynamic
[[deprecated("Use field access instead!")]] bool& Pathfinding::RecastMeshObj::dyn_dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::dyn_dynamic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 area
[[deprecated("Use field access instead!")]] int& Pathfinding::RecastMeshObj::dyn_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::dyn_area");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "area"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dynamic
[[deprecated("Use field access instead!")]] bool& Pathfinding::RecastMeshObj::dyn__dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::dyn__dynamic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dynamic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean registered
[[deprecated("Use field access instead!")]] bool& Pathfinding::RecastMeshObj::dyn_registered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::dyn_registered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "registered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RecastMeshObj.GetAllInBounds
void Pathfinding::RecastMeshObj::GetAllInBounds(::System::Collections::Generic::List_1<::Pathfinding::RecastMeshObj*>* buffer, ::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::GetAllInBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RecastMeshObj", "GetAllInBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, bounds);
}
// Autogenerated method: Pathfinding.RecastMeshObj.OnEnable
void Pathfinding::RecastMeshObj::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastMeshObj.Register
void Pathfinding::RecastMeshObj::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastMeshObj.RecalculateBounds
void Pathfinding::RecastMeshObj::RecalculateBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::RecalculateBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastMeshObj.GetBounds
::UnityEngine::Bounds Pathfinding::RecastMeshObj::GetBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::GetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastMeshObj.GetMeshFilter
::UnityEngine::MeshFilter* Pathfinding::RecastMeshObj::GetMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::GetMeshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMeshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MeshFilter*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastMeshObj.GetCollider
::UnityEngine::Collider* Pathfinding::RecastMeshObj::GetCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::GetCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastMeshObj.OnDisable
void Pathfinding::RecastMeshObj::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RecastMeshObj..cctor
void Pathfinding::RecastMeshObj::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RecastMeshObj::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RecastMeshObj", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AdvancedSmooth
#include "Pathfinding/AdvancedSmooth.hpp"
// Including type: Pathfinding.AdvancedSmooth/MaxTurn
#include "Pathfinding/AdvancedSmooth_MaxTurn.hpp"
// Including type: Pathfinding.AdvancedSmooth/ConstantTurn
#include "Pathfinding/AdvancedSmooth_ConstantTurn.hpp"
// Including type: Pathfinding.AdvancedSmooth/TurnConstructor
#include "Pathfinding/AdvancedSmooth_TurnConstructor.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single turningRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::AdvancedSmooth::dyn_turningRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::dyn_turningRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turningRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AdvancedSmooth/MaxTurn turnConstruct1
[[deprecated("Use field access instead!")]] ::Pathfinding::AdvancedSmooth::MaxTurn*& Pathfinding::AdvancedSmooth::dyn_turnConstruct1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::dyn_turnConstruct1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turnConstruct1"))->offset;
  return *reinterpret_cast<::Pathfinding::AdvancedSmooth::MaxTurn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AdvancedSmooth/ConstantTurn turnConstruct2
[[deprecated("Use field access instead!")]] ::Pathfinding::AdvancedSmooth::ConstantTurn*& Pathfinding::AdvancedSmooth::dyn_turnConstruct2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::dyn_turnConstruct2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turnConstruct2"))->offset;
  return *reinterpret_cast<::Pathfinding::AdvancedSmooth::ConstantTurn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AdvancedSmooth.EvaluatePaths
void Pathfinding::AdvancedSmooth::EvaluatePaths(::System::Collections::Generic::List_1<::Pathfinding::AdvancedSmooth::Turn>* turnList, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::EvaluatePaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluatePaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(turnList), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnList, output);
}
// Autogenerated method: Pathfinding.AdvancedSmooth.get_Order
int Pathfinding::AdvancedSmooth::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AdvancedSmooth.Apply
void Pathfinding::AdvancedSmooth::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/Turn.op_LessThan
bool Pathfinding::operator <(const ::Pathfinding::AdvancedSmooth::Turn& lhs, const ::Pathfinding::AdvancedSmooth::Turn& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::Turn::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AdvancedSmooth/Turn", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/Turn.op_GreaterThan
bool Pathfinding::operator >(const ::Pathfinding::AdvancedSmooth::Turn& lhs, const ::Pathfinding::AdvancedSmooth::Turn& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::Turn::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AdvancedSmooth/Turn", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AdvancedSmooth/MaxTurn
#include "Pathfinding/AdvancedSmooth_MaxTurn.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 preRightCircleCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AdvancedSmooth::MaxTurn::dyn_preRightCircleCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_preRightCircleCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preRightCircleCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 preLeftCircleCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AdvancedSmooth::MaxTurn::dyn_preLeftCircleCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_preLeftCircleCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preLeftCircleCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rightCircleCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AdvancedSmooth::MaxTurn::dyn_rightCircleCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_rightCircleCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightCircleCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 leftCircleCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AdvancedSmooth::MaxTurn::dyn_leftCircleCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_leftCircleCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftCircleCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double vaRight
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_vaRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_vaRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vaRight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double vaLeft
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_vaLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_vaLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vaLeft"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double preVaLeft
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_preVaLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_preVaLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preVaLeft"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double preVaRight
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_preVaRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_preVaRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preVaRight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double gammaLeft
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_gammaLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_gammaLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gammaLeft"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double gammaRight
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_gammaRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_gammaRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gammaRight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double betaRightRight
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_betaRightRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_betaRightRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "betaRightRight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double betaRightLeft
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_betaRightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_betaRightLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "betaRightLeft"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double betaLeftRight
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_betaLeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_betaLeftRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "betaLeftRight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double betaLeftLeft
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_betaLeftLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_betaLeftLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "betaLeftLeft"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double deltaRightLeft
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_deltaRightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_deltaRightLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deltaRightLeft"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double deltaLeftRight
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_deltaLeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_deltaLeftRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deltaLeftRight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double alfaRightRight
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_alfaRightRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_alfaRightRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alfaRightRight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double alfaLeftLeft
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_alfaLeftLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_alfaLeftLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alfaLeftLeft"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double alfaRightLeft
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_alfaRightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_alfaRightLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alfaRightLeft"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double alfaLeftRight
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::MaxTurn::dyn_alfaLeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::dyn_alfaLeftRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alfaLeftRight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/MaxTurn.OnTangentUpdate
void Pathfinding::AdvancedSmooth::MaxTurn::OnTangentUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::OnTangentUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/MaxTurn.Prepare
void Pathfinding::AdvancedSmooth::MaxTurn::Prepare(int i, ::ArrayW<::UnityEngine::Vector3> vectorPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, vectorPath);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/MaxTurn.TangentToTangent
void Pathfinding::AdvancedSmooth::MaxTurn::TangentToTangent(::System::Collections::Generic::List_1<::Pathfinding::AdvancedSmooth::Turn>* turnList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::TangentToTangent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnList);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/MaxTurn.PointToTangent
void Pathfinding::AdvancedSmooth::MaxTurn::PointToTangent(::System::Collections::Generic::List_1<::Pathfinding::AdvancedSmooth::Turn>* turnList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::PointToTangent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnList);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/MaxTurn.TangentToPoint
void Pathfinding::AdvancedSmooth::MaxTurn::TangentToPoint(::System::Collections::Generic::List_1<::Pathfinding::AdvancedSmooth::Turn>* turnList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::TangentToPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnList);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/MaxTurn.GetPath
void Pathfinding::AdvancedSmooth::MaxTurn::GetPath(::Pathfinding::AdvancedSmooth::Turn turn, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::MaxTurn::GetPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turn, output);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AdvancedSmooth/ConstantTurn
#include "Pathfinding/AdvancedSmooth_ConstantTurn.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 circleCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AdvancedSmooth::ConstantTurn::dyn_circleCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::ConstantTurn::dyn_circleCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "circleCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double gamma1
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::ConstantTurn::dyn_gamma1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::ConstantTurn::dyn_gamma1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gamma1"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double gamma2
[[deprecated("Use field access instead!")]] double& Pathfinding::AdvancedSmooth::ConstantTurn::dyn_gamma2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::ConstantTurn::dyn_gamma2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gamma2"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clockwise
[[deprecated("Use field access instead!")]] bool& Pathfinding::AdvancedSmooth::ConstantTurn::dyn_clockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::ConstantTurn::dyn_clockwise");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clockwise"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/ConstantTurn.Prepare
void Pathfinding::AdvancedSmooth::ConstantTurn::Prepare(int i, ::ArrayW<::UnityEngine::Vector3> vectorPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::ConstantTurn::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, vectorPath);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/ConstantTurn.TangentToTangent
void Pathfinding::AdvancedSmooth::ConstantTurn::TangentToTangent(::System::Collections::Generic::List_1<::Pathfinding::AdvancedSmooth::Turn>* turnList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::ConstantTurn::TangentToTangent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnList);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/ConstantTurn.GetPath
void Pathfinding::AdvancedSmooth::ConstantTurn::GetPath(::Pathfinding::AdvancedSmooth::Turn turn, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::ConstantTurn::GetPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turn, output);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AdvancedSmooth/TurnConstructor
#include "Pathfinding/AdvancedSmooth_TurnConstructor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single turningRadius
float Pathfinding::AdvancedSmooth::TurnConstructor::_get_turningRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_get_turningRadius");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding", "AdvancedSmooth/TurnConstructor", "turningRadius"));
}
// Autogenerated static field setter
// Set static field: static public System.Single turningRadius
void Pathfinding::AdvancedSmooth::TurnConstructor::_set_turningRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_set_turningRadius");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AdvancedSmooth/TurnConstructor", "turningRadius", value));
}
// Autogenerated static field getter
// Get static field: static public System.Double ThreeSixtyRadians
double Pathfinding::AdvancedSmooth::TurnConstructor::_get_ThreeSixtyRadians() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_get_ThreeSixtyRadians");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("Pathfinding", "AdvancedSmooth/TurnConstructor", "ThreeSixtyRadians"));
}
// Autogenerated static field setter
// Set static field: static public System.Double ThreeSixtyRadians
void Pathfinding::AdvancedSmooth::TurnConstructor::_set_ThreeSixtyRadians(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_set_ThreeSixtyRadians");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AdvancedSmooth/TurnConstructor", "ThreeSixtyRadians", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 prev
::UnityEngine::Vector3 Pathfinding::AdvancedSmooth::TurnConstructor::_get_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_get_prev");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Pathfinding", "AdvancedSmooth/TurnConstructor", "prev"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 prev
void Pathfinding::AdvancedSmooth::TurnConstructor::_set_prev(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_set_prev");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AdvancedSmooth/TurnConstructor", "prev", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 current
::UnityEngine::Vector3 Pathfinding::AdvancedSmooth::TurnConstructor::_get_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_get_current");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Pathfinding", "AdvancedSmooth/TurnConstructor", "current"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 current
void Pathfinding::AdvancedSmooth::TurnConstructor::_set_current(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_set_current");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AdvancedSmooth/TurnConstructor", "current", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 next
::UnityEngine::Vector3 Pathfinding::AdvancedSmooth::TurnConstructor::_get_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_get_next");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Pathfinding", "AdvancedSmooth/TurnConstructor", "next"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 next
void Pathfinding::AdvancedSmooth::TurnConstructor::_set_next(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_set_next");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AdvancedSmooth/TurnConstructor", "next", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 t1
::UnityEngine::Vector3 Pathfinding::AdvancedSmooth::TurnConstructor::_get_t1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_get_t1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Pathfinding", "AdvancedSmooth/TurnConstructor", "t1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 t1
void Pathfinding::AdvancedSmooth::TurnConstructor::_set_t1(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_set_t1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AdvancedSmooth/TurnConstructor", "t1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 t2
::UnityEngine::Vector3 Pathfinding::AdvancedSmooth::TurnConstructor::_get_t2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_get_t2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Pathfinding", "AdvancedSmooth/TurnConstructor", "t2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 t2
void Pathfinding::AdvancedSmooth::TurnConstructor::_set_t2(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_set_t2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AdvancedSmooth/TurnConstructor", "t2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 normal
::UnityEngine::Vector3 Pathfinding::AdvancedSmooth::TurnConstructor::_get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_get_normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Pathfinding", "AdvancedSmooth/TurnConstructor", "normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 normal
void Pathfinding::AdvancedSmooth::TurnConstructor::_set_normal(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_set_normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AdvancedSmooth/TurnConstructor", "normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 prevNormal
::UnityEngine::Vector3 Pathfinding::AdvancedSmooth::TurnConstructor::_get_prevNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_get_prevNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Pathfinding", "AdvancedSmooth/TurnConstructor", "prevNormal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 prevNormal
void Pathfinding::AdvancedSmooth::TurnConstructor::_set_prevNormal(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_set_prevNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AdvancedSmooth/TurnConstructor", "prevNormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean changedPreviousTangent
bool Pathfinding::AdvancedSmooth::TurnConstructor::_get_changedPreviousTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_get_changedPreviousTangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Pathfinding", "AdvancedSmooth/TurnConstructor", "changedPreviousTangent"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean changedPreviousTangent
void Pathfinding::AdvancedSmooth::TurnConstructor::_set_changedPreviousTangent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::_set_changedPreviousTangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AdvancedSmooth/TurnConstructor", "changedPreviousTangent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single constantBias
[[deprecated("Use field access instead!")]] float& Pathfinding::AdvancedSmooth::TurnConstructor::dyn_constantBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::dyn_constantBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constantBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single factorBias
[[deprecated("Use field access instead!")]] float& Pathfinding::AdvancedSmooth::TurnConstructor::dyn_factorBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::dyn_factorBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "factorBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.Prepare
void Pathfinding::AdvancedSmooth::TurnConstructor::Prepare(int i, ::ArrayW<::UnityEngine::Vector3> vectorPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, vectorPath);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.OnTangentUpdate
void Pathfinding::AdvancedSmooth::TurnConstructor::OnTangentUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::OnTangentUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.PointToTangent
void Pathfinding::AdvancedSmooth::TurnConstructor::PointToTangent(::System::Collections::Generic::List_1<::Pathfinding::AdvancedSmooth::Turn>* turnList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::PointToTangent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnList);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.TangentToPoint
void Pathfinding::AdvancedSmooth::TurnConstructor::TangentToPoint(::System::Collections::Generic::List_1<::Pathfinding::AdvancedSmooth::Turn>* turnList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::TangentToPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnList);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.TangentToTangent
void Pathfinding::AdvancedSmooth::TurnConstructor::TangentToTangent(::System::Collections::Generic::List_1<::Pathfinding::AdvancedSmooth::Turn>* turnList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::TangentToTangent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnList);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.GetPath
void Pathfinding::AdvancedSmooth::TurnConstructor::GetPath(::Pathfinding::AdvancedSmooth::Turn turn, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::GetPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AdvancedSmooth::TurnConstructor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turn, output);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.Setup
void Pathfinding::AdvancedSmooth::TurnConstructor::Setup(int i, ::ArrayW<::UnityEngine::Vector3> vectorPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AdvancedSmooth/TurnConstructor", "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(vectorPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, vectorPath);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.PostPrepare
void Pathfinding::AdvancedSmooth::TurnConstructor::PostPrepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::PostPrepare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AdvancedSmooth/TurnConstructor", "PostPrepare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.AddCircleSegment
void Pathfinding::AdvancedSmooth::TurnConstructor::AddCircleSegment(double startAngle, double endAngle, bool clockwise, ::UnityEngine::Vector3 center, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* output, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::AddCircleSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCircleSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startAngle), ::il2cpp_utils::ExtractType(endAngle), ::il2cpp_utils::ExtractType(clockwise), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startAngle, endAngle, clockwise, center, output, radius);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.DebugCircleSegment
void Pathfinding::AdvancedSmooth::TurnConstructor::DebugCircleSegment(::UnityEngine::Vector3 center, double startAngle, double endAngle, double radius, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::DebugCircleSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugCircleSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(startAngle), ::il2cpp_utils::ExtractType(endAngle), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, center, startAngle, endAngle, radius, color);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.DebugCircle
void Pathfinding::AdvancedSmooth::TurnConstructor::DebugCircle(::UnityEngine::Vector3 center, double radius, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::DebugCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, center, radius, color);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.GetLengthFromAngle
double Pathfinding::AdvancedSmooth::TurnConstructor::GetLengthFromAngle(double angle, double radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::GetLengthFromAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLengthFromAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, angle, radius);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.ClockwiseAngle
double Pathfinding::AdvancedSmooth::TurnConstructor::ClockwiseAngle(double from, double to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::ClockwiseAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClockwiseAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, from, to);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.CounterClockwiseAngle
double Pathfinding::AdvancedSmooth::TurnConstructor::CounterClockwiseAngle(double from, double to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::CounterClockwiseAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CounterClockwiseAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, from, to);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.AngleToVector
::UnityEngine::Vector3 Pathfinding::AdvancedSmooth::TurnConstructor::AngleToVector(double a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::AngleToVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AngleToVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, a);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.ToDegrees
double Pathfinding::AdvancedSmooth::TurnConstructor::ToDegrees(double rad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::ToDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rad)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, rad);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.ClampAngle
double Pathfinding::AdvancedSmooth::TurnConstructor::ClampAngle(double a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::ClampAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, a);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor.Atan2
double Pathfinding::AdvancedSmooth::TurnConstructor::Atan2(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::Atan2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Atan2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/TurnConstructor..cctor
void Pathfinding::AdvancedSmooth::TurnConstructor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::TurnConstructor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AdvancedSmooth/TurnConstructor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AdvancedSmooth/Turn
#include "Pathfinding/AdvancedSmooth.hpp"
// Including type: Pathfinding.AdvancedSmooth/TurnConstructor
#include "Pathfinding/AdvancedSmooth_TurnConstructor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& Pathfinding::AdvancedSmooth::Turn::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::Turn::dyn_length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
[[deprecated("Use field access instead!")]] int& Pathfinding::AdvancedSmooth::Turn::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::Turn::dyn_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AdvancedSmooth/TurnConstructor constructor
[[deprecated("Use field access instead!")]] ::Pathfinding::AdvancedSmooth::TurnConstructor*& Pathfinding::AdvancedSmooth::Turn::dyn_constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::Turn::dyn_constructor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constructor"))->offset;
  return *reinterpret_cast<::Pathfinding::AdvancedSmooth::TurnConstructor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/Turn.get_score
float Pathfinding::AdvancedSmooth::Turn::get_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::Turn::get_score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/Turn..ctor
Pathfinding::AdvancedSmooth::Turn::Turn(float length, ::Pathfinding::AdvancedSmooth::TurnConstructor* constructor, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::Turn::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(constructor), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length, constructor, id);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/Turn.GetPath
void Pathfinding::AdvancedSmooth::Turn::GetPath(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::Turn::GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Pathfinding.AdvancedSmooth/Turn.CompareTo
int Pathfinding::AdvancedSmooth::Turn::CompareTo(::Pathfinding::AdvancedSmooth::Turn t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AdvancedSmooth::Turn::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Pathfinding::AdvancedSmooth::Turn), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AlternativePath
#include "Pathfinding/AlternativePath.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 penalty
[[deprecated("Use field access instead!")]] int& Pathfinding::AlternativePath::dyn_penalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_penalty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penalty"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 randomStep
[[deprecated("Use field access instead!")]] int& Pathfinding::AlternativePath::dyn_randomStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_randomStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomStep"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.GraphNode> prevNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::AlternativePath::dyn_prevNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_prevNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 prevPenalty
[[deprecated("Use field access instead!")]] int& Pathfinding::AlternativePath::dyn_prevPenalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_prevPenalty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPenalty"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Random rnd
[[deprecated("Use field access instead!")]] ::System::Random*& Pathfinding::AlternativePath::dyn_rnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_rnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rnd"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean destroyed
[[deprecated("Use field access instead!")]] bool& Pathfinding::AlternativePath::dyn_destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_destroyed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AlternativePath.OnDestroy
void Pathfinding::AlternativePath::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AlternativePath.ClearOnDestroy
void Pathfinding::AlternativePath::ClearOnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::ClearOnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AlternativePath.InversePrevious
void Pathfinding::AlternativePath::InversePrevious() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::InversePrevious");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InversePrevious", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AlternativePath.ApplyNow
void Pathfinding::AlternativePath::ApplyNow(::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::ApplyNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodes);
}
// Autogenerated method: Pathfinding.AlternativePath.get_Order
int Pathfinding::AlternativePath::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AlternativePath.Apply
void Pathfinding::AlternativePath::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.FunnelModifier
#include "Pathfinding/FunnelModifier.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean unwrap
[[deprecated("Use field access instead!")]] bool& Pathfinding::FunnelModifier::dyn_unwrap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FunnelModifier::dyn_unwrap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unwrap"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean splitAtEveryPortal
[[deprecated("Use field access instead!")]] bool& Pathfinding::FunnelModifier::dyn_splitAtEveryPortal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FunnelModifier::dyn_splitAtEveryPortal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "splitAtEveryPortal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.FunnelModifier.get_Order
int Pathfinding::FunnelModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FunnelModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.FunnelModifier.Apply
void Pathfinding::FunnelModifier::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FunnelModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.IPathModifier
#include "Pathfinding/IPathModifier.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.IPathModifier.get_Order
int Pathfinding::IPathModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathModifier*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IPathModifier.Apply
void Pathfinding::IPathModifier::Apply(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.IPathModifier.PreProcess
void Pathfinding::IPathModifier::PreProcess(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathModifier::PreProcess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathModifier
#include "Pathfinding/PathModifier.hpp"
// Including type: Pathfinding.Seeker
#include "Pathfinding/Seeker.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Seeker seeker
[[deprecated("Use field access instead!")]] ::Pathfinding::Seeker*& Pathfinding::PathModifier::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::Pathfinding::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathModifier.get_Order
int Pathfinding::PathModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathModifier*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathModifier.Awake
void Pathfinding::PathModifier::Awake(::Pathfinding::Seeker* seeker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seeker)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, seeker);
}
// Autogenerated method: Pathfinding.PathModifier.OnDestroy
void Pathfinding::PathModifier::OnDestroy(::Pathfinding::Seeker* seeker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seeker)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, seeker);
}
// Autogenerated method: Pathfinding.PathModifier.PreProcess
void Pathfinding::PathModifier::PreProcess(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::PreProcess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathModifier*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.PathModifier.Apply
void Pathfinding::PathModifier::Apply(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.MonoModifier
#include "Pathfinding/MonoModifier.hpp"
// Including type: Pathfinding.Seeker
#include "Pathfinding/Seeker.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Seeker seeker
[[deprecated("Use field access instead!")]] ::Pathfinding::Seeker*& Pathfinding::MonoModifier::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::Pathfinding::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.MonoModifier.OnEnable
void Pathfinding::MonoModifier::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MonoModifier.OnDisable
void Pathfinding::MonoModifier::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MonoModifier.get_Order
int Pathfinding::MonoModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MonoModifier.PreProcess
void Pathfinding::MonoModifier::PreProcess(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::PreProcess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.MonoModifier.Apply
void Pathfinding::MonoModifier::Apply(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RadiusModifier
#include "Pathfinding/RadiusModifier.hpp"
// Including type: Pathfinding.RadiusModifier/TangentType
#include "Pathfinding/RadiusModifier_TangentType.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single radius
[[deprecated("Use field access instead!")]] float& Pathfinding::RadiusModifier::dyn_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::dyn_radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single detail
[[deprecated("Use field access instead!")]] float& Pathfinding::RadiusModifier::dyn_detail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::dyn_detail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detail"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] radi
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::RadiusModifier::dyn_radi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::dyn_radi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radi"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] a1
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::RadiusModifier::dyn_a1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::dyn_a1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a1"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] a2
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Pathfinding::RadiusModifier::dyn_a2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::dyn_a2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a2"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] dir
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Pathfinding::RadiusModifier::dyn_dir() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::dyn_dir");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dir"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RadiusModifier.CalculateCircleInner
bool Pathfinding::RadiusModifier::CalculateCircleInner(::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, float r1, float r2, ByRef<float> a, ByRef<float> sigma) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::CalculateCircleInner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCircleInner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p1, p2, r1, r2, byref(a), byref(sigma));
}
// Autogenerated method: Pathfinding.RadiusModifier.CalculateCircleOuter
bool Pathfinding::RadiusModifier::CalculateCircleOuter(::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, float r1, float r2, ByRef<float> a, ByRef<float> sigma) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::CalculateCircleOuter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCircleOuter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p1, p2, r1, r2, byref(a), byref(sigma));
}
// Autogenerated method: Pathfinding.RadiusModifier.CalculateTangentType
::Pathfinding::RadiusModifier::TangentType Pathfinding::RadiusModifier::CalculateTangentType(::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, ::UnityEngine::Vector3 p4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::CalculateTangentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTangentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(p4)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RadiusModifier::TangentType, false>(this, ___internal__method, p1, p2, p3, p4);
}
// Autogenerated method: Pathfinding.RadiusModifier.CalculateTangentTypeSimple
::Pathfinding::RadiusModifier::TangentType Pathfinding::RadiusModifier::CalculateTangentTypeSimple(::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::CalculateTangentTypeSimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTangentTypeSimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RadiusModifier::TangentType, false>(this, ___internal__method, p1, p2, p3);
}
// Autogenerated method: Pathfinding.RadiusModifier.Apply
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::RadiusModifier::Apply(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* vs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vs)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, vs);
}
// Autogenerated method: Pathfinding.RadiusModifier.get_Order
int Pathfinding::RadiusModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RadiusModifier.Apply
void Pathfinding::RadiusModifier::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RadiusModifier/TangentType
#include "Pathfinding/RadiusModifier_TangentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.RadiusModifier/TangentType OuterRight
::Pathfinding::RadiusModifier::TangentType Pathfinding::RadiusModifier::TangentType::_get_OuterRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_get_OuterRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RadiusModifier::TangentType>("Pathfinding", "RadiusModifier/TangentType", "OuterRight"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RadiusModifier/TangentType OuterRight
void Pathfinding::RadiusModifier::TangentType::_set_OuterRight(::Pathfinding::RadiusModifier::TangentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_set_OuterRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RadiusModifier/TangentType", "OuterRight", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RadiusModifier/TangentType InnerRightLeft
::Pathfinding::RadiusModifier::TangentType Pathfinding::RadiusModifier::TangentType::_get_InnerRightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_get_InnerRightLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RadiusModifier::TangentType>("Pathfinding", "RadiusModifier/TangentType", "InnerRightLeft"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RadiusModifier/TangentType InnerRightLeft
void Pathfinding::RadiusModifier::TangentType::_set_InnerRightLeft(::Pathfinding::RadiusModifier::TangentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_set_InnerRightLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RadiusModifier/TangentType", "InnerRightLeft", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RadiusModifier/TangentType InnerLeftRight
::Pathfinding::RadiusModifier::TangentType Pathfinding::RadiusModifier::TangentType::_get_InnerLeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_get_InnerLeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RadiusModifier::TangentType>("Pathfinding", "RadiusModifier/TangentType", "InnerLeftRight"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RadiusModifier/TangentType InnerLeftRight
void Pathfinding::RadiusModifier::TangentType::_set_InnerLeftRight(::Pathfinding::RadiusModifier::TangentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_set_InnerLeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RadiusModifier/TangentType", "InnerLeftRight", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RadiusModifier/TangentType OuterLeft
::Pathfinding::RadiusModifier::TangentType Pathfinding::RadiusModifier::TangentType::_get_OuterLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_get_OuterLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RadiusModifier::TangentType>("Pathfinding", "RadiusModifier/TangentType", "OuterLeft"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RadiusModifier/TangentType OuterLeft
void Pathfinding::RadiusModifier::TangentType::_set_OuterLeft(::Pathfinding::RadiusModifier::TangentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_set_OuterLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RadiusModifier/TangentType", "OuterLeft", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RadiusModifier/TangentType Outer
::Pathfinding::RadiusModifier::TangentType Pathfinding::RadiusModifier::TangentType::_get_Outer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_get_Outer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RadiusModifier::TangentType>("Pathfinding", "RadiusModifier/TangentType", "Outer"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RadiusModifier/TangentType Outer
void Pathfinding::RadiusModifier::TangentType::_set_Outer(::Pathfinding::RadiusModifier::TangentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_set_Outer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RadiusModifier/TangentType", "Outer", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RadiusModifier/TangentType Inner
::Pathfinding::RadiusModifier::TangentType Pathfinding::RadiusModifier::TangentType::_get_Inner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_get_Inner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RadiusModifier::TangentType>("Pathfinding", "RadiusModifier/TangentType", "Inner"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RadiusModifier/TangentType Inner
void Pathfinding::RadiusModifier::TangentType::_set_Inner(::Pathfinding::RadiusModifier::TangentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::_set_Inner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RadiusModifier/TangentType", "Inner", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::RadiusModifier::TangentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RadiusModifier::TangentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RaycastModifier
#include "Pathfinding/RaycastModifier.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: Pathfinding.RaycastModifier/Filter
#include "Pathfinding/RaycastModifier_Filter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] iterationsByQuality
::ArrayW<int> Pathfinding::RaycastModifier::_get_iterationsByQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::_get_iterationsByQuality");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding", "RaycastModifier", "iterationsByQuality"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] iterationsByQuality
void Pathfinding::RaycastModifier::_set_iterationsByQuality(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::_set_iterationsByQuality");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RaycastModifier", "iterationsByQuality", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> buffer
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::RaycastModifier::_get_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::_get_buffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*>("Pathfinding", "RaycastModifier", "buffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> buffer
void Pathfinding::RaycastModifier::_set_buffer(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::_set_buffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RaycastModifier", "buffer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] DPCosts
::ArrayW<float> Pathfinding::RaycastModifier::_get_DPCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::_get_DPCosts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("Pathfinding", "RaycastModifier", "DPCosts"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] DPCosts
void Pathfinding::RaycastModifier::_set_DPCosts(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::_set_DPCosts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RaycastModifier", "DPCosts", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32[] DPParents
::ArrayW<int> Pathfinding::RaycastModifier::_get_DPParents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::_get_DPParents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding", "RaycastModifier", "DPParents"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] DPParents
void Pathfinding::RaycastModifier::_set_DPParents(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::_set_DPParents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RaycastModifier", "DPParents", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRaycasting
[[deprecated("Use field access instead!")]] bool& Pathfinding::RaycastModifier::dyn_useRaycasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_useRaycasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRaycasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::RaycastModifier::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean thickRaycast
[[deprecated("Use field access instead!")]] bool& Pathfinding::RaycastModifier::dyn_thickRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_thickRaycast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single thickRaycastRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::RaycastModifier::dyn_thickRaycastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_thickRaycastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean use2DPhysics
[[deprecated("Use field access instead!")]] bool& Pathfinding::RaycastModifier::dyn_use2DPhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_use2DPhysics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "use2DPhysics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 raycastOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RaycastModifier::dyn_raycastOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_raycastOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useGraphRaycasting
[[deprecated("Use field access instead!")]] bool& Pathfinding::RaycastModifier::dyn_useGraphRaycasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_useGraphRaycasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useGraphRaycasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RaycastModifier/Quality quality
[[deprecated("Use field access instead!")]] ::Pathfinding::RaycastModifier::Quality& Pathfinding::RaycastModifier::dyn_quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_quality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quality"))->offset;
  return *reinterpret_cast<::Pathfinding::RaycastModifier::Quality*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RaycastModifier/Filter cachedFilter
[[deprecated("Use field access instead!")]] ::Pathfinding::RaycastModifier::Filter*& Pathfinding::RaycastModifier::dyn_cachedFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_cachedFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedFilter"))->offset;
  return *reinterpret_cast<::Pathfinding::RaycastModifier::Filter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.NNConstraint cachedNNConstraint
[[deprecated("Use field access instead!")]] ::Pathfinding::NNConstraint*& Pathfinding::RaycastModifier::dyn_cachedNNConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_cachedNNConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedNNConstraint"))->offset;
  return *reinterpret_cast<::Pathfinding::NNConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RaycastModifier.ApplyGreedy
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::RaycastModifier::ApplyGreedy(::Pathfinding::Path* p, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter, ::Pathfinding::NNConstraint* nnConstraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::ApplyGreedy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyGreedy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(nnConstraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, p, points, filter, nnConstraint);
}
// Autogenerated method: Pathfinding.RaycastModifier.ApplyDP
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::RaycastModifier::ApplyDP(::Pathfinding::Path* p, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter, ::Pathfinding::NNConstraint* nnConstraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::ApplyDP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyDP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(nnConstraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, p, points, filter, nnConstraint);
}
// Autogenerated method: Pathfinding.RaycastModifier.ValidateLine
bool Pathfinding::RaycastModifier::ValidateLine(::Pathfinding::GraphNode* n1, ::Pathfinding::GraphNode* n2, ::UnityEngine::Vector3 v1, ::UnityEngine::Vector3 v2, ::System::Func_2<::Pathfinding::GraphNode*, bool>* filter, ::Pathfinding::NNConstraint* nnConstraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::ValidateLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n1), ::il2cpp_utils::ExtractType(n2), ::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(nnConstraint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n1, n2, v1, v2, filter, nnConstraint);
}
// Autogenerated method: Pathfinding.RaycastModifier..cctor
void Pathfinding::RaycastModifier::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RaycastModifier", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.RaycastModifier.get_Order
int Pathfinding::RaycastModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RaycastModifier.Apply
void Pathfinding::RaycastModifier::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RaycastModifier/Quality
#include "Pathfinding/RaycastModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.RaycastModifier/Quality Low
::Pathfinding::RaycastModifier::Quality Pathfinding::RaycastModifier::Quality::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Quality::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RaycastModifier::Quality>("Pathfinding", "RaycastModifier/Quality", "Low"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RaycastModifier/Quality Low
void Pathfinding::RaycastModifier::Quality::_set_Low(::Pathfinding::RaycastModifier::Quality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Quality::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RaycastModifier/Quality", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RaycastModifier/Quality Medium
::Pathfinding::RaycastModifier::Quality Pathfinding::RaycastModifier::Quality::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Quality::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RaycastModifier::Quality>("Pathfinding", "RaycastModifier/Quality", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RaycastModifier/Quality Medium
void Pathfinding::RaycastModifier::Quality::_set_Medium(::Pathfinding::RaycastModifier::Quality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Quality::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RaycastModifier/Quality", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RaycastModifier/Quality High
::Pathfinding::RaycastModifier::Quality Pathfinding::RaycastModifier::Quality::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Quality::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RaycastModifier::Quality>("Pathfinding", "RaycastModifier/Quality", "High"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RaycastModifier/Quality High
void Pathfinding::RaycastModifier::Quality::_set_High(::Pathfinding::RaycastModifier::Quality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Quality::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RaycastModifier/Quality", "High", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RaycastModifier/Quality Highest
::Pathfinding::RaycastModifier::Quality Pathfinding::RaycastModifier::Quality::_get_Highest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Quality::_get_Highest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RaycastModifier::Quality>("Pathfinding", "RaycastModifier/Quality", "Highest"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RaycastModifier/Quality Highest
void Pathfinding::RaycastModifier::Quality::_set_Highest(::Pathfinding::RaycastModifier::Quality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Quality::_set_Highest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RaycastModifier/Quality", "Highest", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::RaycastModifier::Quality::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Quality::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RaycastModifier/Filter
#include "Pathfinding/RaycastModifier_Filter.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Path path
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::RaycastModifier::Filter::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Filter::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Func`2<Pathfinding.GraphNode,System.Boolean> cachedDelegate
[[deprecated("Use field access instead!")]] ::System::Func_2<::Pathfinding::GraphNode*, bool>*& Pathfinding::RaycastModifier::Filter::dyn_cachedDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Filter::dyn_cachedDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedDelegate"))->offset;
  return *reinterpret_cast<::System::Func_2<::Pathfinding::GraphNode*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RaycastModifier/Filter.CanTraverse
bool Pathfinding::RaycastModifier::Filter::CanTraverse(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Filter::CanTraverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanTraverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.SimpleSmoothModifier
#include "Pathfinding/SimpleSmoothModifier.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.SimpleSmoothModifier/SmoothType smoothType
[[deprecated("Use field access instead!")]] ::Pathfinding::SimpleSmoothModifier::SmoothType& Pathfinding::SimpleSmoothModifier::dyn_smoothType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_smoothType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothType"))->offset;
  return *reinterpret_cast<::Pathfinding::SimpleSmoothModifier::SmoothType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 subdivisions
[[deprecated("Use field access instead!")]] int& Pathfinding::SimpleSmoothModifier::dyn_subdivisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_subdivisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subdivisions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 iterations
[[deprecated("Use field access instead!")]] int& Pathfinding::SimpleSmoothModifier::dyn_iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strength
[[deprecated("Use field access instead!")]] float& Pathfinding::SimpleSmoothModifier::dyn_strength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_strength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean uniformLength
[[deprecated("Use field access instead!")]] bool& Pathfinding::SimpleSmoothModifier::dyn_uniformLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_uniformLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uniformLength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSegmentLength
[[deprecated("Use field access instead!")]] float& Pathfinding::SimpleSmoothModifier::dyn_maxSegmentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_maxSegmentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSegmentLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bezierTangentLength
[[deprecated("Use field access instead!")]] float& Pathfinding::SimpleSmoothModifier::dyn_bezierTangentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_bezierTangentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bezierTangentLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single offset
[[deprecated("Use field access instead!")]] float& Pathfinding::SimpleSmoothModifier::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single factor
[[deprecated("Use field access instead!")]] float& Pathfinding::SimpleSmoothModifier::dyn_factor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_factor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "factor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.CurvedNonuniform
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::SimpleSmoothModifier::CurvedNonuniform(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::CurvedNonuniform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurvedNonuniform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.GetPointOnCubic
::UnityEngine::Vector3 Pathfinding::SimpleSmoothModifier::GetPointOnCubic(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 tan1, ::UnityEngine::Vector3 tan2, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::GetPointOnCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "SimpleSmoothModifier", "GetPointOnCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(tan1), ::il2cpp_utils::ExtractType(tan2), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, tan1, tan2, t);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.SmoothOffsetSimple
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::SimpleSmoothModifier::SmoothOffsetSimple(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothOffsetSimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothOffsetSimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.SmoothSimple
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::SimpleSmoothModifier::SmoothSimple(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothSimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothSimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.SmoothBezier
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::SimpleSmoothModifier::SmoothBezier(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothBezier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothBezier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.get_Order
int Pathfinding::SimpleSmoothModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.Apply
void Pathfinding::SimpleSmoothModifier::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.SimpleSmoothModifier/SmoothType
#include "Pathfinding/SimpleSmoothModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.SimpleSmoothModifier/SmoothType Simple
::Pathfinding::SimpleSmoothModifier::SmoothType Pathfinding::SimpleSmoothModifier::SmoothType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::SimpleSmoothModifier::SmoothType>("Pathfinding", "SimpleSmoothModifier/SmoothType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.SimpleSmoothModifier/SmoothType Simple
void Pathfinding::SimpleSmoothModifier::SmoothType::_set_Simple(::Pathfinding::SimpleSmoothModifier::SmoothType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "SimpleSmoothModifier/SmoothType", "Simple", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.SimpleSmoothModifier/SmoothType Bezier
::Pathfinding::SimpleSmoothModifier::SmoothType Pathfinding::SimpleSmoothModifier::SmoothType::_get_Bezier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_get_Bezier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::SimpleSmoothModifier::SmoothType>("Pathfinding", "SimpleSmoothModifier/SmoothType", "Bezier"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.SimpleSmoothModifier/SmoothType Bezier
void Pathfinding::SimpleSmoothModifier::SmoothType::_set_Bezier(::Pathfinding::SimpleSmoothModifier::SmoothType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_set_Bezier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "SimpleSmoothModifier/SmoothType", "Bezier", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.SimpleSmoothModifier/SmoothType OffsetSimple
::Pathfinding::SimpleSmoothModifier::SmoothType Pathfinding::SimpleSmoothModifier::SmoothType::_get_OffsetSimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_get_OffsetSimple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::SimpleSmoothModifier::SmoothType>("Pathfinding", "SimpleSmoothModifier/SmoothType", "OffsetSimple"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.SimpleSmoothModifier/SmoothType OffsetSimple
void Pathfinding::SimpleSmoothModifier::SmoothType::_set_OffsetSimple(::Pathfinding::SimpleSmoothModifier::SmoothType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_set_OffsetSimple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "SimpleSmoothModifier/SmoothType", "OffsetSimple", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.SimpleSmoothModifier/SmoothType CurvedNonuniform
::Pathfinding::SimpleSmoothModifier::SmoothType Pathfinding::SimpleSmoothModifier::SmoothType::_get_CurvedNonuniform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_get_CurvedNonuniform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::SimpleSmoothModifier::SmoothType>("Pathfinding", "SimpleSmoothModifier/SmoothType", "CurvedNonuniform"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.SimpleSmoothModifier/SmoothType CurvedNonuniform
void Pathfinding::SimpleSmoothModifier::SmoothType::_set_CurvedNonuniform(::Pathfinding::SimpleSmoothModifier::SmoothType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_set_CurvedNonuniform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "SimpleSmoothModifier/SmoothType", "CurvedNonuniform", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::SimpleSmoothModifier::SmoothType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.StartEndModifier
#include "Pathfinding/StartEndModifier.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean addPoints
[[deprecated("Use field access instead!")]] bool& Pathfinding::StartEndModifier::dyn_addPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_addPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addPoints"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.StartEndModifier/Exactness exactStartPoint
[[deprecated("Use field access instead!")]] ::Pathfinding::StartEndModifier::Exactness& Pathfinding::StartEndModifier::dyn_exactStartPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_exactStartPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exactStartPoint"))->offset;
  return *reinterpret_cast<::Pathfinding::StartEndModifier::Exactness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.StartEndModifier/Exactness exactEndPoint
[[deprecated("Use field access instead!")]] ::Pathfinding::StartEndModifier::Exactness& Pathfinding::StartEndModifier::dyn_exactEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_exactEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exactEndPoint"))->offset;
  return *reinterpret_cast<::Pathfinding::StartEndModifier::Exactness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<UnityEngine.Vector3> adjustStartPoint
[[deprecated("Use field access instead!")]] ::System::Func_1<::UnityEngine::Vector3>*& Pathfinding::StartEndModifier::dyn_adjustStartPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_adjustStartPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adjustStartPoint"))->offset;
  return *reinterpret_cast<::System::Func_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRaycasting
[[deprecated("Use field access instead!")]] bool& Pathfinding::StartEndModifier::dyn_useRaycasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_useRaycasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRaycasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::StartEndModifier::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useGraphRaycasting
[[deprecated("Use field access instead!")]] bool& Pathfinding::StartEndModifier::dyn_useGraphRaycasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_useGraphRaycasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useGraphRaycasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.GraphNode> connectionBuffer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::StartEndModifier::dyn_connectionBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_connectionBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionBuffer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Pathfinding.GraphNode> connectionBufferAddDelegate
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& Pathfinding::StartEndModifier::dyn_connectionBufferAddDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_connectionBufferAddDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionBufferAddDelegate"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.StartEndModifier.Snap
::UnityEngine::Vector3 Pathfinding::StartEndModifier::Snap(::Pathfinding::ABPath* path, ::Pathfinding::StartEndModifier::Exactness mode, bool start, ByRef<bool> forceAddPoint, ByRef<int> closestConnectionIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Snap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Snap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, path, mode, start, byref(forceAddPoint), byref(closestConnectionIndex));
}
// Autogenerated method: Pathfinding.StartEndModifier.GetClampedPoint
::UnityEngine::Vector3 Pathfinding::StartEndModifier::GetClampedPoint(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::GetClampedPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClampedPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, from, to, hint);
}
// Autogenerated method: Pathfinding.StartEndModifier.get_Order
int Pathfinding::StartEndModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathModifier*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.StartEndModifier.Apply
void Pathfinding::StartEndModifier::Apply(::Pathfinding::Path* _p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathModifier*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.StartEndModifier/Exactness
#include "Pathfinding/StartEndModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.StartEndModifier/Exactness SnapToNode
::Pathfinding::StartEndModifier::Exactness Pathfinding::StartEndModifier::Exactness::_get_SnapToNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_get_SnapToNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::StartEndModifier::Exactness>("Pathfinding", "StartEndModifier/Exactness", "SnapToNode"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.StartEndModifier/Exactness SnapToNode
void Pathfinding::StartEndModifier::Exactness::_set_SnapToNode(::Pathfinding::StartEndModifier::Exactness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_set_SnapToNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "StartEndModifier/Exactness", "SnapToNode", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.StartEndModifier/Exactness Original
::Pathfinding::StartEndModifier::Exactness Pathfinding::StartEndModifier::Exactness::_get_Original() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_get_Original");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::StartEndModifier::Exactness>("Pathfinding", "StartEndModifier/Exactness", "Original"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.StartEndModifier/Exactness Original
void Pathfinding::StartEndModifier::Exactness::_set_Original(::Pathfinding::StartEndModifier::Exactness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_set_Original");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "StartEndModifier/Exactness", "Original", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.StartEndModifier/Exactness Interpolate
::Pathfinding::StartEndModifier::Exactness Pathfinding::StartEndModifier::Exactness::_get_Interpolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_get_Interpolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::StartEndModifier::Exactness>("Pathfinding", "StartEndModifier/Exactness", "Interpolate"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.StartEndModifier/Exactness Interpolate
void Pathfinding::StartEndModifier::Exactness::_set_Interpolate(::Pathfinding::StartEndModifier::Exactness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_set_Interpolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "StartEndModifier/Exactness", "Interpolate", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.StartEndModifier/Exactness ClosestOnNode
::Pathfinding::StartEndModifier::Exactness Pathfinding::StartEndModifier::Exactness::_get_ClosestOnNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_get_ClosestOnNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::StartEndModifier::Exactness>("Pathfinding", "StartEndModifier/Exactness", "ClosestOnNode"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.StartEndModifier/Exactness ClosestOnNode
void Pathfinding::StartEndModifier::Exactness::_set_ClosestOnNode(::Pathfinding::StartEndModifier::Exactness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_set_ClosestOnNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "StartEndModifier/Exactness", "ClosestOnNode", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.StartEndModifier/Exactness NodeConnection
::Pathfinding::StartEndModifier::Exactness Pathfinding::StartEndModifier::Exactness::_get_NodeConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_get_NodeConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::StartEndModifier::Exactness>("Pathfinding", "StartEndModifier/Exactness", "NodeConnection"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.StartEndModifier/Exactness NodeConnection
void Pathfinding::StartEndModifier::Exactness::_set_NodeConnection(::Pathfinding::StartEndModifier::Exactness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_set_NodeConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "StartEndModifier/Exactness", "NodeConnection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::StartEndModifier::Exactness::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshAdd
#include "Pathfinding/NavmeshAdd.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color GizmoColor
::UnityEngine::Color Pathfinding::NavmeshAdd::_get_GizmoColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::_get_GizmoColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "NavmeshAdd", "GizmoColor"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color GizmoColor
void Pathfinding::NavmeshAdd::_set_GizmoColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::_set_GizmoColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshAdd", "GizmoColor", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NavmeshAdd/MeshType type
[[deprecated("Use field access instead!")]] ::Pathfinding::NavmeshAdd::MeshType& Pathfinding::NavmeshAdd::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Pathfinding::NavmeshAdd::MeshType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Pathfinding::NavmeshAdd::dyn_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] verts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::NavmeshAdd::dyn_verts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_verts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] tris
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::NavmeshAdd::dyn_tris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_tris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tris"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 rectangleSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::NavmeshAdd::dyn_rectangleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_rectangleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rectangleSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single meshScale
[[deprecated("Use field access instead!")]] float& Pathfinding::NavmeshAdd::dyn_meshScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_meshScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavmeshAdd::dyn_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRotationAndScale
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshAdd::dyn_useRotationAndScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_useRotationAndScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRotationAndScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single updateDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::NavmeshAdd::dyn_updateDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_updateDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single updateRotationDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::NavmeshAdd::dyn_updateRotationDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_updateRotationDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateRotationDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::NavmeshAdd::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavmeshAdd::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion lastRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Pathfinding::NavmeshAdd::dyn_lastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::dyn_lastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavmeshAdd.get_Center
::UnityEngine::Vector3 Pathfinding::NavmeshAdd::get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::get_Center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshAdd.RebuildMesh
void Pathfinding::NavmeshAdd::RebuildMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::RebuildMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshAdd.GetMesh
void Pathfinding::NavmeshAdd::GetMesh(ByRef<::ArrayW<::Pathfinding::Int3>> vbuffer, ByRef<::ArrayW<int>> tbuffer, ::Pathfinding::Util::GraphTransform* inverseTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::GetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbuffer), ::il2cpp_utils::ExtractIndependentType<::ArrayW<int>&>(), ::il2cpp_utils::ExtractType(inverseTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(vbuffer), byref(tbuffer), inverseTransform);
}
// Autogenerated method: Pathfinding.NavmeshAdd.RequiresUpdate
bool Pathfinding::NavmeshAdd::RequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::RequiresUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshAdd.ForceUpdate
void Pathfinding::NavmeshAdd::ForceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::ForceUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshAdd.Awake
void Pathfinding::NavmeshAdd::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshAdd.NotifyUpdated
void Pathfinding::NavmeshAdd::NotifyUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::NotifyUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshAdd.GetBounds
::UnityEngine::Rect Pathfinding::NavmeshAdd::GetBounds(::Pathfinding::Util::GraphTransform* inverseTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::GetBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, inverseTransform);
}
// Autogenerated method: Pathfinding.NavmeshAdd..cctor
void Pathfinding::NavmeshAdd::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshAdd", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshAdd/MeshType
#include "Pathfinding/NavmeshAdd.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.NavmeshAdd/MeshType Rectangle
::Pathfinding::NavmeshAdd::MeshType Pathfinding::NavmeshAdd::MeshType::_get_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::MeshType::_get_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NavmeshAdd::MeshType>("Pathfinding", "NavmeshAdd/MeshType", "Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NavmeshAdd/MeshType Rectangle
void Pathfinding::NavmeshAdd::MeshType::_set_Rectangle(::Pathfinding::NavmeshAdd::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::MeshType::_set_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshAdd/MeshType", "Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.NavmeshAdd/MeshType CustomMesh
::Pathfinding::NavmeshAdd::MeshType Pathfinding::NavmeshAdd::MeshType::_get_CustomMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::MeshType::_get_CustomMesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NavmeshAdd::MeshType>("Pathfinding", "NavmeshAdd/MeshType", "CustomMesh"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NavmeshAdd/MeshType CustomMesh
void Pathfinding::NavmeshAdd::MeshType::_set_CustomMesh(::Pathfinding::NavmeshAdd::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::MeshType::_set_CustomMesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshAdd/MeshType", "CustomMesh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::NavmeshAdd::MeshType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshAdd::MeshType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshClipper
#include "Pathfinding/NavmeshClipper.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action`1<Pathfinding.NavmeshClipper> OnEnableCallback
::System::Action_1<::Pathfinding::NavmeshClipper*>* Pathfinding::NavmeshClipper::_get_OnEnableCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::_get_OnEnableCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Pathfinding::NavmeshClipper*>*>("Pathfinding", "NavmeshClipper", "OnEnableCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<Pathfinding.NavmeshClipper> OnEnableCallback
void Pathfinding::NavmeshClipper::_set_OnEnableCallback(::System::Action_1<::Pathfinding::NavmeshClipper*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::_set_OnEnableCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshClipper", "OnEnableCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<Pathfinding.NavmeshClipper> OnDisableCallback
::System::Action_1<::Pathfinding::NavmeshClipper*>* Pathfinding::NavmeshClipper::_get_OnDisableCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::_get_OnDisableCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Pathfinding::NavmeshClipper*>*>("Pathfinding", "NavmeshClipper", "OnDisableCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<Pathfinding.NavmeshClipper> OnDisableCallback
void Pathfinding::NavmeshClipper::_set_OnDisableCallback(::System::Action_1<::Pathfinding::NavmeshClipper*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::_set_OnDisableCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshClipper", "OnDisableCallback", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<Pathfinding.NavmeshClipper> all
::System::Collections::Generic::List_1<::Pathfinding::NavmeshClipper*>* Pathfinding::NavmeshClipper::_get_all() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::_get_all");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Pathfinding::NavmeshClipper*>*>("Pathfinding", "NavmeshClipper", "all"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<Pathfinding.NavmeshClipper> all
void Pathfinding::NavmeshClipper::_set_all(::System::Collections::Generic::List_1<::Pathfinding::NavmeshClipper*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::_set_all");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshClipper", "all", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 listIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::NavmeshClipper::dyn_listIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::dyn_listIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphMask graphMask
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphMask& Pathfinding::NavmeshClipper::dyn_graphMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::dyn_graphMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphMask"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavmeshClipper.AddEnableCallback
void Pathfinding::NavmeshClipper::AddEnableCallback(::System::Action_1<::Pathfinding::NavmeshClipper*>* onEnable, ::System::Action_1<::Pathfinding::NavmeshClipper*>* onDisable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::AddEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshClipper", "AddEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onEnable), ::il2cpp_utils::ExtractType(onDisable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, onEnable, onDisable);
}
// Autogenerated method: Pathfinding.NavmeshClipper.RemoveEnableCallback
void Pathfinding::NavmeshClipper::RemoveEnableCallback(::System::Action_1<::Pathfinding::NavmeshClipper*>* onEnable, ::System::Action_1<::Pathfinding::NavmeshClipper*>* onDisable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::RemoveEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshClipper", "RemoveEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onEnable), ::il2cpp_utils::ExtractType(onDisable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, onEnable, onDisable);
}
// Autogenerated method: Pathfinding.NavmeshClipper.get_allEnabled
::System::Collections::Generic::List_1<::Pathfinding::NavmeshClipper*>* Pathfinding::NavmeshClipper::get_allEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::get_allEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshClipper", "get_allEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::NavmeshClipper*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshClipper.OnEnable
void Pathfinding::NavmeshClipper::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshClipper.OnDisable
void Pathfinding::NavmeshClipper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshClipper.NotifyUpdated
void Pathfinding::NavmeshClipper::NotifyUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::NotifyUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshClipper.GetBounds
::UnityEngine::Rect Pathfinding::NavmeshClipper::GetBounds(::Pathfinding::Util::GraphTransform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::GetBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, transform);
}
// Autogenerated method: Pathfinding.NavmeshClipper.RequiresUpdate
bool Pathfinding::NavmeshClipper::RequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::RequiresUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshClipper.ForceUpdate
void Pathfinding::NavmeshClipper::ForceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::ForceUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshClipper..cctor
void Pathfinding::NavmeshClipper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshClipper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshClipper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshCut
#include "Pathfinding/NavmeshCut.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Util.GraphTransform
#include "Pathfinding/Util/GraphTransform.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<Pathfinding.Int2,System.Int32> edges
::System::Collections::Generic::Dictionary_2<::Pathfinding::Int2, int>* Pathfinding::NavmeshCut::_get_edges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::_get_edges");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Pathfinding::Int2, int>*>("Pathfinding", "NavmeshCut", "edges")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<Pathfinding.Int2,System.Int32> edges
void Pathfinding::NavmeshCut::_set_edges(::System::Collections::Generic::Dictionary_2<::Pathfinding::Int2, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::_set_edges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshCut", "edges", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> pointers
::System::Collections::Generic::Dictionary_2<int, int>* Pathfinding::NavmeshCut::_get_pointers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::_get_pointers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, int>*>("Pathfinding", "NavmeshCut", "pointers")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> pointers
void Pathfinding::NavmeshCut::_set_pointers(::System::Collections::Generic::Dictionary_2<int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::_set_pointers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshCut", "pointers", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color GizmoColor
::UnityEngine::Color Pathfinding::NavmeshCut::_get_GizmoColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::_get_GizmoColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "NavmeshCut", "GizmoColor"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color GizmoColor
void Pathfinding::NavmeshCut::_set_GizmoColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::_set_GizmoColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshCut", "GizmoColor", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NavmeshCut/MeshType type
[[deprecated("Use field access instead!")]] ::Pathfinding::NavmeshCut::MeshType& Pathfinding::NavmeshCut::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Pathfinding::NavmeshCut::MeshType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Pathfinding::NavmeshCut::dyn_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 rectangleSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::NavmeshCut::dyn_rectangleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_rectangleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rectangleSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single circleRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::NavmeshCut::dyn_circleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_circleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "circleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 circleResolution
[[deprecated("Use field access instead!")]] int& Pathfinding::NavmeshCut::dyn_circleResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_circleResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "circleResolution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
[[deprecated("Use field access instead!")]] float& Pathfinding::NavmeshCut::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single meshScale
[[deprecated("Use field access instead!")]] float& Pathfinding::NavmeshCut::dyn_meshScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_meshScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavmeshCut::dyn_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single updateDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::NavmeshCut::dyn_updateDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_updateDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDual
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshCut::dyn_isDual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_isDual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDual"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cutsAddedGeom
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshCut::dyn_cutsAddedGeom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_cutsAddedGeom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutsAddedGeom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single updateRotationDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::NavmeshCut::dyn_updateRotationDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_updateRotationDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateRotationDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRotationAndScale
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavmeshCut::dyn_useRotationAndScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_useRotationAndScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRotationAndScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[][] contours
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::UnityEngine::Vector3>>& Pathfinding::NavmeshCut::dyn_contours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_contours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contours"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::UnityEngine::Vector3>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::NavmeshCut::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh lastMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Pathfinding::NavmeshCut::dyn_lastMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_lastMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavmeshCut::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion lastRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Pathfinding::NavmeshCut::dyn_lastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::dyn_lastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavmeshCut.UsedForCut
void Pathfinding::NavmeshCut::UsedForCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::UsedForCut");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshCut*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshCut.CalculateMeshContour
void Pathfinding::NavmeshCut::CalculateMeshContour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::CalculateMeshContour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateMeshContour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshCut.GetContour
void Pathfinding::NavmeshCut::GetContour(::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::GetContour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Pathfinding.NavmeshCut.TransformBuffer
void Pathfinding::NavmeshCut::TransformBuffer(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* buffer, bool reverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::TransformBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(reverse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, reverse);
}
// Autogenerated method: Pathfinding.NavmeshCut.OnDrawGizmos
void Pathfinding::NavmeshCut::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshCut.GetY
float Pathfinding::NavmeshCut::GetY(::Pathfinding::Util::GraphTransform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::GetY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, transform);
}
// Autogenerated method: Pathfinding.NavmeshCut.OnDrawGizmosSelected
void Pathfinding::NavmeshCut::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshCut.Awake
void Pathfinding::NavmeshCut::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshCut.OnEnable
void Pathfinding::NavmeshCut::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshCut.ForceUpdate
void Pathfinding::NavmeshCut::ForceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::ForceUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshCut.RequiresUpdate
bool Pathfinding::NavmeshCut::RequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::RequiresUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshCut.NotifyUpdated
void Pathfinding::NavmeshCut::NotifyUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::NotifyUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshCut.GetBounds
::UnityEngine::Rect Pathfinding::NavmeshCut::GetBounds(::Pathfinding::Util::GraphTransform* inverseTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::GetBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavmeshClipper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, inverseTransform);
}
// Autogenerated method: Pathfinding.NavmeshCut..cctor
void Pathfinding::NavmeshCut::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavmeshCut", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshCut/MeshType
#include "Pathfinding/NavmeshCut.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.NavmeshCut/MeshType Rectangle
::Pathfinding::NavmeshCut::MeshType Pathfinding::NavmeshCut::MeshType::_get_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::MeshType::_get_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NavmeshCut::MeshType>("Pathfinding", "NavmeshCut/MeshType", "Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NavmeshCut/MeshType Rectangle
void Pathfinding::NavmeshCut::MeshType::_set_Rectangle(::Pathfinding::NavmeshCut::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::MeshType::_set_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshCut/MeshType", "Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.NavmeshCut/MeshType Circle
::Pathfinding::NavmeshCut::MeshType Pathfinding::NavmeshCut::MeshType::_get_Circle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::MeshType::_get_Circle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NavmeshCut::MeshType>("Pathfinding", "NavmeshCut/MeshType", "Circle"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NavmeshCut/MeshType Circle
void Pathfinding::NavmeshCut::MeshType::_set_Circle(::Pathfinding::NavmeshCut::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::MeshType::_set_Circle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshCut/MeshType", "Circle", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.NavmeshCut/MeshType CustomMesh
::Pathfinding::NavmeshCut::MeshType Pathfinding::NavmeshCut::MeshType::_get_CustomMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::MeshType::_get_CustomMesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NavmeshCut::MeshType>("Pathfinding", "NavmeshCut/MeshType", "CustomMesh"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NavmeshCut/MeshType CustomMesh
void Pathfinding::NavmeshCut::MeshType::_set_CustomMesh(::Pathfinding::NavmeshCut::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::MeshType::_set_CustomMesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NavmeshCut/MeshType", "CustomMesh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::NavmeshCut::MeshType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshCut::MeshType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshUpdates
#include "Pathfinding/NavmeshUpdates.hpp"
// Including type: Pathfinding.NavmeshUpdates/NavmeshUpdateSettings
#include "Pathfinding/NavmeshUpdates_NavmeshUpdateSettings.hpp"
// Including type: Pathfinding.NavmeshClipper
#include "Pathfinding/NavmeshClipper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single updateInterval
[[deprecated("Use field access instead!")]] float& Pathfinding::NavmeshUpdates::dyn_updateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::dyn_updateInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastUpdateTime
[[deprecated("Use field access instead!")]] float& Pathfinding::NavmeshUpdates::dyn_lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::dyn_lastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavmeshUpdates.OnEnable
void Pathfinding::NavmeshUpdates::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshUpdates.OnDisable
void Pathfinding::NavmeshUpdates::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshUpdates.DiscardPending
void Pathfinding::NavmeshUpdates::DiscardPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::DiscardPending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiscardPending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshUpdates.HandleOnEnableCallback
void Pathfinding::NavmeshUpdates::HandleOnEnableCallback(::Pathfinding::NavmeshClipper* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::HandleOnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.NavmeshUpdates.HandleOnDisableCallback
void Pathfinding::NavmeshUpdates::HandleOnDisableCallback(::Pathfinding::NavmeshClipper* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::HandleOnDisableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnDisableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.NavmeshUpdates.Update
void Pathfinding::NavmeshUpdates::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavmeshUpdates.ForceUpdate
void Pathfinding::NavmeshUpdates::ForceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::ForceUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavmeshUpdates/NavmeshUpdateSettings
#include "Pathfinding/NavmeshUpdates_NavmeshUpdateSettings.hpp"
// Including type: Pathfinding.Util.TileHandler
#include "Pathfinding/Util/TileHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.NavmeshBase
#include "Pathfinding/NavmeshBase.hpp"
// Including type: Pathfinding.NavmeshTile
#include "Pathfinding/NavmeshTile.hpp"
// Including type: Pathfinding.NavmeshClipper
#include "Pathfinding/NavmeshClipper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.TileHandler handler
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::TileHandler*& Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::TileHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Pathfinding.IntRect> forcedReloadRects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::IntRect>*& Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::dyn_forcedReloadRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::dyn_forcedReloadRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forcedReloadRects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::IntRect>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.NavmeshBase graph
[[deprecated("Use field access instead!")]] ::Pathfinding::NavmeshBase*& Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::Pathfinding::NavmeshBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavmeshUpdates/NavmeshUpdateSettings.Refresh
void Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::Refresh(bool forceCreate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forceCreate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forceCreate);
}
// Autogenerated method: Pathfinding.NavmeshUpdates/NavmeshUpdateSettings.OnRecalculatedTiles
void Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::OnRecalculatedTiles(::ArrayW<::Pathfinding::NavmeshTile*> tiles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::OnRecalculatedTiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRecalculatedTiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tiles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tiles);
}
// Autogenerated method: Pathfinding.NavmeshUpdates/NavmeshUpdateSettings.AddClipper
void Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::AddClipper(::Pathfinding::NavmeshClipper* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::AddClipper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClipper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.NavmeshUpdates/NavmeshUpdateSettings.RemoveClipper
void Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::RemoveClipper(::Pathfinding::NavmeshClipper* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavmeshUpdates::NavmeshUpdateSettings::RemoveClipper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveClipper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RelevantGraphSurface
#include "Pathfinding/RelevantGraphSurface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Pathfinding.RelevantGraphSurface root
::Pathfinding::RelevantGraphSurface* Pathfinding::RelevantGraphSurface::_get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::_get_root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RelevantGraphSurface*>("Pathfinding", "RelevantGraphSurface", "root"));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.RelevantGraphSurface root
void Pathfinding::RelevantGraphSurface::_set_root(::Pathfinding::RelevantGraphSurface* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::_set_root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RelevantGraphSurface", "root", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxRange
[[deprecated("Use field access instead!")]] float& Pathfinding::RelevantGraphSurface::dyn_maxRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::dyn_maxRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RelevantGraphSurface prev
[[deprecated("Use field access instead!")]] ::Pathfinding::RelevantGraphSurface*& Pathfinding::RelevantGraphSurface::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::dyn_prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<::Pathfinding::RelevantGraphSurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RelevantGraphSurface next
[[deprecated("Use field access instead!")]] ::Pathfinding::RelevantGraphSurface*& Pathfinding::RelevantGraphSurface::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::Pathfinding::RelevantGraphSurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RelevantGraphSurface::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.get_Position
::UnityEngine::Vector3 Pathfinding::RelevantGraphSurface::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.get_Next
::Pathfinding::RelevantGraphSurface* Pathfinding::RelevantGraphSurface::get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::get_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RelevantGraphSurface*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.get_Prev
::Pathfinding::RelevantGraphSurface* Pathfinding::RelevantGraphSurface::get_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::get_Prev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RelevantGraphSurface*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.get_Root
::Pathfinding::RelevantGraphSurface* Pathfinding::RelevantGraphSurface::get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::get_Root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RelevantGraphSurface", "get_Root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RelevantGraphSurface*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.UpdatePosition
void Pathfinding::RelevantGraphSurface::UpdatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::UpdatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.OnEnable
void Pathfinding::RelevantGraphSurface::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.OnDisable
void Pathfinding::RelevantGraphSurface::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.UpdateAllPositions
void Pathfinding::RelevantGraphSurface::UpdateAllPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::UpdateAllPositions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RelevantGraphSurface", "UpdateAllPositions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.FindAllGraphSurfaces
void Pathfinding::RelevantGraphSurface::FindAllGraphSurfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::FindAllGraphSurfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RelevantGraphSurface", "FindAllGraphSurfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.OnDrawGizmos
void Pathfinding::RelevantGraphSurface::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.OnDrawGizmosSelected
void Pathfinding::RelevantGraphSurface::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.TileHandlerHelper
#include "Pathfinding/TileHandlerHelper.hpp"
// Including type: Pathfinding.Util.TileHandler
#include "Pathfinding/Util/TileHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.TileHandlerHelper.get_updateInterval
float Pathfinding::TileHandlerHelper::get_updateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TileHandlerHelper::get_updateInterval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateInterval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TileHandlerHelper.set_updateInterval
void Pathfinding::TileHandlerHelper::set_updateInterval(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TileHandlerHelper::set_updateInterval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateInterval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.TileHandlerHelper.UseSpecifiedHandler
void Pathfinding::TileHandlerHelper::UseSpecifiedHandler(::Pathfinding::Util::TileHandler* newHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TileHandlerHelper::UseSpecifiedHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseSpecifiedHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newHandler);
}
// Autogenerated method: Pathfinding.TileHandlerHelper.DiscardPending
void Pathfinding::TileHandlerHelper::DiscardPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TileHandlerHelper::DiscardPending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiscardPending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TileHandlerHelper.ForceUpdate
void Pathfinding::TileHandlerHelper::ForceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TileHandlerHelper::ForceUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.EnumFlagAttribute
#include "Pathfinding/EnumFlagAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
