// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractableColorVisual
#include "Oculus/Interaction/InteractableColorVisual.hpp"
// Including type: Oculus.Interaction.InteractableColorVisual/ColorState
#include "Oculus/Interaction/InteractableColorVisual_ColorState.hpp"
// Including type: Oculus.Interaction.InteractableColorVisual/<ChangeColor>d__25
#include "Oculus/Interaction/InteractableColorVisual_-ChangeColor-d__25.hpp"
// Including type: Oculus.Interaction.IInteractableView
#include "Oculus/Interaction/IInteractableView.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
// Including type: Oculus.Interaction.InteractableStateChangeArgs
#include "Oculus/Interaction/InteractableStateChangeArgs.hpp"
// Including type: Oculus.Interaction.InteractableState
#include "Oculus/Interaction/InteractableState.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.YieldInstruction _waiter
::UnityEngine::YieldInstruction* Oculus::Interaction::InteractableColorVisual::_get__waiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::_get__waiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::YieldInstruction*>("Oculus.Interaction", "InteractableColorVisual", "_waiter"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.YieldInstruction _waiter
void Oculus::Interaction::InteractableColorVisual::_set__waiter(::UnityEngine::YieldInstruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::_set__waiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "InteractableColorVisual", "_waiter", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _interactableView
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::InteractableColorVisual::dyn__interactableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__interactableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactableView"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractableView <InteractableView>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractableView*& Oculus::Interaction::InteractableColorVisual::dyn_$InteractableView$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn_$InteractableView$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractableView>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _editor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::InteractableColorVisual::dyn__editor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__editor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _colorShaderPropertyName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Interaction::InteractableColorVisual::dyn__colorShaderPropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__colorShaderPropertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorShaderPropertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.InteractableColorVisual/ColorState _normalColorState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableColorVisual::ColorState*& Oculus::Interaction::InteractableColorVisual::dyn__normalColorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__normalColorState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColorState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractableColorVisual::ColorState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.InteractableColorVisual/ColorState _hoverColorState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableColorVisual::ColorState*& Oculus::Interaction::InteractableColorVisual::dyn__hoverColorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__hoverColorState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverColorState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractableColorVisual::ColorState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.InteractableColorVisual/ColorState _selectColorState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableColorVisual::ColorState*& Oculus::Interaction::InteractableColorVisual::dyn__selectColorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__selectColorState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColorState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractableColorVisual::ColorState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.InteractableColorVisual/ColorState _disabledColorState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableColorVisual::ColorState*& Oculus::Interaction::InteractableColorVisual::dyn__disabledColorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__disabledColorState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColorState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractableColorVisual::ColorState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _currentColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractableColorVisual::dyn__currentColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__currentColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.InteractableColorVisual/ColorState _target
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableColorVisual::ColorState*& Oculus::Interaction::InteractableColorVisual::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractableColorVisual::ColorState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _colorShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::InteractableColorVisual::dyn__colorShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__colorShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _routine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& Oculus::Interaction::InteractableColorVisual::dyn__routine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__routine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_routine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractableColorVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.get_InteractableView
::Oculus::Interaction::IInteractableView* Oculus::Interaction::InteractableColorVisual::get_InteractableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::get_InteractableView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractableView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IInteractableView*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.set_InteractableView
void Oculus::Interaction::InteractableColorVisual::set_InteractableView(::Oculus::Interaction::IInteractableView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::set_InteractableView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractableView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.Awake
void Oculus::Interaction::InteractableColorVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableColorVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.Start
void Oculus::Interaction::InteractableColorVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableColorVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.OnEnable
void Oculus::Interaction::InteractableColorVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableColorVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.OnDisable
void Oculus::Interaction::InteractableColorVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableColorVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.UpdateVisualState
void Oculus::Interaction::InteractableColorVisual::UpdateVisualState(::Oculus::Interaction::InteractableStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::UpdateVisualState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisualState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.UpdateVisual
void Oculus::Interaction::InteractableColorVisual::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::UpdateVisual");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableColorVisual*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.ColorForState
::Oculus::Interaction::InteractableColorVisual::ColorState* Oculus::Interaction::InteractableColorVisual::ColorForState(::Oculus::Interaction::InteractableState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::ColorForState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::InteractableColorVisual::ColorState*, false>(this, ___internal__method, state);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.ChangeColor
::System::Collections::IEnumerator* Oculus::Interaction::InteractableColorVisual::ChangeColor(::Oculus::Interaction::InteractableColorVisual::ColorState* targetState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::ChangeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, targetState);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.SetColor
void Oculus::Interaction::InteractableColorVisual::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.CancelRoutine
void Oculus::Interaction::InteractableColorVisual::CancelRoutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::CancelRoutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelRoutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.InjectAllInteractableColorVisual
void Oculus::Interaction::InteractableColorVisual::InjectAllInteractableColorVisual(::Oculus::Interaction::IInteractableView* interactableView, ::Oculus::Interaction::MaterialPropertyBlockEditor* editor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::InjectAllInteractableColorVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractableColorVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableView), ::il2cpp_utils::ExtractType(editor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableView, editor);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.InjectInteractableView
void Oculus::Interaction::InteractableColorVisual::InjectInteractableView(::Oculus::Interaction::IInteractableView* interactableview) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::InjectInteractableView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractableView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableview)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableview);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.InjectMaterialPropertyBlockEditor
void Oculus::Interaction::InteractableColorVisual::InjectMaterialPropertyBlockEditor(::Oculus::Interaction::MaterialPropertyBlockEditor* editor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::InjectMaterialPropertyBlockEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMaterialPropertyBlockEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editor);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.InjectOptionalColorShaderPropertyName
void Oculus::Interaction::InteractableColorVisual::InjectOptionalColorShaderPropertyName(::StringW colorShaderPropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::InjectOptionalColorShaderPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalColorShaderPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorShaderPropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorShaderPropertyName);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.InjectOptionalNormalColorState
void Oculus::Interaction::InteractableColorVisual::InjectOptionalNormalColorState(::Oculus::Interaction::InteractableColorVisual::ColorState* normalColorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::InjectOptionalNormalColorState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalNormalColorState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalColorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, normalColorState);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.InjectOptionalHoverColorState
void Oculus::Interaction::InteractableColorVisual::InjectOptionalHoverColorState(::Oculus::Interaction::InteractableColorVisual::ColorState* hoverColorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::InjectOptionalHoverColorState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalHoverColorState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoverColorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hoverColorState);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual.InjectOptionalSelectColorState
void Oculus::Interaction::InteractableColorVisual::InjectOptionalSelectColorState(::Oculus::Interaction::InteractableColorVisual::ColorState* selectColorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::InjectOptionalSelectColorState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalSelectColorState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectColorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectColorState);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual..cctor
void Oculus::Interaction::InteractableColorVisual::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "InteractableColorVisual", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractableColorVisual/ColorState
#include "Oculus/Interaction/InteractableColorVisual_ColorState.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractableColorVisual::ColorState::dyn_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::ColorState::dyn_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve ColorCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::InteractableColorVisual::ColorState::dyn_ColorCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::ColorState::dyn_ColorCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColorCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ColorTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::InteractableColorVisual::ColorState::dyn_ColorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::ColorState::dyn_ColorTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColorTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.InteractableColorVisual/<ChangeColor>d__25
#include "Oculus/Interaction/InteractableColorVisual_-ChangeColor-d__25.hpp"
// Including type: Oculus.Interaction.InteractableColorVisual/ColorState
#include "Oculus/Interaction/InteractableColorVisual_ColorState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.InteractableColorVisual <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableColorVisual*& Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractableColorVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.InteractableColorVisual/ColorState targetState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::InteractableColorVisual::ColorState*& Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_targetState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_targetState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::InteractableColorVisual::ColorState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <startColor>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_$startColor$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_$startColor$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startColor>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timer>5__3
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_$timer$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::dyn_$timer$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timer>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual/<ChangeColor>d__25.System.IDisposable.Dispose
void Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual/<ChangeColor>d__25.MoveNext
bool Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual/<ChangeColor>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual/<ChangeColor>d__25.System.Collections.IEnumerator.Reset
void Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableColorVisual/<ChangeColor>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableColorVisual::$ChangeColor$d__25*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractableDebugVisual
#include "Oculus/Interaction/InteractableDebugVisual.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Oculus.Interaction.IInteractableView
#include "Oculus/Interaction/IInteractableView.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Oculus.Interaction.InteractableStateChangeArgs
#include "Oculus/Interaction/InteractableStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _interactableView
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::InteractableDebugVisual::dyn__interactableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::dyn__interactableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactableView"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::InteractableDebugVisual::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractableDebugVisual::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _hoverColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractableDebugVisual::dyn__hoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::dyn__hoverColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractableDebugVisual::dyn__selectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::dyn__selectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _disabledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractableDebugVisual::dyn__disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::dyn__disabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractableView InteractableView
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractableView*& Oculus::Interaction::InteractableDebugVisual::dyn_InteractableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::dyn_InteractableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableView"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::InteractableDebugVisual::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractableDebugVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.get_NormalColor
::UnityEngine::Color Oculus::Interaction::InteractableDebugVisual::get_NormalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::get_NormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.set_NormalColor
void Oculus::Interaction::InteractableDebugVisual::set_NormalColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::set_NormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.get_HoverColor
::UnityEngine::Color Oculus::Interaction::InteractableDebugVisual::get_HoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::get_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.set_HoverColor
void Oculus::Interaction::InteractableDebugVisual::set_HoverColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::set_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.get_SelectColor
::UnityEngine::Color Oculus::Interaction::InteractableDebugVisual::get_SelectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::get_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.set_SelectColor
void Oculus::Interaction::InteractableDebugVisual::set_SelectColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::set_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.get_DisabledColor
::UnityEngine::Color Oculus::Interaction::InteractableDebugVisual::get_DisabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::get_DisabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.set_DisabledColor
void Oculus::Interaction::InteractableDebugVisual::set_DisabledColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::set_DisabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.Awake
void Oculus::Interaction::InteractableDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.Start
void Oculus::Interaction::InteractableDebugVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.OnEnable
void Oculus::Interaction::InteractableDebugVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableDebugVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.OnDisable
void Oculus::Interaction::InteractableDebugVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableDebugVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.OnDestroy
void Oculus::Interaction::InteractableDebugVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.SetNormalColor
void Oculus::Interaction::InteractableDebugVisual::SetNormalColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::SetNormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.UpdateVisual
void Oculus::Interaction::InteractableDebugVisual::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.UpdateVisualState
void Oculus::Interaction::InteractableDebugVisual::UpdateVisualState(::Oculus::Interaction::InteractableStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::UpdateVisualState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisualState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.InjectAllInteractableDebugVisual
void Oculus::Interaction::InteractableDebugVisual::InjectAllInteractableDebugVisual(::Oculus::Interaction::IInteractableView* interactableView, ::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::InjectAllInteractableDebugVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractableDebugVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableView), ::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableView, renderer);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.InjectInteractableView
void Oculus::Interaction::InteractableDebugVisual::InjectInteractableView(::Oculus::Interaction::IInteractableView* interactableView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::InjectInteractableView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractableView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableView);
}
// Autogenerated method: Oculus.Interaction.InteractableDebugVisual.InjectRenderer
void Oculus::Interaction::InteractableDebugVisual::InjectRenderer(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableDebugVisual::InjectRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractorDebugVisual
#include "Oculus/Interaction/InteractorDebugVisual.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Oculus.Interaction.IInteractorView
#include "Oculus/Interaction/IInteractorView.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _interactorView
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::InteractorDebugVisual::dyn__interactorView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::dyn__interactorView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactorView"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::InteractorDebugVisual::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractorDebugVisual::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _hoverColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractorDebugVisual::dyn__hoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::dyn__hoverColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractorDebugVisual::dyn__selectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::dyn__selectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _disabledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::InteractorDebugVisual::dyn__disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::dyn__disabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractorView InteractorView
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractorView*& Oculus::Interaction::InteractorDebugVisual::dyn_InteractorView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::dyn_InteractorView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractorView"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractorView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::InteractorDebugVisual::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractorDebugVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.get_NormalColor
::UnityEngine::Color Oculus::Interaction::InteractorDebugVisual::get_NormalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::get_NormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.set_NormalColor
void Oculus::Interaction::InteractorDebugVisual::set_NormalColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::set_NormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.get_HoverColor
::UnityEngine::Color Oculus::Interaction::InteractorDebugVisual::get_HoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::get_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.set_HoverColor
void Oculus::Interaction::InteractorDebugVisual::set_HoverColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::set_HoverColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HoverColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.get_SelectColor
::UnityEngine::Color Oculus::Interaction::InteractorDebugVisual::get_SelectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::get_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.set_SelectColor
void Oculus::Interaction::InteractorDebugVisual::set_SelectColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::set_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.get_DisabledColor
::UnityEngine::Color Oculus::Interaction::InteractorDebugVisual::get_DisabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::get_DisabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.set_DisabledColor
void Oculus::Interaction::InteractorDebugVisual::set_DisabledColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::set_DisabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.Awake
void Oculus::Interaction::InteractorDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.Start
void Oculus::Interaction::InteractorDebugVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.OnEnable
void Oculus::Interaction::InteractorDebugVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorDebugVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.OnDisable
void Oculus::Interaction::InteractorDebugVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorDebugVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.UpdateVisual
void Oculus::Interaction::InteractorDebugVisual::UpdateVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::UpdateVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.UpdateVisualState
void Oculus::Interaction::InteractorDebugVisual::UpdateVisualState(::Oculus::Interaction::InteractorStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::UpdateVisualState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisualState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.OnDestroy
void Oculus::Interaction::InteractorDebugVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.InjectAllInteractorDebugVisual
void Oculus::Interaction::InteractorDebugVisual::InjectAllInteractorDebugVisual(::Oculus::Interaction::IInteractorView* interactorView, ::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::InjectAllInteractorDebugVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractorDebugVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView), ::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView, renderer);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.InjectInteractorView
void Oculus::Interaction::InteractorDebugVisual::InjectInteractorView(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::InjectInteractorView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractorView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.InteractorDebugVisual.InjectRenderer
void Oculus::Interaction::InteractorDebugVisual::InjectRenderer(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorDebugVisual::InjectRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SelectorDebugVisual
#include "Oculus/Interaction/SelectorDebugVisual.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Oculus.Interaction.ISelector
#include "Oculus/Interaction/ISelector.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _selector
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::SelectorDebugVisual::dyn__selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::dyn__selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selector"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::SelectorDebugVisual::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::SelectorDebugVisual::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::SelectorDebugVisual::dyn__selectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::dyn__selectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ISelector Selector
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ISelector*& Oculus::Interaction::SelectorDebugVisual::dyn_Selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::dyn_Selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Selector"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ISelector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::SelectorDebugVisual::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selected
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::SelectorDebugVisual::dyn__selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::dyn__selected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::SelectorDebugVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.get_NormalColor
::UnityEngine::Color Oculus::Interaction::SelectorDebugVisual::get_NormalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::get_NormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.set_NormalColor
void Oculus::Interaction::SelectorDebugVisual::set_NormalColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::set_NormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.get_SelectColor
::UnityEngine::Color Oculus::Interaction::SelectorDebugVisual::get_SelectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::get_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.set_SelectColor
void Oculus::Interaction::SelectorDebugVisual::set_SelectColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::set_SelectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.Awake
void Oculus::Interaction::SelectorDebugVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SelectorDebugVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.Start
void Oculus::Interaction::SelectorDebugVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SelectorDebugVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.OnEnable
void Oculus::Interaction::SelectorDebugVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SelectorDebugVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.OnDisable
void Oculus::Interaction::SelectorDebugVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SelectorDebugVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.OnDestroy
void Oculus::Interaction::SelectorDebugVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.HandleSelected
void Oculus::Interaction::SelectorDebugVisual::HandleSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::HandleSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.HandleUnselected
void Oculus::Interaction::SelectorDebugVisual::HandleUnselected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::HandleUnselected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUnselected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.InjectAllSelectorDebugVisual
void Oculus::Interaction::SelectorDebugVisual::InjectAllSelectorDebugVisual(::Oculus::Interaction::ISelector* selector, ::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::InjectAllSelectorDebugVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllSelectorDebugVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector, renderer);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.InjectSelector
void Oculus::Interaction::SelectorDebugVisual::InjectSelector(::Oculus::Interaction::ISelector* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::InjectSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector);
}
// Autogenerated method: Oculus.Interaction.SelectorDebugVisual.InjectRenderer
void Oculus::Interaction::SelectorDebugVisual::InjectRenderer(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorDebugVisual::InjectRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.DotGridProperties
#include "Oculus/Interaction/DotGridProperties.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _materialPropertyBlockEditor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::DotGridProperties::dyn__materialPropertyBlockEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::dyn__materialPropertyBlockEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockEditor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _columns
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::DotGridProperties::dyn__columns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::dyn__columns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columns"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rows
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::DotGridProperties::dyn__rows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::dyn__rows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rows"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::DotGridProperties::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::DotGridProperties::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _change
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::DotGridProperties::dyn__change() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::dyn__change");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_change"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _colorShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::DotGridProperties::dyn__colorShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::dyn__colorShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _dimensionsShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::DotGridProperties::dyn__dimensionsShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::dyn__dimensionsShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dimensionsShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.get_Columns
int Oculus::Interaction::DotGridProperties::get_Columns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::get_Columns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Columns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.set_Columns
void Oculus::Interaction::DotGridProperties::set_Columns(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::set_Columns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Columns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.get_Rows
int Oculus::Interaction::DotGridProperties::get_Rows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::get_Rows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.set_Rows
void Oculus::Interaction::DotGridProperties::set_Rows(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::set_Rows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.get_Radius
float Oculus::Interaction::DotGridProperties::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::get_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.set_Radius
void Oculus::Interaction::DotGridProperties::set_Radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::set_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.get_Color
::UnityEngine::Color Oculus::Interaction::DotGridProperties::get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::get_Color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.set_Color
void Oculus::Interaction::DotGridProperties::set_Color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::set_Color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.Start
void Oculus::Interaction::DotGridProperties::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DotGridProperties*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.Update
void Oculus::Interaction::DotGridProperties::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DotGridProperties*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.OnValidate
void Oculus::Interaction::DotGridProperties::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::OnValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DotGridProperties*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.InjectAllDotGridProperties
void Oculus::Interaction::DotGridProperties::InjectAllDotGridProperties(::Oculus::Interaction::MaterialPropertyBlockEditor* editor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::InjectAllDotGridProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllDotGridProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editor);
}
// Autogenerated method: Oculus.Interaction.DotGridProperties.InjectMaterialPropertyBlockEditor
void Oculus::Interaction::DotGridProperties::InjectMaterialPropertyBlockEditor(::Oculus::Interaction::MaterialPropertyBlockEditor* editor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DotGridProperties::InjectMaterialPropertyBlockEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMaterialPropertyBlockEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Renderer> _renderers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*& Oculus::Interaction::MaterialPropertyBlockEditor::dyn__renderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::dyn__renderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.MaterialPropertyVector> _vectorProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyVector>*& Oculus::Interaction::MaterialPropertyBlockEditor::dyn__vectorProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::dyn__vectorProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vectorProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyVector>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.MaterialPropertyColor> _colorProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyColor>*& Oculus::Interaction::MaterialPropertyBlockEditor::dyn__colorProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::dyn__colorProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyColor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.MaterialPropertyFloat> _floatProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyFloat>*& Oculus::Interaction::MaterialPropertyBlockEditor::dyn__floatProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::dyn__floatProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floatProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyFloat>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _updateEveryFrame
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::MaterialPropertyBlockEditor::dyn__updateEveryFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::dyn__updateEveryFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateEveryFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& Oculus::Interaction::MaterialPropertyBlockEditor::dyn__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::dyn__materialPropertyBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlock"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.get_Renderers
::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* Oculus::Interaction::MaterialPropertyBlockEditor::get_Renderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::get_Renderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Renderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.set_Renderers
void Oculus::Interaction::MaterialPropertyBlockEditor::set_Renderers(::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::set_Renderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Renderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.get_VectorProperties
::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyVector>* Oculus::Interaction::MaterialPropertyBlockEditor::get_VectorProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::get_VectorProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VectorProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyVector>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.set_VectorProperties
void Oculus::Interaction::MaterialPropertyBlockEditor::set_VectorProperties(::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyVector>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::set_VectorProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VectorProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.get_ColorProperties
::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyColor>* Oculus::Interaction::MaterialPropertyBlockEditor::get_ColorProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::get_ColorProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ColorProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyColor>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.set_ColorProperties
void Oculus::Interaction::MaterialPropertyBlockEditor::set_ColorProperties(::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyColor>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::set_ColorProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ColorProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.get_FloatProperties
::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyFloat>* Oculus::Interaction::MaterialPropertyBlockEditor::get_FloatProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::get_FloatProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FloatProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyFloat>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.set_FloatProperties
void Oculus::Interaction::MaterialPropertyBlockEditor::set_FloatProperties(::System::Collections::Generic::List_1<::Oculus::Interaction::MaterialPropertyFloat>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::set_FloatProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FloatProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.get_MaterialPropertyBlock
::UnityEngine::MaterialPropertyBlock* Oculus::Interaction::MaterialPropertyBlockEditor::get_MaterialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::get_MaterialPropertyBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaterialPropertyBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MaterialPropertyBlock*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.Awake
void Oculus::Interaction::MaterialPropertyBlockEditor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::MaterialPropertyBlockEditor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.UpdateMaterialPropertyBlock
void Oculus::Interaction::MaterialPropertyBlockEditor::UpdateMaterialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::UpdateMaterialPropertyBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterialPropertyBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MaterialPropertyBlockEditor.Update
void Oculus::Interaction::MaterialPropertyBlockEditor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MaterialPropertyBlockEditor::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::MaterialPropertyBlockEditor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.RoundedBoxProperties
#include "Oculus/Interaction/RoundedBoxProperties.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _editor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::RoundedBoxProperties::dyn__editor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__editor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _width
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RoundedBoxProperties::dyn__width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _height
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RoundedBoxProperties::dyn__height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::RoundedBoxProperties::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _borderColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::RoundedBoxProperties::dyn__borderColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__borderColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_borderColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radiusTopLeft
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RoundedBoxProperties::dyn__radiusTopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__radiusTopLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radiusTopLeft"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radiusTopRight
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RoundedBoxProperties::dyn__radiusTopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__radiusTopRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radiusTopRight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radiusBottomLeft
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RoundedBoxProperties::dyn__radiusBottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__radiusBottomLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radiusBottomLeft"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radiusBottomRight
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RoundedBoxProperties::dyn__radiusBottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__radiusBottomRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radiusBottomRight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _borderInnerRadius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RoundedBoxProperties::dyn__borderInnerRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__borderInnerRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_borderInnerRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _borderOuterRadius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::RoundedBoxProperties::dyn__borderOuterRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__borderOuterRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_borderOuterRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _colorShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::RoundedBoxProperties::dyn__colorShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__colorShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _borderColorShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::RoundedBoxProperties::dyn__borderColorShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__borderColorShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_borderColorShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _radiiShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::RoundedBoxProperties::dyn__radiiShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__radiiShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radiiShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _dimensionsShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::RoundedBoxProperties::dyn__dimensionsShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::dyn__dimensionsShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dimensionsShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.get_Width
float Oculus::Interaction::RoundedBoxProperties::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::get_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.set_Width
void Oculus::Interaction::RoundedBoxProperties::set_Width(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::set_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.get_Height
float Oculus::Interaction::RoundedBoxProperties::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::get_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.set_Height
void Oculus::Interaction::RoundedBoxProperties::set_Height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::set_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.get_Color
::UnityEngine::Color Oculus::Interaction::RoundedBoxProperties::get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::get_Color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.set_Color
void Oculus::Interaction::RoundedBoxProperties::set_Color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::set_Color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.get_BorderColor
::UnityEngine::Color Oculus::Interaction::RoundedBoxProperties::get_BorderColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::get_BorderColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BorderColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.set_BorderColor
void Oculus::Interaction::RoundedBoxProperties::set_BorderColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::set_BorderColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BorderColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.get_RadiusTopLeft
float Oculus::Interaction::RoundedBoxProperties::get_RadiusTopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::get_RadiusTopLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RadiusTopLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.set_RadiusTopLeft
void Oculus::Interaction::RoundedBoxProperties::set_RadiusTopLeft(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::set_RadiusTopLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RadiusTopLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.get_RadiusTopRight
float Oculus::Interaction::RoundedBoxProperties::get_RadiusTopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::get_RadiusTopRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RadiusTopRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.set_RadiusTopRight
void Oculus::Interaction::RoundedBoxProperties::set_RadiusTopRight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::set_RadiusTopRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RadiusTopRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.get_RadiusBottomLeft
float Oculus::Interaction::RoundedBoxProperties::get_RadiusBottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::get_RadiusBottomLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RadiusBottomLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.set_RadiusBottomLeft
void Oculus::Interaction::RoundedBoxProperties::set_RadiusBottomLeft(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::set_RadiusBottomLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RadiusBottomLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.get_RadiusBottomRight
float Oculus::Interaction::RoundedBoxProperties::get_RadiusBottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::get_RadiusBottomRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RadiusBottomRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.set_RadiusBottomRight
void Oculus::Interaction::RoundedBoxProperties::set_RadiusBottomRight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::set_RadiusBottomRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RadiusBottomRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.get_BorderInnerRadius
float Oculus::Interaction::RoundedBoxProperties::get_BorderInnerRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::get_BorderInnerRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BorderInnerRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.set_BorderInnerRadius
void Oculus::Interaction::RoundedBoxProperties::set_BorderInnerRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::set_BorderInnerRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BorderInnerRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.get_BorderOuterRadius
float Oculus::Interaction::RoundedBoxProperties::get_BorderOuterRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::get_BorderOuterRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BorderOuterRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.set_BorderOuterRadius
void Oculus::Interaction::RoundedBoxProperties::set_BorderOuterRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::set_BorderOuterRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BorderOuterRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.Awake
void Oculus::Interaction::RoundedBoxProperties::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RoundedBoxProperties*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.Start
void Oculus::Interaction::RoundedBoxProperties::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RoundedBoxProperties*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.UpdateSize
void Oculus::Interaction::RoundedBoxProperties::UpdateSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::UpdateSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.UpdateMaterialPropertyBlock
void Oculus::Interaction::RoundedBoxProperties::UpdateMaterialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::UpdateMaterialPropertyBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterialPropertyBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.RoundedBoxProperties.OnValidate
void Oculus::Interaction::RoundedBoxProperties::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::RoundedBoxProperties::OnValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::RoundedBoxProperties*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IMovement.get_Pose
::UnityEngine::Pose Oculus::Interaction::IMovement::get_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IMovement::get_Pose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IMovement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IMovement.get_Stopped
bool Oculus::Interaction::IMovement::get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IMovement::get_Stopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IMovement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IMovement.MoveTo
void Oculus::Interaction::IMovement::MoveTo(::UnityEngine::Pose target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IMovement::MoveTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IMovement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.IMovement.UpdateTarget
void Oculus::Interaction::IMovement::UpdateTarget(::UnityEngine::Pose target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IMovement::UpdateTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IMovement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.IMovement.StopAndSetPose
void Oculus::Interaction::IMovement::StopAndSetPose(::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IMovement::StopAndSetPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IMovement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pose);
}
// Autogenerated method: Oculus.Interaction.IMovement.Tick
void Oculus::Interaction::IMovement::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IMovement::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IMovement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IMovementProvider
#include "Oculus/Interaction/IMovementProvider.hpp"
// Including type: Oculus.Interaction.IMovement
#include "Oculus/Interaction/IMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.IMovementProvider.CreateMovement
::Oculus::Interaction::IMovement* Oculus::Interaction::IMovementProvider::CreateMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IMovementProvider::CreateMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IMovementProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::IMovement*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.DebugGizmos
#include "Oculus/Interaction/DebugGizmos.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.PolylineRenderer
#include "Oculus/Interaction/PolylineRenderer.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected Oculus.Interaction.DebugGizmos _root
::Oculus::Interaction::DebugGizmos* Oculus::Interaction::DebugGizmos::_get__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_get__root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::DebugGizmos*>("Oculus.Interaction", "DebugGizmos", "_root"));
}
// Autogenerated static field setter
// Set static field: static protected Oculus.Interaction.DebugGizmos _root
void Oculus::Interaction::DebugGizmos::_set__root(::Oculus::Interaction::DebugGizmos* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_set__root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "DebugGizmos", "_root", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _renderSinglePass
bool Oculus::Interaction::DebugGizmos::_get__renderSinglePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_get__renderSinglePass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Interaction", "DebugGizmos", "_renderSinglePass"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _renderSinglePass
void Oculus::Interaction::DebugGizmos::_set__renderSinglePass(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_set__renderSinglePass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "DebugGizmos", "_renderSinglePass", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Color Color
::UnityEngine::Color Oculus::Interaction::DebugGizmos::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Oculus.Interaction", "DebugGizmos", "Color"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Color Color
void Oculus::Interaction::DebugGizmos::_set_Color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "DebugGizmos", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single LineWidth
float Oculus::Interaction::DebugGizmos::_get_LineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_get_LineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction", "DebugGizmos", "LineWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Single LineWidth
void Oculus::Interaction::DebugGizmos::_set_LineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_set_LineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "DebugGizmos", "LineWidth", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.IReadOnlyList`1<UnityEngine.Vector3> CUBE_POINTS
::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>* Oculus::Interaction::DebugGizmos::_get_CUBE_POINTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_get_CUBE_POINTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>*>("Oculus.Interaction", "DebugGizmos", "CUBE_POINTS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.IReadOnlyList`1<UnityEngine.Vector3> CUBE_POINTS
void Oculus::Interaction::DebugGizmos::_set_CUBE_POINTS(::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_set_CUBE_POINTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "DebugGizmos", "CUBE_POINTS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.IReadOnlyList`1<System.Int32> CUBE_SEGMENTS
::System::Collections::Generic::IReadOnlyList_1<int>* Oculus::Interaction::DebugGizmos::_get_CUBE_SEGMENTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_get_CUBE_SEGMENTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::IReadOnlyList_1<int>*>("Oculus.Interaction", "DebugGizmos", "CUBE_SEGMENTS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.IReadOnlyList`1<System.Int32> CUBE_SEGMENTS
void Oculus::Interaction::DebugGizmos::_set_CUBE_SEGMENTS(::System::Collections::Generic::IReadOnlyList_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::_set_CUBE_SEGMENTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "DebugGizmos", "CUBE_SEGMENTS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector4> _points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*& Oculus::Interaction::DebugGizmos::dyn__points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::dyn__points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector4>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Color> _colors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Color>*& Oculus::Interaction::DebugGizmos::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::DebugGizmos::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _addedSegmentSinceLastUpdate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::DebugGizmos::dyn__addedSegmentSinceLastUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::dyn__addedSegmentSinceLastUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addedSegmentSinceLastUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PolylineRenderer _polylineRenderer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PolylineRenderer*& Oculus::Interaction::DebugGizmos::dyn__polylineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::dyn__polylineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_polylineRenderer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PolylineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.get_Root
::Oculus::Interaction::DebugGizmos* Oculus::Interaction::DebugGizmos::get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::get_Root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "DebugGizmos", "get_Root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::DebugGizmos*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.OnEnable
void Oculus::Interaction::DebugGizmos::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugGizmos*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.get_Renderer
::Oculus::Interaction::PolylineRenderer* Oculus::Interaction::DebugGizmos::get_Renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::get_Renderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PolylineRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.OnDisable
void Oculus::Interaction::DebugGizmos::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugGizmos*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.ClearSegments
void Oculus::Interaction::DebugGizmos::ClearSegments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::ClearSegments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSegments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.RenderSegments
void Oculus::Interaction::DebugGizmos::RenderSegments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::RenderSegments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderSegments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.LateUpdate
void Oculus::Interaction::DebugGizmos::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::DebugGizmos*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.AddSegment
void Oculus::Interaction::DebugGizmos::AddSegment(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, float width, ::UnityEngine::Color color0, ::UnityEngine::Color color1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::AddSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(color0), ::il2cpp_utils::ExtractType(color1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p0, p1, width, color0, color1);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.get_RenderSinglePass
bool Oculus::Interaction::DebugGizmos::get_RenderSinglePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::get_RenderSinglePass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "DebugGizmos", "get_RenderSinglePass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.set_RenderSinglePass
void Oculus::Interaction::DebugGizmos::set_RenderSinglePass(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::set_RenderSinglePass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "DebugGizmos", "set_RenderSinglePass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.DrawPoint
void Oculus::Interaction::DebugGizmos::DrawPoint(::UnityEngine::Vector3 p0, ::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::DrawPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "DebugGizmos", "DrawPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, t);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.DrawLine
void Oculus::Interaction::DebugGizmos::DrawLine(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::DrawLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "DebugGizmos", "DrawLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, t);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.DrawWireCube
void Oculus::Interaction::DebugGizmos::DrawWireCube(::UnityEngine::Vector3 center, float size, ::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::DrawWireCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "DebugGizmos", "DrawWireCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, size, t);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.DrawAxis
void Oculus::Interaction::DebugGizmos::DrawAxis(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::DrawAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "DebugGizmos", "DrawAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, rotation, size);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.DrawAxis
void Oculus::Interaction::DebugGizmos::DrawAxis(::UnityEngine::Pose pose, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::DrawAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "DebugGizmos", "DrawAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pose, size);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos.DrawAxis
void Oculus::Interaction::DebugGizmos::DrawAxis(::UnityEngine::Transform* t, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::DrawAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "DebugGizmos", "DrawAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, size);
}
// Autogenerated method: Oculus.Interaction.DebugGizmos..cctor
void Oculus::Interaction::DebugGizmos::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::DebugGizmos::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "DebugGizmos", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PolylineRenderer
#include "Oculus/Interaction/PolylineRenderer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.ComputeBuffer
#include "UnityEngine/ComputeBuffer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4[] _positions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& Oculus::Interaction::PolylineRenderer::dyn__positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _positionsNeedUpdate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PolylineRenderer::dyn__positionsNeedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__positionsNeedUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionsNeedUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _colors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& Oculus::Interaction::PolylineRenderer::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _colorsNeedUpdate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PolylineRenderer::dyn__colorsNeedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__colorsNeedUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorsNeedUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds _bounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& Oculus::Interaction::PolylineRenderer::dyn__bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _baseMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Oculus::Interaction::PolylineRenderer::dyn__baseMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__baseMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::PolylineRenderer::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _renderSinglePass
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PolylineRenderer::dyn__renderSinglePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__renderSinglePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderSinglePass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ComputeBuffer _positionBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::ComputeBuffer*& Oculus::Interaction::PolylineRenderer::dyn__positionBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__positionBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::ComputeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ComputeBuffer _colorBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::ComputeBuffer*& Oculus::Interaction::PolylineRenderer::dyn__colorBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__colorBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::ComputeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ComputeBuffer _argsBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::ComputeBuffer*& Oculus::Interaction::PolylineRenderer::dyn__argsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__argsBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_argsBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::ComputeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _argsData
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Oculus::Interaction::PolylineRenderer::dyn__argsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__argsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_argsData"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _positionBufferShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PolylineRenderer::dyn__positionBufferShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__positionBufferShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionBufferShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _colorBufferShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PolylineRenderer::dyn__colorBufferShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__colorBufferShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorBufferShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _localToWorldShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PolylineRenderer::dyn__localToWorldShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__localToWorldShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localToWorldShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _scaleShaderID
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PolylineRenderer::dyn__scaleShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__scaleShaderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scaleShaderID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxLineCount
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PolylineRenderer::dyn__maxLineCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__maxLineCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxLineCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 _matrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Oculus::Interaction::PolylineRenderer::dyn__matrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__matrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lineScaleFactor
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PolylineRenderer::dyn__lineScaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::dyn__lineScaleFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineScaleFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.get_Copies
int Oculus::Interaction::PolylineRenderer::get_Copies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::get_Copies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Copies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.get_BufferSize
int Oculus::Interaction::PolylineRenderer::get_BufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::get_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.get_LineScaleFactor
float Oculus::Interaction::PolylineRenderer::get_LineScaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::get_LineScaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineScaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.set_LineScaleFactor
void Oculus::Interaction::PolylineRenderer::set_LineScaleFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::set_LineScaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LineScaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.Cleanup
void Oculus::Interaction::PolylineRenderer::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.SetLines
void Oculus::Interaction::PolylineRenderer::SetLines(::System::Collections::Generic::List_1<::UnityEngine::Vector4>* positions, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::SetLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, color);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.SetLines
void Oculus::Interaction::PolylineRenderer::SetLines(::System::Collections::Generic::List_1<::UnityEngine::Vector4>* positions, ::System::Collections::Generic::List_1<::UnityEngine::Color>* colors, int maxCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::SetLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(maxCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, colors, maxCount);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.SetPositions
void Oculus::Interaction::PolylineRenderer::SetPositions(int count, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::SetPositions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count, positions);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.SetColors
void Oculus::Interaction::PolylineRenderer::SetColors(int count, ::System::Collections::Generic::List_1<::UnityEngine::Color>* colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count, colors);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.SetColor
void Oculus::Interaction::PolylineRenderer::SetColor(int count, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count, color);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.SetDrawCount
void Oculus::Interaction::PolylineRenderer::SetDrawCount(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::SetDrawCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDrawCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.PrepareColorBuffer
void Oculus::Interaction::PolylineRenderer::PrepareColorBuffer(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::PrepareColorBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareColorBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.RenderLines
void Oculus::Interaction::PolylineRenderer::RenderLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::RenderLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PolylineRenderer.SetTransform
void Oculus::Interaction::PolylineRenderer::SetTransform(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PolylineRenderer::SetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.FingerFeatureStateProviderRef
#include "Oculus/Interaction/FingerFeatureStateProviderRef.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
// Including type: Oculus.Interaction.PoseDetection.FingerFeature
#include "Oculus/Interaction/PoseDetection/FingerFeature.hpp"
// Including type: Oculus.Interaction.PoseDetection.FeatureStateActiveMode
#include "Oculus/Interaction/PoseDetection/FeatureStateActiveMode.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _fingerFeatureStateProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::FingerFeatureStateProviderRef::dyn__fingerFeatureStateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::dyn__fingerFeatureStateProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerFeatureStateProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.IFingerFeatureStateProvider <FingerFeatureStateProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider*& Oculus::Interaction::FingerFeatureStateProviderRef::dyn_$FingerFeatureStateProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::dyn_$FingerFeatureStateProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FingerFeatureStateProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.FingerFeatureStateProviderRef.get_FingerFeatureStateProvider
::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider* Oculus::Interaction::FingerFeatureStateProviderRef::get_FingerFeatureStateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::get_FingerFeatureStateProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FingerFeatureStateProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerFeatureStateProviderRef.set_FingerFeatureStateProvider
void Oculus::Interaction::FingerFeatureStateProviderRef::set_FingerFeatureStateProvider(::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::set_FingerFeatureStateProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FingerFeatureStateProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.FingerFeatureStateProviderRef.Awake
void Oculus::Interaction::FingerFeatureStateProviderRef::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::FingerFeatureStateProviderRef*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerFeatureStateProviderRef.Start
void Oculus::Interaction::FingerFeatureStateProviderRef::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::FingerFeatureStateProviderRef*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerFeatureStateProviderRef.GetCurrentState
bool Oculus::Interaction::FingerFeatureStateProviderRef::GetCurrentState(::Oculus::Interaction::Input::HandFinger finger, ::Oculus::Interaction::PoseDetection::FingerFeature fingerFeature, ByRef<::StringW> currentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::GetCurrentState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::FingerFeatureStateProviderRef*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger, fingerFeature, byref(currentState));
}
// Autogenerated method: Oculus.Interaction.FingerFeatureStateProviderRef.IsStateActive
bool Oculus::Interaction::FingerFeatureStateProviderRef::IsStateActive(::Oculus::Interaction::Input::HandFinger finger, ::Oculus::Interaction::PoseDetection::FingerFeature feature, ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode mode, ::StringW stateId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::IsStateActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::FingerFeatureStateProviderRef*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, finger, feature, mode, stateId);
}
// Autogenerated method: Oculus.Interaction.FingerFeatureStateProviderRef.GetFeatureValue
::System::Nullable_1<float> Oculus::Interaction::FingerFeatureStateProviderRef::GetFeatureValue(::Oculus::Interaction::Input::HandFinger finger, ::Oculus::Interaction::PoseDetection::FingerFeature fingerFeature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::GetFeatureValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::FingerFeatureStateProviderRef*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<float>, false>(this, ___internal__method, finger, fingerFeature);
}
// Autogenerated method: Oculus.Interaction.FingerFeatureStateProviderRef.InjectAllFingerFeatureStateProviderRef
void Oculus::Interaction::FingerFeatureStateProviderRef::InjectAllFingerFeatureStateProviderRef(::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider* fingerFeatureStateProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::InjectAllFingerFeatureStateProviderRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllFingerFeatureStateProviderRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerFeatureStateProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fingerFeatureStateProvider);
}
// Autogenerated method: Oculus.Interaction.FingerFeatureStateProviderRef.InjectFingerFeatureStateProvider
void Oculus::Interaction::FingerFeatureStateProviderRef::InjectFingerFeatureStateProvider(::Oculus::Interaction::PoseDetection::IFingerFeatureStateProvider* fingerFeatureStateProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerFeatureStateProviderRef::InjectFingerFeatureStateProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectFingerFeatureStateProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fingerFeatureStateProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fingerFeatureStateProvider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.JointDeltaProviderRef
#include "Oculus/Interaction/JointDeltaProviderRef.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: Oculus.Interaction.PoseDetection.JointDeltaConfig
#include "Oculus/Interaction/PoseDetection/JointDeltaConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _jointDeltaProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::JointDeltaProviderRef::dyn__jointDeltaProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::dyn__jointDeltaProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointDeltaProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.IJointDeltaProvider <JointDeltaProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::IJointDeltaProvider*& Oculus::Interaction::JointDeltaProviderRef::dyn_$JointDeltaProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::dyn_$JointDeltaProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<JointDeltaProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::IJointDeltaProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.JointDeltaProviderRef.get_JointDeltaProvider
::Oculus::Interaction::PoseDetection::IJointDeltaProvider* Oculus::Interaction::JointDeltaProviderRef::get_JointDeltaProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::get_JointDeltaProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_JointDeltaProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PoseDetection::IJointDeltaProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.JointDeltaProviderRef.set_JointDeltaProvider
void Oculus::Interaction::JointDeltaProviderRef::set_JointDeltaProvider(::Oculus::Interaction::PoseDetection::IJointDeltaProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::set_JointDeltaProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_JointDeltaProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.JointDeltaProviderRef.Awake
void Oculus::Interaction::JointDeltaProviderRef::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::JointDeltaProviderRef*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.JointDeltaProviderRef.Start
void Oculus::Interaction::JointDeltaProviderRef::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::JointDeltaProviderRef*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.JointDeltaProviderRef.GetPositionDelta
bool Oculus::Interaction::JointDeltaProviderRef::GetPositionDelta(::Oculus::Interaction::Input::HandJointId joint, ByRef<::UnityEngine::Vector3> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::GetPositionDelta");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::JointDeltaProviderRef*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, joint, byref(delta));
}
// Autogenerated method: Oculus.Interaction.JointDeltaProviderRef.GetRotationDelta
bool Oculus::Interaction::JointDeltaProviderRef::GetRotationDelta(::Oculus::Interaction::Input::HandJointId joint, ByRef<::UnityEngine::Quaternion> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::GetRotationDelta");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::JointDeltaProviderRef*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, joint, byref(delta));
}
// Autogenerated method: Oculus.Interaction.JointDeltaProviderRef.RegisterConfig
void Oculus::Interaction::JointDeltaProviderRef::RegisterConfig(::Oculus::Interaction::PoseDetection::JointDeltaConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::RegisterConfig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::JointDeltaProviderRef*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, config);
}
// Autogenerated method: Oculus.Interaction.JointDeltaProviderRef.UnRegisterConfig
void Oculus::Interaction::JointDeltaProviderRef::UnRegisterConfig(::Oculus::Interaction::PoseDetection::JointDeltaConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::UnRegisterConfig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::JointDeltaProviderRef*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, config);
}
// Autogenerated method: Oculus.Interaction.JointDeltaProviderRef.InjectAllJointDeltaProviderRef
void Oculus::Interaction::JointDeltaProviderRef::InjectAllJointDeltaProviderRef(::Oculus::Interaction::PoseDetection::IJointDeltaProvider* jointDeltaProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::InjectAllJointDeltaProviderRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllJointDeltaProviderRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointDeltaProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointDeltaProvider);
}
// Autogenerated method: Oculus.Interaction.JointDeltaProviderRef.InjectJointDeltaProvider
void Oculus::Interaction::JointDeltaProviderRef::InjectJointDeltaProvider(::Oculus::Interaction::PoseDetection::IJointDeltaProvider* jointDeltaProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::JointDeltaProviderRef::InjectJointDeltaProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectJointDeltaProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jointDeltaProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jointDeltaProvider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.TransformFeatureStateProviderRef
#include "Oculus/Interaction/TransformFeatureStateProviderRef.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformConfig
#include "Oculus/Interaction/PoseDetection/TransformConfig.hpp"
// Including type: Oculus.Interaction.PoseDetection.TransformFeature
#include "Oculus/Interaction/PoseDetection/TransformFeature.hpp"
// Including type: Oculus.Interaction.PoseDetection.FeatureStateActiveMode
#include "Oculus/Interaction/PoseDetection/FeatureStateActiveMode.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _transformFeatureStateProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::TransformFeatureStateProviderRef::dyn__transformFeatureStateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::dyn__transformFeatureStateProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformFeatureStateProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PoseDetection.ITransformFeatureStateProvider <TransformFeatureStateProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider*& Oculus::Interaction::TransformFeatureStateProviderRef::dyn_$TransformFeatureStateProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::dyn_$TransformFeatureStateProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TransformFeatureStateProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.get_TransformFeatureStateProvider
::Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider* Oculus::Interaction::TransformFeatureStateProviderRef::get_TransformFeatureStateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::get_TransformFeatureStateProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransformFeatureStateProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.set_TransformFeatureStateProvider
void Oculus::Interaction::TransformFeatureStateProviderRef::set_TransformFeatureStateProvider(::Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::set_TransformFeatureStateProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TransformFeatureStateProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.Awake
void Oculus::Interaction::TransformFeatureStateProviderRef::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TransformFeatureStateProviderRef*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.Start
void Oculus::Interaction::TransformFeatureStateProviderRef::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TransformFeatureStateProviderRef*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.IsStateActive
bool Oculus::Interaction::TransformFeatureStateProviderRef::IsStateActive(::Oculus::Interaction::PoseDetection::TransformConfig* config, ::Oculus::Interaction::PoseDetection::TransformFeature feature, ::Oculus::Interaction::PoseDetection::FeatureStateActiveMode mode, ::StringW stateId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::IsStateActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TransformFeatureStateProviderRef*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, config, feature, mode, stateId);
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.GetCurrentState
bool Oculus::Interaction::TransformFeatureStateProviderRef::GetCurrentState(::Oculus::Interaction::PoseDetection::TransformConfig* config, ::Oculus::Interaction::PoseDetection::TransformFeature transformFeature, ByRef<::StringW> currentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::GetCurrentState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TransformFeatureStateProviderRef*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, config, transformFeature, byref(currentState));
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.RegisterConfig
void Oculus::Interaction::TransformFeatureStateProviderRef::RegisterConfig(::Oculus::Interaction::PoseDetection::TransformConfig* transformConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::RegisterConfig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TransformFeatureStateProviderRef*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformConfig);
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.UnRegisterConfig
void Oculus::Interaction::TransformFeatureStateProviderRef::UnRegisterConfig(::Oculus::Interaction::PoseDetection::TransformConfig* transformConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::UnRegisterConfig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TransformFeatureStateProviderRef*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformConfig);
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.GetFeatureVectorAndWristPos
void Oculus::Interaction::TransformFeatureStateProviderRef::GetFeatureVectorAndWristPos(::Oculus::Interaction::PoseDetection::TransformConfig* config, ::Oculus::Interaction::PoseDetection::TransformFeature transformFeature, bool isHandVector, ByRef<::System::Nullable_1<::UnityEngine::Vector3>> featureVec, ByRef<::System::Nullable_1<::UnityEngine::Vector3>> wristPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::GetFeatureVectorAndWristPos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::TransformFeatureStateProviderRef*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, config, transformFeature, isHandVector, byref(featureVec), byref(wristPos));
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.InjectAllTransformFeatureStateProviderRef
void Oculus::Interaction::TransformFeatureStateProviderRef::InjectAllTransformFeatureStateProviderRef(::Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider* transformFeatureStateProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::InjectAllTransformFeatureStateProviderRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTransformFeatureStateProviderRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformFeatureStateProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformFeatureStateProvider);
}
// Autogenerated method: Oculus.Interaction.TransformFeatureStateProviderRef.InjectTransformFeatureStateProvider
void Oculus::Interaction::TransformFeatureStateProviderRef::InjectTransformFeatureStateProvider(::Oculus::Interaction::PoseDetection::ITransformFeatureStateProvider* transformFeatureStateProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::TransformFeatureStateProviderRef::InjectTransformFeatureStateProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTransformFeatureStateProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformFeatureStateProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transformFeatureStateProvider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ControllerOffset
#include "Oculus/Interaction/ControllerOffset.hpp"
// Including type: Oculus.Interaction.Input.IController
#include "Oculus/Interaction/Input/IController.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _controller
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ControllerOffset::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IController <Controller>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IController*& Oculus::Interaction::ControllerOffset::dyn_$Controller$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::dyn_$Controller$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Controller>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::ControllerOffset::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::ControllerOffset::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ControllerOffset::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.get_Controller
::Oculus::Interaction::Input::IController* Oculus::Interaction::ControllerOffset::get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::get_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IController*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.set_Controller
void Oculus::Interaction::ControllerOffset::set_Controller(::Oculus::Interaction::Input::IController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::set_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.Awake
void Oculus::Interaction::ControllerOffset::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerOffset*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.Start
void Oculus::Interaction::ControllerOffset::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerOffset*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.OnEnable
void Oculus::Interaction::ControllerOffset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerOffset*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.OnDisable
void Oculus::Interaction::ControllerOffset::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerOffset*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.HandleUpdated
void Oculus::Interaction::ControllerOffset::HandleUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::HandleUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.GetOffset
void Oculus::Interaction::ControllerOffset::GetOffset(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::GetOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.GetWorldPose
void Oculus::Interaction::ControllerOffset::GetWorldPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::GetWorldPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.InjectController
void Oculus::Interaction::ControllerOffset::InjectController(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::InjectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.InjectOffset
void Oculus::Interaction::ControllerOffset::InjectOffset(::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::InjectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.InjectRotation
void Oculus::Interaction::ControllerOffset::InjectRotation(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::InjectRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: Oculus.Interaction.ControllerOffset.InjectAllControllerOffset
void Oculus::Interaction::ControllerOffset::InjectAllControllerOffset(::Oculus::Interaction::Input::IController* controller, ::UnityEngine::Vector3 offset, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerOffset::InjectAllControllerOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllControllerOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller, offset, rotation);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ControllerPointerPose
#include "Oculus/Interaction/ControllerPointerPose.hpp"
// Including type: Oculus.Interaction.Input.IController
#include "Oculus/Interaction/Input/IController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _controller
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ControllerPointerPose::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IController <Controller>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IController*& Oculus::Interaction::ControllerPointerPose::dyn_$Controller$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::dyn_$Controller$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Controller>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::ControllerPointerPose::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ControllerPointerPose::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Active>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ControllerPointerPose::dyn_$Active$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::dyn_$Active$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Active>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.get_Controller
::Oculus::Interaction::Input::IController* Oculus::Interaction::ControllerPointerPose::get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::get_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IController*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.set_Controller
void Oculus::Interaction::ControllerPointerPose::set_Controller(::Oculus::Interaction::Input::IController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::set_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.get_Active
bool Oculus::Interaction::ControllerPointerPose::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerPointerPose*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.set_Active
void Oculus::Interaction::ControllerPointerPose::set_Active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::set_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.Awake
void Oculus::Interaction::ControllerPointerPose::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerPointerPose*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.Start
void Oculus::Interaction::ControllerPointerPose::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerPointerPose*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.OnEnable
void Oculus::Interaction::ControllerPointerPose::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerPointerPose*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.OnDisable
void Oculus::Interaction::ControllerPointerPose::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerPointerPose*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.HandleUpdated
void Oculus::Interaction::ControllerPointerPose::HandleUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::HandleUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.InjectController
void Oculus::Interaction::ControllerPointerPose::InjectController(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::InjectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.InjectOffset
void Oculus::Interaction::ControllerPointerPose::InjectOffset(::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::InjectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: Oculus.Interaction.ControllerPointerPose.InjectAllHandPointerPose
void Oculus::Interaction::ControllerPointerPose::InjectAllHandPointerPose(::Oculus::Interaction::Input::IController* controller, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerPointerPose::InjectAllHandPointerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandPointerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller, offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ControllerSelector
#include "Oculus/Interaction/ControllerSelector.hpp"
// Including type: Oculus.Interaction.Input.IController
#include "Oculus/Interaction/Input/IController.hpp"
// Including type: Oculus.Interaction.ControllerSelector/<>c
#include "Oculus/Interaction/ControllerSelector_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _controller
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ControllerSelector::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ControllerButtonUsage _controllerButtonUsage
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ControllerButtonUsage& Oculus::Interaction::ControllerSelector::dyn__controllerButtonUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::dyn__controllerButtonUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerButtonUsage"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ControllerButtonUsage*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ControllerSelector/ControllerSelectorLogicOperator _requireButtonUsages
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator& Oculus::Interaction::ControllerSelector::dyn__requireButtonUsages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::dyn__requireButtonUsages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requireButtonUsages"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IController <Controller>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IController*& Oculus::Interaction::ControllerSelector::dyn_$Controller$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::dyn_$Controller$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Controller>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenSelected
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::ControllerSelector::dyn_WhenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::dyn_WhenSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSelected"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenUnselected
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::ControllerSelector::dyn_WhenUnselected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::dyn_WhenUnselected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenUnselected"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selected
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ControllerSelector::dyn__selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::dyn__selected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.get_ControllerButtonUsage
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::ControllerSelector::get_ControllerButtonUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::get_ControllerButtonUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ControllerButtonUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ControllerButtonUsage, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.set_ControllerButtonUsage
void Oculus::Interaction::ControllerSelector::set_ControllerButtonUsage(::Oculus::Interaction::Input::ControllerButtonUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::set_ControllerButtonUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ControllerButtonUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.get_RequireButtonUsages
::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator Oculus::Interaction::ControllerSelector::get_RequireButtonUsages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::get_RequireButtonUsages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequireButtonUsages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.set_RequireButtonUsages
void Oculus::Interaction::ControllerSelector::set_RequireButtonUsages(::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::set_RequireButtonUsages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequireButtonUsages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.get_Controller
::Oculus::Interaction::Input::IController* Oculus::Interaction::ControllerSelector::get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::get_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IController*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.set_Controller
void Oculus::Interaction::ControllerSelector::set_Controller(::Oculus::Interaction::Input::IController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::set_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.add_WhenSelected
void Oculus::Interaction::ControllerSelector::add_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::add_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerSelector*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.remove_WhenSelected
void Oculus::Interaction::ControllerSelector::remove_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::remove_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerSelector*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.add_WhenUnselected
void Oculus::Interaction::ControllerSelector::add_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::add_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerSelector*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.remove_WhenUnselected
void Oculus::Interaction::ControllerSelector::remove_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::remove_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerSelector*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.Awake
void Oculus::Interaction::ControllerSelector::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerSelector*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.Start
void Oculus::Interaction::ControllerSelector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerSelector*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.Update
void Oculus::Interaction::ControllerSelector::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ControllerSelector*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.InjectAllControllerSelector
void Oculus::Interaction::ControllerSelector::InjectAllControllerSelector(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::InjectAllControllerSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllControllerSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector.InjectController
void Oculus::Interaction::ControllerSelector::InjectController(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::InjectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ControllerSelector/ControllerSelectorLogicOperator
#include "Oculus/Interaction/ControllerSelector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.ControllerSelector/ControllerSelectorLogicOperator Any
::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator>("Oculus.Interaction", "ControllerSelector/ControllerSelectorLogicOperator", "Any"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.ControllerSelector/ControllerSelectorLogicOperator Any
void Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator::_set_Any(::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "ControllerSelector/ControllerSelectorLogicOperator", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.ControllerSelector/ControllerSelectorLogicOperator All
::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator>("Oculus.Interaction", "ControllerSelector/ControllerSelectorLogicOperator", "All"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.ControllerSelector/ControllerSelectorLogicOperator All
void Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator::_set_All(::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "ControllerSelector/ControllerSelectorLogicOperator", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::ControllerSelectorLogicOperator::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ControllerSelector/<>c
#include "Oculus/Interaction/ControllerSelector_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.ControllerSelector/<>c <>9
::Oculus::Interaction::ControllerSelector::$$c* Oculus::Interaction::ControllerSelector::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::ControllerSelector::$$c*>("Oculus.Interaction", "ControllerSelector/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.ControllerSelector/<>c <>9
void Oculus::Interaction::ControllerSelector::$$c::_set_$$9(::Oculus::Interaction::ControllerSelector::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ControllerSelector/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__26_0
::System::Action* Oculus::Interaction::ControllerSelector::$$c::_get_$$9__26_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::$$c::_get_$$9__26_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "ControllerSelector/<>c", "<>9__26_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__26_0
void Oculus::Interaction::ControllerSelector::$$c::_set_$$9__26_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::$$c::_set_$$9__26_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ControllerSelector/<>c", "<>9__26_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__26_1
::System::Action* Oculus::Interaction::ControllerSelector::$$c::_get_$$9__26_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::$$c::_get_$$9__26_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "ControllerSelector/<>c", "<>9__26_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__26_1
void Oculus::Interaction::ControllerSelector::$$c::_set_$$9__26_1(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::$$c::_set_$$9__26_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ControllerSelector/<>c", "<>9__26_1", value)));
}
// Autogenerated method: Oculus.Interaction.ControllerSelector/<>c..cctor
void Oculus::Interaction::ControllerSelector::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "ControllerSelector/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector/<>c.<.ctor>b__26_0
void Oculus::Interaction::ControllerSelector::$$c::$_ctor$b__26_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::$$c::<.ctor>b__26_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__26_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ControllerSelector/<>c.<.ctor>b__26_1
void Oculus::Interaction::ControllerSelector::$$c::$_ctor$b__26_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ControllerSelector::$$c::<.ctor>b__26_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__26_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.CenterEyeOffset
#include "Oculus/Interaction/CenterEyeOffset.hpp"
// Including type: Oculus.Interaction.Input.IHmd
#include "Oculus/Interaction/Input/IHmd.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hmd
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::CenterEyeOffset::dyn__hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::dyn__hmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmd"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHmd <Hmd>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHmd*& Oculus::Interaction::CenterEyeOffset::dyn_$Hmd$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::dyn_$Hmd$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hmd>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHmd**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::CenterEyeOffset::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::CenterEyeOffset::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _cachedPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::CenterEyeOffset::dyn__cachedPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::dyn__cachedPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::CenterEyeOffset::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.get_Hmd
::Oculus::Interaction::Input::IHmd* Oculus::Interaction::CenterEyeOffset::get_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::get_Hmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHmd*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.set_Hmd
void Oculus::Interaction::CenterEyeOffset::set_Hmd(::Oculus::Interaction::Input::IHmd* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::set_Hmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.Awake
void Oculus::Interaction::CenterEyeOffset::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::CenterEyeOffset*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.Start
void Oculus::Interaction::CenterEyeOffset::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::CenterEyeOffset*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.OnEnable
void Oculus::Interaction::CenterEyeOffset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::CenterEyeOffset*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.OnDisable
void Oculus::Interaction::CenterEyeOffset::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::CenterEyeOffset*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.HandleUpdated
void Oculus::Interaction::CenterEyeOffset::HandleUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::HandleUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.GetOffset
void Oculus::Interaction::CenterEyeOffset::GetOffset(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::GetOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.GetWorldPose
void Oculus::Interaction::CenterEyeOffset::GetWorldPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::GetWorldPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.InjectOffset
void Oculus::Interaction::CenterEyeOffset::InjectOffset(::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::InjectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.InjectRotation
void Oculus::Interaction::CenterEyeOffset::InjectRotation(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::InjectRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.InjectAllCenterEyeOffset
void Oculus::Interaction::CenterEyeOffset::InjectAllCenterEyeOffset(::Oculus::Interaction::Input::IHmd* hmd, ::UnityEngine::Vector3 offset, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::InjectAllCenterEyeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllCenterEyeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hmd), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hmd, offset, rotation);
}
// Autogenerated method: Oculus.Interaction.CenterEyeOffset.InjectHmd
void Oculus::Interaction::CenterEyeOffset::InjectHmd(::Oculus::Interaction::Input::IHmd* hmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CenterEyeOffset::InjectHmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hmd);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ConicalFrustum
#include "Oculus/Interaction/ConicalFrustum.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _minLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ConicalFrustum::dyn__minLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::dyn__minLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ConicalFrustum::dyn__maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::dyn__maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radiusStart
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ConicalFrustum::dyn__radiusStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::dyn__radiusStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radiusStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _apertureDegrees
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ConicalFrustum::dyn__apertureDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::dyn__apertureDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_apertureDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.get_Pose
::UnityEngine::Pose Oculus::Interaction::ConicalFrustum::get_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::get_Pose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.get_MinLength
float Oculus::Interaction::ConicalFrustum::get_MinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::get_MinLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.set_MinLength
void Oculus::Interaction::ConicalFrustum::set_MinLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::set_MinLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.get_MaxLength
float Oculus::Interaction::ConicalFrustum::get_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::get_MaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.set_MaxLength
void Oculus::Interaction::ConicalFrustum::set_MaxLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::set_MaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.get_RadiusStart
float Oculus::Interaction::ConicalFrustum::get_RadiusStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::get_RadiusStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RadiusStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.set_RadiusStart
void Oculus::Interaction::ConicalFrustum::set_RadiusStart(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::set_RadiusStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RadiusStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.get_ApertureDegrees
float Oculus::Interaction::ConicalFrustum::get_ApertureDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::get_ApertureDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApertureDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.set_ApertureDegrees
void Oculus::Interaction::ConicalFrustum::set_ApertureDegrees(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::set_ApertureDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApertureDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.get_StartPoint
::UnityEngine::Vector3 Oculus::Interaction::ConicalFrustum::get_StartPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::get_StartPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.get_EndPoint
::UnityEngine::Vector3 Oculus::Interaction::ConicalFrustum::get_EndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::get_EndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.get_Direction
::UnityEngine::Vector3 Oculus::Interaction::ConicalFrustum::get_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::get_Direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.IsPointInConeFrustum
bool Oculus::Interaction::ConicalFrustum::IsPointInConeFrustum(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::IsPointInConeFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointInConeFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.ConeFrustumRadiusAtLength
float Oculus::Interaction::ConicalFrustum::ConeFrustumRadiusAtLength(float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::ConeFrustumRadiusAtLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConeFrustumRadiusAtLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, length);
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.HitsCollider
bool Oculus::Interaction::ConicalFrustum::HitsCollider(::UnityEngine::Collider* collider, ByRef<float> score, ByRef<::UnityEngine::Vector3> point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::HitsCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HitsCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collider, byref(score), byref(point));
}
// Autogenerated method: Oculus.Interaction.ConicalFrustum.NearestColliderHit
::UnityEngine::Vector3 Oculus::Interaction::ConicalFrustum::NearestColliderHit(::UnityEngine::Collider* collider, ByRef<float> score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConicalFrustum::NearestColliderHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NearestColliderHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, collider, byref(score));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.FingerPinchValue
#include "Oculus/Interaction/FingerPinchValue.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::FingerPinchValue::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::FingerPinchValue::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandFinger _finger
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFinger& Oculus::Interaction::FingerPinchValue::dyn__finger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::dyn__finger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finger"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandFinger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _changeRate
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::FingerPinchValue::dyn__changeRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::dyn__changeRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _curve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::FingerPinchValue::dyn__curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::dyn__curve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _value
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::FingerPinchValue::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::FingerPinchValue::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstCall
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::FingerPinchValue::dyn__firstCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::dyn__firstCall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstCall"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::FingerPinchValue::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.set_Hand
void Oculus::Interaction::FingerPinchValue::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.get_Finger
::Oculus::Interaction::Input::HandFinger Oculus::Interaction::FingerPinchValue::get_Finger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::get_Finger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Finger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandFinger, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.set_Finger
void Oculus::Interaction::FingerPinchValue::set_Finger(::Oculus::Interaction::Input::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::set_Finger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Finger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.get_ChangeRate
float Oculus::Interaction::FingerPinchValue::get_ChangeRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::get_ChangeRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChangeRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.set_ChangeRate
void Oculus::Interaction::FingerPinchValue::set_ChangeRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::set_ChangeRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChangeRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.get_Curve
::UnityEngine::AnimationCurve* Oculus::Interaction::FingerPinchValue::get_Curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::get_Curve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Curve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.set_Curve
void Oculus::Interaction::FingerPinchValue::set_Curve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::set_Curve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Curve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.Awake
void Oculus::Interaction::FingerPinchValue::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::FingerPinchValue*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.Start
void Oculus::Interaction::FingerPinchValue::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::FingerPinchValue*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.OnEnable
void Oculus::Interaction::FingerPinchValue::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::FingerPinchValue*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.OnDisable
void Oculus::Interaction::FingerPinchValue::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::FingerPinchValue*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.Value
float Oculus::Interaction::FingerPinchValue::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::FingerPinchValue*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.HandleHandUpdated
void Oculus::Interaction::FingerPinchValue::HandleHandUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::HandleHandUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.InjectAllFingerPinchValue
void Oculus::Interaction::FingerPinchValue::InjectAllFingerPinchValue(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::InjectAllFingerPinchValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllFingerPinchValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.FingerPinchValue.InjectHand
void Oculus::Interaction::FingerPinchValue::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::FingerPinchValue::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandJoint
#include "Oculus/Interaction/HandJoint.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandJoint::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandJoint::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandJointId _handJointId
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandJointId& Oculus::Interaction::HandJoint::dyn__handJointId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::dyn__handJointId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handJointId"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandJointId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::HandJoint::dyn__localPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::dyn__localPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::HandJoint::dyn__rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::dyn__rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandJoint::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandJoint.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandJoint::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJoint.set_Hand
void Oculus::Interaction::HandJoint::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandJoint.get_HandJointId
::Oculus::Interaction::Input::HandJointId Oculus::Interaction::HandJoint::get_HandJointId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::get_HandJointId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandJointId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandJointId, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJoint.set_HandJointId
void Oculus::Interaction::HandJoint::set_HandJointId(::Oculus::Interaction::Input::HandJointId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::set_HandJointId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandJointId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandJoint.get_LocalPositionOffset
::UnityEngine::Vector3 Oculus::Interaction::HandJoint::get_LocalPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::get_LocalPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJoint.set_LocalPositionOffset
void Oculus::Interaction::HandJoint::set_LocalPositionOffset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::set_LocalPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocalPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandJoint.get_RotationOffset
::UnityEngine::Quaternion Oculus::Interaction::HandJoint::get_RotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::get_RotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJoint.set_RotationOffset
void Oculus::Interaction::HandJoint::set_RotationOffset(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::set_RotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandJoint.Awake
void Oculus::Interaction::HandJoint::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandJoint*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJoint.Start
void Oculus::Interaction::HandJoint::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandJoint*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJoint.OnEnable
void Oculus::Interaction::HandJoint::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandJoint*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJoint.OnDisable
void Oculus::Interaction::HandJoint::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandJoint*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJoint.HandleHandUpdated
void Oculus::Interaction::HandJoint::HandleHandUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::HandleHandUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJoint.InjectAllHandJoint
void Oculus::Interaction::HandJoint::InjectAllHandJoint(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::InjectAllHandJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandJoint.InjectHand
void Oculus::Interaction::HandJoint::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJoint::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandJointsPose
#include "Oculus/Interaction/HandJointsPose.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandJointsPose::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandJointsPose::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.HandJointsPose/WeightedJoint> _weightedJoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandJointsPose::WeightedJoint>*& Oculus::Interaction::HandJointsPose::dyn__weightedJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::dyn__weightedJoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_weightedJoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandJointsPose::WeightedJoint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::HandJointsPose::dyn__localPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::dyn__localPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::HandJointsPose::dyn__rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::dyn__rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandJointsPose::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandJointsPose::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.set_Hand
void Oculus::Interaction::HandJointsPose::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.get_WeightedJoints
::System::Collections::Generic::List_1<::Oculus::Interaction::HandJointsPose::WeightedJoint>* Oculus::Interaction::HandJointsPose::get_WeightedJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::get_WeightedJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WeightedJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Oculus::Interaction::HandJointsPose::WeightedJoint>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.set_WeightedJoints
void Oculus::Interaction::HandJointsPose::set_WeightedJoints(::System::Collections::Generic::List_1<::Oculus::Interaction::HandJointsPose::WeightedJoint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::set_WeightedJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WeightedJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.get_LocalPositionOffset
::UnityEngine::Vector3 Oculus::Interaction::HandJointsPose::get_LocalPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::get_LocalPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.set_LocalPositionOffset
void Oculus::Interaction::HandJointsPose::set_LocalPositionOffset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::set_LocalPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocalPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.get_RotationOffset
::UnityEngine::Quaternion Oculus::Interaction::HandJointsPose::get_RotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::get_RotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.set_RotationOffset
void Oculus::Interaction::HandJointsPose::set_RotationOffset(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::set_RotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.Awake
void Oculus::Interaction::HandJointsPose::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandJointsPose*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.Start
void Oculus::Interaction::HandJointsPose::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandJointsPose*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.OnEnable
void Oculus::Interaction::HandJointsPose::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandJointsPose*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.OnDisable
void Oculus::Interaction::HandJointsPose::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandJointsPose*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.HandleHandUpdated
void Oculus::Interaction::HandJointsPose::HandleHandUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::HandleHandUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.InjectAllHandJoint
void Oculus::Interaction::HandJointsPose::InjectAllHandJoint(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::InjectAllHandJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandJointsPose.InjectHand
void Oculus::Interaction::HandJointsPose::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandJointsPose::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandPinchOffset
#include "Oculus/Interaction/HandPinchOffset.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.GrabAPI.HandGrabAPI
#include "Oculus/Interaction/GrabAPI/HandGrabAPI.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandPinchOffset::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandPinchOffset::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.GrabAPI.HandGrabAPI _handGrabApi
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::GrabAPI::HandGrabAPI*& Oculus::Interaction::HandPinchOffset::dyn__handGrabApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::dyn__handGrabApi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabApi"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::GrabAPI::HandGrabAPI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider _collider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& Oculus::Interaction::HandPinchOffset::dyn__collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::dyn__collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandPinchOffset::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandPinchOffset::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.set_Hand
void Oculus::Interaction::HandPinchOffset::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.Awake
void Oculus::Interaction::HandPinchOffset::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPinchOffset*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.Start
void Oculus::Interaction::HandPinchOffset::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPinchOffset*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.OnEnable
void Oculus::Interaction::HandPinchOffset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPinchOffset*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.OnDisable
void Oculus::Interaction::HandPinchOffset::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPinchOffset*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.HandleHandUpdated
void Oculus::Interaction::HandPinchOffset::HandleHandUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::HandleHandUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.InjectAllHandPinchOffset
void Oculus::Interaction::HandPinchOffset::InjectAllHandPinchOffset(::Oculus::Interaction::Input::IHand* hand, ::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::InjectAllHandPinchOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandPinchOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(handGrabApi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, handGrabApi);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.InjectHand
void Oculus::Interaction::HandPinchOffset::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.InjectHandGrabAPI
void Oculus::Interaction::HandPinchOffset::InjectHandGrabAPI(::Oculus::Interaction::GrabAPI::HandGrabAPI* handGrabApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::InjectHandGrabAPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandGrabAPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabApi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabApi);
}
// Autogenerated method: Oculus.Interaction.HandPinchOffset.InjectOptionalCollider
void Oculus::Interaction::HandPinchOffset::InjectOptionalCollider(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPinchOffset::InjectOptionalCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandPointerPose
#include "Oculus/Interaction/HandPointerPose.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandPointerPose::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandPointerPose::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::HandPointerPose::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandPointerPose::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandPointerPose::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.set_Hand
void Oculus::Interaction::HandPointerPose::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.get_Active
bool Oculus::Interaction::HandPointerPose::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPointerPose*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.Awake
void Oculus::Interaction::HandPointerPose::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPointerPose*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.Start
void Oculus::Interaction::HandPointerPose::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPointerPose*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.OnEnable
void Oculus::Interaction::HandPointerPose::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPointerPose*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.OnDisable
void Oculus::Interaction::HandPointerPose::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandPointerPose*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.HandleHandUpdated
void Oculus::Interaction::HandPointerPose::HandleHandUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::HandleHandUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.InjectAllHandPointerPose
void Oculus::Interaction::HandPointerPose::InjectAllHandPointerPose(::Oculus::Interaction::Input::IHand* hand, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::InjectAllHandPointerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandPointerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, offset);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.InjectHand
void Oculus::Interaction::HandPointerPose::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandPointerPose.InjectOffset
void Oculus::Interaction::HandPointerPose::InjectOffset(::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandPointerPose::InjectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandTransformScaler
#include "Oculus/Interaction/HandTransformScaler.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandTransformScaler::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandTransformScaler::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandTransformScaler::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _originalScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::HandTransformScaler::dyn__originalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::dyn__originalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandTransformScaler.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandTransformScaler::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandTransformScaler.set_Hand
void Oculus::Interaction::HandTransformScaler::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandTransformScaler.Awake
void Oculus::Interaction::HandTransformScaler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandTransformScaler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandTransformScaler.Start
void Oculus::Interaction::HandTransformScaler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandTransformScaler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandTransformScaler.OnEnable
void Oculus::Interaction::HandTransformScaler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandTransformScaler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandTransformScaler.OnDisable
void Oculus::Interaction::HandTransformScaler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandTransformScaler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandTransformScaler.HandleHandUpdated
void Oculus::Interaction::HandTransformScaler::HandleHandUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandTransformScaler::HandleHandUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandWristOffset
#include "Oculus/Interaction/HandWristOffset.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Quaternion LEFT_MIRROR_ROTATION
::UnityEngine::Quaternion Oculus::Interaction::HandWristOffset::_get_LEFT_MIRROR_ROTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::_get_LEFT_MIRROR_ROTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("Oculus.Interaction", "HandWristOffset", "LEFT_MIRROR_ROTATION"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Quaternion LEFT_MIRROR_ROTATION
void Oculus::Interaction::HandWristOffset::_set_LEFT_MIRROR_ROTATION(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::_set_LEFT_MIRROR_ROTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "HandWristOffset", "LEFT_MIRROR_ROTATION", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::HandWristOffset::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::HandWristOffset::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::HandWristOffset::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::HandWristOffset::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mirrorLeftRotation
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandWristOffset::dyn__mirrorLeftRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::dyn__mirrorLeftRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorLeftRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _cachedPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::HandWristOffset::dyn__cachedPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::dyn__cachedPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandWristOffset::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::HandWristOffset::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.set_Hand
void Oculus::Interaction::HandWristOffset::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.get_Offset
::UnityEngine::Vector3 Oculus::Interaction::HandWristOffset::get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::get_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.set_Offset
void Oculus::Interaction::HandWristOffset::set_Offset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::set_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.get_Rotation
::UnityEngine::Quaternion Oculus::Interaction::HandWristOffset::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.set_Rotation
void Oculus::Interaction::HandWristOffset::set_Rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::set_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.get_MirrorLeftRotation
bool Oculus::Interaction::HandWristOffset::get_MirrorLeftRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::get_MirrorLeftRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MirrorLeftRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.set_MirrorLeftRotation
void Oculus::Interaction::HandWristOffset::set_MirrorLeftRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::set_MirrorLeftRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MirrorLeftRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.Awake
void Oculus::Interaction::HandWristOffset::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandWristOffset*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.Start
void Oculus::Interaction::HandWristOffset::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandWristOffset*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.OnEnable
void Oculus::Interaction::HandWristOffset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandWristOffset*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.OnDisable
void Oculus::Interaction::HandWristOffset::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandWristOffset*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.HandleHandUpdated
void Oculus::Interaction::HandWristOffset::HandleHandUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::HandleHandUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.GetOffset
void Oculus::Interaction::HandWristOffset::GetOffset(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::GetOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.GetOffset
void Oculus::Interaction::HandWristOffset::GetOffset(ByRef<::UnityEngine::Pose> pose, ::Oculus::Interaction::Input::Handedness handedness, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::GetOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(handedness), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose), handedness, scale);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.GetWorldPose
void Oculus::Interaction::HandWristOffset::GetWorldPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::GetWorldPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.InjectHand
void Oculus::Interaction::HandWristOffset::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.InjectOffset
void Oculus::Interaction::HandWristOffset::InjectOffset(::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::InjectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.InjectRotation
void Oculus::Interaction::HandWristOffset::InjectRotation(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::InjectRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset.InjectAllHandWristOffset
void Oculus::Interaction::HandWristOffset::InjectAllHandWristOffset(::Oculus::Interaction::Input::IHand* hand, ::UnityEngine::Vector3 offset, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::InjectAllHandWristOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandWristOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, offset, rotation);
}
// Autogenerated method: Oculus.Interaction.HandWristOffset..cctor
void Oculus::Interaction::HandWristOffset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandWristOffset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "HandWristOffset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IndexPinchSafeReleaseSelector
#include "Oculus/Interaction/IndexPinchSafeReleaseSelector.hpp"
// Including type: Oculus.Interaction.IndexPinchSafeReleaseSelector/<>c
#include "Oculus/Interaction/IndexPinchSafeReleaseSelector_--c.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selectOnRelease
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__selectOnRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__selectOnRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectOnRelease"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _indexReleaseSafeguard
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__indexReleaseSafeguard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__indexReleaseSafeguard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_indexReleaseSafeguard"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState IndexReleaseSafeguard
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn_IndexReleaseSafeguard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn_IndexReleaseSafeguard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IndexReleaseSafeguard"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isIndexFingerPinching
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__isIndexFingerPinching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__isIndexFingerPinching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isIndexFingerPinching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cancelled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__cancelled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pendingUnselect
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__pendingUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__pendingUnselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingUnselect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenSelected
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn_WhenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn_WhenSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSelected"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenUnselected
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn_WhenUnselected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn_WhenUnselected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenUnselected"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::IndexPinchSafeReleaseSelector::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.set_Hand
void Oculus::Interaction::IndexPinchSafeReleaseSelector::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.get_Active
bool Oculus::Interaction::IndexPinchSafeReleaseSelector::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSafeReleaseSelector*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.add_WhenSelected
void Oculus::Interaction::IndexPinchSafeReleaseSelector::add_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::add_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSafeReleaseSelector*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.remove_WhenSelected
void Oculus::Interaction::IndexPinchSafeReleaseSelector::remove_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::remove_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSafeReleaseSelector*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.add_WhenUnselected
void Oculus::Interaction::IndexPinchSafeReleaseSelector::add_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::add_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSafeReleaseSelector*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.remove_WhenUnselected
void Oculus::Interaction::IndexPinchSafeReleaseSelector::remove_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::remove_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSafeReleaseSelector*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.Awake
void Oculus::Interaction::IndexPinchSafeReleaseSelector::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSafeReleaseSelector*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.Start
void Oculus::Interaction::IndexPinchSafeReleaseSelector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSafeReleaseSelector*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.OnEnable
void Oculus::Interaction::IndexPinchSafeReleaseSelector::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSafeReleaseSelector*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.OnDisable
void Oculus::Interaction::IndexPinchSafeReleaseSelector::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSafeReleaseSelector*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.HandleHandUpdated
void Oculus::Interaction::IndexPinchSafeReleaseSelector::HandleHandUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::HandleHandUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.ProcessSelectOnPinch
void Oculus::Interaction::IndexPinchSafeReleaseSelector::ProcessSelectOnPinch(bool isPinchDetected, bool isReleaseDetected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::ProcessSelectOnPinch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSelectOnPinch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPinchDetected), ::il2cpp_utils::ExtractType(isReleaseDetected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPinchDetected, isReleaseDetected);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.ProcessSelectOnRelease
void Oculus::Interaction::IndexPinchSafeReleaseSelector::ProcessSelectOnRelease(bool isPinchDetected, bool isReleaseDetected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::ProcessSelectOnRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSelectOnRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPinchDetected), ::il2cpp_utils::ExtractType(isReleaseDetected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPinchDetected, isReleaseDetected);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.Cancel
void Oculus::Interaction::IndexPinchSafeReleaseSelector::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.InjectAllIndexPinchSafeReleaseSelector
void Oculus::Interaction::IndexPinchSafeReleaseSelector::InjectAllIndexPinchSafeReleaseSelector(::Oculus::Interaction::Input::IHand* hand, bool selectOnRelease, ::Oculus::Interaction::IActiveState* indexReleaseSafeguard) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::InjectAllIndexPinchSafeReleaseSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllIndexPinchSafeReleaseSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(selectOnRelease), ::il2cpp_utils::ExtractType(indexReleaseSafeguard)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, selectOnRelease, indexReleaseSafeguard);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.InjectHand
void Oculus::Interaction::IndexPinchSafeReleaseSelector::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.InjectSelectOnRelease
void Oculus::Interaction::IndexPinchSafeReleaseSelector::InjectSelectOnRelease(bool selectOnRelease) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::InjectSelectOnRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSelectOnRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectOnRelease)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectOnRelease);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector.InjectIndexReleaseSafeguard
void Oculus::Interaction::IndexPinchSafeReleaseSelector::InjectIndexReleaseSafeguard(::Oculus::Interaction::IActiveState* indexReleaseSafeguard) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::InjectIndexReleaseSafeguard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectIndexReleaseSafeguard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexReleaseSafeguard)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indexReleaseSafeguard);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IndexPinchSafeReleaseSelector/<>c
#include "Oculus/Interaction/IndexPinchSafeReleaseSelector_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.IndexPinchSafeReleaseSelector/<>c <>9
::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c* Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c*>("Oculus.Interaction", "IndexPinchSafeReleaseSelector/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.IndexPinchSafeReleaseSelector/<>c <>9
void Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_set_$$9(::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "IndexPinchSafeReleaseSelector/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__32_0
::System::Action* Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_get_$$9__32_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_get_$$9__32_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "IndexPinchSafeReleaseSelector/<>c", "<>9__32_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__32_0
void Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_set_$$9__32_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_set_$$9__32_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "IndexPinchSafeReleaseSelector/<>c", "<>9__32_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__32_1
::System::Action* Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_get_$$9__32_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_get_$$9__32_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "IndexPinchSafeReleaseSelector/<>c", "<>9__32_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__32_1
void Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_set_$$9__32_1(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_set_$$9__32_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "IndexPinchSafeReleaseSelector/<>c", "<>9__32_1", value)));
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector/<>c..cctor
void Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "IndexPinchSafeReleaseSelector/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector/<>c.<.ctor>b__32_0
void Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::$_ctor$b__32_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::<.ctor>b__32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSafeReleaseSelector/<>c.<.ctor>b__32_1
void Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::$_ctor$b__32_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSafeReleaseSelector::$$c::<.ctor>b__32_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__32_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IndexPinchSelector
#include "Oculus/Interaction/IndexPinchSelector.hpp"
// Including type: Oculus.Interaction.IndexPinchSelector/<>c
#include "Oculus/Interaction/IndexPinchSelector_--c.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::IndexPinchSelector::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::IndexPinchSelector::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isIndexFingerPinching
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::IndexPinchSelector::dyn__isIndexFingerPinching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::dyn__isIndexFingerPinching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isIndexFingerPinching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenSelected
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::IndexPinchSelector::dyn_WhenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::dyn_WhenSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSelected"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenUnselected
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::IndexPinchSelector::dyn_WhenUnselected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::dyn_WhenUnselected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenUnselected"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::IndexPinchSelector::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::IndexPinchSelector::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.set_Hand
void Oculus::Interaction::IndexPinchSelector::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.add_WhenSelected
void Oculus::Interaction::IndexPinchSelector::add_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::add_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSelector*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.remove_WhenSelected
void Oculus::Interaction::IndexPinchSelector::remove_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::remove_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSelector*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.add_WhenUnselected
void Oculus::Interaction::IndexPinchSelector::add_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::add_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSelector*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.remove_WhenUnselected
void Oculus::Interaction::IndexPinchSelector::remove_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::remove_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSelector*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.Awake
void Oculus::Interaction::IndexPinchSelector::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSelector*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.Start
void Oculus::Interaction::IndexPinchSelector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSelector*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.OnEnable
void Oculus::Interaction::IndexPinchSelector::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSelector*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.OnDisable
void Oculus::Interaction::IndexPinchSelector::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::IndexPinchSelector*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.HandleHandUpdated
void Oculus::Interaction::IndexPinchSelector::HandleHandUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::HandleHandUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHandUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.InjectAllIndexPinchSelector
void Oculus::Interaction::IndexPinchSelector::InjectAllIndexPinchSelector(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::InjectAllIndexPinchSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllIndexPinchSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector.InjectHand
void Oculus::Interaction::IndexPinchSelector::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.IndexPinchSelector/<>c
#include "Oculus/Interaction/IndexPinchSelector_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.IndexPinchSelector/<>c <>9
::Oculus::Interaction::IndexPinchSelector::$$c* Oculus::Interaction::IndexPinchSelector::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::IndexPinchSelector::$$c*>("Oculus.Interaction", "IndexPinchSelector/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.IndexPinchSelector/<>c <>9
void Oculus::Interaction::IndexPinchSelector::$$c::_set_$$9(::Oculus::Interaction::IndexPinchSelector::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "IndexPinchSelector/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__20_0
::System::Action* Oculus::Interaction::IndexPinchSelector::$$c::_get_$$9__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::$$c::_get_$$9__20_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "IndexPinchSelector/<>c", "<>9__20_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__20_0
void Oculus::Interaction::IndexPinchSelector::$$c::_set_$$9__20_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::$$c::_set_$$9__20_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "IndexPinchSelector/<>c", "<>9__20_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__20_1
::System::Action* Oculus::Interaction::IndexPinchSelector::$$c::_get_$$9__20_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::$$c::_get_$$9__20_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "IndexPinchSelector/<>c", "<>9__20_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__20_1
void Oculus::Interaction::IndexPinchSelector::$$c::_set_$$9__20_1(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::$$c::_set_$$9__20_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "IndexPinchSelector/<>c", "<>9__20_1", value)));
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector/<>c..cctor
void Oculus::Interaction::IndexPinchSelector::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "IndexPinchSelector/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector/<>c.<.ctor>b__20_0
void Oculus::Interaction::IndexPinchSelector::$$c::$_ctor$b__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::$$c::<.ctor>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.IndexPinchSelector/<>c.<.ctor>b__20_1
void Oculus::Interaction::IndexPinchSelector::$$c::$_ctor$b__20_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::IndexPinchSelector::$$c::<.ctor>b__20_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__20_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ShoulderEstimatePosition
#include "Oculus/Interaction/ShoulderEstimatePosition.hpp"
// Including type: Oculus.Interaction.Input.IHmd
#include "Oculus/Interaction/Input/IHmd.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 ShoulderOffset
::UnityEngine::Vector3 Oculus::Interaction::ShoulderEstimatePosition::_get_ShoulderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::_get_ShoulderOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Oculus.Interaction", "ShoulderEstimatePosition", "ShoulderOffset"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 ShoulderOffset
void Oculus::Interaction::ShoulderEstimatePosition::_set_ShoulderOffset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::_set_ShoulderOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "ShoulderEstimatePosition", "ShoulderOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hmd
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ShoulderEstimatePosition::dyn__hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::dyn__hmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmd"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHmd <Hmd>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHmd*& Oculus::Interaction::ShoulderEstimatePosition::dyn_$Hmd$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::dyn_$Hmd$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hmd>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHmd**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ShoulderEstimatePosition::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::ShoulderEstimatePosition::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ShoulderEstimatePosition::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.get_Hmd
::Oculus::Interaction::Input::IHmd* Oculus::Interaction::ShoulderEstimatePosition::get_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::get_Hmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHmd*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.set_Hmd
void Oculus::Interaction::ShoulderEstimatePosition::set_Hmd(::Oculus::Interaction::Input::IHmd* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::set_Hmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::ShoulderEstimatePosition::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.set_Hand
void Oculus::Interaction::ShoulderEstimatePosition::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.Awake
void Oculus::Interaction::ShoulderEstimatePosition::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ShoulderEstimatePosition*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.Start
void Oculus::Interaction::ShoulderEstimatePosition::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ShoulderEstimatePosition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.OnEnable
void Oculus::Interaction::ShoulderEstimatePosition::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ShoulderEstimatePosition*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.OnDisable
void Oculus::Interaction::ShoulderEstimatePosition::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ShoulderEstimatePosition*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.HandleHmdUpdated
void Oculus::Interaction::ShoulderEstimatePosition::HandleHmdUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::HandleHmdUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ShoulderEstimatePosition*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.InjectAllShoulderPosition
void Oculus::Interaction::ShoulderEstimatePosition::InjectAllShoulderPosition(::Oculus::Interaction::Input::IHmd* hmd, ::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::InjectAllShoulderPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllShoulderPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hmd), ::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hmd, hand);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.InjectHmd
void Oculus::Interaction::ShoulderEstimatePosition::InjectHmd(::Oculus::Interaction::Input::IHmd* hmd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::InjectHmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hmd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hmd);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition.InjectHand
void Oculus::Interaction::ShoulderEstimatePosition::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.ShoulderEstimatePosition..cctor
void Oculus::Interaction::ShoulderEstimatePosition::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ShoulderEstimatePosition::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "ShoulderEstimatePosition", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.VirtualSelector
#include "Oculus/Interaction/VirtualSelector.hpp"
// Including type: Oculus.Interaction.VirtualSelector/<>c
#include "Oculus/Interaction/VirtualSelector_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selectFlag
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::VirtualSelector::dyn__selectFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::dyn__selectFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectFlag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenSelected
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::VirtualSelector::dyn_WhenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::dyn_WhenSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSelected"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenUnselected
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::VirtualSelector::dyn_WhenUnselected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::dyn_WhenUnselected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenUnselected"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _currentlySelected
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::VirtualSelector::dyn__currentlySelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::dyn__currentlySelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlySelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.VirtualSelector.add_WhenSelected
void Oculus::Interaction::VirtualSelector::add_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::add_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VirtualSelector*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.VirtualSelector.remove_WhenSelected
void Oculus::Interaction::VirtualSelector::remove_WhenSelected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::remove_WhenSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VirtualSelector*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.VirtualSelector.add_WhenUnselected
void Oculus::Interaction::VirtualSelector::add_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::add_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VirtualSelector*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.VirtualSelector.remove_WhenUnselected
void Oculus::Interaction::VirtualSelector::remove_WhenUnselected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::remove_WhenUnselected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VirtualSelector*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.VirtualSelector.Select
void Oculus::Interaction::VirtualSelector::Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::Select");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.VirtualSelector.Unselect
void Oculus::Interaction::VirtualSelector::Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::Unselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.VirtualSelector.OnValidate
void Oculus::Interaction::VirtualSelector::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::OnValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VirtualSelector*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.VirtualSelector.UpdateSelection
void Oculus::Interaction::VirtualSelector::UpdateSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::UpdateSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.VirtualSelector/<>c
#include "Oculus/Interaction/VirtualSelector_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.VirtualSelector/<>c <>9
::Oculus::Interaction::VirtualSelector::$$c* Oculus::Interaction::VirtualSelector::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::VirtualSelector::$$c*>("Oculus.Interaction", "VirtualSelector/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.VirtualSelector/<>c <>9
void Oculus::Interaction::VirtualSelector::$$c::_set_$$9(::Oculus::Interaction::VirtualSelector::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "VirtualSelector/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__12_0
::System::Action* Oculus::Interaction::VirtualSelector::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "VirtualSelector/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__12_0
void Oculus::Interaction::VirtualSelector::$$c::_set_$$9__12_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "VirtualSelector/<>c", "<>9__12_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__12_1
::System::Action* Oculus::Interaction::VirtualSelector::$$c::_get_$$9__12_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::$$c::_get_$$9__12_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction", "VirtualSelector/<>c", "<>9__12_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__12_1
void Oculus::Interaction::VirtualSelector::$$c::_set_$$9__12_1(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::$$c::_set_$$9__12_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "VirtualSelector/<>c", "<>9__12_1", value)));
}
// Autogenerated method: Oculus.Interaction.VirtualSelector/<>c..cctor
void Oculus::Interaction::VirtualSelector::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "VirtualSelector/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.VirtualSelector/<>c.<.ctor>b__12_0
void Oculus::Interaction::VirtualSelector::$$c::$_ctor$b__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::$$c::<.ctor>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.VirtualSelector/<>c.<.ctor>b__12_1
void Oculus::Interaction::VirtualSelector::$$c::$_ctor$b__12_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VirtualSelector::$$c::<.ctor>b__12_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__12_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Cylinder
#include "Oculus/Interaction/Cylinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Cylinder::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Cylinder::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Cylinder.get_Radius
float Oculus::Interaction::Cylinder::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Cylinder::get_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Cylinder.set_Radius
void Oculus::Interaction::Cylinder::set_Radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Cylinder::set_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.CylinderOrientation
#include "Oculus/Interaction/CylinderOrientation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.CylinderOrientation Vertical
::Oculus::Interaction::CylinderOrientation Oculus::Interaction::CylinderOrientation::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CylinderOrientation::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::CylinderOrientation>("Oculus.Interaction", "CylinderOrientation", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.CylinderOrientation Vertical
void Oculus::Interaction::CylinderOrientation::_set_Vertical(::Oculus::Interaction::CylinderOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CylinderOrientation::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "CylinderOrientation", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.CylinderOrientation Horizontal
::Oculus::Interaction::CylinderOrientation Oculus::Interaction::CylinderOrientation::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CylinderOrientation::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::CylinderOrientation>("Oculus.Interaction", "CylinderOrientation", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.CylinderOrientation Horizontal
void Oculus::Interaction::CylinderOrientation::_set_Horizontal(::Oculus::Interaction::CylinderOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CylinderOrientation::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "CylinderOrientation", "Horizontal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::CylinderOrientation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::CylinderOrientation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ICurvedPlane
#include "Oculus/Interaction/ICurvedPlane.hpp"
// Including type: Oculus.Interaction.Cylinder
#include "Oculus/Interaction/Cylinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ICurvedPlane.get_Cylinder
::Oculus::Interaction::Cylinder* Oculus::Interaction::ICurvedPlane::get_Cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ICurvedPlane::get_Cylinder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ICurvedPlane*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Cylinder*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ICurvedPlane.get_ArcDegrees
float Oculus::Interaction::ICurvedPlane::get_ArcDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ICurvedPlane::get_ArcDegrees");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ICurvedPlane*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ICurvedPlane.get_Rotation
float Oculus::Interaction::ICurvedPlane::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ICurvedPlane::get_Rotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ICurvedPlane*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ICurvedPlane.get_Bottom
float Oculus::Interaction::ICurvedPlane::get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ICurvedPlane::get_Bottom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ICurvedPlane*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ICurvedPlane.get_Top
float Oculus::Interaction::ICurvedPlane::get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ICurvedPlane::get_Top");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ICurvedPlane*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ActiveStateUnityEventWrapper
#include "Oculus/Interaction/ActiveStateUnityEventWrapper.hpp"
// Including type: Oculus.Interaction.IActiveState
#include "Oculus/Interaction/IActiveState.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _activeState
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__activeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__activeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeState"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IActiveState ActiveState
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IActiveState*& Oculus::Interaction::ActiveStateUnityEventWrapper::dyn_ActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::dyn_ActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveState"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IActiveState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenActivated
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__whenActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__whenActivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenActivated"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenDeactivated
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__whenDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__whenDeactivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenDeactivated"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _emitOnFirstUpdate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__emitOnFirstUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__emitOnFirstUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitOnFirstUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _emittedOnFirstUpdate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__emittedOnFirstUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__emittedOnFirstUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emittedOnFirstUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _savedState
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__savedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::dyn__savedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_savedState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.get_WhenActivated
::UnityEngine::Events::UnityEvent* Oculus::Interaction::ActiveStateUnityEventWrapper::get_WhenActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::get_WhenActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.get_WhenDeactivated
::UnityEngine::Events::UnityEvent* Oculus::Interaction::ActiveStateUnityEventWrapper::get_WhenDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::get_WhenDeactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenDeactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.Awake
void Oculus::Interaction::ActiveStateUnityEventWrapper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateUnityEventWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.Start
void Oculus::Interaction::ActiveStateUnityEventWrapper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateUnityEventWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.Update
void Oculus::Interaction::ActiveStateUnityEventWrapper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::ActiveStateUnityEventWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.InvokeEvent
void Oculus::Interaction::ActiveStateUnityEventWrapper::InvokeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::InvokeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.InjectAllActiveStateUnityEventWrapper
void Oculus::Interaction::ActiveStateUnityEventWrapper::InjectAllActiveStateUnityEventWrapper(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::InjectAllActiveStateUnityEventWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllActiveStateUnityEventWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.InjectActiveState
void Oculus::Interaction::ActiveStateUnityEventWrapper::InjectActiveState(::Oculus::Interaction::IActiveState* activeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::InjectActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeState);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.InjectOptionalEmitOnFirstUpdate
void Oculus::Interaction::ActiveStateUnityEventWrapper::InjectOptionalEmitOnFirstUpdate(bool emitOnFirstUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::InjectOptionalEmitOnFirstUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalEmitOnFirstUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitOnFirstUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, emitOnFirstUpdate);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.InjectOptionalWhenActivated
void Oculus::Interaction::ActiveStateUnityEventWrapper::InjectOptionalWhenActivated(::UnityEngine::Events::UnityEvent* whenActivated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::InjectOptionalWhenActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalWhenActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(whenActivated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, whenActivated);
}
// Autogenerated method: Oculus.Interaction.ActiveStateUnityEventWrapper.InjectOptionalWhenDeactivated
void Oculus::Interaction::ActiveStateUnityEventWrapper::InjectOptionalWhenDeactivated(::UnityEngine::Events::UnityEvent* whenDeactivated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ActiveStateUnityEventWrapper::InjectOptionalWhenDeactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalWhenDeactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(whenDeactivated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, whenDeactivated);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractableUnityEventWrapper
#include "Oculus/Interaction/InteractableUnityEventWrapper.hpp"
// Including type: Oculus.Interaction.IInteractableView
#include "Oculus/Interaction/IInteractableView.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Oculus.Interaction.InteractableStateChangeArgs
#include "Oculus/Interaction/InteractableStateChangeArgs.hpp"
// Including type: Oculus.Interaction.IInteractorView
#include "Oculus/Interaction/IInteractorView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _interactableView
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::InteractableUnityEventWrapper::dyn__interactableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn__interactableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactableView"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractableView InteractableView
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractableView*& Oculus::Interaction::InteractableUnityEventWrapper::dyn_InteractableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn_InteractableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableView"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenHover
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenHover"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenUnhover
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenUnhover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenUnhover"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenSelect
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenSelect"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenUnselect
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenUnselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenUnselect"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenInteractorViewAdded
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenInteractorViewAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenInteractorViewAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenInteractorViewAdded"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenInteractorViewRemoved
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenInteractorViewRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenInteractorViewRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenInteractorViewRemoved"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenSelectingInteractorViewAdded
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenSelectingInteractorViewAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenSelectingInteractorViewAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenSelectingInteractorViewAdded"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenSelectingInteractorViewRemoved
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenSelectingInteractorViewRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn__whenSelectingInteractorViewRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenSelectingInteractorViewRemoved"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractableUnityEventWrapper::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.get_WhenHover
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractableUnityEventWrapper::get_WhenHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::get_WhenHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.get_WhenUnhover
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractableUnityEventWrapper::get_WhenUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::get_WhenUnhover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenUnhover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.get_WhenSelect
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.get_WhenUnselect
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractableUnityEventWrapper::get_WhenUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::get_WhenUnselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenUnselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.get_WhenInteractorViewAdded
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractableUnityEventWrapper::get_WhenInteractorViewAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::get_WhenInteractorViewAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenInteractorViewAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.get_WhenInteractorViewRemoved
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractableUnityEventWrapper::get_WhenInteractorViewRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::get_WhenInteractorViewRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenInteractorViewRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.get_WhenSelectingInteractorViewAdded
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelectingInteractorViewAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelectingInteractorViewAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenSelectingInteractorViewAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.get_WhenSelectingInteractorViewRemoved
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelectingInteractorViewRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::get_WhenSelectingInteractorViewRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenSelectingInteractorViewRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.Awake
void Oculus::Interaction::InteractableUnityEventWrapper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableUnityEventWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.Start
void Oculus::Interaction::InteractableUnityEventWrapper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableUnityEventWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.OnEnable
void Oculus::Interaction::InteractableUnityEventWrapper::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableUnityEventWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.OnDisable
void Oculus::Interaction::InteractableUnityEventWrapper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractableUnityEventWrapper*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.HandleStateChanged
void Oculus::Interaction::InteractableUnityEventWrapper::HandleStateChanged(::Oculus::Interaction::InteractableStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.HandleInteractorViewAdded
void Oculus::Interaction::InteractableUnityEventWrapper::HandleInteractorViewAdded(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::HandleInteractorViewAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractorViewAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.HandleInteractorViewRemoved
void Oculus::Interaction::InteractableUnityEventWrapper::HandleInteractorViewRemoved(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::HandleInteractorViewRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractorViewRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.HandleSelectingInteractorViewAdded
void Oculus::Interaction::InteractableUnityEventWrapper::HandleSelectingInteractorViewAdded(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::HandleSelectingInteractorViewAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectingInteractorViewAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.HandleSelectingInteractorViewRemoved
void Oculus::Interaction::InteractableUnityEventWrapper::HandleSelectingInteractorViewRemoved(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::HandleSelectingInteractorViewRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectingInteractorViewRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.InjectAllInteractableUnityEventWrapper
void Oculus::Interaction::InteractableUnityEventWrapper::InjectAllInteractableUnityEventWrapper(::Oculus::Interaction::IInteractableView* interactableView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::InjectAllInteractableUnityEventWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractableUnityEventWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableView);
}
// Autogenerated method: Oculus.Interaction.InteractableUnityEventWrapper.InjectInteractableView
void Oculus::Interaction::InteractableUnityEventWrapper::InjectInteractableView(::Oculus::Interaction::IInteractableView* interactableView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractableUnityEventWrapper::InjectInteractableView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractableView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableView);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InteractorUnityEventWrapper
#include "Oculus/Interaction/InteractorUnityEventWrapper.hpp"
// Including type: Oculus.Interaction.IInteractorView
#include "Oculus/Interaction/IInteractorView.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Oculus.Interaction.InteractorStateChangeArgs
#include "Oculus/Interaction/InteractorStateChangeArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _interactorView
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::InteractorUnityEventWrapper::dyn__interactorView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::dyn__interactorView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactorView"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractorView InteractorView
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractorView*& Oculus::Interaction::InteractorUnityEventWrapper::dyn_InteractorView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::dyn_InteractorView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractorView"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractorView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenEnabled
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenEnabled"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenDisabled
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenDisabled"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenHover
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenHover"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenUnhover
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenUnhover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenUnhover"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenSelect
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenSelect"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenUnselect
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::dyn__whenUnselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenUnselect"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::InteractorUnityEventWrapper::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.get_WhenDisabled
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractorUnityEventWrapper::get_WhenDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::get_WhenDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.get_WhenEnabled
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractorUnityEventWrapper::get_WhenEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::get_WhenEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.get_WhenHover
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractorUnityEventWrapper::get_WhenHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::get_WhenHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.get_WhenUnhover
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractorUnityEventWrapper::get_WhenUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::get_WhenUnhover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenUnhover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.get_WhenSelect
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractorUnityEventWrapper::get_WhenSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::get_WhenSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.get_WhenUnselect
::UnityEngine::Events::UnityEvent* Oculus::Interaction::InteractorUnityEventWrapper::get_WhenUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::get_WhenUnselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenUnselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.Awake
void Oculus::Interaction::InteractorUnityEventWrapper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorUnityEventWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.Start
void Oculus::Interaction::InteractorUnityEventWrapper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorUnityEventWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.OnEnable
void Oculus::Interaction::InteractorUnityEventWrapper::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorUnityEventWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.OnDisable
void Oculus::Interaction::InteractorUnityEventWrapper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::InteractorUnityEventWrapper*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.HandleStateChanged
void Oculus::Interaction::InteractorUnityEventWrapper::HandleStateChanged(::Oculus::Interaction::InteractorStateChangeArgs args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.InjectAllInteractorUnityEventWrapper
void Oculus::Interaction::InteractorUnityEventWrapper::InjectAllInteractorUnityEventWrapper(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::InjectAllInteractorUnityEventWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllInteractorUnityEventWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated method: Oculus.Interaction.InteractorUnityEventWrapper.InjectInteractorView
void Oculus::Interaction::InteractorUnityEventWrapper::InjectInteractorView(::Oculus::Interaction::IInteractorView* interactorView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InteractorUnityEventWrapper::InjectInteractorView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractorView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactorView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactorView);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PhysicsGrabbable
#include "Oculus/Interaction/PhysicsGrabbable.hpp"
// Including type: Oculus.Interaction.PhysicsGrabbable/<>c
#include "Oculus/Interaction/PhysicsGrabbable_--c.hpp"
// Including type: Oculus.Interaction.Grabbable
#include "Oculus/Interaction/Grabbable.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Grabbable _grabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Grabbable*& Oculus::Interaction::PhysicsGrabbable::dyn__grabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn__grabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Grabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::PhysicsGrabbable::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _scaleMassWithSize
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PhysicsGrabbable::dyn__scaleMassWithSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn__scaleMassWithSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scaleMassWithSize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _savedIsKinematicState
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PhysicsGrabbable::dyn__savedIsKinematicState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn__savedIsKinematicState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_savedIsKinematicState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isBeingTransformed
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PhysicsGrabbable::dyn__isBeingTransformed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn__isBeingTransformed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isBeingTransformed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _initialScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PhysicsGrabbable::dyn__initialScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn__initialScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasPendingForce
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PhysicsGrabbable::dyn__hasPendingForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn__hasPendingForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasPendingForce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _linearVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PhysicsGrabbable::dyn__linearVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn__linearVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linearVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _angularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PhysicsGrabbable::dyn__angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn__angularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PhysicsGrabbable::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<UnityEngine.Vector3,UnityEngine.Vector3> WhenVelocitiesApplied
[[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>*& Oculus::Interaction::PhysicsGrabbable::dyn_WhenVelocitiesApplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::dyn_WhenVelocitiesApplied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenVelocitiesApplied"))->offset;
  return *reinterpret_cast<::System::Action_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.add_WhenVelocitiesApplied
void Oculus::Interaction::PhysicsGrabbable::add_WhenVelocitiesApplied(::System::Action_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::add_WhenVelocitiesApplied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_WhenVelocitiesApplied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.remove_WhenVelocitiesApplied
void Oculus::Interaction::PhysicsGrabbable::remove_WhenVelocitiesApplied(::System::Action_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::remove_WhenVelocitiesApplied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_WhenVelocitiesApplied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.Reset
void Oculus::Interaction::PhysicsGrabbable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.Start
void Oculus::Interaction::PhysicsGrabbable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PhysicsGrabbable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.OnEnable
void Oculus::Interaction::PhysicsGrabbable::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PhysicsGrabbable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.OnDisable
void Oculus::Interaction::PhysicsGrabbable::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PhysicsGrabbable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.HandlePointerEventRaised
void Oculus::Interaction::PhysicsGrabbable::HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::HandlePointerEventRaised");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerEventRaised", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.DisablePhysics
void Oculus::Interaction::PhysicsGrabbable::DisablePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::DisablePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisablePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.ReenablePhysics
void Oculus::Interaction::PhysicsGrabbable::ReenablePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::ReenablePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReenablePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.ApplyVelocities
void Oculus::Interaction::PhysicsGrabbable::ApplyVelocities(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::ApplyVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.FixedUpdate
void Oculus::Interaction::PhysicsGrabbable::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.CachePhysicsState
void Oculus::Interaction::PhysicsGrabbable::CachePhysicsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::CachePhysicsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CachePhysicsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.InjectAllPhysicsGrabbable
void Oculus::Interaction::PhysicsGrabbable::InjectAllPhysicsGrabbable(::Oculus::Interaction::Grabbable* grabbable, ::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::InjectAllPhysicsGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPhysicsGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabbable), ::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable, rigidbody);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.InjectGrabbable
void Oculus::Interaction::PhysicsGrabbable::InjectGrabbable(::Oculus::Interaction::Grabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::InjectGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabbable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.InjectRigidbody
void Oculus::Interaction::PhysicsGrabbable::InjectRigidbody(::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::InjectRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigidbody);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable.InjectOptionalScaleMassWithSize
void Oculus::Interaction::PhysicsGrabbable::InjectOptionalScaleMassWithSize(bool scaleMassWithSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::InjectOptionalScaleMassWithSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalScaleMassWithSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaleMassWithSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scaleMassWithSize);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PhysicsGrabbable/<>c
#include "Oculus/Interaction/PhysicsGrabbable_--c.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.PhysicsGrabbable/<>c <>9
::Oculus::Interaction::PhysicsGrabbable::$$c* Oculus::Interaction::PhysicsGrabbable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::PhysicsGrabbable::$$c*>("Oculus.Interaction", "PhysicsGrabbable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.PhysicsGrabbable/<>c <>9
void Oculus::Interaction::PhysicsGrabbable::$$c::_set_$$9(::Oculus::Interaction::PhysicsGrabbable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "PhysicsGrabbable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<UnityEngine.Vector3,UnityEngine.Vector3> <>9__27_0
::System::Action_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>* Oculus::Interaction::PhysicsGrabbable::$$c::_get_$$9__27_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::$$c::_get_$$9__27_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>*>("Oculus.Interaction", "PhysicsGrabbable/<>c", "<>9__27_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<UnityEngine.Vector3,UnityEngine.Vector3> <>9__27_0
void Oculus::Interaction::PhysicsGrabbable::$$c::_set_$$9__27_0(::System::Action_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::$$c::_set_$$9__27_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "PhysicsGrabbable/<>c", "<>9__27_0", value)));
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable/<>c..cctor
void Oculus::Interaction::PhysicsGrabbable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PhysicsGrabbable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PhysicsGrabbable/<>c.<.ctor>b__27_0
void Oculus::Interaction::PhysicsGrabbable::$$c::$_ctor$b__27_0(::UnityEngine::Vector3 $p0$, ::UnityEngine::Vector3 $p1$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PhysicsGrabbable::$$c::<.ctor>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$), ::il2cpp_utils::ExtractType($p1$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$, $p1$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableCanvas
#include "Oculus/Interaction/PointableCanvas.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& Oculus::Interaction::PointableCanvas::dyn__canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvas::dyn__canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _registered
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableCanvas::dyn__registered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvas::dyn__registered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_registered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableCanvas.get_Canvas
::UnityEngine::Canvas* Oculus::Interaction::PointableCanvas::get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvas::get_Canvas");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableCanvas*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvas.Register
void Oculus::Interaction::PointableCanvas::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvas::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvas.Unregister
void Oculus::Interaction::PointableCanvas::Unregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvas::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvas.InjectAllPointableCanvas
void Oculus::Interaction::PointableCanvas::InjectAllPointableCanvas(::UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvas::InjectAllPointableCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPointableCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvas);
}
// Autogenerated method: Oculus.Interaction.PointableCanvas.InjectCanvas
void Oculus::Interaction::PointableCanvas::InjectCanvas(::UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvas::InjectCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvas);
}
// Autogenerated method: Oculus.Interaction.PointableCanvas.Start
void Oculus::Interaction::PointableCanvas::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvas::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvas.OnEnable
void Oculus::Interaction::PointableCanvas::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvas::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvas.OnDisable
void Oculus::Interaction::PointableCanvas::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvas::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableCanvasMesh
#include "Oculus/Interaction/PointableCanvasMesh.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasMesh
#include "Oculus/Interaction/UnityCanvas/CanvasMesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.UnityCanvas.CanvasMesh _canvasMesh
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::UnityCanvas::CanvasMesh*& Oculus::Interaction::PointableCanvasMesh::dyn__canvasMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasMesh::dyn__canvasMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasMesh"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::UnityCanvas::CanvasMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasMesh.InjectAllCanvasMeshPointable
void Oculus::Interaction::PointableCanvasMesh::InjectAllCanvasMeshPointable(::Oculus::Interaction::UnityCanvas::CanvasMesh* canvasMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasMesh::InjectAllCanvasMeshPointable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllCanvasMeshPointable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvasMesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvasMesh);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasMesh.InjectCanvasMesh
void Oculus::Interaction::PointableCanvasMesh::InjectCanvasMesh(::Oculus::Interaction::UnityCanvas::CanvasMesh* canvasMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasMesh::InjectCanvasMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCanvasMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvasMesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvasMesh);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasMesh.Start
void Oculus::Interaction::PointableCanvasMesh::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasMesh::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasMesh.ProcessPointerEvent
void Oculus::Interaction::PointableCanvasMesh::ProcessPointerEvent(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasMesh::ProcessPointerEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableElement*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableCanvasEventArgs
#include "Oculus/Interaction/PointableCanvasEventArgs.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Canvas Canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& Oculus::Interaction::PointableCanvasEventArgs::dyn_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasEventArgs::dyn_Canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.GameObject Hovered
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::PointableCanvasEventArgs::dyn_Hovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasEventArgs::dyn_Hovered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hovered"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Dragging
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableCanvasEventArgs::dyn_Dragging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasEventArgs::dyn_Dragging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dragging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableCanvasModule
#include "Oculus/Interaction/PointableCanvasModule.hpp"
// Including type: Oculus.Interaction.PointableCanvasModule/Pointer
#include "Oculus/Interaction/PointableCanvasModule_Pointer.hpp"
// Including type: Oculus.Interaction.PointableCanvasModule/<>c__DisplayClass24_0
#include "Oculus/Interaction/PointableCanvasModule_--c__DisplayClass24_0.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.IPointableCanvas
#include "Oculus/Interaction/IPointableCanvas.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Oculus.Interaction.PointableCanvasEventArgs
#include "Oculus/Interaction/PointableCanvasEventArgs.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action`1<Oculus.Interaction.PointableCanvasEventArgs> WhenSelected
::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* Oculus::Interaction::PointableCanvasModule::_get_WhenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::_get_WhenSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>*>("Oculus.Interaction", "PointableCanvasModule", "WhenSelected"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<Oculus.Interaction.PointableCanvasEventArgs> WhenSelected
void Oculus::Interaction::PointableCanvasModule::_set_WhenSelected(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::_set_WhenSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointableCanvasModule", "WhenSelected", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<Oculus.Interaction.PointableCanvasEventArgs> WhenUnselected
::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* Oculus::Interaction::PointableCanvasModule::_get_WhenUnselected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::_get_WhenUnselected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>*>("Oculus.Interaction", "PointableCanvasModule", "WhenUnselected"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<Oculus.Interaction.PointableCanvasEventArgs> WhenUnselected
void Oculus::Interaction::PointableCanvasModule::_set_WhenUnselected(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::_set_WhenUnselected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointableCanvasModule", "WhenUnselected", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<Oculus.Interaction.PointableCanvasEventArgs> WhenSelectableHovered
::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* Oculus::Interaction::PointableCanvasModule::_get_WhenSelectableHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::_get_WhenSelectableHovered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>*>("Oculus.Interaction", "PointableCanvasModule", "WhenSelectableHovered"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<Oculus.Interaction.PointableCanvasEventArgs> WhenSelectableHovered
void Oculus::Interaction::PointableCanvasModule::_set_WhenSelectableHovered(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::_set_WhenSelectableHovered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointableCanvasModule", "WhenSelectableHovered", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<Oculus.Interaction.PointableCanvasEventArgs> WhenSelectableUnhovered
::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* Oculus::Interaction::PointableCanvasModule::_get_WhenSelectableUnhovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::_get_WhenSelectableUnhovered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>*>("Oculus.Interaction", "PointableCanvasModule", "WhenSelectableUnhovered"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<Oculus.Interaction.PointableCanvasEventArgs> WhenSelectableUnhovered
void Oculus::Interaction::PointableCanvasModule::_set_WhenSelectableUnhovered(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::_set_WhenSelectableUnhovered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointableCanvasModule", "WhenSelectableUnhovered", value));
}
// Autogenerated static field getter
// Get static field: static private Oculus.Interaction.PointableCanvasModule _instance
::Oculus::Interaction::PointableCanvasModule* Oculus::Interaction::PointableCanvasModule::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::PointableCanvasModule*>("Oculus.Interaction", "PointableCanvasModule", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Interaction.PointableCanvasModule _instance
void Oculus::Interaction::PointableCanvasModule::_set__instance(::Oculus::Interaction::PointableCanvasModule* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "PointableCanvasModule", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useInitialPressPositionForDrag
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableCanvasModule::dyn__useInitialPressPositionForDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::dyn__useInitialPressPositionForDrag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useInitialPressPositionForDrag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _pointerEventCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& Oculus::Interaction::PointableCanvasModule::dyn__pointerEventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::dyn__pointerEventCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointerEventCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Interaction.PointableCanvasModule/Pointer> _pointerMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::PointableCanvasModule::Pointer*>*& Oculus::Interaction::PointableCanvasModule::dyn__pointerMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::dyn__pointerMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointerMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::PointableCanvasModule::Pointer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.EventSystems.RaycastResult> _raycastResultCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*& Oculus::Interaction::PointableCanvasModule::dyn__raycastResultCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::dyn__raycastResultCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_raycastResultCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.PointableCanvasModule/Pointer> _pointersForDeletion
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::PointableCanvasModule::Pointer*>*& Oculus::Interaction::PointableCanvasModule::dyn__pointersForDeletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::dyn__pointersForDeletion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointersForDeletion"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::PointableCanvasModule::Pointer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Oculus.Interaction.IPointableCanvas,System.Action`1<Oculus.Interaction.PointerEvent>> _pointerCanvasActionMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::IPointableCanvas*, ::System::Action_1<::Oculus::Interaction::PointerEvent>*>*& Oculus::Interaction::PointableCanvasModule::dyn__pointerCanvasActionMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::dyn__pointerCanvasActionMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointerCanvasActionMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::IPointableCanvas*, ::System::Action_1<::Oculus::Interaction::PointerEvent>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PointableCanvasModule/Pointer[] _pointersToProcessScratch
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::PointableCanvasModule::Pointer*>& Oculus::Interaction::PointableCanvasModule::dyn__pointersToProcessScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::dyn__pointersToProcessScratch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointersToProcessScratch"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::PointableCanvasModule::Pointer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableCanvasModule::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.add_WhenSelected
void Oculus::Interaction::PointableCanvasModule::add_WhenSelected(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::add_WhenSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "add_WhenSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.remove_WhenSelected
void Oculus::Interaction::PointableCanvasModule::remove_WhenSelected(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::remove_WhenSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "remove_WhenSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.add_WhenUnselected
void Oculus::Interaction::PointableCanvasModule::add_WhenUnselected(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::add_WhenUnselected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "add_WhenUnselected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.remove_WhenUnselected
void Oculus::Interaction::PointableCanvasModule::remove_WhenUnselected(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::remove_WhenUnselected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "remove_WhenUnselected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.add_WhenSelectableHovered
void Oculus::Interaction::PointableCanvasModule::add_WhenSelectableHovered(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::add_WhenSelectableHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "add_WhenSelectableHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.remove_WhenSelectableHovered
void Oculus::Interaction::PointableCanvasModule::remove_WhenSelectableHovered(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::remove_WhenSelectableHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "remove_WhenSelectableHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.add_WhenSelectableUnhovered
void Oculus::Interaction::PointableCanvasModule::add_WhenSelectableUnhovered(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::add_WhenSelectableUnhovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "add_WhenSelectableUnhovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.remove_WhenSelectableUnhovered
void Oculus::Interaction::PointableCanvasModule::remove_WhenSelectableUnhovered(::System::Action_1<::Oculus::Interaction::PointableCanvasEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::remove_WhenSelectableUnhovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "remove_WhenSelectableUnhovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.get_Instance
::Oculus::Interaction::PointableCanvasModule* Oculus::Interaction::PointableCanvasModule::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::PointableCanvasModule*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.RegisterPointableCanvas
void Oculus::Interaction::PointableCanvasModule::RegisterPointableCanvas(::Oculus::Interaction::IPointableCanvas* pointerCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::RegisterPointableCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "RegisterPointableCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerCanvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerCanvas);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.UnregisterPointableCanvas
void Oculus::Interaction::PointableCanvasModule::UnregisterPointableCanvas(::Oculus::Interaction::IPointableCanvas* pointerCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::UnregisterPointableCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "UnregisterPointableCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerCanvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerCanvas);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.AddPointerCanvas
void Oculus::Interaction::PointableCanvasModule::AddPointerCanvas(::Oculus::Interaction::IPointableCanvas* pointerCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::AddPointerCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPointerCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerCanvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerCanvas);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.RemovePointerCanvas
void Oculus::Interaction::PointableCanvasModule::RemovePointerCanvas(::Oculus::Interaction::IPointableCanvas* pointerCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::RemovePointerCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePointerCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerCanvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerCanvas);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.HandlePointerEvent
void Oculus::Interaction::PointableCanvasModule::HandlePointerEvent(::UnityEngine::Canvas* canvas, ::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::HandlePointerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvas, evt);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.FindFirstRaycastWithinCanvas
::UnityEngine::EventSystems::RaycastResult Oculus::Interaction::PointableCanvasModule::FindFirstRaycastWithinCanvas(::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* candidates, ::UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::FindFirstRaycastWithinCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "FindFirstRaycastWithinCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidates), ::il2cpp_utils::ExtractType(canvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::RaycastResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, candidates, canvas);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.UpdateRaycasts
void Oculus::Interaction::PointableCanvasModule::UpdateRaycasts(::Oculus::Interaction::PointableCanvasModule::Pointer* pointer, ByRef<bool> pressed, ByRef<bool> released) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::UpdateRaycasts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRaycasts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer, byref(pressed), byref(released));
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.ProcessPointers
void Oculus::Interaction::PointableCanvasModule::ProcessPointers(::System::Collections::Generic::ICollection_1<::Oculus::Interaction::PointableCanvasModule::Pointer*>* pointers, bool clearAndReleasePointers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::ProcessPointers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPointers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointers), ::il2cpp_utils::ExtractType(clearAndReleasePointers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointers, clearAndReleasePointers);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.ProcessPointer
void Oculus::Interaction::PointableCanvasModule::ProcessPointer(::Oculus::Interaction::PointableCanvasModule::Pointer* pointer, bool forceRelease) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::ProcessPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractType(forceRelease)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer, forceRelease);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.HandleSelectableHover
void Oculus::Interaction::PointableCanvasModule::HandleSelectableHover(::Oculus::Interaction::PointableCanvasModule::Pointer* pointer, bool wasDragging) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::HandleSelectableHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectableHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractType(wasDragging)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer, wasDragging);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.HandleSelectablePress
void Oculus::Interaction::PointableCanvasModule::HandleSelectablePress(::Oculus::Interaction::PointableCanvasModule::Pointer* pointer, bool pressed, bool released, bool wasDragging) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::HandleSelectablePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectablePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(released), ::il2cpp_utils::ExtractType(wasDragging)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer, pressed, released, wasDragging);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.UpdatePointerEventData
void Oculus::Interaction::PointableCanvasModule::UpdatePointerEventData(::UnityEngine::EventSystems::PointerEventData* pointerEvent, bool pressed, bool released) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::UpdatePointerEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePointerEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent), ::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(released)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEvent, pressed, released);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.ClearPointerSelection
void Oculus::Interaction::PointableCanvasModule::ClearPointerSelection(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::ClearPointerSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPointerSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.ShouldStartDrag
bool Oculus::Interaction::PointableCanvasModule::ShouldStartDrag(::UnityEngine::Vector2 pressPos, ::UnityEngine::Vector2 currentPos, float threshold, bool useDragThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::ShouldStartDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PointableCanvasModule", "ShouldStartDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressPos), ::il2cpp_utils::ExtractType(currentPos), ::il2cpp_utils::ExtractType(threshold), ::il2cpp_utils::ExtractType(useDragThreshold)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pressPos, currentPos, threshold, useDragThreshold);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.<Start>b__31_0
void Oculus::Interaction::PointableCanvasModule::$Start$b__31_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::<Start>b__31_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__31_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.Awake
void Oculus::Interaction::PointableCanvasModule::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.OnDestroy
void Oculus::Interaction::PointableCanvasModule::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.Start
void Oculus::Interaction::PointableCanvasModule::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.OnEnable
void Oculus::Interaction::PointableCanvasModule::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.OnDisable
void Oculus::Interaction::PointableCanvasModule::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.Process
void Oculus::Interaction::PointableCanvasModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule.ProcessDrag
void Oculus::Interaction::PointableCanvasModule::ProcessDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::ProcessDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::PointerInputModule*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableCanvasModule/Pointer
#include "Oculus/Interaction/PointableCanvasModule_Pointer.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.PointerEventData <PointerEventData>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData*& Oculus::Interaction::PointableCanvasModule::Pointer::dyn_$PointerEventData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::dyn_$PointerEventData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PointerEventData>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MarkedForDeletion>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableCanvasModule::Pointer::dyn_$MarkedForDeletion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::dyn_$MarkedForDeletion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MarkedForDeletion>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& Oculus::Interaction::PointableCanvasModule::Pointer::dyn__canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::dyn__canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PointableCanvasModule::Pointer::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _hoveredSelectable
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::PointableCanvasModule::Pointer::dyn__hoveredSelectable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::dyn__hoveredSelectable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoveredSelectable"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pressing
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableCanvasModule::Pointer::dyn__pressing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::dyn__pressing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pressed
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableCanvasModule::Pointer::dyn__pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::dyn__pressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _released
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableCanvasModule::Pointer::dyn__released() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::dyn__released");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_released"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.get_PointerEventData
::UnityEngine::EventSystems::PointerEventData* Oculus::Interaction::PointableCanvasModule::Pointer::get_PointerEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::get_PointerEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PointerEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerEventData*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.set_PointerEventData
void Oculus::Interaction::PointableCanvasModule::Pointer::set_PointerEventData(::UnityEngine::EventSystems::PointerEventData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::set_PointerEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PointerEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.get_MarkedForDeletion
bool Oculus::Interaction::PointableCanvasModule::Pointer::get_MarkedForDeletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::get_MarkedForDeletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MarkedForDeletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.set_MarkedForDeletion
void Oculus::Interaction::PointableCanvasModule::Pointer::set_MarkedForDeletion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::set_MarkedForDeletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MarkedForDeletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.get_Canvas
::UnityEngine::Canvas* Oculus::Interaction::PointableCanvasModule::Pointer::get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::get_Canvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Canvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.get_Position
::UnityEngine::Vector3 Oculus::Interaction::PointableCanvasModule::Pointer::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.get_HoveredSelectable
::UnityEngine::GameObject* Oculus::Interaction::PointableCanvasModule::Pointer::get_HoveredSelectable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::get_HoveredSelectable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HoveredSelectable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.Press
void Oculus::Interaction::PointableCanvasModule::Pointer::Press() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::Press");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Press", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.Release
void Oculus::Interaction::PointableCanvasModule::Pointer::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.ReadAndResetPressedReleased
void Oculus::Interaction::PointableCanvasModule::Pointer::ReadAndResetPressedReleased(ByRef<bool> pressed, ByRef<bool> released) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::ReadAndResetPressedReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAndResetPressedReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pressed), byref(released));
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.MarkForDeletion
void Oculus::Interaction::PointableCanvasModule::Pointer::MarkForDeletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::MarkForDeletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkForDeletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.SetPosition
void Oculus::Interaction::PointableCanvasModule::Pointer::SetPosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/Pointer.SetHoveredSelectable
void Oculus::Interaction::PointableCanvasModule::Pointer::SetHoveredSelectable(::UnityEngine::GameObject* hoveredSelectable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::Pointer::SetHoveredSelectable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHoveredSelectable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoveredSelectable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hoveredSelectable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableCanvasModule/<>c__DisplayClass24_0
#include "Oculus/Interaction/PointableCanvasModule_--c__DisplayClass24_0.hpp"
// Including type: Oculus.Interaction.IPointableCanvas
#include "Oculus/Interaction/IPointableCanvas.hpp"
// Including type: Oculus.Interaction.PointerEvent
#include "Oculus/Interaction/PointerEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.PointableCanvasModule <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PointableCanvasModule*& Oculus::Interaction::PointableCanvasModule::$$c__DisplayClass24_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::$$c__DisplayClass24_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PointableCanvasModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.IPointableCanvas pointerCanvas
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPointableCanvas*& Oculus::Interaction::PointableCanvasModule::$$c__DisplayClass24_0::dyn_pointerCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::$$c__DisplayClass24_0::dyn_pointerCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pointerCanvas"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IPointableCanvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasModule/<>c__DisplayClass24_0.<AddPointerCanvas>b__0
void Oculus::Interaction::PointableCanvasModule::$$c__DisplayClass24_0::$AddPointerCanvas$b__0(::Oculus::Interaction::PointerEvent args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasModule::$$c__DisplayClass24_0::<AddPointerCanvas>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddPointerCanvas>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableCanvasUnityEventWrapper
#include "Oculus/Interaction/PointableCanvasUnityEventWrapper.hpp"
// Including type: Oculus.Interaction.IPointableCanvas
#include "Oculus/Interaction/IPointableCanvas.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Oculus.Interaction.PointableCanvasEventArgs
#include "Oculus/Interaction/PointableCanvasEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _pointableCanvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__pointableCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__pointableCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointableCanvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IPointableCanvas PointableCanvas
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPointableCanvas*& Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn_PointableCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn_PointableCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PointableCanvas"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IPointableCanvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _suppressWhileDragging
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__suppressWhileDragging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__suppressWhileDragging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suppressWhileDragging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenBeginHighlight
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenBeginHighlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenBeginHighlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenBeginHighlight"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenEndHighlight
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenEndHighlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenEndHighlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenEndHighlight"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenSelectedHovered
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenSelectedHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenSelectedHovered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenSelectedHovered"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenSelectedEmpty
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenSelectedEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenSelectedEmpty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenSelectedEmpty"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenUnselectedHovered
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenUnselectedHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenUnselectedHovered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenUnselectedHovered"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenUnselectedEmpty
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenUnselectedEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__whenUnselectedEmpty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenUnselectedEmpty"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasUnityEventWrapper.ShouldFireEvent
bool Oculus::Interaction::PointableCanvasUnityEventWrapper::ShouldFireEvent(::Oculus::Interaction::PointableCanvasEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::ShouldFireEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldFireEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasUnityEventWrapper.PointableCanvasModule_WhenSelectableHoverEnter
void Oculus::Interaction::PointableCanvasUnityEventWrapper::PointableCanvasModule_WhenSelectableHoverEnter(::Oculus::Interaction::PointableCanvasEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::PointableCanvasModule_WhenSelectableHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointableCanvasModule_WhenSelectableHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasUnityEventWrapper.PointableCanvasModule_WhenSelectableHoverExit
void Oculus::Interaction::PointableCanvasUnityEventWrapper::PointableCanvasModule_WhenSelectableHoverExit(::Oculus::Interaction::PointableCanvasEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::PointableCanvasModule_WhenSelectableHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointableCanvasModule_WhenSelectableHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasUnityEventWrapper.PointableCanvasModule_WhenSelectableSelected
void Oculus::Interaction::PointableCanvasUnityEventWrapper::PointableCanvasModule_WhenSelectableSelected(::Oculus::Interaction::PointableCanvasEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::PointableCanvasModule_WhenSelectableSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointableCanvasModule_WhenSelectableSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasUnityEventWrapper.PointableCanvasModule_WhenSelectableUnselected
void Oculus::Interaction::PointableCanvasUnityEventWrapper::PointableCanvasModule_WhenSelectableUnselected(::Oculus::Interaction::PointableCanvasEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::PointableCanvasModule_WhenSelectableUnselected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointableCanvasModule_WhenSelectableUnselected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasUnityEventWrapper.Awake
void Oculus::Interaction::PointableCanvasUnityEventWrapper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableCanvasUnityEventWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasUnityEventWrapper.Start
void Oculus::Interaction::PointableCanvasUnityEventWrapper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableCanvasUnityEventWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasUnityEventWrapper.OnEnable
void Oculus::Interaction::PointableCanvasUnityEventWrapper::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableCanvasUnityEventWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableCanvasUnityEventWrapper.OnDisable
void Oculus::Interaction::PointableCanvasUnityEventWrapper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableCanvasUnityEventWrapper::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableCanvasUnityEventWrapper*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PointableUnityEventWrapper
#include "Oculus/Interaction/PointableUnityEventWrapper.hpp"
// Including type: Oculus.Interaction.IPointable
#include "Oculus/Interaction/IPointable.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _pointable
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::PointableUnityEventWrapper::dyn__pointable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn__pointable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointable"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IPointable Pointable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IPointable*& Oculus::Interaction::PointableUnityEventWrapper::dyn_Pointable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn_Pointable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pointable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IPointable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> _pointers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& Oculus::Interaction::PointableUnityEventWrapper::dyn__pointers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn__pointers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`1<Oculus.Interaction.PointerEvent> _whenRelease
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*& Oculus::Interaction::PointableUnityEventWrapper::dyn__whenRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn__whenRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenRelease"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`1<Oculus.Interaction.PointerEvent> _whenHover
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*& Oculus::Interaction::PointableUnityEventWrapper::dyn__whenHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn__whenHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenHover"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`1<Oculus.Interaction.PointerEvent> _whenUnhover
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*& Oculus::Interaction::PointableUnityEventWrapper::dyn__whenUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn__whenUnhover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenUnhover"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`1<Oculus.Interaction.PointerEvent> _whenSelect
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*& Oculus::Interaction::PointableUnityEventWrapper::dyn__whenSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn__whenSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenSelect"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`1<Oculus.Interaction.PointerEvent> _whenUnselect
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*& Oculus::Interaction::PointableUnityEventWrapper::dyn__whenUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn__whenUnselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenUnselect"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`1<Oculus.Interaction.PointerEvent> _whenMove
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*& Oculus::Interaction::PointableUnityEventWrapper::dyn__whenMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn__whenMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenMove"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`1<Oculus.Interaction.PointerEvent> _whenCancel
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*& Oculus::Interaction::PointableUnityEventWrapper::dyn__whenCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn__whenCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenCancel"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PointableUnityEventWrapper::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.get_WhenRelease
::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>* Oculus::Interaction::PointableUnityEventWrapper::get_WhenRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::get_WhenRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.get_WhenHover
::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>* Oculus::Interaction::PointableUnityEventWrapper::get_WhenHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::get_WhenHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.get_WhenUnhover
::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>* Oculus::Interaction::PointableUnityEventWrapper::get_WhenUnhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::get_WhenUnhover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenUnhover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.get_WhenSelect
::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>* Oculus::Interaction::PointableUnityEventWrapper::get_WhenSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::get_WhenSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.get_WhenUnselect
::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>* Oculus::Interaction::PointableUnityEventWrapper::get_WhenUnselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::get_WhenUnselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenUnselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.get_WhenMove
::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>* Oculus::Interaction::PointableUnityEventWrapper::get_WhenMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::get_WhenMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.get_WhenCancel
::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>* Oculus::Interaction::PointableUnityEventWrapper::get_WhenCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::get_WhenCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::Oculus::Interaction::PointerEvent>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.Awake
void Oculus::Interaction::PointableUnityEventWrapper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableUnityEventWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.Start
void Oculus::Interaction::PointableUnityEventWrapper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableUnityEventWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.OnEnable
void Oculus::Interaction::PointableUnityEventWrapper::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableUnityEventWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.OnDisable
void Oculus::Interaction::PointableUnityEventWrapper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PointableUnityEventWrapper*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.HandlePointerEventRaised
void Oculus::Interaction::PointableUnityEventWrapper::HandlePointerEventRaised(::Oculus::Interaction::PointerEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::HandlePointerEventRaised");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerEventRaised", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.InjectAllPointableUnityEventWrapper
void Oculus::Interaction::PointableUnityEventWrapper::InjectAllPointableUnityEventWrapper(::Oculus::Interaction::IPointable* pointable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::InjectAllPointableUnityEventWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllPointableUnityEventWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointable);
}
// Autogenerated method: Oculus.Interaction.PointableUnityEventWrapper.InjectPointable
void Oculus::Interaction::PointableUnityEventWrapper::InjectPointable(::Oculus::Interaction::IPointable* pointable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PointableUnityEventWrapper::InjectPointable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPointable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointable);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SelectorUnityEventWrapper
#include "Oculus/Interaction/SelectorUnityEventWrapper.hpp"
// Including type: Oculus.Interaction.ISelector
#include "Oculus/Interaction/ISelector.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _selector
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::SelectorUnityEventWrapper::dyn__selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::dyn__selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selector"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ISelector Selector
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ISelector*& Oculus::Interaction::SelectorUnityEventWrapper::dyn_Selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::dyn_Selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Selector"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ISelector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenSelected
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::SelectorUnityEventWrapper::dyn__whenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::dyn__whenSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenSelected"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenUnselected
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::SelectorUnityEventWrapper::dyn__whenUnselected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::dyn__whenUnselected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenUnselected"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::SelectorUnityEventWrapper::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.SelectorUnityEventWrapper.get_WhenSelected
::UnityEngine::Events::UnityEvent* Oculus::Interaction::SelectorUnityEventWrapper::get_WhenSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::get_WhenSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorUnityEventWrapper.get_WhenUnselected
::UnityEngine::Events::UnityEvent* Oculus::Interaction::SelectorUnityEventWrapper::get_WhenUnselected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::get_WhenUnselected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenUnselected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorUnityEventWrapper.Awake
void Oculus::Interaction::SelectorUnityEventWrapper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SelectorUnityEventWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorUnityEventWrapper.Start
void Oculus::Interaction::SelectorUnityEventWrapper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SelectorUnityEventWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorUnityEventWrapper.OnEnable
void Oculus::Interaction::SelectorUnityEventWrapper::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SelectorUnityEventWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorUnityEventWrapper.OnDisable
void Oculus::Interaction::SelectorUnityEventWrapper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::SelectorUnityEventWrapper*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorUnityEventWrapper.HandleSelected
void Oculus::Interaction::SelectorUnityEventWrapper::HandleSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::HandleSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorUnityEventWrapper.HandleUnselected
void Oculus::Interaction::SelectorUnityEventWrapper::HandleUnselected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::HandleUnselected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUnselected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.SelectorUnityEventWrapper.InjectAllSelectorUnityEventWrapper
void Oculus::Interaction::SelectorUnityEventWrapper::InjectAllSelectorUnityEventWrapper(::Oculus::Interaction::ISelector* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::InjectAllSelectorUnityEventWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllSelectorUnityEventWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector);
}
// Autogenerated method: Oculus.Interaction.SelectorUnityEventWrapper.InjectSelector
void Oculus::Interaction::SelectorUnityEventWrapper::InjectSelector(::Oculus::Interaction::ISelector* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SelectorUnityEventWrapper::InjectSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ToggleDeselect
#include "Oculus/Interaction/ToggleDeselect.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _clearStateOnDrag
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::ToggleDeselect::dyn__clearStateOnDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ToggleDeselect::dyn__clearStateOnDrag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearStateOnDrag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ToggleDeselect.get_ClearStateOnDrag
bool Oculus::Interaction::ToggleDeselect::get_ClearStateOnDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ToggleDeselect::get_ClearStateOnDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClearStateOnDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ToggleDeselect.set_ClearStateOnDrag
void Oculus::Interaction::ToggleDeselect::set_ClearStateOnDrag(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ToggleDeselect::set_ClearStateOnDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClearStateOnDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ToggleDeselect.OnBeginDrag
void Oculus::Interaction::ToggleDeselect::OnBeginDrag(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ToggleDeselect::OnBeginDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEventData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityInfo
#include "Oculus/Interaction/UnityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.UnityInfo.IsEditor
bool Oculus::Interaction::UnityInfo::IsEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityInfo::IsEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "UnityInfo", "IsEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityInfo.Version_2020_3_Or_Newer
bool Oculus::Interaction::UnityInfo::Version_2020_3_Or_Newer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityInfo::Version_2020_3_Or_Newer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "UnityInfo", "Version_2020_3_Or_Newer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.AssertUtils
#include "Oculus/Interaction/AssertUtils.hpp"
// Including type: Oculus.Interaction.AssertUtils/<>c
#include "Oculus/Interaction/AssertUtils_--c.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String HiglightColor
::StringW Oculus::Interaction::AssertUtils::_get_HiglightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AssertUtils::_get_HiglightColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction", "AssertUtils", "HiglightColor"));
}
// Autogenerated static field setter
// Set static field: static public System.String HiglightColor
void Oculus::Interaction::AssertUtils::_set_HiglightColor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AssertUtils::_set_HiglightColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "AssertUtils", "HiglightColor", value));
}
// Autogenerated method: Oculus.Interaction.AssertUtils.AssertIsTrue
void Oculus::Interaction::AssertUtils::AssertIsTrue(::UnityEngine::Component* component, bool value, ::StringW whyItFailed, ::StringW whereItFailed, ::StringW howToFix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AssertUtils::AssertIsTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "AssertUtils", "AssertIsTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(whyItFailed), ::il2cpp_utils::ExtractType(whereItFailed), ::il2cpp_utils::ExtractType(howToFix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, value, whyItFailed, whereItFailed, howToFix);
}
// Autogenerated method: Oculus.Interaction.AssertUtils.Nicify
::StringW Oculus::Interaction::AssertUtils::Nicify(::StringW variableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AssertUtils::Nicify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "AssertUtils", "Nicify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variableName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variableName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.AssertUtils/<>c
#include "Oculus/Interaction/AssertUtils_--c.hpp"
// Including type: System.Text.RegularExpressions.MatchEvaluator
#include "System/Text/RegularExpressions/MatchEvaluator.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.AssertUtils/<>c <>9
::Oculus::Interaction::AssertUtils::$$c* Oculus::Interaction::AssertUtils::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AssertUtils::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::AssertUtils::$$c*>("Oculus.Interaction", "AssertUtils/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.AssertUtils/<>c <>9
void Oculus::Interaction::AssertUtils::$$c::_set_$$9(::Oculus::Interaction::AssertUtils::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AssertUtils::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "AssertUtils/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.MatchEvaluator <>9__6_0
::System::Text::RegularExpressions::MatchEvaluator* Oculus::Interaction::AssertUtils::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AssertUtils::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::MatchEvaluator*>("Oculus.Interaction", "AssertUtils/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.MatchEvaluator <>9__6_0
void Oculus::Interaction::AssertUtils::$$c::_set_$$9__6_0(::System::Text::RegularExpressions::MatchEvaluator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AssertUtils::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "AssertUtils/<>c", "<>9__6_0", value)));
}
// Autogenerated method: Oculus.Interaction.AssertUtils/<>c..cctor
void Oculus::Interaction::AssertUtils::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AssertUtils::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "AssertUtils/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AssertUtils/<>c.<Nicify>b__6_0
::StringW Oculus::Interaction::AssertUtils::$$c::$Nicify$b__6_0(::System::Text::RegularExpressions::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AssertUtils::$$c::<Nicify>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Nicify>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(match)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, match);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.BoundsExtensions
#include "Oculus/Interaction/BoundsExtensions.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.BoundsExtensions.Clip
bool Oculus::Interaction::BoundsExtensions::Clip(::UnityEngine::Bounds bounds, ByRef<::UnityEngine::Bounds> clipper, ByRef<::UnityEngine::Bounds> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::BoundsExtensions::Clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "BoundsExtensions", "Clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(clipper), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Bounds&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bounds, byref(clipper), byref(result));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ConeUtils
#include "Oculus/Interaction/ConeUtils.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.ConeUtils.RayWithinCone
bool Oculus::Interaction::ConeUtils::RayWithinCone(::UnityEngine::Ray ray, ::UnityEngine::Vector3 position, float apertureDegrees) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ConeUtils::RayWithinCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "ConeUtils", "RayWithinCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(apertureDegrees)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, position, apertureDegrees);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions
#include "Oculus/Interaction/MonoBehaviourEndOfFrameExtensions.hpp"
// Including type: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions/<EndOfFrameCoroutine>d__4
#include "Oculus/Interaction/MonoBehaviourEndOfFrameExtensions_-EndOfFrameCoroutine-d__4.hpp"
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.YieldInstruction _endOfFrame
::UnityEngine::YieldInstruction* Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::_get__endOfFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::_get__endOfFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::YieldInstruction*>("Oculus.Interaction", "MonoBehaviourEndOfFrameExtensions", "_endOfFrame"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.YieldInstruction _endOfFrame
void Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::_set__endOfFrame(::UnityEngine::YieldInstruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::_set__endOfFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "MonoBehaviourEndOfFrameExtensions", "_endOfFrame", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.MonoBehaviour,UnityEngine.Coroutine> _routines
::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::UnityEngine::Coroutine*>* Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::_get__routines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::_get__routines");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::UnityEngine::Coroutine*>*>("Oculus.Interaction", "MonoBehaviourEndOfFrameExtensions", "_routines")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.MonoBehaviour,UnityEngine.Coroutine> _routines
void Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::_set__routines(::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::UnityEngine::Coroutine*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::_set__routines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "MonoBehaviourEndOfFrameExtensions", "_routines", value));
}
// Autogenerated method: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions.RegisterEndOfFrameCallback
void Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::RegisterEndOfFrameCallback(::UnityEngine::MonoBehaviour* monoBehaviour, ::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::RegisterEndOfFrameCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "MonoBehaviourEndOfFrameExtensions", "RegisterEndOfFrameCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviour), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, monoBehaviour, callback);
}
// Autogenerated method: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions.UnregisterEndOfFrameCallback
void Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::UnregisterEndOfFrameCallback(::UnityEngine::MonoBehaviour* monoBehaviour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::UnregisterEndOfFrameCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "MonoBehaviourEndOfFrameExtensions", "UnregisterEndOfFrameCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, monoBehaviour);
}
// Autogenerated method: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions.EndOfFrameCoroutine
::System::Collections::IEnumerator* Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::EndOfFrameCoroutine(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::EndOfFrameCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "MonoBehaviourEndOfFrameExtensions", "EndOfFrameCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions..cctor
void Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "MonoBehaviourEndOfFrameExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions/<EndOfFrameCoroutine>d__4
#include "Oculus/Interaction/MonoBehaviourEndOfFrameExtensions_-EndOfFrameCoroutine-d__4.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action callback
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions/<EndOfFrameCoroutine>d__4.System.IDisposable.Dispose
void Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions/<EndOfFrameCoroutine>d__4.MoveNext
bool Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions/<EndOfFrameCoroutine>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions/<EndOfFrameCoroutine>d__4.System.Collections.IEnumerator.Reset
void Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MonoBehaviourEndOfFrameExtensions/<EndOfFrameCoroutine>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::MonoBehaviourEndOfFrameExtensions::$EndOfFrameCoroutine$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.NativeMethods
#include "Oculus/Interaction/NativeMethods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 IsdkSuccess
int Oculus::Interaction::NativeMethods::_get_IsdkSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::NativeMethods::_get_IsdkSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction", "NativeMethods", "IsdkSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 IsdkSuccess
void Oculus::Interaction::NativeMethods::_set_IsdkSuccess(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::NativeMethods::_set_IsdkSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction", "NativeMethods", "IsdkSuccess", value));
}
// Autogenerated method: Oculus.Interaction.NativeMethods.isdk_NativeComponent_Activate
int Oculus::Interaction::NativeMethods::isdk_NativeComponent_Activate(uint64_t id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::NativeMethods::isdk_NativeComponent_Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "NativeMethods", "isdk_NativeComponent_Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PoseUtils
#include "Oculus/Interaction/PoseUtils.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: UnityEngine.Space
#include "UnityEngine/Space.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.PoseUtils.SetPose
void Oculus::Interaction::PoseUtils::SetPose(::UnityEngine::Transform* transform, ByRef<::UnityEngine::Pose> pose, ::UnityEngine::Space space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::SetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "SetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(space)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, byref(pose), space);
}
// Autogenerated method: Oculus.Interaction.PoseUtils.GetPose
::UnityEngine::Pose Oculus::Interaction::PoseUtils::GetPose(::UnityEngine::Transform* transform, ::UnityEngine::Space space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::GetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "GetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(space)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, space);
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Multiply
void Oculus::Interaction::PoseUtils::Multiply(ByRef<::UnityEngine::Pose> a, ByRef<::UnityEngine::Pose> b, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b), byref(result));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Multiply
::UnityEngine::Pose Oculus::Interaction::PoseUtils::Multiply(ByRef<::UnityEngine::Pose> a, ByRef<::UnityEngine::Pose> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Premultiply
void Oculus::Interaction::PoseUtils::Premultiply(ByRef<::UnityEngine::Pose> a, ByRef<::UnityEngine::Pose> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Premultiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Premultiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Postmultiply
void Oculus::Interaction::PoseUtils::Postmultiply(ByRef<::UnityEngine::Pose> a, ByRef<::UnityEngine::Pose> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Postmultiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Postmultiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Lerp
void Oculus::Interaction::PoseUtils::Lerp(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(from), byref(to), t);
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Lerp
void Oculus::Interaction::PoseUtils::Lerp(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to, float t, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(from), byref(to), t, byref(result));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Inverse
void Oculus::Interaction::PoseUtils::Inverse(ByRef<::UnityEngine::Pose> a, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(result));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Invert
void Oculus::Interaction::PoseUtils::Invert(ByRef<::UnityEngine::Pose> a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Invert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Invert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.CopyFrom
void Oculus::Interaction::PoseUtils::CopyFrom(ByRef<::UnityEngine::Pose> to, ByRef<::UnityEngine::Pose> from) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(from)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(to), byref(from));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Delta
::UnityEngine::Pose Oculus::Interaction::PoseUtils::Delta(::UnityEngine::Transform* from, ::UnityEngine::Transform* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Delta
::UnityEngine::Pose Oculus::Interaction::PoseUtils::Delta(::UnityEngine::Transform* from, ByRef<::UnityEngine::Pose> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, byref(to));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Delta
void Oculus::Interaction::PoseUtils::Delta(::UnityEngine::Transform* from, ByRef<::UnityEngine::Pose> to, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, byref(to), byref(result));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Delta
::UnityEngine::Pose Oculus::Interaction::PoseUtils::Delta(ByRef<::UnityEngine::Pose> from, ByRef<::UnityEngine::Pose> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(from), byref(to));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Delta
::UnityEngine::Pose Oculus::Interaction::PoseUtils::Delta(::UnityEngine::Vector3 fromPosition, ::UnityEngine::Quaternion fromRotation, ::UnityEngine::Vector3 toPosition, ::UnityEngine::Quaternion toRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromPosition), ::il2cpp_utils::ExtractType(fromRotation), ::il2cpp_utils::ExtractType(toPosition), ::il2cpp_utils::ExtractType(toRotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromPosition, fromRotation, toPosition, toRotation);
}
// Autogenerated method: Oculus.Interaction.PoseUtils.Delta
void Oculus::Interaction::PoseUtils::Delta(::UnityEngine::Vector3 fromPosition, ::UnityEngine::Quaternion fromRotation, ::UnityEngine::Vector3 toPosition, ::UnityEngine::Quaternion toRotation, ByRef<::UnityEngine::Pose> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromPosition), ::il2cpp_utils::ExtractType(fromRotation), ::il2cpp_utils::ExtractType(toPosition), ::il2cpp_utils::ExtractType(toRotation), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromPosition, fromRotation, toPosition, toRotation, byref(result));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.DeltaScaled
::UnityEngine::Pose Oculus::Interaction::PoseUtils::DeltaScaled(::UnityEngine::Transform* from, ::UnityEngine::Transform* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::DeltaScaled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "DeltaScaled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: Oculus.Interaction.PoseUtils.DeltaScaled
::UnityEngine::Pose Oculus::Interaction::PoseUtils::DeltaScaled(::UnityEngine::Transform* from, ::UnityEngine::Pose to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::DeltaScaled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "DeltaScaled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: Oculus.Interaction.PoseUtils.GlobalPose
::UnityEngine::Pose Oculus::Interaction::PoseUtils::GlobalPose(::UnityEngine::Transform* reference, ByRef<::UnityEngine::Pose> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::GlobalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "GlobalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reference), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reference, byref(offset));
}
// Autogenerated method: Oculus.Interaction.PoseUtils.GlobalPoseScaled
::UnityEngine::Pose Oculus::Interaction::PoseUtils::GlobalPoseScaled(::UnityEngine::Transform* relativeTo, ::UnityEngine::Pose offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::GlobalPoseScaled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "GlobalPoseScaled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeTo), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, relativeTo, offset);
}
// Autogenerated method: Oculus.Interaction.PoseUtils.MirrorPoseRotation
::UnityEngine::Pose Oculus::Interaction::PoseUtils::MirrorPoseRotation(ByRef<::UnityEngine::Pose> pose, ::UnityEngine::Vector3 normal, ::UnityEngine::Vector3 tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PoseUtils::MirrorPoseRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "PoseUtils", "MirrorPoseRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(tangent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pose), normal, tangent);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ProgressCurve
#include "Oculus/Interaction/ProgressCurve.hpp"
// Including type: Oculus.Interaction.ProgressCurve/<>c
#include "Oculus/Interaction/ProgressCurve_--c.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _animationCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::ProgressCurve::dyn__animationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::dyn__animationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ProgressCurve::dyn__animationLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::dyn__animationLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Single> _timeProvider
[[deprecated("Use field access instead!")]] ::System::Func_1<float>*& Oculus::Interaction::ProgressCurve::dyn__timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::dyn__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  return *reinterpret_cast<::System::Func_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationStartTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::ProgressCurve::dyn__animationStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::dyn__animationStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.get_AnimationCurve
::UnityEngine::AnimationCurve* Oculus::Interaction::ProgressCurve::get_AnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::get_AnimationCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnimationCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.set_AnimationCurve
void Oculus::Interaction::ProgressCurve::set_AnimationCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::set_AnimationCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AnimationCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.get_AnimationLength
float Oculus::Interaction::ProgressCurve::get_AnimationLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::get_AnimationLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnimationLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.set_AnimationLength
void Oculus::Interaction::ProgressCurve::set_AnimationLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::set_AnimationLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AnimationLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.get_TimeProvider
::System::Func_1<float>* Oculus::Interaction::ProgressCurve::get_TimeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::get_TimeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<float>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.set_TimeProvider
void Oculus::Interaction::ProgressCurve::set_TimeProvider(::System::Func_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::set_TimeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TimeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.Copy
void Oculus::Interaction::ProgressCurve::Copy(::Oculus::Interaction::ProgressCurve* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.Start
void Oculus::Interaction::ProgressCurve::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.Progress
float Oculus::Interaction::ProgressCurve::Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::Progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.ProgressIn
float Oculus::Interaction::ProgressCurve::ProgressIn(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::ProgressIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProgressIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.ProgressTime
float Oculus::Interaction::ProgressCurve::ProgressTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::ProgressTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProgressTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve.End
void Oculus::Interaction::ProgressCurve::End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ProgressCurve/<>c
#include "Oculus/Interaction/ProgressCurve_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.ProgressCurve/<>c <>9
::Oculus::Interaction::ProgressCurve::$$c* Oculus::Interaction::ProgressCurve::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::ProgressCurve::$$c*>("Oculus.Interaction", "ProgressCurve/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.ProgressCurve/<>c <>9
void Oculus::Interaction::ProgressCurve::$$c::_set_$$9(::Oculus::Interaction::ProgressCurve::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ProgressCurve/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Single> <>9__13_0
::System::Func_1<float>* Oculus::Interaction::ProgressCurve::$$c::_get_$$9__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::_get_$$9__13_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<float>*>("Oculus.Interaction", "ProgressCurve/<>c", "<>9__13_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Single> <>9__13_0
void Oculus::Interaction::ProgressCurve::$$c::_set_$$9__13_0(::System::Func_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::_set_$$9__13_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ProgressCurve/<>c", "<>9__13_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Single> <>9__14_0
::System::Func_1<float>* Oculus::Interaction::ProgressCurve::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<float>*>("Oculus.Interaction", "ProgressCurve/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Single> <>9__14_0
void Oculus::Interaction::ProgressCurve::$$c::_set_$$9__14_0(::System::Func_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ProgressCurve/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Single> <>9__15_0
::System::Func_1<float>* Oculus::Interaction::ProgressCurve::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<float>*>("Oculus.Interaction", "ProgressCurve/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Single> <>9__15_0
void Oculus::Interaction::ProgressCurve::$$c::_set_$$9__15_0(::System::Func_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "ProgressCurve/<>c", "<>9__15_0", value)));
}
// Autogenerated method: Oculus.Interaction.ProgressCurve/<>c..cctor
void Oculus::Interaction::ProgressCurve::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "ProgressCurve/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve/<>c.<.ctor>b__13_0
float Oculus::Interaction::ProgressCurve::$$c::$_ctor$b__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::<.ctor>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve/<>c.<.ctor>b__14_0
float Oculus::Interaction::ProgressCurve::$$c::$_ctor$b__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::<.ctor>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ProgressCurve/<>c.<.ctor>b__15_0
float Oculus::Interaction::ProgressCurve::$$c::$_ctor$b__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ProgressCurve::$$c::<.ctor>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.SurfaceUtils
#include "Oculus/Interaction/SurfaceUtils.hpp"
// Including type: Oculus.Interaction.Surfaces.ISurfacePatch
#include "Oculus/Interaction/Surfaces/ISurfacePatch.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.SurfaceUtils.ComputeDistanceAbove
float Oculus::Interaction::SurfaceUtils::ComputeDistanceAbove(::Oculus::Interaction::Surfaces::ISurfacePatch* surfacePatch, ::UnityEngine::Vector3 point, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceUtils::ComputeDistanceAbove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "SurfaceUtils", "ComputeDistanceAbove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surfacePatch), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, surfacePatch, point, radius);
}
// Autogenerated method: Oculus.Interaction.SurfaceUtils.ComputeTangentDistance
float Oculus::Interaction::SurfaceUtils::ComputeTangentDistance(::Oculus::Interaction::Surfaces::ISurfacePatch* surfacePatch, ::UnityEngine::Vector3 point, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceUtils::ComputeTangentDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "SurfaceUtils", "ComputeTangentDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surfacePatch), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, surfacePatch, point, radius);
}
// Autogenerated method: Oculus.Interaction.SurfaceUtils.ComputeDepth
float Oculus::Interaction::SurfaceUtils::ComputeDepth(::Oculus::Interaction::Surfaces::ISurfacePatch* surfacePatch, ::UnityEngine::Vector3 point, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceUtils::ComputeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "SurfaceUtils", "ComputeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surfacePatch), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, surfacePatch, point, radius);
}
// Autogenerated method: Oculus.Interaction.SurfaceUtils.ComputeDistanceFrom
float Oculus::Interaction::SurfaceUtils::ComputeDistanceFrom(::Oculus::Interaction::Surfaces::ISurfacePatch* surfacePatch, ::UnityEngine::Vector3 point, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::SurfaceUtils::ComputeDistanceFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "SurfaceUtils", "ComputeDistanceFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(surfacePatch), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, surfacePatch, point, radius);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.VersionTextVisual
#include "Oculus/Interaction/VersionTextVisual.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& Oculus::Interaction::VersionTextVisual::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VersionTextVisual::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.VersionTextVisual.Start
void Oculus::Interaction::VersionTextVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VersionTextVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::VersionTextVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.VersionTextVisual.InjectAllVersionTextVisual
void Oculus::Interaction::VersionTextVisual::InjectAllVersionTextVisual(::TMPro::TextMeshPro* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VersionTextVisual::InjectAllVersionTextVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllVersionTextVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Interaction.VersionTextVisual.InjectText
void Oculus::Interaction::VersionTextVisual::InjectText(::TMPro::TextMeshPro* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::VersionTextVisual::InjectText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.InterfaceAttribute
#include "Oculus/Interaction/InterfaceAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type[] Types
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& Oculus::Interaction::InterfaceAttribute::dyn_Types() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InterfaceAttribute::dyn_Types");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Types"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TypeFromFieldName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Interaction::InterfaceAttribute::dyn_TypeFromFieldName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::InterfaceAttribute::dyn_TypeFromFieldName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypeFromFieldName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasCylinder
#include "Oculus/Interaction/UnityCanvas/CanvasCylinder.hpp"
// Including type: Oculus.Interaction.Surfaces.CylinderSegment
#include "Oculus/Interaction/Surfaces/CylinderSegment.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasCylinder/<>c__DisplayClass31_0
#include "Oculus/Interaction/UnityCanvas/CanvasCylinder_--c__DisplayClass31_0.hpp"
// Including type: Oculus.Interaction.Cylinder
#include "Oculus/Interaction/Cylinder.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Vector2Int
#include "UnityEngine/Vector2Int.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MIN_RESOLUTION
int Oculus::Interaction::UnityCanvas::CanvasCylinder::_get_MIN_RESOLUTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::_get_MIN_RESOLUTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.UnityCanvas", "CanvasCylinder", "MIN_RESOLUTION"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MIN_RESOLUTION
void Oculus::Interaction::UnityCanvas::CanvasCylinder::_set_MIN_RESOLUTION(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::_set_MIN_RESOLUTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasCylinder", "MIN_RESOLUTION", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Cylinder _cylinder
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Cylinder*& Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn__cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn__cylinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cylinder"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Cylinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.CylinderOrientation _orientation
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::CylinderOrientation& Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn__orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn__orientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_orientation"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::CylinderOrientation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.UnityCanvas.CanvasCylinder/MeshGenerationSettings _meshGeneration
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::UnityCanvas::CanvasCylinder::MeshGenerationSettings& Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn__meshGeneration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn__meshGeneration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshGeneration"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::UnityCanvas::CanvasCylinder::MeshGenerationSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <ArcDegrees>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn_$ArcDegrees$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn_$ArcDegrees$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ArcDegrees>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Rotation>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn_$Rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn_$Rotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Rotation>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Bottom>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn_$Bottom$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn_$Bottom$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Bottom>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Top>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn_$Top$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::dyn_$Top$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Top>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.get_Radius
float Oculus::Interaction::UnityCanvas::CanvasCylinder::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::get_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.get_Cylinder
::Oculus::Interaction::Cylinder* Oculus::Interaction::UnityCanvas::CanvasCylinder::get_Cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::get_Cylinder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasCylinder*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Cylinder*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.get_ArcDegrees
float Oculus::Interaction::UnityCanvas::CanvasCylinder::get_ArcDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::get_ArcDegrees");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasCylinder*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.set_ArcDegrees
void Oculus::Interaction::UnityCanvas::CanvasCylinder::set_ArcDegrees(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::set_ArcDegrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ArcDegrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.get_Rotation
float Oculus::Interaction::UnityCanvas::CanvasCylinder::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::get_Rotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasCylinder*), 13));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.set_Rotation
void Oculus::Interaction::UnityCanvas::CanvasCylinder::set_Rotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::set_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.get_Bottom
float Oculus::Interaction::UnityCanvas::CanvasCylinder::get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::get_Bottom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasCylinder*), 14));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.set_Bottom
void Oculus::Interaction::UnityCanvas::CanvasCylinder::set_Bottom(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::set_Bottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Bottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.get_Top
float Oculus::Interaction::UnityCanvas::CanvasCylinder::get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::get_Top");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasCylinder*), 15));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.set_Top
void Oculus::Interaction::UnityCanvas::CanvasCylinder::set_Top(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::set_Top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.get_CylinderRelativeScale
float Oculus::Interaction::UnityCanvas::CanvasCylinder::get_CylinderRelativeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::get_CylinderRelativeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CylinderRelativeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.GetCylinderSegment
bool Oculus::Interaction::UnityCanvas::CanvasCylinder::GetCylinderSegment(ByRef<::Oculus::Interaction::Surfaces::CylinderSegment> segment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::GetCylinderSegment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasCylinder*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(segment));
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.UpdateMeshPosition
void Oculus::Interaction::UnityCanvas::CanvasCylinder::UpdateMeshPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::UpdateMeshPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.GetWorldSize
::UnityEngine::Vector2 Oculus::Interaction::UnityCanvas::CanvasCylinder::GetWorldSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::GetWorldSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.UpdateCurvedPlane
void Oculus::Interaction::UnityCanvas::CanvasCylinder::UpdateCurvedPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::UpdateCurvedPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCurvedPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.InjectAllCanvasCylinder
void Oculus::Interaction::UnityCanvas::CanvasCylinder::InjectAllCanvasCylinder(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture* canvasRenderTexture, ::UnityEngine::MeshFilter* meshFilter, ::Oculus::Interaction::Cylinder* cylinder, ::Oculus::Interaction::CylinderOrientation orientation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::InjectAllCanvasCylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllCanvasCylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvasRenderTexture), ::il2cpp_utils::ExtractType(meshFilter), ::il2cpp_utils::ExtractType(cylinder), ::il2cpp_utils::ExtractType(orientation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvasRenderTexture, meshFilter, cylinder, orientation);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.InjectCylinder
void Oculus::Interaction::UnityCanvas::CanvasCylinder::InjectCylinder(::Oculus::Interaction::Cylinder* cylinder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::InjectCylinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCylinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cylinder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cylinder);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.InjectOrientation
void Oculus::Interaction::UnityCanvas::CanvasCylinder::InjectOrientation(::Oculus::Interaction::CylinderOrientation orientation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::InjectOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(orientation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, orientation);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.<Start>b__28_0
void Oculus::Interaction::UnityCanvas::CanvasCylinder::$Start$b__28_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::<Start>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__28_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.<GenerateMesh>g__GetClampedResolution|31_0
::UnityEngine::Vector2Int Oculus::Interaction::UnityCanvas::CanvasCylinder::$GenerateMesh$g__GetClampedResolution_31_0(float arcMax, float axisMax, ByRef<::Oculus::Interaction::UnityCanvas::CanvasCylinder::$$c__DisplayClass31_0> param_2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::<GenerateMesh>g__GetClampedResolution|31_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateMesh>g__GetClampedResolution|31_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arcMax), ::il2cpp_utils::ExtractType(axisMax), ::il2cpp_utils::ExtractType(param_2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2Int, false>(this, ___internal__method, arcMax, axisMax, byref(param_2));
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.<GenerateMesh>g__GetCurvedPoint|31_1
::UnityEngine::Vector3 Oculus::Interaction::UnityCanvas::CanvasCylinder::$GenerateMesh$g__GetCurvedPoint_31_1(float u, float v, ByRef<::Oculus::Interaction::UnityCanvas::CanvasCylinder::$$c__DisplayClass31_0> param_2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::<GenerateMesh>g__GetCurvedPoint|31_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateMesh>g__GetCurvedPoint|31_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(param_2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, u, v, byref(param_2));
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.Start
void Oculus::Interaction::UnityCanvas::CanvasCylinder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.UpdateImposter
void Oculus::Interaction::UnityCanvas::CanvasCylinder::UpdateImposter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::UpdateImposter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.MeshInverseTransform
::UnityEngine::Vector3 Oculus::Interaction::UnityCanvas::CanvasCylinder::MeshInverseTransform(::UnityEngine::Vector3 localPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::MeshInverseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, localPosition);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasCylinder.GenerateMesh
void Oculus::Interaction::UnityCanvas::CanvasCylinder::GenerateMesh(ByRef<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*> verts, ByRef<::System::Collections::Generic::List_1<int>*> tris, ByRef<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*> uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasCylinder::GenerateMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(verts), byref(tris), byref(uvs));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasMesh
#include "Oculus/Interaction/UnityCanvas/CanvasMesh.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected Oculus.Interaction.UnityCanvas.CanvasRenderTexture _canvasRenderTexture
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::UnityCanvas::CanvasRenderTexture*& Oculus::Interaction::UnityCanvas::CanvasMesh::dyn__canvasRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::dyn__canvasRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasRenderTexture"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::UnityCanvas::CanvasRenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.MeshFilter _meshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& Oculus::Interaction::UnityCanvas::CanvasMesh::dyn__meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::dyn__meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.MeshCollider _meshCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& Oculus::Interaction::UnityCanvas::CanvasMesh::dyn__meshCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::dyn__meshCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::UnityCanvas::CanvasMesh::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.MeshInverseTransform
::UnityEngine::Vector3 Oculus::Interaction::UnityCanvas::CanvasMesh::MeshInverseTransform(::UnityEngine::Vector3 localPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::MeshInverseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, localPosition);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.GenerateMesh
void Oculus::Interaction::UnityCanvas::CanvasMesh::GenerateMesh(ByRef<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*> verts, ByRef<::System::Collections::Generic::List_1<int>*> tris, ByRef<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*> uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::GenerateMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(verts), byref(tris), byref(uvs));
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.ImposterToCanvasTransformPoint
::UnityEngine::Vector3 Oculus::Interaction::UnityCanvas::CanvasMesh::ImposterToCanvasTransformPoint(::UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::ImposterToCanvasTransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImposterToCanvasTransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.Start
void Oculus::Interaction::UnityCanvas::CanvasMesh::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.OnEnable
void Oculus::Interaction::UnityCanvas::CanvasMesh::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.OnDisable
void Oculus::Interaction::UnityCanvas::CanvasMesh::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.HandleUpdateRenderTexture
void Oculus::Interaction::UnityCanvas::CanvasMesh::HandleUpdateRenderTexture(::UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::HandleUpdateRenderTexture");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texture);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.UpdateImposter
void Oculus::Interaction::UnityCanvas::CanvasMesh::UpdateImposter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::UpdateImposter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.InjectAllCanvasMesh
void Oculus::Interaction::UnityCanvas::CanvasMesh::InjectAllCanvasMesh(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture* canvasRenderTexture, ::UnityEngine::MeshFilter* meshFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::InjectAllCanvasMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllCanvasMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvasRenderTexture), ::il2cpp_utils::ExtractType(meshFilter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvasRenderTexture, meshFilter);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.InjectCanvasRenderTexture
void Oculus::Interaction::UnityCanvas::CanvasMesh::InjectCanvasRenderTexture(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture* canvasRenderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::InjectCanvasRenderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCanvasRenderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvasRenderTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvasRenderTexture);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.InjectMeshFilter
void Oculus::Interaction::UnityCanvas::CanvasMesh::InjectMeshFilter(::UnityEngine::MeshFilter* meshFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::InjectMeshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMeshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshFilter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, meshFilter);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMesh.InjectOptionalMeshCollider
void Oculus::Interaction::UnityCanvas::CanvasMesh::InjectOptionalMeshCollider(::UnityEngine::MeshCollider* meshCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMesh::InjectOptionalMeshCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalMeshCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, meshCollider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer
#include "Oculus/Interaction/UnityCanvas/CanvasMeshRenderer.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer/Properties
#include "Oculus/Interaction/UnityCanvas/CanvasMeshRenderer_Properties.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Oculus.Interaction.UnityCanvas.RenderingMode
#include "Oculus/Interaction/UnityCanvas/RenderingMode.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MainTexShaderID
int Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::_get_MainTexShaderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::_get_MainTexShaderID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.UnityCanvas", "CanvasMeshRenderer", "MainTexShaderID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MainTexShaderID
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::_set_MainTexShaderID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::_set_MainTexShaderID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasMeshRenderer", "MainTexShaderID", value));
}
// Autogenerated instance field getter
// Get instance field: protected Oculus.Interaction.UnityCanvas.CanvasRenderTexture _canvasRenderTexture
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::UnityCanvas::CanvasRenderTexture*& Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__canvasRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__canvasRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasRenderTexture"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::UnityCanvas::CanvasRenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.MeshRenderer _meshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _renderingMode
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__renderingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__renderingMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderingMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useAlphaToMask
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__useAlphaToMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__useAlphaToMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useAlphaToMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _alphaCutoutThreshold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__alphaCutoutThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__alphaCutoutThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaCutoutThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.get_RenderingMode
::Oculus::Interaction::UnityCanvas::RenderingMode Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::get_RenderingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::get_RenderingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenderingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::UnityCanvas::RenderingMode, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.GetShaderName
::StringW Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::GetShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::GetShaderName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.SetAdditionalProperties
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::SetAdditionalProperties(::UnityEngine::MaterialPropertyBlock* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::SetAdditionalProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, block);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.GetAlphaCutoutThreshold
float Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::GetAlphaCutoutThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::GetAlphaCutoutThreshold");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.HandleUpdateRenderTexture
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::HandleUpdateRenderTexture(::UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::HandleUpdateRenderTexture");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texture);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.Start
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.OnEnable
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.OnDisable
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.InjectAllCanvasMeshRenderer
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectAllCanvasMeshRenderer(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture* canvasRenderTexture, ::UnityEngine::MeshRenderer* meshRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectAllCanvasMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllCanvasMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvasRenderTexture), ::il2cpp_utils::ExtractType(meshRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvasRenderTexture, meshRenderer);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.InjectCanvasRenderTexture
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectCanvasRenderTexture(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture* canvasRenderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectCanvasRenderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCanvasRenderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvasRenderTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvasRenderTexture);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.InjectMeshRenderer
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectMeshRenderer(::UnityEngine::MeshRenderer* meshRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, meshRenderer);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.InjectOptionalRenderingMode
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectOptionalRenderingMode(::Oculus::Interaction::UnityCanvas::RenderingMode renderingMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectOptionalRenderingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalRenderingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderingMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderingMode);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.InjectOptionalAlphaCutoutThreshold
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectOptionalAlphaCutoutThreshold(float alphaCutoutThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectOptionalAlphaCutoutThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalAlphaCutoutThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alphaCutoutThreshold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alphaCutoutThreshold);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer.InjectOptionalUseAlphaToMask
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectOptionalUseAlphaToMask(bool useAlphaToMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::InjectOptionalUseAlphaToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalUseAlphaToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useAlphaToMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useAlphaToMask);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer..cctor
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.UnityCanvas", "CanvasMeshRenderer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer/Properties
#include "Oculus/Interaction/UnityCanvas/CanvasMeshRenderer_Properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String RenderingMode
::StringW Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_get_RenderingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_get_RenderingMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.UnityCanvas", "CanvasMeshRenderer/Properties", "RenderingMode"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String RenderingMode
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_set_RenderingMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_set_RenderingMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasMeshRenderer/Properties", "RenderingMode", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UseAlphaToMask
::StringW Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_get_UseAlphaToMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_get_UseAlphaToMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.UnityCanvas", "CanvasMeshRenderer/Properties", "UseAlphaToMask"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UseAlphaToMask
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_set_UseAlphaToMask(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_set_UseAlphaToMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasMeshRenderer/Properties", "UseAlphaToMask", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String AlphaCutoutThreshold
::StringW Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_get_AlphaCutoutThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_get_AlphaCutoutThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.UnityCanvas", "CanvasMeshRenderer/Properties", "AlphaCutoutThreshold"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String AlphaCutoutThreshold
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_set_AlphaCutoutThreshold(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_set_AlphaCutoutThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasMeshRenderer/Properties", "AlphaCutoutThreshold", value));
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasMeshRenderer/Properties..cctor
void Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasMeshRenderer::Properties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.UnityCanvas", "CanvasMeshRenderer/Properties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasRect
#include "Oculus/Interaction/UnityCanvas/CanvasRect.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRect.InjectAllCanvasRect
void Oculus::Interaction::UnityCanvas::CanvasRect::InjectAllCanvasRect(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture* canvasRenderTexture, ::UnityEngine::MeshFilter* meshFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRect::InjectAllCanvasRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllCanvasRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvasRenderTexture), ::il2cpp_utils::ExtractType(meshFilter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvasRenderTexture, meshFilter);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRect.MeshInverseTransform
::UnityEngine::Vector3 Oculus::Interaction::UnityCanvas::CanvasRect::MeshInverseTransform(::UnityEngine::Vector3 localPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRect::MeshInverseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, localPosition);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRect.GenerateMesh
void Oculus::Interaction::UnityCanvas::CanvasRect::GenerateMesh(ByRef<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*> verts, ByRef<::System::Collections::Generic::List_1<int>*> tris, ByRef<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*> uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRect::GenerateMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::UnityCanvas::CanvasMesh*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(verts), byref(tris), byref(uvs));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture_TransformChangeListener.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/Properties
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture_Properties.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/<>c
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture_--c.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DEFAULT_UI_LAYERMASK
int Oculus::Interaction::UnityCanvas::CanvasRenderTexture::_get_DEFAULT_UI_LAYERMASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::_get_DEFAULT_UI_LAYERMASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture", "DEFAULT_UI_LAYERMASK"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEFAULT_UI_LAYERMASK
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::_set_DEFAULT_UI_LAYERMASK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::_set_DEFAULT_UI_LAYERMASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture", "DEFAULT_UI_LAYERMASK", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int DEFAULT_TEXTURE_RES
::UnityEngine::Vector2Int Oculus::Interaction::UnityCanvas::CanvasRenderTexture::_get_DEFAULT_TEXTURE_RES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::_get_DEFAULT_TEXTURE_RES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture", "DEFAULT_TEXTURE_RES"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int DEFAULT_TEXTURE_RES
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::_set_DEFAULT_TEXTURE_RES(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::_set_DEFAULT_TEXTURE_RES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture", "DEFAULT_TEXTURE_RES", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _renderScale
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__renderScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__renderScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderScale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.UnityCanvas.CanvasRenderTexture/DriveMode _dimensionsDriveMode
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__dimensionsDriveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__dimensionsDriveMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dimensionsDriveMode"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2Int _resolution
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2Int& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__resolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolution"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2Int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _generateMipMaps
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__generateMipMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__generateMipMaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_generateMipMaps"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pixelsPerUnit
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__pixelsPerUnit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pixelsPerUnit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _renderingLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__renderingLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__renderingLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderingLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.Texture> OnUpdateRenderTexture
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Texture*>*& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn_OnUpdateRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn_OnUpdateRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnUpdateRenderTexture"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Texture*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener _listener
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener*& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listener"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _tex
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__tex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__tex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tex"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.get_RenderingLayers
::UnityEngine::LayerMask Oculus::Interaction::UnityCanvas::CanvasRenderTexture::get_RenderingLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::get_RenderingLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenderingLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.get_RenderScale
int Oculus::Interaction::UnityCanvas::CanvasRenderTexture::get_RenderScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::get_RenderScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenderScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.set_RenderScale
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::set_RenderScale(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::set_RenderScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RenderScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.get_OverlayCamera
::UnityEngine::Camera* Oculus::Interaction::UnityCanvas::CanvasRenderTexture::get_OverlayCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::get_OverlayCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverlayCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.get_Texture
::UnityEngine::Texture* Oculus::Interaction::UnityCanvas::CanvasRenderTexture::get_Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::get_Texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.CalcAutoResolution
::UnityEngine::Vector2Int Oculus::Interaction::UnityCanvas::CanvasRenderTexture::CalcAutoResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::CalcAutoResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcAutoResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2Int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.GetBaseResolutionToUse
::UnityEngine::Vector2Int Oculus::Interaction::UnityCanvas::CanvasRenderTexture::GetBaseResolutionToUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::GetBaseResolutionToUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseResolutionToUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2Int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.GetScaledResolutionToUse
::UnityEngine::Vector2Int Oculus::Interaction::UnityCanvas::CanvasRenderTexture::GetScaledResolutionToUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::GetScaledResolutionToUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScaledResolutionToUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2Int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.PixelsToUnits
float Oculus::Interaction::UnityCanvas::CanvasRenderTexture::PixelsToUnits(float pixels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::PixelsToUnits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PixelsToUnits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixels)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pixels);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.UnitsToPixels
float Oculus::Interaction::UnityCanvas::CanvasRenderTexture::UnitsToPixels(float units) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::UnitsToPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnitsToPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(units)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, units);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.Start
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.OnEnable
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.WhenCanvasRectTransformDimensionsChanged
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::WhenCanvasRectTransformDimensionsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::WhenCanvasRectTransformDimensionsChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhenCanvasRectTransformDimensionsChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.OnDisable
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.UpdateCamera
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::UpdateCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::UpdateCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.UpdateRenderTexture
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::UpdateRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::UpdateRenderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRenderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.UpdateOrthoSize
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::UpdateOrthoSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::UpdateOrthoSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOrthoSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.UpdateCameraCullingMask
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::UpdateCameraCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::UpdateCameraCullingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCameraCullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.CreateChildObject
::UnityEngine::GameObject* Oculus::Interaction::UnityCanvas::CanvasRenderTexture::CreateChildObject(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::CreateChildObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChildObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.InjectAllCanvasRenderTexture
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectAllCanvasRenderTexture(::UnityEngine::Canvas* canvas, int pixelsPerUnit, int renderScale, ::UnityEngine::LayerMask renderingLayers, bool generateMipMaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectAllCanvasRenderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllCanvasRenderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(renderScale), ::il2cpp_utils::ExtractType(renderingLayers), ::il2cpp_utils::ExtractType(generateMipMaps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvas, pixelsPerUnit, renderScale, renderingLayers, generateMipMaps);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.InjectCanvas
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectCanvas(::UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canvas);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.InjectPixelsPerUnit
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectPixelsPerUnit(int pixelsPerUnit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectPixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixelsPerUnit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pixelsPerUnit);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.InjectRenderScale
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectRenderScale(int renderScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectRenderScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRenderScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderScale);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.InjectRenderingLayers
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectRenderingLayers(::UnityEngine::LayerMask renderingLayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectRenderingLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRenderingLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderingLayers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderingLayers);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture.InjectGenerateMipMaps
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectGenerateMipMaps(bool generateMipMaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::InjectGenerateMipMaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGenerateMipMaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(generateMipMaps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, generateMipMaps);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture..cctor
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture_TransformChangeListener.hpp"
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener/<>c
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture_TransformChangeListener_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action WhenRectTransformDimensionsChanged
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::dyn_WhenRectTransformDimensionsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::dyn_WhenRectTransformDimensionsChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenRectTransformDimensionsChanged"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener.add_WhenRectTransformDimensionsChanged
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::add_WhenRectTransformDimensionsChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::add_WhenRectTransformDimensionsChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_WhenRectTransformDimensionsChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener.remove_WhenRectTransformDimensionsChanged
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::remove_WhenRectTransformDimensionsChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::remove_WhenRectTransformDimensionsChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_WhenRectTransformDimensionsChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener.OnRectTransformDimensionsChange
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::OnRectTransformDimensionsChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener/<>c
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture_TransformChangeListener_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener/<>c <>9
::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c* Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c*>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/TransformChangeListener/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener/<>c <>9
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::_set_$$9(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/TransformChangeListener/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__4_0
::System::Action* Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/TransformChangeListener/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__4_0
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::_set_$$9__4_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/TransformChangeListener/<>c", "<>9__4_0", value)));
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener/<>c..cctor
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/TransformChangeListener/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/TransformChangeListener/<>c.<.ctor>b__4_0
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::$_ctor$b__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::TransformChangeListener::$$c::<.ctor>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/DriveMode
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.UnityCanvas.CanvasRenderTexture/DriveMode Auto
::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/DriveMode", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.UnityCanvas.CanvasRenderTexture/DriveMode Auto
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode::_set_Auto(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/DriveMode", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.UnityCanvas.CanvasRenderTexture/DriveMode Manual
::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/DriveMode", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.UnityCanvas.CanvasRenderTexture/DriveMode Manual
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode::_set_Manual(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/DriveMode", "Manual", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::DriveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/Properties
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture_Properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String DimensionDriveMode
::StringW Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_DimensionDriveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_DimensionDriveMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "DimensionDriveMode"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DimensionDriveMode
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_DimensionDriveMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_DimensionDriveMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "DimensionDriveMode", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Resolution
::StringW Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_Resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_Resolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "Resolution"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Resolution
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_Resolution(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_Resolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "Resolution", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String RenderScale
::StringW Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_RenderScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_RenderScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "RenderScale"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String RenderScale
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_RenderScale(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_RenderScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "RenderScale", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String PixelsPerUnit
::StringW Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_PixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_PixelsPerUnit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "PixelsPerUnit"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String PixelsPerUnit
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_PixelsPerUnit(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_PixelsPerUnit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "PixelsPerUnit", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String RenderLayers
::StringW Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_RenderLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_RenderLayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "RenderLayers"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String RenderLayers
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_RenderLayers(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_RenderLayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "RenderLayers", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String GenerateMipMaps
::StringW Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_GenerateMipMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_GenerateMipMaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "GenerateMipMaps"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String GenerateMipMaps
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_GenerateMipMaps(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_GenerateMipMaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "GenerateMipMaps", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Canvas
::StringW Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Canvas
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_Canvas(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", "Canvas", value));
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/Properties..cctor
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::Properties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/Properties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/<>c
#include "Oculus/Interaction/UnityCanvas/CanvasRenderTexture_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.UnityCanvas.CanvasRenderTexture/<>c <>9
::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c* Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c*>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.UnityCanvas.CanvasRenderTexture/<>c <>9
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::_set_$$9(::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<UnityEngine.Texture> <>9__46_0
::System::Action_1<::UnityEngine::Texture*>* Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::_get_$$9__46_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::_get_$$9__46_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::Texture*>*>("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/<>c", "<>9__46_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<UnityEngine.Texture> <>9__46_0
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::_set_$$9__46_0(::System::Action_1<::UnityEngine::Texture*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::_set_$$9__46_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/<>c", "<>9__46_0", value)));
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/<>c..cctor
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.UnityCanvas", "CanvasRenderTexture/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.UnityCanvas.CanvasRenderTexture/<>c.<.ctor>b__46_0
void Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::$_ctor$b__46_0(::UnityEngine::Texture* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::CanvasRenderTexture::$$c::<.ctor>b__46_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__46_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.RenderingMode
#include "Oculus/Interaction/UnityCanvas/RenderingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.UnityCanvas.RenderingMode AlphaBlended
::Oculus::Interaction::UnityCanvas::RenderingMode Oculus::Interaction::UnityCanvas::RenderingMode::_get_AlphaBlended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::RenderingMode::_get_AlphaBlended");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::UnityCanvas::RenderingMode>("Oculus.Interaction.UnityCanvas", "RenderingMode", "AlphaBlended"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.UnityCanvas.RenderingMode AlphaBlended
void Oculus::Interaction::UnityCanvas::RenderingMode::_set_AlphaBlended(::Oculus::Interaction::UnityCanvas::RenderingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::RenderingMode::_set_AlphaBlended");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "RenderingMode", "AlphaBlended", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.UnityCanvas.RenderingMode AlphaCutout
::Oculus::Interaction::UnityCanvas::RenderingMode Oculus::Interaction::UnityCanvas::RenderingMode::_get_AlphaCutout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::RenderingMode::_get_AlphaCutout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::UnityCanvas::RenderingMode>("Oculus.Interaction.UnityCanvas", "RenderingMode", "AlphaCutout"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.UnityCanvas.RenderingMode AlphaCutout
void Oculus::Interaction::UnityCanvas::RenderingMode::_set_AlphaCutout(::Oculus::Interaction::UnityCanvas::RenderingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::RenderingMode::_set_AlphaCutout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "RenderingMode", "AlphaCutout", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.UnityCanvas.RenderingMode Opaque
::Oculus::Interaction::UnityCanvas::RenderingMode Oculus::Interaction::UnityCanvas::RenderingMode::_get_Opaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::RenderingMode::_get_Opaque");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::UnityCanvas::RenderingMode>("Oculus.Interaction.UnityCanvas", "RenderingMode", "Opaque"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.UnityCanvas.RenderingMode Opaque
void Oculus::Interaction::UnityCanvas::RenderingMode::_set_Opaque(::Oculus::Interaction::UnityCanvas::RenderingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::RenderingMode::_set_Opaque");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.UnityCanvas", "RenderingMode", "Opaque", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::UnityCanvas::RenderingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::RenderingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.UnityCanvas.UpdateCanvasSortingOrder
#include "Oculus/Interaction/UnityCanvas/UpdateCanvasSortingOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.UnityCanvas.UpdateCanvasSortingOrder.SetCanvasSortingOrder
void Oculus::Interaction::UnityCanvas::UpdateCanvasSortingOrder::SetCanvasSortingOrder(int sortingOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::UnityCanvas::UpdateCanvasSortingOrder::SetCanvasSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCanvasSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortingOrder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sortingOrder);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Unity.Input.InputAxis
#include "Oculus/Interaction/Unity/Input/InputAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _axisName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Interaction::Unity::Input::InputAxis::dyn__axisName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Unity::Input::InputAxis::dyn__axisName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axisName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Unity.Input.InputAxis.Value
float Oculus::Interaction::Unity::Input::InputAxis::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Unity::Input::InputAxis::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Unity::Input::InputAxis*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Unity.Input.InputButton
#include "Oculus/Interaction/Unity/Input/InputButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _buttonName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Interaction::Unity::Input::InputButton::dyn__buttonName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Unity::Input::InputButton::dyn__buttonName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Unity.Input.InputButton.Value
bool Oculus::Interaction::Unity::Input::InputButton::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Unity::Input::InputButton::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Unity::Input::InputButton*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Unity.Input.InputKey
#include "Oculus/Interaction/Unity/Input/InputKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.KeyCode _key
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Oculus::Interaction::Unity::Input::InputKey::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Unity::Input::InputKey::dyn__key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Unity.Input.InputKey.Value
bool Oculus::Interaction::Unity::Input::InputKey::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Unity::Input::InputKey::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Unity::Input::InputKey*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Unity.Input.InputMouseButton
#include "Oculus/Interaction/Unity/Input/InputMouseButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _button
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Unity::Input::InputMouseButton::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Unity::Input::InputMouseButton::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Unity.Input.InputMouseButton.Value
bool Oculus::Interaction::Unity::Input::InputMouseButton::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Unity::Input::InputMouseButton::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Unity::Input::InputMouseButton*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Throw.ControllerPoseInputDevice
#include "Oculus/Interaction/Throw/ControllerPoseInputDevice.hpp"
// Including type: Oculus.Interaction.Input.IController
#include "Oculus/Interaction/Input/IController.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _controller
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Throw::ControllerPoseInputDevice::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IController <Controller>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IController*& Oculus::Interaction::Throw::ControllerPoseInputDevice::dyn_$Controller$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::dyn_$Controller$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Controller>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Throw.ControllerPoseInputDevice.get_Controller
::Oculus::Interaction::Input::IController* Oculus::Interaction::Throw::ControllerPoseInputDevice::get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::get_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IController*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.ControllerPoseInputDevice.set_Controller
void Oculus::Interaction::Throw::ControllerPoseInputDevice::set_Controller(::Oculus::Interaction::Input::IController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::set_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.ControllerPoseInputDevice.get_IsInputValid
bool Oculus::Interaction::Throw::ControllerPoseInputDevice::get_IsInputValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::get_IsInputValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::ControllerPoseInputDevice*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.ControllerPoseInputDevice.get_IsHighConfidence
bool Oculus::Interaction::Throw::ControllerPoseInputDevice::get_IsHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::get_IsHighConfidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::ControllerPoseInputDevice*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.ControllerPoseInputDevice.GetRootPose
bool Oculus::Interaction::Throw::ControllerPoseInputDevice::GetRootPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::GetRootPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::ControllerPoseInputDevice*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Throw.ControllerPoseInputDevice.Awake
void Oculus::Interaction::Throw::ControllerPoseInputDevice::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::ControllerPoseInputDevice*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.ControllerPoseInputDevice.Start
void Oculus::Interaction::Throw::ControllerPoseInputDevice::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::ControllerPoseInputDevice*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.ControllerPoseInputDevice.GetExternalVelocities
::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3> Oculus::Interaction::Throw::ControllerPoseInputDevice::GetExternalVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::GetExternalVelocities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::ControllerPoseInputDevice*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.ControllerPoseInputDevice.InjectAllControllerPoseInputDevice
void Oculus::Interaction::Throw::ControllerPoseInputDevice::InjectAllControllerPoseInputDevice(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::InjectAllControllerPoseInputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllControllerPoseInputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: Oculus.Interaction.Throw.ControllerPoseInputDevice.InjectController
void Oculus::Interaction::Throw::ControllerPoseInputDevice::InjectController(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ControllerPoseInputDevice::InjectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Throw.HandPoseInputDevice
#include "Oculus/Interaction/Throw/HandPoseInputDevice.hpp"
// Including type: Oculus.Interaction.Throw.HandPoseInputDevice/HandJointPoseMetaData
#include "Oculus/Interaction/Throw/HandPoseInputDevice_HandJointPoseMetaData.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Input.HandFinger
#include "Oculus/Interaction/Input/HandFinger.hpp"
// Including type: Oculus.Interaction.Input.HandJointId
#include "Oculus/Interaction/Input/HandJointId.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Throw::HandPoseInputDevice::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <Hand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::Throw::HandPoseInputDevice::dyn_$Hand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::dyn_$Hand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bufferLengthSeconds
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::HandPoseInputDevice::dyn__bufferLengthSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::dyn__bufferLengthSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferLengthSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sampleFrequency
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::HandPoseInputDevice::dyn__sampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::dyn__sampleFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampleFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufferSize
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Throw::HandPoseInputDevice::dyn__bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::dyn__bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Throw.HandPoseInputDevice/HandJointPoseMetaData[] _jointPoseInfoArray
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData*>& Oculus::Interaction::Throw::HandPoseInputDevice::dyn__jointPoseInfoArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::dyn__jointPoseInfoArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointPoseInfoArray"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.get_Hand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::Throw::HandPoseInputDevice::get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::get_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.set_Hand
void Oculus::Interaction::Throw::HandPoseInputDevice::set_Hand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::set_Hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.get_BufferLengthSeconds
float Oculus::Interaction::Throw::HandPoseInputDevice::get_BufferLengthSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::get_BufferLengthSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BufferLengthSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.set_BufferLengthSeconds
void Oculus::Interaction::Throw::HandPoseInputDevice::set_BufferLengthSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::set_BufferLengthSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BufferLengthSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.get_SampleFrequency
float Oculus::Interaction::Throw::HandPoseInputDevice::get_SampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::get_SampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.set_SampleFrequency
void Oculus::Interaction::Throw::HandPoseInputDevice::set_SampleFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::set_SampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.get_IsInputValid
bool Oculus::Interaction::Throw::HandPoseInputDevice::get_IsInputValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::get_IsInputValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::HandPoseInputDevice*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.get_IsHighConfidence
bool Oculus::Interaction::Throw::HandPoseInputDevice::get_IsHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::get_IsHighConfidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::HandPoseInputDevice*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.GetRootPose
bool Oculus::Interaction::Throw::HandPoseInputDevice::GetRootPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::GetRootPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::HandPoseInputDevice*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.Awake
void Oculus::Interaction::Throw::HandPoseInputDevice::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::HandPoseInputDevice*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.Start
void Oculus::Interaction::Throw::HandPoseInputDevice::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::HandPoseInputDevice*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.LateUpdate
void Oculus::Interaction::Throw::HandPoseInputDevice::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::HandPoseInputDevice*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.BufferFingerVelocities
void Oculus::Interaction::Throw::HandPoseInputDevice::BufferFingerVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::BufferFingerVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferFingerVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.AllocateFingerBonesArrayIfNecessary
void Oculus::Interaction::Throw::HandPoseInputDevice::AllocateFingerBonesArrayIfNecessary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::AllocateFingerBonesArrayIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateFingerBonesArrayIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.GetFingerIsHighConfidence
bool Oculus::Interaction::Throw::HandPoseInputDevice::GetFingerIsHighConfidence(::Oculus::Interaction::Input::HandFinger handFinger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::GetFingerIsHighConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFingerIsHighConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handFinger)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handFinger);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.GetJointPose
bool Oculus::Interaction::Throw::HandPoseInputDevice::GetJointPose(::Oculus::Interaction::Input::HandJointId handJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::GetJointPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetJointPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handJointId), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Pose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.BufferFingerBoneVelocities
void Oculus::Interaction::Throw::HandPoseInputDevice::BufferFingerBoneVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::BufferFingerBoneVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferFingerBoneVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.GetExternalVelocities
::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3> Oculus::Interaction::Throw::HandPoseInputDevice::GetExternalVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::GetExternalVelocities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::HandPoseInputDevice*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.InjectAllHandPoseInputDevice
void Oculus::Interaction::Throw::HandPoseInputDevice::InjectAllHandPoseInputDevice(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::InjectAllHandPoseInputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllHandPoseInputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice.InjectHand
void Oculus::Interaction::Throw::HandPoseInputDevice::InjectHand(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::InjectHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Throw.HandPoseInputDevice/HandJointPoseMetaData
#include "Oculus/Interaction/Throw/HandPoseInputDevice_HandJointPoseMetaData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Interaction.Input.HandFinger Finger
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandFinger& Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn_Finger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn_Finger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Finger"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandFinger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Interaction.Input.HandJointId JointId
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandJointId& Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn_JointId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn_JointId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JointId"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandJointId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<UnityEngine.Vector3> Velocities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn_Velocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn_Velocities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Velocities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<UnityEngine.Vector3> _previousPosition
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Vector3>& Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn__previousPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn__previousPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousPosition"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastWritePos
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn__lastWritePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn__lastWritePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastWritePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufferLength
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn__bufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::dyn__bufferLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice/HandJointPoseMetaData.BufferNewValue
void Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::BufferNewValue(::UnityEngine::Pose newPose, float delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::BufferNewValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferNewValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPose), ::il2cpp_utils::ExtractType(delta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPose, delta);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice/HandJointPoseMetaData.GetAverageVelocityVector
::UnityEngine::Vector3 Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::GetAverageVelocityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::GetAverageVelocityVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAverageVelocityVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.HandPoseInputDevice/HandJointPoseMetaData.ResetSpeedsBuffer
void Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::ResetSpeedsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::HandPoseInputDevice::HandJointPoseMetaData::ResetSpeedsBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetSpeedsBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Throw.IPoseInputDevice
#include "Oculus/Interaction/Throw/IPoseInputDevice.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Throw.IPoseInputDevice.get_IsInputValid
bool Oculus::Interaction::Throw::IPoseInputDevice::get_IsInputValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IPoseInputDevice::get_IsInputValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IPoseInputDevice*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.IPoseInputDevice.get_IsHighConfidence
bool Oculus::Interaction::Throw::IPoseInputDevice::get_IsHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IPoseInputDevice::get_IsHighConfidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IPoseInputDevice*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.IPoseInputDevice.GetRootPose
bool Oculus::Interaction::Throw::IPoseInputDevice::GetRootPose(ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IPoseInputDevice::GetRootPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IPoseInputDevice*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Throw.IPoseInputDevice.GetExternalVelocities
::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3> Oculus::Interaction::Throw::IPoseInputDevice::GetExternalVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IPoseInputDevice::GetExternalVelocities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IPoseInputDevice*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Throw.TransformSample
#include "Oculus/Interaction/Throw/TransformSample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::TransformSample::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::TransformSample::dyn_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion Rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::Throw::TransformSample::dyn_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::TransformSample::dyn_Rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single SampleTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::TransformSample::dyn_SampleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::TransformSample::dyn_SampleTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SampleTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 FrameIndex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Throw::TransformSample::dyn_FrameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::TransformSample::dyn_FrameIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Throw.TransformSample..ctor
// ABORTED elsewhere.  Oculus::Interaction::Throw::TransformSample::TransformSample(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, float time, int frameIndex)
// Autogenerated method: Oculus.Interaction.Throw.TransformSample.Interpolate
::Oculus::Interaction::Throw::TransformSample Oculus::Interaction::Throw::TransformSample::Interpolate(::Oculus::Interaction::Throw::TransformSample start, ::Oculus::Interaction::Throw::TransformSample fin, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::TransformSample::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Throw", "TransformSample", "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(fin), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Throw::TransformSample, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, fin, time);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Throw.ReleaseVelocityInformation
#include "Oculus/Interaction/Throw/ReleaseVelocityInformation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 LinearVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::ReleaseVelocityInformation::dyn_LinearVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ReleaseVelocityInformation::dyn_LinearVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LinearVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 AngularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::ReleaseVelocityInformation::dyn_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ReleaseVelocityInformation::dyn_AngularVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Origin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::ReleaseVelocityInformation::dyn_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ReleaseVelocityInformation::dyn_Origin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Origin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsSelectedVelocity
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Throw::ReleaseVelocityInformation::dyn_IsSelectedVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::ReleaseVelocityInformation::dyn_IsSelectedVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsSelectedVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Throw.ReleaseVelocityInformation..ctor
// ABORTED elsewhere.  Oculus::Interaction::Throw::ReleaseVelocityInformation::ReleaseVelocityInformation(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity, ::UnityEngine::Vector3 origin, bool isSelectedVelocity)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Throw.IVelocityCalculator
#include "Oculus/Interaction/Throw/IVelocityCalculator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Throw.IVelocityCalculator.get_UpdateFrequency
float Oculus::Interaction::Throw::IVelocityCalculator::get_UpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IVelocityCalculator::get_UpdateFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IVelocityCalculator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.IVelocityCalculator.add_WhenThrowVelocitiesChanged
void Oculus::Interaction::Throw::IVelocityCalculator::add_WhenThrowVelocitiesChanged(::System::Action_1<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IVelocityCalculator::add_WhenThrowVelocitiesChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IVelocityCalculator*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.IVelocityCalculator.remove_WhenThrowVelocitiesChanged
void Oculus::Interaction::Throw::IVelocityCalculator::remove_WhenThrowVelocitiesChanged(::System::Action_1<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IVelocityCalculator::remove_WhenThrowVelocitiesChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IVelocityCalculator*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.IVelocityCalculator.add_WhenNewSampleAvailable
void Oculus::Interaction::Throw::IVelocityCalculator::add_WhenNewSampleAvailable(::System::Action_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IVelocityCalculator::add_WhenNewSampleAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IVelocityCalculator*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.IVelocityCalculator.remove_WhenNewSampleAvailable
void Oculus::Interaction::Throw::IVelocityCalculator::remove_WhenNewSampleAvailable(::System::Action_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IVelocityCalculator::remove_WhenNewSampleAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IVelocityCalculator*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.IVelocityCalculator.CalculateThrowVelocity
::Oculus::Interaction::Throw::ReleaseVelocityInformation Oculus::Interaction::Throw::IVelocityCalculator::CalculateThrowVelocity(::UnityEngine::Transform* objectThrown) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IVelocityCalculator::CalculateThrowVelocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IVelocityCalculator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Throw::ReleaseVelocityInformation, false>(this, ___internal__method, objectThrown);
}
// Autogenerated method: Oculus.Interaction.Throw.IVelocityCalculator.LastThrowVelocities
::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>* Oculus::Interaction::Throw::IVelocityCalculator::LastThrowVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IVelocityCalculator::LastThrowVelocities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IVelocityCalculator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.IVelocityCalculator.SetUpdateFrequency
void Oculus::Interaction::Throw::IVelocityCalculator::SetUpdateFrequency(float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::IVelocityCalculator::SetUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::IVelocityCalculator*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frequency);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Throw.StandardVelocityCalculator
#include "Oculus/Interaction/Throw/StandardVelocityCalculator.hpp"
// Including type: Oculus.Interaction.Throw.StandardVelocityCalculator/BufferingParams
#include "Oculus/Interaction/Throw/StandardVelocityCalculator_BufferingParams.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Oculus.Interaction.Throw.StandardVelocityCalculator/<>c
#include "Oculus/Interaction/Throw/StandardVelocityCalculator_--c.hpp"
// Including type: Oculus.Interaction.Throw.IPoseInputDevice
#include "Oculus/Interaction/Throw/IPoseInputDevice.hpp"
// Including type: Oculus.Interaction.Input.IOneEuroFilter`1
#include "Oculus/Interaction/Input/IOneEuroFilter_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single _TREND_DOT_THRESHOLD
float Oculus::Interaction::Throw::StandardVelocityCalculator::_get__TREND_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::_get__TREND_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.Throw", "StandardVelocityCalculator", "_TREND_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _TREND_DOT_THRESHOLD
void Oculus::Interaction::Throw::StandardVelocityCalculator::_set__TREND_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::_set__TREND_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Throw", "StandardVelocityCalculator", "_TREND_DOT_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _throwInputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__throwInputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__throwInputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_throwInputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Throw.IPoseInputDevice <ThrowInputDevice>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Throw::IPoseInputDevice*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$ThrowInputDevice$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$ThrowInputDevice$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ThrowInputDevice>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Throw::IPoseInputDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _referenceOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__referenceOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__referenceOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Throw.StandardVelocityCalculator/BufferingParams _bufferingParams
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Throw::StandardVelocityCalculator::BufferingParams*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__bufferingParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__bufferingParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferingParams"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Throw::StandardVelocityCalculator::BufferingParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _instantVelocityInfluence
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__instantVelocityInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__instantVelocityInfluence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instantVelocityInfluence"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _trendVelocityInfluence
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__trendVelocityInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__trendVelocityInfluence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trendVelocityInfluence"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _tangentialVelocityInfluence
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__tangentialVelocityInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__tangentialVelocityInfluence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tangentialVelocityInfluence"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _externalVelocityInfluence
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__externalVelocityInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__externalVelocityInfluence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalVelocityInfluence"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _stepBackTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__stepBackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__stepBackTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stepBackTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxPercentZeroSamplesTrendVeloc
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__maxPercentZeroSamplesTrendVeloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__maxPercentZeroSamplesTrendVeloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPercentZeroSamplesTrendVeloc"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.OneEuroFilterPropertyBlock _filterProps
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::OneEuroFilterPropertyBlock& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__filterProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__filterProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterProps"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::OneEuroFilterPropertyBlock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _updateFrequency
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__updateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__updateFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _updateLatency
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__updateLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__updateLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateLatency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastUpdateTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__lastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IOneEuroFilter`1<UnityEngine.Vector3> _linearVelocityFilter
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Vector3>*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__linearVelocityFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__linearVelocityFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linearVelocityFilter"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IOneEuroFilter_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <AddedInstantLinearVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$AddedInstantLinearVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$AddedInstantLinearVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AddedInstantLinearVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <AddedTrendLinearVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$AddedTrendLinearVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$AddedTrendLinearVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AddedTrendLinearVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <AddedTangentialLinearVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$AddedTangentialLinearVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$AddedTangentialLinearVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AddedTangentialLinearVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <AxisOfRotation>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$AxisOfRotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$AxisOfRotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AxisOfRotation>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <CenterOfMassToObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$CenterOfMassToObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$CenterOfMassToObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CenterOfMassToObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <TangentialDirection>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$TangentialDirection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$TangentialDirection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TangentialDirection>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <AxisOfRotationOrigin>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$AxisOfRotationOrigin$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_$AxisOfRotationOrigin$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AxisOfRotationOrigin>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.Throw.ReleaseVelocityInformation> _currentThrowVelocities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__currentThrowVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__currentThrowVelocities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentThrowVelocities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Collections.Generic.List`1<Oculus.Interaction.Throw.ReleaseVelocityInformation>> WhenThrowVelocitiesChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*>*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_WhenThrowVelocitiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_WhenThrowVelocitiesChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenThrowVelocitiesChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Oculus.Interaction.Throw.ReleaseVelocityInformation> WhenNewSampleAvailable
[[deprecated("Use field access instead!")]] ::System::Action_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_WhenNewSampleAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn_WhenNewSampleAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenNewSampleAvailable"))->offset;
  return *reinterpret_cast<::System::Action_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _linearVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__linearVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__linearVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linearVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _angularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__angularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<UnityEngine.Vector3> _previousReferencePosition
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Vector3>& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__previousReferencePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__previousReferencePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousReferencePosition"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<UnityEngine.Quaternion> _previousReferenceRotation
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Quaternion>& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__previousReferenceRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__previousReferenceRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousReferenceRotation"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _accumulatedDelta
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__accumulatedDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__accumulatedDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accumulatedDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.Throw.StandardVelocityCalculator/SamplePoseData> _bufferedPoses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::StandardVelocityCalculator::SamplePoseData>*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__bufferedPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__bufferedPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferedPoses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::StandardVelocityCalculator::SamplePoseData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastWritePos
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__lastWritePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__lastWritePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastWritePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufferSize
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.Throw.StandardVelocityCalculator/SamplePoseData> _windowWithMovement
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::StandardVelocityCalculator::SamplePoseData>*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__windowWithMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__windowWithMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_windowWithMovement"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::StandardVelocityCalculator::SamplePoseData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.Throw.StandardVelocityCalculator/SamplePoseData> _tempWindow
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::StandardVelocityCalculator::SamplePoseData>*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__tempWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__tempWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tempWindow"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::StandardVelocityCalculator::SamplePoseData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Single> _timeProvider
[[deprecated("Use field access instead!")]] ::System::Func_1<float>*& Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::dyn__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  return *reinterpret_cast<::System::Func_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_ThrowInputDevice
::Oculus::Interaction::Throw::IPoseInputDevice* Oculus::Interaction::Throw::StandardVelocityCalculator::get_ThrowInputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_ThrowInputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThrowInputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Throw::IPoseInputDevice*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_ThrowInputDevice
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_ThrowInputDevice(::Oculus::Interaction::Throw::IPoseInputDevice* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_ThrowInputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ThrowInputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_UpdateFrequency
float Oculus::Interaction::Throw::StandardVelocityCalculator::get_UpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_UpdateFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_ReferenceOffset
::UnityEngine::Vector3 Oculus::Interaction::Throw::StandardVelocityCalculator::get_ReferenceOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_ReferenceOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_ReferenceOffset
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_ReferenceOffset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_ReferenceOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReferenceOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_InstantVelocityInfluence
float Oculus::Interaction::Throw::StandardVelocityCalculator::get_InstantVelocityInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_InstantVelocityInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstantVelocityInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_InstantVelocityInfluence
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_InstantVelocityInfluence(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_InstantVelocityInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InstantVelocityInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_TrendVelocityInfluence
float Oculus::Interaction::Throw::StandardVelocityCalculator::get_TrendVelocityInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_TrendVelocityInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrendVelocityInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_TrendVelocityInfluence
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_TrendVelocityInfluence(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_TrendVelocityInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrendVelocityInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_TangentialVelocityInfluence
float Oculus::Interaction::Throw::StandardVelocityCalculator::get_TangentialVelocityInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_TangentialVelocityInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TangentialVelocityInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_TangentialVelocityInfluence
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_TangentialVelocityInfluence(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_TangentialVelocityInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TangentialVelocityInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_ExternalVelocityInfluence
float Oculus::Interaction::Throw::StandardVelocityCalculator::get_ExternalVelocityInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_ExternalVelocityInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExternalVelocityInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_ExternalVelocityInfluence
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_ExternalVelocityInfluence(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_ExternalVelocityInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExternalVelocityInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_StepBackTime
float Oculus::Interaction::Throw::StandardVelocityCalculator::get_StepBackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_StepBackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StepBackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_StepBackTime
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_StepBackTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_StepBackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StepBackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_MaxPercentZeroSamplesTrendVeloc
float Oculus::Interaction::Throw::StandardVelocityCalculator::get_MaxPercentZeroSamplesTrendVeloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_MaxPercentZeroSamplesTrendVeloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxPercentZeroSamplesTrendVeloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_MaxPercentZeroSamplesTrendVeloc
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_MaxPercentZeroSamplesTrendVeloc(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_MaxPercentZeroSamplesTrendVeloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxPercentZeroSamplesTrendVeloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_AddedInstantLinearVelocity
::UnityEngine::Vector3 Oculus::Interaction::Throw::StandardVelocityCalculator::get_AddedInstantLinearVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_AddedInstantLinearVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddedInstantLinearVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_AddedInstantLinearVelocity
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_AddedInstantLinearVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_AddedInstantLinearVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AddedInstantLinearVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_AddedTrendLinearVelocity
::UnityEngine::Vector3 Oculus::Interaction::Throw::StandardVelocityCalculator::get_AddedTrendLinearVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_AddedTrendLinearVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddedTrendLinearVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_AddedTrendLinearVelocity
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_AddedTrendLinearVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_AddedTrendLinearVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AddedTrendLinearVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_AddedTangentialLinearVelocity
::UnityEngine::Vector3 Oculus::Interaction::Throw::StandardVelocityCalculator::get_AddedTangentialLinearVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_AddedTangentialLinearVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddedTangentialLinearVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_AddedTangentialLinearVelocity
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_AddedTangentialLinearVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_AddedTangentialLinearVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AddedTangentialLinearVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_AxisOfRotation
::UnityEngine::Vector3 Oculus::Interaction::Throw::StandardVelocityCalculator::get_AxisOfRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_AxisOfRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AxisOfRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_AxisOfRotation
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_AxisOfRotation(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_AxisOfRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AxisOfRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_CenterOfMassToObject
::UnityEngine::Vector3 Oculus::Interaction::Throw::StandardVelocityCalculator::get_CenterOfMassToObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_CenterOfMassToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CenterOfMassToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_CenterOfMassToObject
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_CenterOfMassToObject(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_CenterOfMassToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CenterOfMassToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_TangentialDirection
::UnityEngine::Vector3 Oculus::Interaction::Throw::StandardVelocityCalculator::get_TangentialDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_TangentialDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TangentialDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_TangentialDirection
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_TangentialDirection(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_TangentialDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TangentialDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.get_AxisOfRotationOrigin
::UnityEngine::Vector3 Oculus::Interaction::Throw::StandardVelocityCalculator::get_AxisOfRotationOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::get_AxisOfRotationOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AxisOfRotationOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.set_AxisOfRotationOrigin
void Oculus::Interaction::Throw::StandardVelocityCalculator::set_AxisOfRotationOrigin(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::set_AxisOfRotationOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AxisOfRotationOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.add_WhenThrowVelocitiesChanged
void Oculus::Interaction::Throw::StandardVelocityCalculator::add_WhenThrowVelocitiesChanged(::System::Action_1<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::add_WhenThrowVelocitiesChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.remove_WhenThrowVelocitiesChanged
void Oculus::Interaction::Throw::StandardVelocityCalculator::remove_WhenThrowVelocitiesChanged(::System::Action_1<::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::remove_WhenThrowVelocitiesChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.add_WhenNewSampleAvailable
void Oculus::Interaction::Throw::StandardVelocityCalculator::add_WhenNewSampleAvailable(::System::Action_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::add_WhenNewSampleAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.remove_WhenNewSampleAvailable
void Oculus::Interaction::Throw::StandardVelocityCalculator::remove_WhenNewSampleAvailable(::System::Action_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::remove_WhenNewSampleAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.Awake
void Oculus::Interaction::Throw::StandardVelocityCalculator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.Start
void Oculus::Interaction::Throw::StandardVelocityCalculator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.CalculateThrowVelocity
::Oculus::Interaction::Throw::ReleaseVelocityInformation Oculus::Interaction::Throw::StandardVelocityCalculator::CalculateThrowVelocity(::UnityEngine::Transform* objectThrown) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::CalculateThrowVelocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Throw::ReleaseVelocityInformation, false>(this, ___internal__method, objectThrown);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.IncludeInstantVelocities
void Oculus::Interaction::Throw::StandardVelocityCalculator::IncludeInstantVelocities(float currentTime, ByRef<::UnityEngine::Vector3> linearVelocity, ByRef<::UnityEngine::Vector3> angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::IncludeInstantVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncludeInstantVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentTime, byref(linearVelocity), byref(angularVelocity));
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.IncludeEstimatedReleaseVelocities
void Oculus::Interaction::Throw::StandardVelocityCalculator::IncludeEstimatedReleaseVelocities(float currentTime, ByRef<::UnityEngine::Vector3> linearVelocity, ByRef<::UnityEngine::Vector3> angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::IncludeEstimatedReleaseVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncludeEstimatedReleaseVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentTime, byref(linearVelocity), byref(angularVelocity));
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.IncludeTrendVelocities
void Oculus::Interaction::Throw::StandardVelocityCalculator::IncludeTrendVelocities(ByRef<::UnityEngine::Vector3> linearVelocity, ByRef<::UnityEngine::Vector3> angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::IncludeTrendVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncludeTrendVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(linearVelocity), byref(angularVelocity));
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.IncludeTangentialInfluence
void Oculus::Interaction::Throw::StandardVelocityCalculator::IncludeTangentialInfluence(ByRef<::UnityEngine::Vector3> linearVelocity, ::UnityEngine::Vector3 interactablePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::IncludeTangentialInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncludeTangentialInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(interactablePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(linearVelocity), interactablePosition);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.IncludeExternalVelocities
void Oculus::Interaction::Throw::StandardVelocityCalculator::IncludeExternalVelocities(ByRef<::UnityEngine::Vector3> linearVelocity, ByRef<::UnityEngine::Vector3> angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::IncludeExternalVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncludeExternalVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linearVelocity), ::il2cpp_utils::ExtractType(angularVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(linearVelocity), byref(angularVelocity));
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.FindPoseIndicesAdjacentToTime
::System::ValueTuple_2<int, int> Oculus::Interaction::Throw::StandardVelocityCalculator::FindPoseIndicesAdjacentToTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::FindPoseIndicesAdjacentToTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPoseIndicesAdjacentToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, int>, false>(this, ___internal__method, time);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.ComputeTrendVelocities
::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3> Oculus::Interaction::Throw::StandardVelocityCalculator::ComputeTrendVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::ComputeTrendVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeTrendVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.BufferedVelocitiesValid
bool Oculus::Interaction::Throw::StandardVelocityCalculator::BufferedVelocitiesValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::BufferedVelocitiesValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferedVelocitiesValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.FindLargestWindowWithMovement
void Oculus::Interaction::Throw::StandardVelocityCalculator::FindLargestWindowWithMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::FindLargestWindowWithMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindLargestWindowWithMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.FindMostRecentBufferedSampleWithMovement
::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3> Oculus::Interaction::Throw::StandardVelocityCalculator::FindMostRecentBufferedSampleWithMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::FindMostRecentBufferedSampleWithMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMostRecentBufferedSampleWithMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.TransferToDestBuffer
void Oculus::Interaction::Throw::StandardVelocityCalculator::TransferToDestBuffer(::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::StandardVelocityCalculator::SamplePoseData>* source, ::System::Collections::Generic::List_1<::Oculus::Interaction::Throw::StandardVelocityCalculator::SamplePoseData>* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::TransferToDestBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferToDestBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, dest);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.CalculateTangentialVector
::UnityEngine::Vector3 Oculus::Interaction::Throw::StandardVelocityCalculator::CalculateTangentialVector(::UnityEngine::Vector3 objectPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::CalculateTangentialVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTangentialVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, objectPosition);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.LastThrowVelocities
::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>* Oculus::Interaction::Throw::StandardVelocityCalculator::LastThrowVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::LastThrowVelocities");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::Oculus::Interaction::Throw::ReleaseVelocityInformation>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.SetUpdateFrequency
void Oculus::Interaction::Throw::StandardVelocityCalculator::SetUpdateFrequency(float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::SetUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frequency);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.LateUpdate
void Oculus::Interaction::Throw::StandardVelocityCalculator::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Throw::StandardVelocityCalculator*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.CalculateLatestVelocitiesAndUpdateBuffer
void Oculus::Interaction::Throw::StandardVelocityCalculator::CalculateLatestVelocitiesAndUpdateBuffer(float delta, float currentTime, ::UnityEngine::Pose referencePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::CalculateLatestVelocitiesAndUpdateBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLatestVelocitiesAndUpdateBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta), ::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(referencePose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delta, currentTime, referencePose);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.UpdateLatestVelocitiesAndPoseValues
void Oculus::Interaction::Throw::StandardVelocityCalculator::UpdateLatestVelocitiesAndPoseValues(::UnityEngine::Pose referencePose, float delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::UpdateLatestVelocitiesAndPoseValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLatestVelocitiesAndPoseValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(referencePose), ::il2cpp_utils::ExtractType(delta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, referencePose, delta);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.GetLatestLinearAndAngularVelocities
::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3> Oculus::Interaction::Throw::StandardVelocityCalculator::GetLatestLinearAndAngularVelocities(::UnityEngine::Pose referencePose, float delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::GetLatestLinearAndAngularVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLatestLinearAndAngularVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(referencePose), ::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::UnityEngine::Vector3, ::UnityEngine::Vector3>, false>(this, ___internal__method, referencePose, delta);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.InjectAllStandardVelocityCalculator
void Oculus::Interaction::Throw::StandardVelocityCalculator::InjectAllStandardVelocityCalculator(::Oculus::Interaction::Throw::IPoseInputDevice* poseInputDevice, ::Oculus::Interaction::Throw::StandardVelocityCalculator::BufferingParams* bufferingParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::InjectAllStandardVelocityCalculator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllStandardVelocityCalculator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseInputDevice), ::il2cpp_utils::ExtractType(bufferingParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poseInputDevice, bufferingParams);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.InjectPoseInputDevice
void Oculus::Interaction::Throw::StandardVelocityCalculator::InjectPoseInputDevice(::Oculus::Interaction::Throw::IPoseInputDevice* poseInputDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::InjectPoseInputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPoseInputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseInputDevice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poseInputDevice);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.InjectBufferingParams
void Oculus::Interaction::Throw::StandardVelocityCalculator::InjectBufferingParams(::Oculus::Interaction::Throw::StandardVelocityCalculator::BufferingParams* bufferingParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::InjectBufferingParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectBufferingParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferingParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferingParams);
}
// Autogenerated method: Oculus.Interaction.Throw.StandardVelocityCalculator.InjectOptionalTimeProvider
void Oculus::Interaction::Throw::StandardVelocityCalculator::InjectOptionalTimeProvider(::System::Func_1<float>* timeProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Throw::StandardVelocityCalculator::InjectOptionalTimeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalTimeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeProvider);
}
