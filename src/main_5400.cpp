// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.UnicodeEncoding/Decoder
#include "System/Text/UnicodeEncoding_Decoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 lastByte
[[deprecated("Use field access instead!")]] int& System::Text::UnicodeEncoding::Decoder::dyn_lastByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::UnicodeEncoding::Decoder::dyn_lastByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastByte"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char lastChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::UnicodeEncoding::Decoder::dyn_lastChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::UnicodeEncoding::Decoder::dyn_lastChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.UnicodeEncoding/Decoder.Reset
void System::Text::UnicodeEncoding::Decoder::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::UnicodeEncoding::Decoder::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::DecoderNLS*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.UnicodeEncoding/Decoder.get_HasState
bool System::Text::UnicodeEncoding::Decoder::get_HasState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::UnicodeEncoding::Decoder::get_HasState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::DecoderNLS*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.ValueStringBuilder
#include "System/Text/ValueStringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Char[] _arrayToReturnToPool
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Text::ValueStringBuilder::dyn__arrayToReturnToPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::dyn__arrayToReturnToPool");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrayToReturnToPool"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Span`1<System.Char> _chars
[[deprecated("Use field access instead!")]] ::System::Span_1<::Il2CppChar>& System::Text::ValueStringBuilder::dyn__chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::dyn__chars");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chars"))->offset;
  return *reinterpret_cast<::System::Span_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
[[deprecated("Use field access instead!")]] int& System::Text::ValueStringBuilder::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::dyn__pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.ValueStringBuilder..ctor
System::Text::ValueStringBuilder::ValueStringBuilder(::System::Span_1<::Il2CppChar> initialBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initialBuffer);
}
// Autogenerated method: System.Text.ValueStringBuilder.get_Length
int System::Text::ValueStringBuilder::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.ValueStringBuilder.get_Item
::Il2CppChar System::Text::ValueStringBuilder::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Text.ValueStringBuilder.TryCopyTo
bool System::Text::ValueStringBuilder::TryCopyTo(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::TryCopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryCopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten));
}
// Autogenerated method: System.Text.ValueStringBuilder.Append
void System::Text::ValueStringBuilder::Append(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.ValueStringBuilder.Append
void System::Text::ValueStringBuilder::Append(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Text.ValueStringBuilder.AppendSlow
void System::Text::ValueStringBuilder::AppendSlow(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::AppendSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Text.ValueStringBuilder.Append
void System::Text::ValueStringBuilder::Append(::Il2CppChar c, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c, count);
}
// Autogenerated method: System.Text.ValueStringBuilder.Append
void System::Text::ValueStringBuilder::Append(::Il2CppChar* value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, length);
}
// Autogenerated method: System.Text.ValueStringBuilder.AppendSpan
::System::Span_1<::Il2CppChar> System::Text::ValueStringBuilder::AppendSpan(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::AppendSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Span_1<::Il2CppChar>, false>(this, ___internal__method, length);
}
// Autogenerated method: System.Text.ValueStringBuilder.GrowAndAppend
void System::Text::ValueStringBuilder::GrowAndAppend(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::GrowAndAppend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GrowAndAppend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.ValueStringBuilder.Grow
void System::Text::ValueStringBuilder::Grow(int requiredAdditionalCapacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requiredAdditionalCapacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requiredAdditionalCapacity);
}
// Autogenerated method: System.Text.ValueStringBuilder.Dispose
void System::Text::ValueStringBuilder::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.ValueStringBuilder.ToString
::StringW System::Text::ValueStringBuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueStringBuilder::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.ValueUtf8Converter
#include "System/Text/ValueUtf8Converter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _arrayToReturnToPool
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Text::ValueUtf8Converter::dyn__arrayToReturnToPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueUtf8Converter::dyn__arrayToReturnToPool");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrayToReturnToPool"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Span`1<System.Byte> _bytes
[[deprecated("Use field access instead!")]] ::System::Span_1<uint8_t>& System::Text::ValueUtf8Converter::dyn__bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueUtf8Converter::dyn__bytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytes"))->offset;
  return *reinterpret_cast<::System::Span_1<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.ValueUtf8Converter..ctor
System::Text::ValueUtf8Converter::ValueUtf8Converter(::System::Span_1<uint8_t> initialBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueUtf8Converter::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initialBuffer);
}
// Autogenerated method: System.Text.ValueUtf8Converter.ConvertAndTerminateString
::System::Span_1<uint8_t> System::Text::ValueUtf8Converter::ConvertAndTerminateString(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueUtf8Converter::ConvertAndTerminateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConvertAndTerminateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Span_1<uint8_t>, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.ValueUtf8Converter.Dispose
void System::Text::ValueUtf8Converter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::ValueUtf8Converter::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Encoding/DefaultEncoder
#include "System/Text/Encoding_DefaultEncoder.hpp"
// Including type: System.Text.Encoding/DefaultDecoder
#include "System/Text/Encoding_DefaultDecoder.hpp"
// Including type: System.Text.Encoding/EncodingCharBuffer
#include "System/Text/Encoding_EncodingCharBuffer.hpp"
// Including type: System.Text.Encoding/EncodingByteBuffer
#include "System/Text/Encoding_EncodingByteBuffer.hpp"
// Including type: System.Globalization.CodePageDataItem
#include "System/Globalization/CodePageDataItem.hpp"
// Including type: System.Text.EncoderFallback
#include "System/Text/EncoderFallback.hpp"
// Including type: System.Text.DecoderFallback
#include "System/Text/DecoderFallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Text.EncoderNLS
#include "System/Text/EncoderNLS.hpp"
// Including type: System.Text.DecoderNLS
#include "System/Text/DecoderNLS.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding defaultEncoding
::System::Text::Encoding* System::Text::Encoding::_get_defaultEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_defaultEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Text", "Encoding", "defaultEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding defaultEncoding
void System::Text::Encoding::_set_defaultEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_defaultEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "defaultEncoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding unicodeEncoding
::System::Text::Encoding* System::Text::Encoding::_get_unicodeEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_unicodeEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Text", "Encoding", "unicodeEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding unicodeEncoding
void System::Text::Encoding::_set_unicodeEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_unicodeEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "unicodeEncoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding bigEndianUnicode
::System::Text::Encoding* System::Text::Encoding::_get_bigEndianUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_bigEndianUnicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Text", "Encoding", "bigEndianUnicode"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding bigEndianUnicode
void System::Text::Encoding::_set_bigEndianUnicode(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_bigEndianUnicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "bigEndianUnicode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding utf7Encoding
::System::Text::Encoding* System::Text::Encoding::_get_utf7Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_utf7Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Text", "Encoding", "utf7Encoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding utf7Encoding
void System::Text::Encoding::_set_utf7Encoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_utf7Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "utf7Encoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding utf8Encoding
::System::Text::Encoding* System::Text::Encoding::_get_utf8Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_utf8Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Text", "Encoding", "utf8Encoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding utf8Encoding
void System::Text::Encoding::_set_utf8Encoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_utf8Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "utf8Encoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding utf32Encoding
::System::Text::Encoding* System::Text::Encoding::_get_utf32Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_utf32Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Text", "Encoding", "utf32Encoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding utf32Encoding
void System::Text::Encoding::_set_utf32Encoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_utf32Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "utf32Encoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding asciiEncoding
::System::Text::Encoding* System::Text::Encoding::_get_asciiEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_asciiEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Text", "Encoding", "asciiEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding asciiEncoding
void System::Text::Encoding::_set_asciiEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_asciiEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "asciiEncoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding latin1Encoding
::System::Text::Encoding* System::Text::Encoding::_get_latin1Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_latin1Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Text", "Encoding", "latin1Encoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding latin1Encoding
void System::Text::Encoding::_set_latin1Encoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_latin1Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "latin1Encoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Text.Encoding> encodings
::System::Collections::Generic::Dictionary_2<int, ::System::Text::Encoding*>* System::Text::Encoding::_get_encodings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_encodings");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::System::Text::Encoding*>*>("System.Text", "Encoding", "encodings")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Text.Encoding> encodings
void System::Text::Encoding::_set_encodings(::System::Collections::Generic::Dictionary_2<int, ::System::Text::Encoding*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_encodings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "encodings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MIMECONTF_MAILNEWS
int System::Text::Encoding::_get_MIMECONTF_MAILNEWS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_MIMECONTF_MAILNEWS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "MIMECONTF_MAILNEWS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MIMECONTF_MAILNEWS
void System::Text::Encoding::_set_MIMECONTF_MAILNEWS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_MIMECONTF_MAILNEWS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "MIMECONTF_MAILNEWS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MIMECONTF_BROWSER
int System::Text::Encoding::_get_MIMECONTF_BROWSER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_MIMECONTF_BROWSER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "MIMECONTF_BROWSER"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MIMECONTF_BROWSER
void System::Text::Encoding::_set_MIMECONTF_BROWSER(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_MIMECONTF_BROWSER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "MIMECONTF_BROWSER", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MIMECONTF_SAVABLE_MAILNEWS
int System::Text::Encoding::_get_MIMECONTF_SAVABLE_MAILNEWS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_MIMECONTF_SAVABLE_MAILNEWS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "MIMECONTF_SAVABLE_MAILNEWS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MIMECONTF_SAVABLE_MAILNEWS
void System::Text::Encoding::_set_MIMECONTF_SAVABLE_MAILNEWS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_MIMECONTF_SAVABLE_MAILNEWS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "MIMECONTF_SAVABLE_MAILNEWS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MIMECONTF_SAVABLE_BROWSER
int System::Text::Encoding::_get_MIMECONTF_SAVABLE_BROWSER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_MIMECONTF_SAVABLE_BROWSER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "MIMECONTF_SAVABLE_BROWSER"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MIMECONTF_SAVABLE_BROWSER
void System::Text::Encoding::_set_MIMECONTF_SAVABLE_BROWSER(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_MIMECONTF_SAVABLE_BROWSER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "MIMECONTF_SAVABLE_BROWSER", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageDefault
int System::Text::Encoding::_get_CodePageDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageDefault"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageDefault
void System::Text::Encoding::_set_CodePageDefault(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageDefault", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageNoOEM
int System::Text::Encoding::_get_CodePageNoOEM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageNoOEM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageNoOEM"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageNoOEM
void System::Text::Encoding::_set_CodePageNoOEM(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageNoOEM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageNoOEM", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageNoMac
int System::Text::Encoding::_get_CodePageNoMac() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageNoMac");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageNoMac"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageNoMac
void System::Text::Encoding::_set_CodePageNoMac(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageNoMac");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageNoMac", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageNoThread
int System::Text::Encoding::_get_CodePageNoThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageNoThread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageNoThread"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageNoThread
void System::Text::Encoding::_set_CodePageNoThread(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageNoThread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageNoThread", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageNoSymbol
int System::Text::Encoding::_get_CodePageNoSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageNoSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageNoSymbol"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageNoSymbol
void System::Text::Encoding::_set_CodePageNoSymbol(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageNoSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageNoSymbol", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageUnicode
int System::Text::Encoding::_get_CodePageUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageUnicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageUnicode"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageUnicode
void System::Text::Encoding::_set_CodePageUnicode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageUnicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageUnicode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageBigEndian
int System::Text::Encoding::_get_CodePageBigEndian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageBigEndian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageBigEndian"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageBigEndian
void System::Text::Encoding::_set_CodePageBigEndian(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageBigEndian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageBigEndian", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageWindows1252
int System::Text::Encoding::_get_CodePageWindows1252() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageWindows1252");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageWindows1252"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageWindows1252
void System::Text::Encoding::_set_CodePageWindows1252(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageWindows1252");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageWindows1252", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageMacGB2312
int System::Text::Encoding::_get_CodePageMacGB2312() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageMacGB2312");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageMacGB2312"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageMacGB2312
void System::Text::Encoding::_set_CodePageMacGB2312(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageMacGB2312");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageMacGB2312", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageGB2312
int System::Text::Encoding::_get_CodePageGB2312() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageGB2312");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageGB2312"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageGB2312
void System::Text::Encoding::_set_CodePageGB2312(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageGB2312");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageGB2312", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageMacKorean
int System::Text::Encoding::_get_CodePageMacKorean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageMacKorean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageMacKorean"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageMacKorean
void System::Text::Encoding::_set_CodePageMacKorean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageMacKorean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageMacKorean", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageDLLKorean
int System::Text::Encoding::_get_CodePageDLLKorean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageDLLKorean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageDLLKorean"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageDLLKorean
void System::Text::Encoding::_set_CodePageDLLKorean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageDLLKorean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageDLLKorean", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISO2022JP
int System::Text::Encoding::_get_ISO2022JP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISO2022JP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISO2022JP"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISO2022JP
void System::Text::Encoding::_set_ISO2022JP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISO2022JP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISO2022JP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISO2022JPESC
int System::Text::Encoding::_get_ISO2022JPESC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISO2022JPESC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISO2022JPESC"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISO2022JPESC
void System::Text::Encoding::_set_ISO2022JPESC(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISO2022JPESC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISO2022JPESC", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISO2022JPSISO
int System::Text::Encoding::_get_ISO2022JPSISO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISO2022JPSISO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISO2022JPSISO"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISO2022JPSISO
void System::Text::Encoding::_set_ISO2022JPSISO(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISO2022JPSISO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISO2022JPSISO", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISOKorean
int System::Text::Encoding::_get_ISOKorean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISOKorean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISOKorean"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISOKorean
void System::Text::Encoding::_set_ISOKorean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISOKorean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISOKorean", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISOSimplifiedCN
int System::Text::Encoding::_get_ISOSimplifiedCN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISOSimplifiedCN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISOSimplifiedCN"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISOSimplifiedCN
void System::Text::Encoding::_set_ISOSimplifiedCN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISOSimplifiedCN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISOSimplifiedCN", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 EUCJP
int System::Text::Encoding::_get_EUCJP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_EUCJP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "EUCJP"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 EUCJP
void System::Text::Encoding::_set_EUCJP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_EUCJP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "EUCJP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ChineseHZ
int System::Text::Encoding::_get_ChineseHZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ChineseHZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ChineseHZ"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ChineseHZ
void System::Text::Encoding::_set_ChineseHZ(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ChineseHZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ChineseHZ", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DuplicateEUCCN
int System::Text::Encoding::_get_DuplicateEUCCN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_DuplicateEUCCN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "DuplicateEUCCN"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DuplicateEUCCN
void System::Text::Encoding::_set_DuplicateEUCCN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_DuplicateEUCCN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "DuplicateEUCCN", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 EUCCN
int System::Text::Encoding::_get_EUCCN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_EUCCN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "EUCCN"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 EUCCN
void System::Text::Encoding::_set_EUCCN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_EUCCN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "EUCCN", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 EUCKR
int System::Text::Encoding::_get_EUCKR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_EUCKR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "EUCKR"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 EUCKR
void System::Text::Encoding::_set_EUCKR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_EUCKR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "EUCKR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CodePageASCII
int System::Text::Encoding::_get_CodePageASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageASCII");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageASCII"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CodePageASCII
void System::Text::Encoding::_set_CodePageASCII(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageASCII");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageASCII", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 ISO_8859_1
int System::Text::Encoding::_get_ISO_8859_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISO_8859_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISO_8859_1"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 ISO_8859_1
void System::Text::Encoding::_set_ISO_8859_1(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISO_8859_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISO_8859_1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISCIIAssemese
int System::Text::Encoding::_get_ISCIIAssemese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISCIIAssemese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISCIIAssemese"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISCIIAssemese
void System::Text::Encoding::_set_ISCIIAssemese(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISCIIAssemese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISCIIAssemese", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISCIIBengali
int System::Text::Encoding::_get_ISCIIBengali() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISCIIBengali");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISCIIBengali"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISCIIBengali
void System::Text::Encoding::_set_ISCIIBengali(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISCIIBengali");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISCIIBengali", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISCIIDevanagari
int System::Text::Encoding::_get_ISCIIDevanagari() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISCIIDevanagari");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISCIIDevanagari"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISCIIDevanagari
void System::Text::Encoding::_set_ISCIIDevanagari(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISCIIDevanagari");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISCIIDevanagari", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISCIIGujarathi
int System::Text::Encoding::_get_ISCIIGujarathi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISCIIGujarathi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISCIIGujarathi"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISCIIGujarathi
void System::Text::Encoding::_set_ISCIIGujarathi(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISCIIGujarathi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISCIIGujarathi", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISCIIKannada
int System::Text::Encoding::_get_ISCIIKannada() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISCIIKannada");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISCIIKannada"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISCIIKannada
void System::Text::Encoding::_set_ISCIIKannada(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISCIIKannada");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISCIIKannada", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISCIIMalayalam
int System::Text::Encoding::_get_ISCIIMalayalam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISCIIMalayalam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISCIIMalayalam"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISCIIMalayalam
void System::Text::Encoding::_set_ISCIIMalayalam(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISCIIMalayalam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISCIIMalayalam", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISCIIOriya
int System::Text::Encoding::_get_ISCIIOriya() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISCIIOriya");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISCIIOriya"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISCIIOriya
void System::Text::Encoding::_set_ISCIIOriya(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISCIIOriya");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISCIIOriya", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISCIIPanjabi
int System::Text::Encoding::_get_ISCIIPanjabi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISCIIPanjabi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISCIIPanjabi"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISCIIPanjabi
void System::Text::Encoding::_set_ISCIIPanjabi(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISCIIPanjabi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISCIIPanjabi", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISCIITamil
int System::Text::Encoding::_get_ISCIITamil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISCIITamil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISCIITamil"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISCIITamil
void System::Text::Encoding::_set_ISCIITamil(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISCIITamil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISCIITamil", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISCIITelugu
int System::Text::Encoding::_get_ISCIITelugu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISCIITelugu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISCIITelugu"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISCIITelugu
void System::Text::Encoding::_set_ISCIITelugu(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISCIITelugu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISCIITelugu", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GB18030
int System::Text::Encoding::_get_GB18030() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_GB18030");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "GB18030"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GB18030
void System::Text::Encoding::_set_GB18030(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_GB18030");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "GB18030", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISO_8859_8I
int System::Text::Encoding::_get_ISO_8859_8I() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISO_8859_8I");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISO_8859_8I"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISO_8859_8I
void System::Text::Encoding::_set_ISO_8859_8I(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISO_8859_8I");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISO_8859_8I", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ISO_8859_8_Visual
int System::Text::Encoding::_get_ISO_8859_8_Visual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ISO_8859_8_Visual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ISO_8859_8_Visual"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ISO_8859_8_Visual
void System::Text::Encoding::_set_ISO_8859_8_Visual(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ISO_8859_8_Visual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ISO_8859_8_Visual", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ENC50229
int System::Text::Encoding::_get_ENC50229() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_ENC50229");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "ENC50229"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ENC50229
void System::Text::Encoding::_set_ENC50229(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_ENC50229");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "ENC50229", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageUTF7
int System::Text::Encoding::_get_CodePageUTF7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageUTF7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageUTF7"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageUTF7
void System::Text::Encoding::_set_CodePageUTF7(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageUTF7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageUTF7", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageUTF8
int System::Text::Encoding::_get_CodePageUTF8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageUTF8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageUTF8"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageUTF8
void System::Text::Encoding::_set_CodePageUTF8(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageUTF8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageUTF8", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageUTF32
int System::Text::Encoding::_get_CodePageUTF32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageUTF32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageUTF32"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageUTF32
void System::Text::Encoding::_set_CodePageUTF32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageUTF32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageUTF32", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CodePageUTF32BE
int System::Text::Encoding::_get_CodePageUTF32BE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_CodePageUTF32BE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text", "Encoding", "CodePageUTF32BE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CodePageUTF32BE
void System::Text::Encoding::_set_CodePageUTF32BE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_CodePageUTF32BE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "CodePageUTF32BE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object s_InternalSyncObject
::Il2CppObject* System::Text::Encoding::_get_s_InternalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_get_s_InternalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Text", "Encoding", "s_InternalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_InternalSyncObject
void System::Text::Encoding::_set_s_InternalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::_set_s_InternalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Encoding", "s_InternalSyncObject", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_codePage
[[deprecated("Use field access instead!")]] int& System::Text::Encoding::dyn_m_codePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::dyn_m_codePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_codePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CodePageDataItem dataItem
[[deprecated("Use field access instead!")]] ::System::Globalization::CodePageDataItem*& System::Text::Encoding::dyn_dataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::dyn_dataItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataItem"))->offset;
  return *reinterpret_cast<::System::Globalization::CodePageDataItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_deserializedFromEverett
[[deprecated("Use field access instead!")]] bool& System::Text::Encoding::dyn_m_deserializedFromEverett() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::dyn_m_deserializedFromEverett");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_deserializedFromEverett"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isReadOnly
[[deprecated("Use field access instead!")]] bool& System::Text::Encoding::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.EncoderFallback encoderFallback
[[deprecated("Use field access instead!")]] ::System::Text::EncoderFallback*& System::Text::Encoding::dyn_encoderFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::dyn_encoderFallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoderFallback"))->offset;
  return *reinterpret_cast<::System::Text::EncoderFallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.DecoderFallback decoderFallback
[[deprecated("Use field access instead!")]] ::System::Text::DecoderFallback*& System::Text::Encoding::dyn_decoderFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::dyn_decoderFallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoderFallback"))->offset;
  return *reinterpret_cast<::System::Text::DecoderFallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.Encoding.SetDefaultFallbacks
void System::Text::Encoding::SetDefaultFallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::SetDefaultFallbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.OnDeserializing
void System::Text::Encoding::OnDeserializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.OnDeserialized
void System::Text::Encoding::OnDeserialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.OnDeserializing
void System::Text::Encoding::OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Text.Encoding.OnDeserialized
void System::Text::Encoding::OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Text.Encoding.OnSerializing
void System::Text::Encoding::OnSerializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Text.Encoding.DeserializeEncoding
void System::Text::Encoding::DeserializeEncoding(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DeserializeEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.Encoding.SerializeEncoding
void System::Text::Encoding::SerializeEncoding(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::SerializeEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.Encoding.get_InternalSyncObject
::Il2CppObject* System::Text::Encoding::get_InternalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_InternalSyncObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "get_InternalSyncObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Encoding.GetEncoding
::System::Text::Encoding* System::Text::Encoding::GetEncoding(int codepage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "GetEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codepage)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, codepage);
}
// Autogenerated method: System.Text.Encoding.GetEncoding
::System::Text::Encoding* System::Text::Encoding::GetEncoding(int codepage, ::System::Text::EncoderFallback* encoderFallback, ::System::Text::DecoderFallback* decoderFallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "GetEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codepage), ::il2cpp_utils::ExtractType(encoderFallback), ::il2cpp_utils::ExtractType(decoderFallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, codepage, encoderFallback, decoderFallback);
}
// Autogenerated method: System.Text.Encoding.GetEncoding
::System::Text::Encoding* System::Text::Encoding::GetEncoding(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "GetEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Text.Encoding.GetEncoding
::System::Text::Encoding* System::Text::Encoding::GetEncoding(::StringW name, ::System::Text::EncoderFallback* encoderFallback, ::System::Text::DecoderFallback* decoderFallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "GetEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(encoderFallback), ::il2cpp_utils::ExtractType(decoderFallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, encoderFallback, decoderFallback);
}
// Autogenerated method: System.Text.Encoding.GetPreamble
::ArrayW<uint8_t> System::Text::Encoding::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetPreamble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_Preamble
::System::ReadOnlySpan_1<uint8_t> System::Text::Encoding::get_Preamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_Preamble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.GetDataItem
void System::Text::Encoding::GetDataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetDataItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_EncodingName
::StringW System::Text::Encoding::get_EncodingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_EncodingName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_HeaderName
::StringW System::Text::Encoding::get_HeaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_HeaderName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_WebName
::StringW System::Text::Encoding::get_WebName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_WebName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_EncoderFallback
::System::Text::EncoderFallback* System::Text::Encoding::get_EncoderFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_EncoderFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncoderFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::EncoderFallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.set_EncoderFallback
void System::Text::Encoding::set_EncoderFallback(::System::Text::EncoderFallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::set_EncoderFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EncoderFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.Encoding.get_DecoderFallback
::System::Text::DecoderFallback* System::Text::Encoding::get_DecoderFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_DecoderFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DecoderFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::DecoderFallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.set_DecoderFallback
void System::Text::Encoding::set_DecoderFallback(::System::Text::DecoderFallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::set_DecoderFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DecoderFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.Encoding.Clone
::Il2CppObject* System::Text::Encoding::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_IsReadOnly
bool System::Text::Encoding::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_ASCII
::System::Text::Encoding* System::Text::Encoding::get_ASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_ASCII");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "get_ASCII", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_Latin1
::System::Text::Encoding* System::Text::Encoding::get_Latin1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_Latin1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "get_Latin1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Encoding.GetByteCount
int System::Text::Encoding::GetByteCount(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Text.Encoding.GetByteCount
int System::Text::Encoding::GetByteCount(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Text.Encoding.GetByteCount
int System::Text::Encoding::GetByteCount(::Il2CppChar* chars, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, count);
}
// Autogenerated method: System.Text.Encoding.GetByteCount
int System::Text::Encoding::GetByteCount(::Il2CppChar* chars, int count, ::System::Text::EncoderNLS* encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, count, encoder);
}
// Autogenerated method: System.Text.Encoding.GetBytes
::ArrayW<uint8_t> System::Text::Encoding::GetBytes(::ArrayW<::Il2CppChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, chars);
}
// Autogenerated method: System.Text.Encoding.GetBytes
::ArrayW<uint8_t> System::Text::Encoding::GetBytes(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Text.Encoding.GetBytes
int System::Text::Encoding::GetBytes(::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, ::ArrayW<uint8_t> bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.Encoding.GetBytes
::ArrayW<uint8_t> System::Text::Encoding::GetBytes(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Text.Encoding.GetBytes
int System::Text::Encoding::GetBytes(::StringW s, int charIndex, int charCount, ::ArrayW<uint8_t> bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Text.Encoding.GetBytes
int System::Text::Encoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, ::System::Text::EncoderNLS* encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount, encoder);
}
// Autogenerated method: System.Text.Encoding.GetBytes
int System::Text::Encoding::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount);
}
// Autogenerated method: System.Text.Encoding.GetCharCount
int System::Text::Encoding::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.Encoding.GetCharCount
int System::Text::Encoding::GetCharCount(uint8_t* bytes, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, count);
}
// Autogenerated method: System.Text.Encoding.GetCharCount
int System::Text::Encoding::GetCharCount(uint8_t* bytes, int count, ::System::Text::DecoderNLS* decoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 25));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, count, decoder);
}
// Autogenerated method: System.Text.Encoding.GetChars
::ArrayW<::Il2CppChar> System::Text::Encoding::GetChars(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method, bytes);
}
// Autogenerated method: System.Text.Encoding.GetChars
::ArrayW<::Il2CppChar> System::Text::Encoding::GetChars(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.Encoding.GetChars
int System::Text::Encoding::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Text.Encoding.GetChars
int System::Text::Encoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 29));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount);
}
// Autogenerated method: System.Text.Encoding.GetChars
int System::Text::Encoding::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, ::System::Text::DecoderNLS* decoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount, decoder);
}
// Autogenerated method: System.Text.Encoding.GetString
::StringW System::Text::Encoding::GetString(uint8_t* bytes, int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, bytes, byteCount);
}
// Autogenerated method: System.Text.Encoding.GetChars
int System::Text::Encoding::GetChars(::System::ReadOnlySpan_1<uint8_t> bytes, ::System::Span_1<::Il2CppChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, chars);
}
// Autogenerated method: System.Text.Encoding.GetString
::StringW System::Text::Encoding::GetString(::System::ReadOnlySpan_1<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, bytes);
}
// Autogenerated method: System.Text.Encoding.get_CodePage
int System::Text::Encoding::get_CodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_CodePage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 32));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.GetDecoder
::System::Text::Decoder* System::Text::Encoding::GetDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetDecoder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Decoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.CreateDefaultEncoding
::System::Text::Encoding* System::Text::Encoding::CreateDefaultEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::CreateDefaultEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "CreateDefaultEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Encoding.setReadOnly
void System::Text::Encoding::setReadOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::setReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.Encoding.get_Default
::System::Text::Encoding* System::Text::Encoding::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Encoding.GetEncoder
::System::Text::Encoder* System::Text::Encoding::GetEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetEncoder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.GetMaxByteCount
int System::Text::Encoding::GetMaxByteCount(int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetMaxByteCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, charCount);
}
// Autogenerated method: System.Text.Encoding.GetMaxCharCount
int System::Text::Encoding::GetMaxCharCount(int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetMaxCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byteCount);
}
// Autogenerated method: System.Text.Encoding.GetString
::StringW System::Text::Encoding::GetString(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, bytes);
}
// Autogenerated method: System.Text.Encoding.GetString
::StringW System::Text::Encoding::GetString(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.Encoding.get_Unicode
::System::Text::Encoding* System::Text::Encoding::get_Unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_Unicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "get_Unicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_BigEndianUnicode
::System::Text::Encoding* System::Text::Encoding::get_BigEndianUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_BigEndianUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "get_BigEndianUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_UTF7
::System::Text::Encoding* System::Text::Encoding::get_UTF7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_UTF7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "get_UTF7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_UTF8
::System::Text::Encoding* System::Text::Encoding::get_UTF8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_UTF8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "get_UTF8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Encoding.get_UTF32
::System::Text::Encoding* System::Text::Encoding::get_UTF32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::get_UTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Encoding", "get_UTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.Encoding.GetBestFitUnicodeToBytesData
::ArrayW<::Il2CppChar> System::Text::Encoding::GetBestFitUnicodeToBytesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetBestFitUnicodeToBytesData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.GetBestFitBytesToUnicodeData
::ArrayW<::Il2CppChar> System::Text::Encoding::GetBestFitBytesToUnicodeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetBestFitBytesToUnicodeData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.ThrowBytesOverflow
void System::Text::Encoding::ThrowBytesOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::ThrowBytesOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowBytesOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.ThrowBytesOverflow
void System::Text::Encoding::ThrowBytesOverflow(::System::Text::EncoderNLS* encoder, bool nothingEncoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::ThrowBytesOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowBytesOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoder), ::il2cpp_utils::ExtractType(nothingEncoded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encoder, nothingEncoded);
}
// Autogenerated method: System.Text.Encoding.ThrowCharsOverflow
void System::Text::Encoding::ThrowCharsOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::ThrowCharsOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowCharsOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding.ThrowCharsOverflow
void System::Text::Encoding::ThrowCharsOverflow(::System::Text::DecoderNLS* decoder, bool nothingDecoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::ThrowCharsOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowCharsOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decoder), ::il2cpp_utils::ExtractType(nothingDecoded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, decoder, nothingDecoded);
}
// Autogenerated method: System.Text.Encoding.GetByteCount
int System::Text::Encoding::GetByteCount(::System::ReadOnlySpan_1<::Il2CppChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 41));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars);
}
// Autogenerated method: System.Text.Encoding.GetBytes
int System::Text::Encoding::GetBytes(::System::ReadOnlySpan_1<::Il2CppChar> chars, ::System::Span_1<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 42));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, bytes);
}
// Autogenerated method: System.Text.Encoding.Equals
bool System::Text::Encoding::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.Encoding.GetHashCode
int System::Text::Encoding::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.Encoding/DefaultEncoder
#include "System/Text/Encoding_DefaultEncoder.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding m_encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Text::Encoding::DefaultEncoder::dyn_m_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultEncoder::dyn_m_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hasInitializedEncoding
[[deprecated("Use field access instead!")]] bool& System::Text::Encoding::DefaultEncoder::dyn_m_hasInitializedEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultEncoder::dyn_m_hasInitializedEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hasInitializedEncoding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char charLeftOver
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::Encoding::DefaultEncoder::dyn_charLeftOver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultEncoder::dyn_charLeftOver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charLeftOver"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.Encoding/DefaultEncoder.GetRealObject
::Il2CppObject* System::Text::Encoding::DefaultEncoder::GetRealObject(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultEncoder::GetRealObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding::DefaultEncoder*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Text.Encoding/DefaultEncoder.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::Encoding::DefaultEncoder::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultEncoder::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding::DefaultEncoder*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.Encoding/DefaultEncoder.GetByteCount
int System::Text::Encoding::DefaultEncoder::GetByteCount(::ArrayW<::Il2CppChar> chars, int index, int count, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultEncoder::GetByteCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, index, count, flush);
}
// Autogenerated method: System.Text.Encoding/DefaultEncoder.GetByteCount
int System::Text::Encoding::DefaultEncoder::GetByteCount(::Il2CppChar* chars, int count, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultEncoder::GetByteCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoder*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, count, flush);
}
// Autogenerated method: System.Text.Encoding/DefaultEncoder.GetBytes
int System::Text::Encoding::DefaultEncoder::GetBytes(::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, ::ArrayW<uint8_t> bytes, int byteIndex, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultEncoder::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoder*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex, flush);
}
// Autogenerated method: System.Text.Encoding/DefaultEncoder.GetBytes
int System::Text::Encoding::DefaultEncoder::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultEncoder::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoder*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount, flush);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.Encoding/DefaultDecoder
#include "System/Text/Encoding_DefaultDecoder.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding m_encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Text::Encoding::DefaultDecoder::dyn_m_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultDecoder::dyn_m_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hasInitializedEncoding
[[deprecated("Use field access instead!")]] bool& System::Text::Encoding::DefaultDecoder::dyn_m_hasInitializedEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultDecoder::dyn_m_hasInitializedEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hasInitializedEncoding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.Encoding/DefaultDecoder.GetRealObject
::Il2CppObject* System::Text::Encoding::DefaultDecoder::GetRealObject(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultDecoder::GetRealObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding::DefaultDecoder*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Text.Encoding/DefaultDecoder.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::Encoding::DefaultDecoder::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultDecoder::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding::DefaultDecoder*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.Encoding/DefaultDecoder.GetCharCount
int System::Text::Encoding::DefaultDecoder::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultDecoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Text.Encoding/DefaultDecoder.GetCharCount
int System::Text::Encoding::DefaultDecoder::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultDecoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count, flush);
}
// Autogenerated method: System.Text.Encoding/DefaultDecoder.GetCharCount
int System::Text::Encoding::DefaultDecoder::GetCharCount(uint8_t* bytes, int count, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultDecoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, count, flush);
}
// Autogenerated method: System.Text.Encoding/DefaultDecoder.GetChars
int System::Text::Encoding::DefaultDecoder::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultDecoder::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Text.Encoding/DefaultDecoder.GetChars
int System::Text::Encoding::DefaultDecoder::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultDecoder::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex, flush);
}
// Autogenerated method: System.Text.Encoding/DefaultDecoder.GetChars
int System::Text::Encoding::DefaultDecoder::GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::DefaultDecoder::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteCount, chars, charCount, flush);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.Encoding/EncodingCharBuffer
#include "System/Text/Encoding_EncodingCharBuffer.hpp"
// Including type: System.Text.DecoderNLS
#include "System/Text/DecoderNLS.hpp"
// Including type: System.Text.DecoderFallbackBuffer
#include "System/Text/DecoderFallbackBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Char* chars
[[deprecated("Use field access instead!")]] ::Il2CppChar*& System::Text::Encoding::EncodingCharBuffer::dyn_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::dyn_chars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chars"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char* charStart
[[deprecated("Use field access instead!")]] ::Il2CppChar*& System::Text::Encoding::EncodingCharBuffer::dyn_charStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::dyn_charStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charStart"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char* charEnd
[[deprecated("Use field access instead!")]] ::Il2CppChar*& System::Text::Encoding::EncodingCharBuffer::dyn_charEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::dyn_charEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charEnd"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charCountResult
[[deprecated("Use field access instead!")]] int& System::Text::Encoding::EncodingCharBuffer::dyn_charCountResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::dyn_charCountResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charCountResult"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding enc
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Text::Encoding::EncodingCharBuffer::dyn_enc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::dyn_enc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enc"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.DecoderNLS decoder
[[deprecated("Use field access instead!")]] ::System::Text::DecoderNLS*& System::Text::Encoding::EncodingCharBuffer::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::dyn_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::System::Text::DecoderNLS**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* byteStart
[[deprecated("Use field access instead!")]] uint8_t*& System::Text::Encoding::EncodingCharBuffer::dyn_byteStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::dyn_byteStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteStart"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* byteEnd
[[deprecated("Use field access instead!")]] uint8_t*& System::Text::Encoding::EncodingCharBuffer::dyn_byteEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::dyn_byteEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteEnd"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* bytes
[[deprecated("Use field access instead!")]] uint8_t*& System::Text::Encoding::EncodingCharBuffer::dyn_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::dyn_bytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytes"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.DecoderFallbackBuffer fallbackBuffer
[[deprecated("Use field access instead!")]] ::System::Text::DecoderFallbackBuffer*& System::Text::Encoding::EncodingCharBuffer::dyn_fallbackBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::dyn_fallbackBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackBuffer"))->offset;
  return *reinterpret_cast<::System::Text::DecoderFallbackBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.AddChar
bool System::Text::Encoding::EncodingCharBuffer::AddChar(::Il2CppChar ch, int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::AddChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(numBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch, numBytes);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.AddChar
bool System::Text::Encoding::EncodingCharBuffer::AddChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::AddChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.AdjustBytes
void System::Text::Encoding::EncodingCharBuffer::AdjustBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::AdjustBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.get_MoreData
bool System::Text::Encoding::EncodingCharBuffer::get_MoreData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::get_MoreData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MoreData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.GetNextByte
uint8_t System::Text::Encoding::EncodingCharBuffer::GetNextByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::GetNextByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.get_BytesUsed
int System::Text::Encoding::EncodingCharBuffer::get_BytesUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::get_BytesUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.Fallback
bool System::Text::Encoding::EncodingCharBuffer::Fallback(uint8_t fallbackByte) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::Fallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fallbackByte)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fallbackByte);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.Fallback
bool System::Text::Encoding::EncodingCharBuffer::Fallback(::ArrayW<uint8_t> byteBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::Fallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byteBuffer);
}
// Autogenerated method: System.Text.Encoding/EncodingCharBuffer.get_Count
int System::Text::Encoding::EncodingCharBuffer::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingCharBuffer::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.Encoding/EncodingByteBuffer
#include "System/Text/Encoding_EncodingByteBuffer.hpp"
// Including type: System.Text.EncoderNLS
#include "System/Text/EncoderNLS.hpp"
// Including type: System.Text.EncoderFallbackBuffer
#include "System/Text/EncoderFallbackBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte* bytes
[[deprecated("Use field access instead!")]] uint8_t*& System::Text::Encoding::EncodingByteBuffer::dyn_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::dyn_bytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytes"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* byteStart
[[deprecated("Use field access instead!")]] uint8_t*& System::Text::Encoding::EncodingByteBuffer::dyn_byteStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::dyn_byteStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteStart"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* byteEnd
[[deprecated("Use field access instead!")]] uint8_t*& System::Text::Encoding::EncodingByteBuffer::dyn_byteEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::dyn_byteEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteEnd"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char* chars
[[deprecated("Use field access instead!")]] ::Il2CppChar*& System::Text::Encoding::EncodingByteBuffer::dyn_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::dyn_chars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chars"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char* charStart
[[deprecated("Use field access instead!")]] ::Il2CppChar*& System::Text::Encoding::EncodingByteBuffer::dyn_charStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::dyn_charStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charStart"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char* charEnd
[[deprecated("Use field access instead!")]] ::Il2CppChar*& System::Text::Encoding::EncodingByteBuffer::dyn_charEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::dyn_charEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charEnd"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 byteCountResult
[[deprecated("Use field access instead!")]] int& System::Text::Encoding::EncodingByteBuffer::dyn_byteCountResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::dyn_byteCountResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteCountResult"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding enc
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Text::Encoding::EncodingByteBuffer::dyn_enc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::dyn_enc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enc"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.EncoderNLS encoder
[[deprecated("Use field access instead!")]] ::System::Text::EncoderNLS*& System::Text::Encoding::EncodingByteBuffer::dyn_encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::dyn_encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoder"))->offset;
  return *reinterpret_cast<::System::Text::EncoderNLS**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.EncoderFallbackBuffer fallbackBuffer
[[deprecated("Use field access instead!")]] ::System::Text::EncoderFallbackBuffer*& System::Text::Encoding::EncodingByteBuffer::dyn_fallbackBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::dyn_fallbackBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackBuffer"))->offset;
  return *reinterpret_cast<::System::Text::EncoderFallbackBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.AddByte
bool System::Text::Encoding::EncodingByteBuffer::AddByte(uint8_t b, int moreBytesExpected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::AddByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(moreBytesExpected)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, b, moreBytesExpected);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.AddByte
bool System::Text::Encoding::EncodingByteBuffer::AddByte(uint8_t b1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::AddByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b1)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, b1);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.AddByte
bool System::Text::Encoding::EncodingByteBuffer::AddByte(uint8_t b1, uint8_t b2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::AddByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b1), ::il2cpp_utils::ExtractType(b2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, b1, b2);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.AddByte
bool System::Text::Encoding::EncodingByteBuffer::AddByte(uint8_t b1, uint8_t b2, int moreBytesExpected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::AddByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b1), ::il2cpp_utils::ExtractType(b2), ::il2cpp_utils::ExtractType(moreBytesExpected)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, b1, b2, moreBytesExpected);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.MovePrevious
void System::Text::Encoding::EncodingByteBuffer::MovePrevious(bool bThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::MovePrevious");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePrevious", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bThrow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bThrow);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.get_MoreData
bool System::Text::Encoding::EncodingByteBuffer::get_MoreData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::get_MoreData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MoreData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.GetNextChar
::Il2CppChar System::Text::Encoding::EncodingByteBuffer::GetNextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::GetNextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.get_CharsUsed
int System::Text::Encoding::EncodingByteBuffer::get_CharsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::get_CharsUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CharsUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.Encoding/EncodingByteBuffer.get_Count
int System::Text::Encoding::EncodingByteBuffer::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::EncodingByteBuffer::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Text.NormalizationCheck
#include "System/Text/NormalizationCheck.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Text.NormalizationCheck Yes
::System::Text::NormalizationCheck System::Text::NormalizationCheck::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::NormalizationCheck::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::NormalizationCheck>("System.Text", "NormalizationCheck", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.NormalizationCheck Yes
void System::Text::NormalizationCheck::_set_Yes(::System::Text::NormalizationCheck value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::NormalizationCheck::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "NormalizationCheck", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.NormalizationCheck No
::System::Text::NormalizationCheck System::Text::NormalizationCheck::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::NormalizationCheck::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::NormalizationCheck>("System.Text", "NormalizationCheck", "No"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.NormalizationCheck No
void System::Text::NormalizationCheck::_set_No(::System::Text::NormalizationCheck value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::NormalizationCheck::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "NormalizationCheck", "No", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.NormalizationCheck Maybe
::System::Text::NormalizationCheck System::Text::NormalizationCheck::_get_Maybe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::NormalizationCheck::_get_Maybe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::NormalizationCheck>("System.Text", "NormalizationCheck", "Maybe"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.NormalizationCheck Maybe
void System::Text::NormalizationCheck::_set_Maybe(::System::Text::NormalizationCheck value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::NormalizationCheck::_set_Maybe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "NormalizationCheck", "Maybe", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Text::NormalizationCheck::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::NormalizationCheck::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.Normalization
#include "System/Text/Normalization.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Text.NormalizationCheck
#include "System/Text/NormalizationCheck.hpp"
// Including type: System.Text.NormalizationForm
#include "System/Text/NormalizationForm.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte* props
uint8_t* System::Text::Normalization::_get_props() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_get_props");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("System.Text", "Normalization", "props"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* props
void System::Text::Normalization::_set_props(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_set_props");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "props", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32* mappedChars
int* System::Text::Normalization::_get_mappedChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_get_mappedChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int*>("System.Text", "Normalization", "mappedChars"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32* mappedChars
void System::Text::Normalization::_set_mappedChars(int* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_set_mappedChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "mappedChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int16* charMapIndex
int16_t* System::Text::Normalization::_get_charMapIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_get_charMapIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t*>("System.Text", "Normalization", "charMapIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int16* charMapIndex
void System::Text::Normalization::_set_charMapIndex(int16_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_set_charMapIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "charMapIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int16* helperIndex
int16_t* System::Text::Normalization::_get_helperIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_get_helperIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t*>("System.Text", "Normalization", "helperIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int16* helperIndex
void System::Text::Normalization::_set_helperIndex(int16_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_set_helperIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "helperIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt16* mapIdxToComposite
uint16_t* System::Text::Normalization::_get_mapIdxToComposite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_get_mapIdxToComposite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t*>("System.Text", "Normalization", "mapIdxToComposite"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16* mapIdxToComposite
void System::Text::Normalization::_set_mapIdxToComposite(uint16_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_set_mapIdxToComposite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "mapIdxToComposite", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* combiningClass
uint8_t* System::Text::Normalization::_get_combiningClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_get_combiningClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("System.Text", "Normalization", "combiningClass"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* combiningClass
void System::Text::Normalization::_set_combiningClass(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_set_combiningClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "combiningClass", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object forLock
::Il2CppObject* System::Text::Normalization::_get_forLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_get_forLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Text", "Normalization", "forLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object forLock
void System::Text::Normalization::_set_forLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_set_forLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "forLock", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean isReady
bool System::Text::Normalization::_get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_get_isReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Text", "Normalization", "isReady"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean isReady
void System::Text::Normalization::_set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::_set_isReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "Normalization", "isReady", value));
}
// Autogenerated method: System.Text.Normalization.PropValue
uint System::Text::Normalization::PropValue(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::PropValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "PropValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: System.Text.Normalization.CharMapIdx
int System::Text::Normalization::CharMapIdx(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::CharMapIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "CharMapIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: System.Text.Normalization.GetCombiningClass
uint8_t System::Text::Normalization::GetCombiningClass(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::GetCombiningClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "GetCombiningClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Text.Normalization.GetPrimaryCompositeFromMapIndex
int System::Text::Normalization::GetPrimaryCompositeFromMapIndex(int src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::GetPrimaryCompositeFromMapIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "GetPrimaryCompositeFromMapIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src);
}
// Autogenerated method: System.Text.Normalization.GetPrimaryCompositeHelperIndex
int System::Text::Normalization::GetPrimaryCompositeHelperIndex(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::GetPrimaryCompositeHelperIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "GetPrimaryCompositeHelperIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: System.Text.Normalization.Compose
::StringW System::Text::Normalization::Compose(::StringW source, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::Compose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Compose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(checkType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, checkType);
}
// Autogenerated method: System.Text.Normalization.Combine
::System::Text::StringBuilder* System::Text::Normalization::Combine(::StringW source, int start, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(checkType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, start, checkType);
}
// Autogenerated method: System.Text.Normalization.Combine
void System::Text::Normalization::Combine(::System::Text::StringBuilder* sb, int i, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(checkType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, i, checkType);
}
// Autogenerated method: System.Text.Normalization.CombineHangul
int System::Text::Normalization::CombineHangul(::System::Text::StringBuilder* sb, ::StringW s, int current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::CombineHangul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "CombineHangul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, s, current);
}
// Autogenerated method: System.Text.Normalization.Fetch
int System::Text::Normalization::Fetch(::System::Text::StringBuilder* sb, ::StringW s, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::Fetch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Fetch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, s, i);
}
// Autogenerated method: System.Text.Normalization.TryComposeWithPreviousStarter
int System::Text::Normalization::TryComposeWithPreviousStarter(::System::Text::StringBuilder* sb, ::StringW s, int current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::TryComposeWithPreviousStarter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "TryComposeWithPreviousStarter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, s, current);
}
// Autogenerated method: System.Text.Normalization.TryCompose
int System::Text::Normalization::TryCompose(int i, int starter, int candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::TryCompose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "TryCompose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(starter), ::il2cpp_utils::ExtractType(candidate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, starter, candidate);
}
// Autogenerated method: System.Text.Normalization.Decompose
::StringW System::Text::Normalization::Decompose(::StringW source, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::Decompose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Decompose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(checkType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, checkType);
}
// Autogenerated method: System.Text.Normalization.Decompose
void System::Text::Normalization::Decompose(::StringW source, ByRef<::System::Text::StringBuilder*> sb, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::Decompose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Decompose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(checkType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(sb), checkType);
}
// Autogenerated method: System.Text.Normalization.ReorderCanonical
void System::Text::Normalization::ReorderCanonical(::StringW src, ByRef<::System::Text::StringBuilder*> sb, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::ReorderCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "ReorderCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, byref(sb), start);
}
// Autogenerated method: System.Text.Normalization.DecomposeChar
void System::Text::Normalization::DecomposeChar(ByRef<::System::Text::StringBuilder*> sb, ByRef<::ArrayW<int>> buf, ::StringW s, int i, int checkType, ByRef<int> start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::DecomposeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "DecomposeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(checkType), ::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(buf), s, i, checkType, byref(start));
}
// Autogenerated method: System.Text.Normalization.QuickCheck
::System::Text::NormalizationCheck System::Text::Normalization::QuickCheck(::Il2CppChar c, int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::QuickCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "QuickCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::NormalizationCheck, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, type);
}
// Autogenerated method: System.Text.Normalization.GetCanonicalHangul
int System::Text::Normalization::GetCanonicalHangul(int s, ::ArrayW<int> buf, int bufIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::GetCanonicalHangul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "GetCanonicalHangul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(bufIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, buf, bufIdx);
}
// Autogenerated method: System.Text.Normalization.GetCanonical
int System::Text::Normalization::GetCanonical(int c, ::ArrayW<int> buf, int bufIdx, int checkType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::GetCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "GetCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(bufIdx), ::il2cpp_utils::ExtractType(checkType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, buf, bufIdx, checkType);
}
// Autogenerated method: System.Text.Normalization.Normalize
::StringW System::Text::Normalization::Normalize(::StringW source, ::System::Text::NormalizationForm normalizationForm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(normalizationForm)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, normalizationForm);
}
// Autogenerated method: System.Text.Normalization.Normalize
::StringW System::Text::Normalization::Normalize(::StringW source, int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, type);
}
// Autogenerated method: System.Text.Normalization.load_normalization_resource
void System::Text::Normalization::load_normalization_resource(ByRef<::System::IntPtr> props, ByRef<::System::IntPtr> mappedChars, ByRef<::System::IntPtr> charMapIndex, ByRef<::System::IntPtr> helperIndex, ByRef<::System::IntPtr> mapIdxToComposite, ByRef<::System::IntPtr> combiningClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::load_normalization_resource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", "load_normalization_resource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(props), byref(mappedChars), byref(charMapIndex), byref(helperIndex), byref(mapIdxToComposite), byref(combiningClass));
}
// Autogenerated method: System.Text.Normalization..cctor
void System::Text::Normalization::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Normalization::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "Normalization", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.EncodingHelper
#include "System/Text/EncodingHelper.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding utf8EncodingWithoutMarkers
::System::Text::Encoding* System::Text::EncodingHelper::_get_utf8EncodingWithoutMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::_get_utf8EncodingWithoutMarkers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Text", "EncodingHelper", "utf8EncodingWithoutMarkers"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding utf8EncodingWithoutMarkers
void System::Text::EncodingHelper::_set_utf8EncodingWithoutMarkers(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::_set_utf8EncodingWithoutMarkers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "EncodingHelper", "utf8EncodingWithoutMarkers", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object lockobj
::Il2CppObject* System::Text::EncodingHelper::_get_lockobj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::_get_lockobj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Text", "EncodingHelper", "lockobj"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object lockobj
void System::Text::EncodingHelper::_set_lockobj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::_set_lockobj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "EncodingHelper", "lockobj", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.Assembly i18nAssembly
::System::Reflection::Assembly* System::Text::EncodingHelper::_get_i18nAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::_get_i18nAssembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::Assembly*>("System.Text", "EncodingHelper", "i18nAssembly"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.Assembly i18nAssembly
void System::Text::EncodingHelper::_set_i18nAssembly(::System::Reflection::Assembly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::_set_i18nAssembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "EncodingHelper", "i18nAssembly", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean i18nDisabled
bool System::Text::EncodingHelper::_get_i18nDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::_get_i18nDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Text", "EncodingHelper", "i18nDisabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean i18nDisabled
void System::Text::EncodingHelper::_set_i18nDisabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::_set_i18nDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text", "EncodingHelper", "i18nDisabled", value));
}
// Autogenerated method: System.Text.EncodingHelper.get_UTF8Unmarked
::System::Text::Encoding* System::Text::EncodingHelper::get_UTF8Unmarked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::get_UTF8Unmarked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingHelper", "get_UTF8Unmarked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.EncodingHelper.InternalCodePage
::StringW System::Text::EncodingHelper::InternalCodePage(ByRef<int> code_page) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::InternalCodePage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingHelper", "InternalCodePage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code_page)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(code_page));
}
// Autogenerated method: System.Text.EncodingHelper.GetDefaultEncoding
::System::Text::Encoding* System::Text::EncodingHelper::GetDefaultEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::GetDefaultEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingHelper", "GetDefaultEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.EncodingHelper.InvokeI18N
::Il2CppObject* System::Text::EncodingHelper::InvokeI18N(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::InvokeI18N");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingHelper", "InvokeI18N", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated method: System.Text.EncodingHelper..cctor
void System::Text::EncodingHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::EncodingHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text", "EncodingHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.IPermission
#include "System/Security/IPermission.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.IPermission.Demand
void System::Security::IPermission::Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::IPermission::Demand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::IPermission*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.IPermission.IsSubsetOf
bool System::Security::IPermission::IsSubsetOf(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::IPermission::IsSubsetOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::IPermission*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.ISecurityEncodable
#include "System/Security/ISecurityEncodable.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.ISecurityEncodable.ToXml
::System::Security::SecurityElement* System::Security::ISecurityEncodable::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::ISecurityEncodable::ToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::ISecurityEncodable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.XmlSyntaxException
#include "System/Security/XmlSyntaxException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityDocument
#include "System/Security/SecurityDocument.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte[] m_data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::SecurityDocument::dyn_m_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::dyn_m_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityDocument.GuaranteeSize
void System::Security::SecurityDocument::GuaranteeSize(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GuaranteeSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GuaranteeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: System.Security.SecurityDocument.AddString
void System::Security::SecurityDocument::AddString(::StringW str, ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, byref(position));
}
// Autogenerated method: System.Security.SecurityDocument.AppendString
void System::Security::SecurityDocument::AppendString(::StringW str, ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::AppendString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, byref(position));
}
// Autogenerated method: System.Security.SecurityDocument.EncodedStringSize
int System::Security::SecurityDocument::EncodedStringSize(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::EncodedStringSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityDocument", "EncodedStringSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.SecurityDocument.GetString
::StringW System::Security::SecurityDocument::GetString(ByRef<int> position, bool bCreate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(bCreate)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(position), bCreate);
}
// Autogenerated method: System.Security.SecurityDocument.AddToken
void System::Security::SecurityDocument::AddToken(uint8_t b, ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b, byref(position));
}
// Autogenerated method: System.Security.SecurityDocument.GetRootElement
::System::Security::SecurityElement* System::Security::SecurityDocument::GetRootElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GetRootElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityDocument.GetElement
::System::Security::SecurityElement* System::Security::SecurityDocument::GetElement(int position, bool bCreate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(bCreate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, position, bCreate);
}
// Autogenerated method: System.Security.SecurityDocument.InternalGetElement
::System::Security::SecurityElement* System::Security::SecurityDocument::InternalGetElement(ByRef<int> position, bool bCreate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::InternalGetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(bCreate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, byref(position), bCreate);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.CodeAccessPermission
#include "System/Security/CodeAccessPermission.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Security.Permissions.PermissionState
#include "System/Security/Permissions/PermissionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.CodeAccessPermission.Copy
::System::Security::IPermission* System::Security::CodeAccessPermission::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::CodeAccessPermission*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::IPermission*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.Demand
void System::Security::CodeAccessPermission::Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Demand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::CodeAccessPermission*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.FromXml
void System::Security::CodeAccessPermission::FromXml(::System::Security::SecurityElement* elem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::FromXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::CodeAccessPermission*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elem);
}
// Autogenerated method: System.Security.CodeAccessPermission.Intersect
::System::Security::IPermission* System::Security::CodeAccessPermission::Intersect(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Intersect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::CodeAccessPermission*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::IPermission*, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Security.CodeAccessPermission.IsSubsetOf
bool System::Security::CodeAccessPermission::IsSubsetOf(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::IsSubsetOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::CodeAccessPermission*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Security.CodeAccessPermission.ToXml
::System::Security::SecurityElement* System::Security::CodeAccessPermission::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::ToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::CodeAccessPermission*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.Union
::System::Security::IPermission* System::Security::CodeAccessPermission::Union(::System::Security::IPermission* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Union");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::CodeAccessPermission*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::IPermission*, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Security.CodeAccessPermission.CheckPermissionState
::System::Security::Permissions::PermissionState System::Security::CodeAccessPermission::CheckPermissionState(::System::Security::Permissions::PermissionState state, bool allowUnrestricted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::CheckPermissionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "CodeAccessPermission", "CheckPermissionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(allowUnrestricted)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Permissions::PermissionState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, allowUnrestricted);
}
// Autogenerated method: System.Security.CodeAccessPermission.System.Security.IPermission.Demand
void System::Security::CodeAccessPermission::System_Security_IPermission_Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::System.Security.IPermission.Demand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::CodeAccessPermission*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.Equals
bool System::Security::CodeAccessPermission::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.CodeAccessPermission.GetHashCode
int System::Security::CodeAccessPermission::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.ToString
::StringW System::Security::CodeAccessPermission::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.NamedPermissionSet
#include "System/Security/NamedPermissionSet.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::NamedPermissionSet::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::Security::NamedPermissionSet::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.NamedPermissionSet.get_Name
::StringW System::Security::NamedPermissionSet::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.NamedPermissionSet.set_Name
void System::Security::NamedPermissionSet::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.NamedPermissionSet.ToXml
::System::Security::SecurityElement* System::Security::NamedPermissionSet::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::ToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.NamedPermissionSet.Equals
bool System::Security::NamedPermissionSet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.NamedPermissionSet.GetHashCode
int System::Security::NamedPermissionSet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.PermissionSet
#include "System/Security/PermissionSet.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.IPermission
#include "System/Security/IPermission.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object[] psUnrestricted
::ArrayW<::Il2CppObject*> System::Security::PermissionSet::_get_psUnrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_get_psUnrestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Security", "PermissionSet", "psUnrestricted"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] psUnrestricted
void System::Security::PermissionSet::_set_psUnrestricted(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_set_psUnrestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "PermissionSet", "psUnrestricted", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] action
::ArrayW<::Il2CppObject*> System::Security::PermissionSet::_get_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_get_action");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Security", "PermissionSet", "action"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] action
void System::Security::PermissionSet::_set_action(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_set_action");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "PermissionSet", "action", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Permissions.PermissionState state
[[deprecated("Use field access instead!")]] ::System::Security::Permissions::PermissionState& System::Security::PermissionSet::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Security::Permissions::PermissionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::PermissionSet::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _declsec
[[deprecated("Use field access instead!")]] bool& System::Security::PermissionSet::dyn__declsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn__declsec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_declsec"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] _ignored
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& System::Security::PermissionSet::dyn__ignored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn__ignored");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignored"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.PermissionSet.CopyTo
void System::Security::PermissionSet::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.PermissionSet.Demand
void System::Security::PermissionSet::Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::Demand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.CasOnlyDemand
void System::Security::PermissionSet::CasOnlyDemand(int skip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::CasOnlyDemand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CasOnlyDemand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skip);
}
// Autogenerated method: System.Security.PermissionSet.GetEnumerator
::System::Collections::IEnumerator* System::Security::PermissionSet::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.IsEmpty
bool System::Security::PermissionSet::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.IsUnrestricted
bool System::Security::PermissionSet::IsUnrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::IsUnrestricted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUnrestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.ToXml
::System::Security::SecurityElement* System::Security::PermissionSet::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::ToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.get_Count
int System::Security::PermissionSet::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.get_IsSynchronized
bool System::Security::PermissionSet::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.get_SyncRoot
::Il2CppObject* System::Security::PermissionSet::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Security::PermissionSet::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::PermissionSet*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Security.PermissionSet..cctor
void System::Security::PermissionSet::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "PermissionSet", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.ToString
::StringW System::Security::PermissionSet::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.Equals
bool System::Security::PermissionSet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.PermissionSet.GetHashCode
int System::Security::PermissionSet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BlockSize
int System::Security::SecureString::_get_BlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::_get_BlockSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security", "SecureString", "BlockSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BlockSize
void System::Security::SecureString::_set_BlockSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::_set_BlockSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecureString", "BlockSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxSize
int System::Security::SecureString::_get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::_get_MaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security", "SecureString", "MaxSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxSize
void System::Security::SecureString::_set_MaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::_set_MaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecureString", "MaxSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 length
[[deprecated("Use field access instead!")]] int& System::Security::SecureString::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Security::SecureString::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean read_only
[[deprecated("Use field access instead!")]] bool& System::Security::SecureString::dyn_read_only() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::dyn_read_only");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "read_only"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::SecureString::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecureString.get_Length
int System::Security::SecureString::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Copy
::System::Security::SecureString* System::Security::SecureString::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecureString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Dispose
void System::Security::SecureString::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::SecureString*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Encrypt
void System::Security::SecureString::Encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Decrypt
void System::Security::SecureString::Decrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Alloc
void System::Security::SecureString::Alloc(int length, bool realloc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Alloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Alloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(realloc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length, realloc);
}
// Autogenerated method: System.Security.SecureString.GetBuffer
::ArrayW<uint8_t> System::Security::SecureString::GetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::GetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityElementType
#include "System/Security/SecurityElementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.SecurityElementType Regular
::System::Security::SecurityElementType System::Security::SecurityElementType::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::SecurityElementType>("System.Security", "SecurityElementType", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.SecurityElementType Regular
void System::Security::SecurityElementType::_set_Regular(::System::Security::SecurityElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElementType", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.SecurityElementType Format
::System::Security::SecurityElementType System::Security::SecurityElementType::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::SecurityElementType>("System.Security", "SecurityElementType", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.SecurityElementType Format
void System::Security::SecurityElementType::_set_Format(::System::Security::SecurityElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElementType", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.SecurityElementType Comment
::System::Security::SecurityElementType System::Security::SecurityElementType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::SecurityElementType>("System.Security", "SecurityElementType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.SecurityElementType Comment
void System::Security::SecurityElementType::_set_Comment(::System::Security::SecurityElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElementType", "Comment", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::SecurityElementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Security.SecurityElement/SecurityAttribute
#include "System/Security/SecurityElement_SecurityAttribute.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_tag_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_tag_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_tag_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_tag_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_tag_chars
void System::Security::SecurityElement::_set_invalid_tag_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_tag_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_tag_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_text_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_text_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_text_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_text_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_text_chars
void System::Security::SecurityElement::_set_invalid_text_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_text_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_text_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_attr_name_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_attr_name_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_attr_name_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_attr_name_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_attr_name_chars
void System::Security::SecurityElement::_set_invalid_attr_name_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_attr_name_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_attr_name_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_attr_value_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_attr_value_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_attr_value_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_attr_value_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_attr_value_chars
void System::Security::SecurityElement::_set_invalid_attr_value_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_attr_value_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_attr_value_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_chars
void System::Security::SecurityElement::_set_invalid_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_chars", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String text
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String tag
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::dyn_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList attributes
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::SecurityElement::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList children
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::SecurityElement::dyn_children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "children"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityElement.get_Children
::System::Collections::ArrayList* System::Security::SecurityElement::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::get_Children");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.get_Tag
::StringW System::Security::SecurityElement::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.set_Text
void System::Security::SecurityElement::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.SecurityElement.AddAttribute
void System::Security::SecurityElement::AddAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Security.SecurityElement.AddChild
void System::Security::SecurityElement::AddChild(::System::Security::SecurityElement* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child);
}
// Autogenerated method: System.Security.SecurityElement.Attribute
::StringW System::Security::SecurityElement::Attribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::Attribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Attribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Security.SecurityElement.Escape
::StringW System::Security::SecurityElement::Escape(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::Escape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "Escape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.SecurityElement.Unescape
::StringW System::Security::SecurityElement::Unescape(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::Unescape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "Unescape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.SecurityElement.IsValidAttributeName
bool System::Security::SecurityElement::IsValidAttributeName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidAttributeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidAttributeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Security.SecurityElement.IsValidAttributeValue
bool System::Security::SecurityElement::IsValidAttributeValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidAttributeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidAttributeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Security.SecurityElement.IsValidTag
bool System::Security::SecurityElement::IsValidTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: System.Security.SecurityElement.IsValidText
bool System::Security::SecurityElement::IsValidText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: System.Security.SecurityElement.SearchForChildByTag
::System::Security::SecurityElement* System::Security::SecurityElement::SearchForChildByTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SearchForChildByTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchForChildByTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, tag);
}
// Autogenerated method: System.Security.SecurityElement.SearchForTextOfTag
::StringW System::Security::SecurityElement::SearchForTextOfTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SearchForTextOfTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchForTextOfTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, tag);
}
// Autogenerated method: System.Security.SecurityElement.ToXml
void System::Security::SecurityElement::ToXml(ByRef<::System::Text::StringBuilder*> s, int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::ToXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(s), level);
}
// Autogenerated method: System.Security.SecurityElement.GetAttribute
::System::Security::SecurityElement::SecurityAttribute* System::Security::SecurityElement::GetAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::GetAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement::SecurityAttribute*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Security.SecurityElement.set_m_strText
void System::Security::SecurityElement::set_m_strText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::set_m_strText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_m_strText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.SecurityElement.SearchForTextOfLocalName
::StringW System::Security::SecurityElement::SearchForTextOfLocalName(::StringW strLocalName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SearchForTextOfLocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchForTextOfLocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strLocalName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, strLocalName);
}
// Autogenerated method: System.Security.SecurityElement..cctor
void System::Security::SecurityElement::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.ToString
::StringW System::Security::SecurityElement::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityElement/SecurityAttribute
#include "System/Security/SecurityElement_SecurityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::SecurityAttribute::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _value
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::SecurityAttribute::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityElement/SecurityAttribute.get_Name
::StringW System::Security::SecurityElement::SecurityAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement/SecurityAttribute.get_Value
::StringW System::Security::SecurityElement::SecurityAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityException
#include "System/Security/SecurityException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String permissionState
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityException::dyn_permissionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityException::dyn_permissionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "permissionState"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityException.GetObjectData
void System::Security::SecurityException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.SecurityException.ToString
::StringW System::Security::SecurityException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityException::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityManager
#include "System/Security/SecurityManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.SecurityManager.get_SecurityEnabled
bool System::Security::SecurityManager::get_SecurityEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityManager::get_SecurityEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityManager", "get_SecurityEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.SecurityManager.EnsureElevatedPermissions
void System::Security::SecurityManager::EnsureElevatedPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityManager::EnsureElevatedPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityManager", "EnsureElevatedPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Parser
#include "System/Security/Util/Parser.hpp"
// Including type: System.Security.SecurityDocument
#include "System/Security/SecurityDocument.hpp"
// Including type: System.Security.Util.Tokenizer
#include "System/Security/Util/Tokenizer.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Security.Util.TokenizerStream
#include "System/Security/Util/TokenizerStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.SecurityDocument _doc
[[deprecated("Use field access instead!")]] ::System::Security::SecurityDocument*& System::Security::Util::Parser::dyn__doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::dyn__doc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doc"))->offset;
  return *reinterpret_cast<::System::Security::SecurityDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer _t
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer*& System::Security::Util::Parser::dyn__t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::dyn__t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_t"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Parser.GetTopElement
::System::Security::SecurityElement* System::Security::Util::Parser::GetTopElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::GetTopElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTopElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Parser.GetRequiredSizes
void System::Security::Util::Parser::GetRequiredSizes(::System::Security::Util::TokenizerStream* stream, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::GetRequiredSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequiredSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(index));
}
// Autogenerated method: System.Security.Util.Parser.DetermineFormat
int System::Security::Util::Parser::DetermineFormat(::System::Security::Util::TokenizerStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::DetermineFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetermineFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Security.Util.Parser.ParseContents
void System::Security::Util::Parser::ParseContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::ParseContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer
#include "System/Security/Util/Tokenizer.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Security.Util.Tokenizer/StringMaker
#include "System/Security/Util/Tokenizer_StringMaker.hpp"
// Including type: System.Security.Util.Tokenizer/ITokenReader
#include "System/Security/Util/Tokenizer_ITokenReader.hpp"
// Including type: System.Security.Util.Tokenizer/StreamTokenReader
#include "System/Security/Util/Tokenizer_StreamTokenReader.hpp"
// Including type: System.Security.Util.TokenizerStream
#include "System/Security/Util/TokenizerStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 LineNo
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn_LineNo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inProcessingTag
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inProcessingTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inProcessingTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inProcessingTag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _inBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Util::Tokenizer::dyn__inBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _inChars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Security::Util::Tokenizer::dyn__inChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inChars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _inString
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Util::Tokenizer::dyn__inString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inIndex
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inSize
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inSavedCharacter
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inSavedCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inSavedCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inSavedCharacter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer/TokenSource _inTokenSource
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer::TokenSource& System::Security::Util::Tokenizer::dyn__inTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inTokenSource"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer::TokenSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer/ITokenReader _inTokenReader
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer::ITokenReader*& System::Security::Util::Tokenizer::dyn__inTokenReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inTokenReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inTokenReader"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer::ITokenReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer/StringMaker _maker
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer::StringMaker*& System::Security::Util::Tokenizer::dyn__maker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__maker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maker"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer::StringMaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _searchStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::Tokenizer::dyn__searchStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__searchStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_searchStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _replaceStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::Tokenizer::dyn__replaceStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__replaceStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_replaceStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inNestedIndex
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inNestedIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inNestedIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inNestedIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inNestedSize
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inNestedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inNestedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inNestedSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _inNestedString
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Util::Tokenizer::dyn__inNestedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inNestedString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inNestedString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Tokenizer.BasicInitialization
void System::Security::Util::Tokenizer::BasicInitialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::BasicInitialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BasicInitialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Tokenizer.Recycle
void System::Security::Util::Tokenizer::Recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::Recycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Tokenizer.ChangeFormat
void System::Security::Util::Tokenizer::ChangeFormat(::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::ChangeFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encoding);
}
// Autogenerated method: System.Security.Util.Tokenizer.GetTokens
void System::Security::Util::Tokenizer::GetTokens(::System::Security::Util::TokenizerStream* stream, int maxNum, bool endAfterKet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::GetTokens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTokens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(maxNum), ::il2cpp_utils::ExtractType(endAfterKet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, maxNum, endAfterKet);
}
// Autogenerated method: System.Security.Util.Tokenizer.GetStringToken
::StringW System::Security::Util::Tokenizer::GetStringToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::GetStringToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/TokenSource
#include "System/Security/Util/Tokenizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/TokenSource UnicodeByteArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_UnicodeByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_UnicodeByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "UnicodeByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/TokenSource UnicodeByteArray
void System::Security::Util::Tokenizer::TokenSource::_set_UnicodeByteArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_UnicodeByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "UnicodeByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/TokenSource UTF8ByteArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_UTF8ByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_UTF8ByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "UTF8ByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/TokenSource UTF8ByteArray
void System::Security::Util::Tokenizer::TokenSource::_set_UTF8ByteArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_UTF8ByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "UTF8ByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/TokenSource ASCIIByteArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_ASCIIByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_ASCIIByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "ASCIIByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/TokenSource ASCIIByteArray
void System::Security::Util::Tokenizer::TokenSource::_set_ASCIIByteArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_ASCIIByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "ASCIIByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/TokenSource CharArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_CharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_CharArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "CharArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/TokenSource CharArray
void System::Security::Util::Tokenizer::TokenSource::_set_CharArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_CharArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "CharArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/TokenSource String
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/TokenSource String
void System::Security::Util::Tokenizer::TokenSource::_set_String(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/TokenSource NestedStrings
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_NestedStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_NestedStrings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "NestedStrings"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/TokenSource NestedStrings
void System::Security::Util::Tokenizer::TokenSource::_set_NestedStrings(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_NestedStrings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "NestedStrings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/TokenSource Other
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/TokenSource Other
void System::Security::Util::Tokenizer::TokenSource::_set_Other(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "Other", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::TokenSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/StringMaker
#include "System/Security/Util/Tokenizer_StringMaker.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String[] aStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::Tokenizer::StringMaker::dyn_aStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn_aStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 cStringsMax
[[deprecated("Use field access instead!")]] uint& System::Security::Util::Tokenizer::StringMaker::dyn_cStringsMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn_cStringsMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cStringsMax"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 cStringsUsed
[[deprecated("Use field access instead!")]] uint& System::Security::Util::Tokenizer::StringMaker::dyn_cStringsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn_cStringsUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cStringsUsed"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Text.StringBuilder _outStringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Security::Util::Tokenizer::StringMaker::dyn__outStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn__outStringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outStringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char[] _outChars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Security::Util::Tokenizer::StringMaker::dyn__outChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn__outChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outChars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 _outIndex
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::StringMaker::dyn__outIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn__outIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Tokenizer/StringMaker.HashString
uint System::Security::Util::Tokenizer::StringMaker::HashString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::HashString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Util", "Tokenizer/StringMaker", "HashString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.Util.Tokenizer/StringMaker.HashCharArray
uint System::Security::Util::Tokenizer::StringMaker::HashCharArray(::ArrayW<::Il2CppChar> a, int l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::HashCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Util", "Tokenizer/StringMaker", "HashCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, l);
}
// Autogenerated method: System.Security.Util.Tokenizer/StringMaker.CompareStringAndChars
bool System::Security::Util::Tokenizer::StringMaker::CompareStringAndChars(::StringW str, ::ArrayW<::Il2CppChar> a, int l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::CompareStringAndChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareStringAndChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, str, a, l);
}
// Autogenerated method: System.Security.Util.Tokenizer/StringMaker.MakeString
::StringW System::Security::Util::Tokenizer::StringMaker::MakeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::MakeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/ITokenReader
#include "System/Security/Util/Tokenizer_ITokenReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Util.Tokenizer/ITokenReader.Read
int System::Security::Util::Tokenizer::ITokenReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::ITokenReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Util::Tokenizer::ITokenReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/StreamTokenReader
#include "System/Security/Util/Tokenizer_StreamTokenReader.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IO.StreamReader _in
[[deprecated("Use field access instead!")]] ::System::IO::StreamReader*& System::Security::Util::Tokenizer::StreamTokenReader::dyn__in() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::dyn__in");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_in"))->offset;
  return *reinterpret_cast<::System::IO::StreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _numCharRead
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::StreamTokenReader::dyn__numCharRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::dyn__numCharRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numCharRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Tokenizer/StreamTokenReader.Read
int System::Security::Util::Tokenizer::StreamTokenReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Util::Tokenizer::StreamTokenReader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Tokenizer/StreamTokenReader.get_NumCharEncountered
int System::Security::Util::Tokenizer::StreamTokenReader::get_NumCharEncountered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::get_NumCharEncountered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumCharEncountered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Util.TokenizerShortBlock
#include "System/Security/Util/TokenizerShortBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int16[] m_block
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& System::Security::Util::TokenizerShortBlock::dyn_m_block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerShortBlock::dyn_m_block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_block"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.Util.TokenizerShortBlock m_next
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerShortBlock::dyn_m_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerShortBlock::dyn_m_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_next"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Util.TokenizerStringBlock
#include "System/Security/Util/TokenizerStringBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String[] m_block
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::TokenizerStringBlock::dyn_m_block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStringBlock::dyn_m_block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_block"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.Util.TokenizerStringBlock m_next
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerStringBlock*& System::Security::Util::TokenizerStringBlock::dyn_m_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStringBlock::dyn_m_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_next"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerStringBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Util.TokenizerStream
#include "System/Security/Util/TokenizerStream.hpp"
// Including type: System.Security.Util.TokenizerShortBlock
#include "System/Security/Util/TokenizerShortBlock.hpp"
// Including type: System.Security.Util.TokenizerStringBlock
#include "System/Security/Util/TokenizerStringBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_countTokens
[[deprecated("Use field access instead!")]] int& System::Security::Util::TokenizerStream::dyn_m_countTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_countTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_countTokens"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerShortBlock m_headTokens
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerStream::dyn_m_headTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_headTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headTokens"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerShortBlock m_lastTokens
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerStream::dyn_m_lastTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_lastTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastTokens"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerShortBlock m_currentTokens
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerStream::dyn_m_currentTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_currentTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentTokens"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_indexTokens
[[deprecated("Use field access instead!")]] int& System::Security::Util::TokenizerStream::dyn_m_indexTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_indexTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indexTokens"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerStringBlock m_headStrings
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerStringBlock*& System::Security::Util::TokenizerStream::dyn_m_headStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_headStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headStrings"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerStringBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerStringBlock m_currentStrings
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerStringBlock*& System::Security::Util::TokenizerStream::dyn_m_currentStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_currentStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentStrings"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerStringBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_indexStrings
[[deprecated("Use field access instead!")]] int& System::Security::Util::TokenizerStream::dyn_m_indexStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_indexStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indexStrings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.TokenizerStream.AddToken
void System::Security::Util::TokenizerStream::AddToken(int16_t token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Security.Util.TokenizerStream.AddString
void System::Security::Util::TokenizerStream::AddString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Security.Util.TokenizerStream.Reset
void System::Security::Util::TokenizerStream::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetNextFullToken
int16_t System::Security::Util::TokenizerStream::GetNextFullToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetNextFullToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextFullToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetNextToken
int16_t System::Security::Util::TokenizerStream::GetNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetNextString
::StringW System::Security::Util::TokenizerStream::GetNextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetNextString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.ThrowAwayNextString
void System::Security::Util::TokenizerStream::ThrowAwayNextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::ThrowAwayNextString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowAwayNextString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.TagLastToken
void System::Security::Util::TokenizerStream::TagLastToken(int16_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::TagLastToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TagLastToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetTokenCount
int System::Security::Util::TokenizerStream::GetTokenCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetTokenCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTokenCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GoToPosition
void System::Security::Util::TokenizerStream::GoToPosition(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GoToPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoToPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Policy.Evidence
#include "System/Security/Policy/Evidence.hpp"
// Including type: System.Security.Policy.Evidence/EvidenceEnumerator
#include "System/Security/Policy/Evidence_EvidenceEnumerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _locked
[[deprecated("Use field access instead!")]] bool& System::Security::Policy::Evidence::dyn__locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::dyn__locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList hostEvidenceList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Policy::Evidence::dyn_hostEvidenceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::dyn_hostEvidenceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostEvidenceList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList assemblyEvidenceList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Policy::Evidence::dyn_assemblyEvidenceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::dyn_assemblyEvidenceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assemblyEvidenceList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Policy.Evidence.get_Count
int System::Security::Policy::Evidence::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Policy::Evidence*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence.get_IsSynchronized
bool System::Security::Policy::Evidence::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Policy::Evidence*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence.get_SyncRoot
::Il2CppObject* System::Security::Policy::Evidence::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Policy::Evidence*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence.CopyTo
void System::Security::Policy::Evidence::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Policy::Evidence*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.Policy.Evidence.GetEnumerator
::System::Collections::IEnumerator* System::Security::Policy::Evidence::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Policy::Evidence*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Policy.Evidence/EvidenceEnumerator
#include "System/Security/Policy/Evidence_EvidenceEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator currentEnum
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Policy::Evidence::EvidenceEnumerator::dyn_currentEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::dyn_currentEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentEnum"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator hostEnum
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Policy::Evidence::EvidenceEnumerator::dyn_hostEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::dyn_hostEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostEnum"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator assemblyEnum
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Policy::Evidence::EvidenceEnumerator::dyn_assemblyEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::dyn_assemblyEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assemblyEnum"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Policy.Evidence/EvidenceEnumerator.MoveNext
bool System::Security::Policy::Evidence::EvidenceEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Policy::Evidence::EvidenceEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence/EvidenceEnumerator.Reset
void System::Security::Policy::Evidence::EvidenceEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Policy::Evidence::EvidenceEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence/EvidenceEnumerator.get_Current
::Il2CppObject* System::Security::Policy::Evidence::EvidenceEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Policy::Evidence::EvidenceEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.PermissionState
#include "System/Security/Permissions/PermissionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.PermissionState None
::System::Security::Permissions::PermissionState System::Security::Permissions::PermissionState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::PermissionState>("System.Security.Permissions", "PermissionState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.PermissionState None
void System::Security::Permissions::PermissionState::_set_None(::System::Security::Permissions::PermissionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "PermissionState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.PermissionState Unrestricted
::System::Security::Permissions::PermissionState System::Security::Permissions::PermissionState::_get_Unrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_get_Unrestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::PermissionState>("System.Security.Permissions", "PermissionState", "Unrestricted"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.PermissionState Unrestricted
void System::Security::Permissions::PermissionState::_set_Unrestricted(::System::Security::Permissions::PermissionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_set_Unrestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "PermissionState", "Unrestricted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Permissions::PermissionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.CodeAccessSecurityAttribute
#include "System/Security/Permissions/CodeAccessSecurityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.SecurityAction
#include "System/Security/Permissions/SecurityAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction Demand
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_Demand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "Demand"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction Demand
void System::Security::Permissions::SecurityAction::_set_Demand(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_Demand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "Demand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction Assert
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_Assert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_Assert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "Assert"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction Assert
void System::Security::Permissions::SecurityAction::_set_Assert(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_Assert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "Assert", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction Deny
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_Deny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_Deny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "Deny"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction Deny
void System::Security::Permissions::SecurityAction::_set_Deny(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_Deny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "Deny", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction PermitOnly
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_PermitOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_PermitOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "PermitOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction PermitOnly
void System::Security::Permissions::SecurityAction::_set_PermitOnly(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_PermitOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "PermitOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction LinkDemand
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_LinkDemand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_LinkDemand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "LinkDemand"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction LinkDemand
void System::Security::Permissions::SecurityAction::_set_LinkDemand(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_LinkDemand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "LinkDemand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction InheritanceDemand
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_InheritanceDemand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_InheritanceDemand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "InheritanceDemand"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction InheritanceDemand
void System::Security::Permissions::SecurityAction::_set_InheritanceDemand(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_InheritanceDemand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "InheritanceDemand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction RequestMinimum
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_RequestMinimum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_RequestMinimum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "RequestMinimum"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction RequestMinimum
void System::Security::Permissions::SecurityAction::_set_RequestMinimum(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_RequestMinimum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "RequestMinimum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction RequestOptional
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_RequestOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_RequestOptional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "RequestOptional"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction RequestOptional
void System::Security::Permissions::SecurityAction::_set_RequestOptional(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_RequestOptional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "RequestOptional", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction RequestRefuse
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_RequestRefuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_RequestRefuse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "RequestRefuse"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction RequestRefuse
void System::Security::Permissions::SecurityAction::_set_RequestRefuse(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_RequestRefuse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "RequestRefuse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Permissions::SecurityAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.SecurityAttribute
#include "System/Security/Permissions/SecurityAttribute.hpp"
// Including type: System.Security.IPermission
#include "System/Security/IPermission.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Permissions.SecurityAction m_Action
[[deprecated("Use field access instead!")]] ::System::Security::Permissions::SecurityAction& System::Security::Permissions::SecurityAttribute::dyn_m_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAttribute::dyn_m_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Action"))->offset;
  return *reinterpret_cast<::System::Security::Permissions::SecurityAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Unrestricted
[[deprecated("Use field access instead!")]] bool& System::Security::Permissions::SecurityAttribute::dyn_m_Unrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAttribute::dyn_m_Unrestricted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Unrestricted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Permissions.SecurityAttribute.CreatePermission
::System::Security::IPermission* System::Security::Permissions::SecurityAttribute::CreatePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAttribute::CreatePermission");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Permissions::SecurityAttribute*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::IPermission*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Permissions.SecurityAttribute.get_Unrestricted
bool System::Security::Permissions::SecurityAttribute::get_Unrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAttribute::get_Unrestricted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unrestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Permissions.SecurityAttribute.set_Action
void System::Security::Permissions::SecurityAttribute::set_Action(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAttribute::set_Action");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Action", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.Rfc2898DeriveBytes
#include "System/Security/Cryptography/Rfc2898DeriveBytes.hpp"
// Including type: System.Security.Cryptography.HMAC
#include "System/Security/Cryptography/HMAC.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MinimumSaltSize
int System::Security::Cryptography::Rfc2898DeriveBytes::_get_MinimumSaltSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::_get_MinimumSaltSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "Rfc2898DeriveBytes", "MinimumSaltSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MinimumSaltSize
void System::Security::Cryptography::Rfc2898DeriveBytes::_set_MinimumSaltSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::_set_MinimumSaltSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Rfc2898DeriveBytes", "MinimumSaltSize", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _password
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::Rfc2898DeriveBytes::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _salt
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::Rfc2898DeriveBytes::dyn__salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::dyn__salt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_salt"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _iterations
[[deprecated("Use field access instead!")]] uint& System::Security::Cryptography::Rfc2898DeriveBytes::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.HMAC _hmac
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HMAC*& System::Security::Cryptography::Rfc2898DeriveBytes::dyn__hmac() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::dyn__hmac");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmac"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HMAC**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _blockSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::Rfc2898DeriveBytes::dyn__blockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::dyn__blockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::Rfc2898DeriveBytes::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _block
[[deprecated("Use field access instead!")]] uint& System::Security::Cryptography::Rfc2898DeriveBytes::dyn__block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::dyn__block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_block"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _startIndex
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::Rfc2898DeriveBytes::dyn__startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::dyn__startIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _endIndex
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::Rfc2898DeriveBytes::dyn__endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::dyn__endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.HashAlgorithmName <HashAlgorithm>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithmName& System::Security::Cryptography::Rfc2898DeriveBytes::dyn_$HashAlgorithm$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::dyn_$HashAlgorithm$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HashAlgorithm>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithmName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.get_HashAlgorithm
::System::Security::Cryptography::HashAlgorithmName System::Security::Cryptography::Rfc2898DeriveBytes::get_HashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::get_HashAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithmName, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.get_IterationCount
int System::Security::Cryptography::Rfc2898DeriveBytes::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.set_IterationCount
void System::Security::Cryptography::Rfc2898DeriveBytes::set_IterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::set_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.get_Salt
::ArrayW<uint8_t> System::Security::Cryptography::Rfc2898DeriveBytes::get_Salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::get_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.set_Salt
void System::Security::Cryptography::Rfc2898DeriveBytes::set_Salt(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::set_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey
::ArrayW<uint8_t> System::Security::Cryptography::Rfc2898DeriveBytes::CryptDeriveKey(::StringW algname, ::StringW alghashname, int keySize, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::CryptDeriveKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CryptDeriveKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algname), ::il2cpp_utils::ExtractType(alghashname), ::il2cpp_utils::ExtractType(keySize), ::il2cpp_utils::ExtractType(rgbIV)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, algname, alghashname, keySize, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.OpenHmac
::System::Security::Cryptography::HMAC* System::Security::Cryptography::Rfc2898DeriveBytes::OpenHmac() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::OpenHmac");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenHmac", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HMAC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.Initialize
void System::Security::Cryptography::Rfc2898DeriveBytes::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.Func
::ArrayW<uint8_t> System::Security::Cryptography::Rfc2898DeriveBytes::Func() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::Func");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Func", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose
void System::Security::Cryptography::Rfc2898DeriveBytes::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DeriveBytes*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes
::ArrayW<uint8_t> System::Security::Cryptography::Rfc2898DeriveBytes::GetBytes(int cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DeriveBytes*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, cb);
}
// Autogenerated method: System.Security.Cryptography.Rfc2898DeriveBytes.Reset
void System::Security::Cryptography::Rfc2898DeriveBytes::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DeriveBytes*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.ICspAsymmetricAlgorithm
#include "System/Security/Cryptography/ICspAsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.CspKeyContainerInfo
#include "System/Security/Cryptography/CspKeyContainerInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.ICspAsymmetricAlgorithm.get_CspKeyContainerInfo
::System::Security::Cryptography::CspKeyContainerInfo* System::Security::Cryptography::ICspAsymmetricAlgorithm::get_CspKeyContainerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ICspAsymmetricAlgorithm::get_CspKeyContainerInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ICspAsymmetricAlgorithm*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CspKeyContainerInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob
::ArrayW<uint8_t> System::Security::Cryptography::ICspAsymmetricAlgorithm::ExportCspBlob(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ICspAsymmetricAlgorithm::ExportCspBlob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ICspAsymmetricAlgorithm*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob
void System::Security::Cryptography::ICspAsymmetricAlgorithm::ImportCspBlob(::ArrayW<uint8_t> rawData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ICspAsymmetricAlgorithm::ImportCspBlob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ICspAsymmetricAlgorithm*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.KeyNumber
#include "System/Security/Cryptography/KeyNumber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.KeyNumber Exchange
::System::Security::Cryptography::KeyNumber System::Security::Cryptography::KeyNumber::_get_Exchange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyNumber::_get_Exchange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::KeyNumber>("System.Security.Cryptography", "KeyNumber", "Exchange"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.KeyNumber Exchange
void System::Security::Cryptography::KeyNumber::_set_Exchange(::System::Security::Cryptography::KeyNumber value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyNumber::_set_Exchange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "KeyNumber", "Exchange", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.KeyNumber Signature
::System::Security::Cryptography::KeyNumber System::Security::Cryptography::KeyNumber::_get_Signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyNumber::_get_Signature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::KeyNumber>("System.Security.Cryptography", "KeyNumber", "Signature"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.KeyNumber Signature
void System::Security::Cryptography::KeyNumber::_set_Signature(::System::Security::Cryptography::KeyNumber value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyNumber::_set_Signature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "KeyNumber", "Signature", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::KeyNumber::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyNumber::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.CryptoStream
#include "System/Security/Cryptography/CryptoStream.hpp"
// Including type: System.Security.Cryptography.CryptoStream/<ReadAsyncInternal>d__37
#include "System/Security/Cryptography/CryptoStream_-ReadAsyncInternal-d__37.hpp"
// Including type: System.Security.Cryptography.CryptoStream/<ReadAsyncCore>d__42
#include "System/Security/Cryptography/CryptoStream_-ReadAsyncCore-d__42.hpp"
// Including type: System.Security.Cryptography.CryptoStream/<WriteAsyncInternal>d__46
#include "System/Security/Cryptography/CryptoStream_-WriteAsyncInternal-d__46.hpp"
// Including type: System.Security.Cryptography.CryptoStream/<WriteAsyncCore>d__49
#include "System/Security/Cryptography/CryptoStream_-WriteAsyncCore-d__49.hpp"
// Including type: System.Security.Cryptography.CryptoStream/<>c
#include "System/Security/Cryptography/CryptoStream_--c.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Security::Cryptography::CryptoStream::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.ICryptoTransform _transform
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::ICryptoTransform*& System::Security::Cryptography::CryptoStream::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::ICryptoTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.CryptoStreamMode _transformMode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CryptoStreamMode& System::Security::Cryptography::CryptoStream::dyn__transformMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__transformMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformMode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CryptoStreamMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _inputBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::dyn__inputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__inputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inputBufferIndex
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::dyn__inputBufferIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__inputBufferIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputBufferIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inputBlockSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::dyn__inputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__inputBlockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputBlockSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _outputBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::dyn__outputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__outputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _outputBufferIndex
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::dyn__outputBufferIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__outputBufferIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputBufferIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _outputBlockSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::dyn__outputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__outputBlockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputBlockSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canRead
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CryptoStream::dyn__canRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__canRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canWrite
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CryptoStream::dyn__canWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__canWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finalBlockTransformed
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CryptoStream::dyn__finalBlockTransformed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__finalBlockTransformed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalBlockTransformed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim _lazyAsyncActiveSemaphore
[[deprecated("Use field access instead!")]] ::System::Threading::SemaphoreSlim*& System::Security::Cryptography::CryptoStream::dyn__lazyAsyncActiveSemaphore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__lazyAsyncActiveSemaphore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lazyAsyncActiveSemaphore"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _leaveOpen
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CryptoStream::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_HasFlushedFinalBlock
bool System::Security::Cryptography::CryptoStream::get_HasFlushedFinalBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_HasFlushedFinalBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasFlushedFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.FlushFinalBlock
void System::Security::Cryptography::CryptoStream::FlushFinalBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::FlushFinalBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.ReadAsyncInternal
::System::Threading::Tasks::Task_1<int>* System::Security::Cryptography::CryptoStream::ReadAsyncInternal(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::ReadAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.CheckReadArguments
void System::Security::Cryptography::CryptoStream::CheckReadArguments(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::CheckReadArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckReadArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.ReadAsyncCore
::System::Threading::Tasks::Task_1<int>* System::Security::Cryptography::CryptoStream::ReadAsyncCore(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken, bool useAsync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::ReadAsyncCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsyncCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken), ::il2cpp_utils::ExtractType(useAsync)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken, useAsync);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.WriteAsyncInternal
::System::Threading::Tasks::Task* System::Security::Cryptography::CryptoStream::WriteAsyncInternal(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::WriteAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.CheckWriteArguments
void System::Security::Cryptography::CryptoStream::CheckWriteArguments(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::CheckWriteArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckWriteArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.WriteAsyncCore
::System::Threading::Tasks::Task* System::Security::Cryptography::CryptoStream::WriteAsyncCore(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken, bool useAsync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::WriteAsyncCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsyncCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken), ::il2cpp_utils::ExtractType(useAsync)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken, useAsync);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Clear
void System::Security::Cryptography::CryptoStream::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.InitializeBuffer
void System::Security::Cryptography::CryptoStream::InitializeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::InitializeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_AsyncActiveSemaphore
::System::Threading::SemaphoreSlim* System::Security::Cryptography::CryptoStream::get_AsyncActiveSemaphore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_AsyncActiveSemaphore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncActiveSemaphore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SemaphoreSlim*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_CanRead
bool System::Security::Cryptography::CryptoStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_CanSeek
bool System::Security::Cryptography::CryptoStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_CanWrite
bool System::Security::Cryptography::CryptoStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_Length
int64_t System::Security::Cryptography::CryptoStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_Position
int64_t System::Security::Cryptography::CryptoStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.set_Position
void System::Security::Cryptography::CryptoStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Flush
void System::Security::Cryptography::CryptoStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.FlushAsync
::System::Threading::Tasks::Task* System::Security::Cryptography::CryptoStream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Seek
int64_t System::Security::Cryptography::CryptoStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.SetLength
void System::Security::Cryptography::CryptoStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::Security::Cryptography::CryptoStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.BeginRead
::System::IAsyncResult* System::Security::Cryptography::CryptoStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.EndRead
int System::Security::Cryptography::CryptoStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.ReadByte
int System::Security::Cryptography::CryptoStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 35));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.WriteByte
void System::Security::Cryptography::CryptoStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Read
int System::Security::Cryptography::CryptoStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.WriteAsync
::System::Threading::Tasks::Task* System::Security::Cryptography::CryptoStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.BeginWrite
::System::IAsyncResult* System::Security::Cryptography::CryptoStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.EndWrite
void System::Security::Cryptography::CryptoStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Write
void System::Security::Cryptography::CryptoStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Dispose
void System::Security::Cryptography::CryptoStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptoStream/<ReadAsyncInternal>d__37
#include "System/Security/Cryptography/CryptoStream_-ReadAsyncInternal-d__37.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.CryptoStream <>4__this
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CryptoStream*& System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CryptoStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim <semaphore>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::SemaphoreSlim*& System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$semaphore$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$semaphore$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<semaphore>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.ForceAsyncAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::ForceAsyncAwaiter& System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::ForceAsyncAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Int32> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<int>& System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/<ReadAsyncInternal>d__37.MoveNext
void System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/<ReadAsyncInternal>d__37.SetStateMachine
void System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Security::Cryptography::CryptoStream::$ReadAsyncInternal$d__37), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptoStream/<ReadAsyncCore>d__42
#include "System/Security/Cryptography/CryptoStream_-ReadAsyncCore-d__42.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.CryptoStream <>4__this
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CryptoStream*& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CryptoStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useAsync
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_useAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_useAsync");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAsync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <bytesToDeliver>5__2
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$bytesToDeliver$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$bytesToDeliver$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<bytesToDeliver>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <currentOutputIndex>5__3
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$currentOutputIndex$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$currentOutputIndex$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentOutputIndex>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <numWholeBlocksInBytes>5__4
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$numWholeBlocksInBytes$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$numWholeBlocksInBytes$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<numWholeBlocksInBytes>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <tempInputBuffer>5__5
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$tempInputBuffer$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$tempInputBuffer$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tempInputBuffer>5__5"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <tempOutputBuffer>5__6
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$tempOutputBuffer$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$tempOutputBuffer$5__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tempOutputBuffer>5__6"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ValueTaskAwaiter`1<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ValueTaskAwaiter_1<int>& System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ValueTaskAwaiter_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/<ReadAsyncCore>d__42.MoveNext
void System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/<ReadAsyncCore>d__42.SetStateMachine
void System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Security::Cryptography::CryptoStream::$ReadAsyncCore$d__42), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptoStream/<WriteAsyncInternal>d__46
#include "System/Security/Cryptography/CryptoStream_-WriteAsyncInternal-d__46.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.CryptoStream <>4__this
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CryptoStream*& System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CryptoStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim <semaphore>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::SemaphoreSlim*& System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$semaphore$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$semaphore$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<semaphore>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.ForceAsyncAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::ForceAsyncAwaiter& System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::ForceAsyncAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/<WriteAsyncInternal>d__46.MoveNext
void System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/<WriteAsyncInternal>d__46.SetStateMachine
void System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Security::Cryptography::CryptoStream::$WriteAsyncInternal$d__46), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptoStream/<WriteAsyncCore>d__49
#include "System/Security/Cryptography/CryptoStream_-WriteAsyncCore-d__49.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.CryptoStream <>4__this
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CryptoStream*& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CryptoStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useAsync
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_useAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_useAsync");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAsync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <bytesToWrite>5__2
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$bytesToWrite$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$bytesToWrite$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<bytesToWrite>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <currentInputIndex>5__3
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$currentInputIndex$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$currentInputIndex$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentInputIndex>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <numOutputBytes>5__4
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$numOutputBytes$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$numOutputBytes$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<numOutputBytes>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ValueTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ValueTaskAwaiter& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ValueTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <numWholeBlocksInBytes>5__5
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$numWholeBlocksInBytes$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$numWholeBlocksInBytes$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<numWholeBlocksInBytes>5__5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <tempOutputBuffer>5__6
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$tempOutputBuffer$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::dyn_$tempOutputBuffer$5__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tempOutputBuffer>5__6"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/<WriteAsyncCore>d__49.MoveNext
void System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/<WriteAsyncCore>d__49.SetStateMachine
void System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Security::Cryptography::CryptoStream::$WriteAsyncCore$d__49), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptoStream/<>c
#include "System/Security/Cryptography/CryptoStream_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Security.Cryptography.CryptoStream/<>c <>9
::System::Security::Cryptography::CryptoStream::$$c* System::Security::Cryptography::CryptoStream::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CryptoStream::$$c*>("System.Security.Cryptography", "CryptoStream/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Security.Cryptography.CryptoStream/<>c <>9
void System::Security::Cryptography::CryptoStream::$$c::_set_$$9(::System::Security::Cryptography::CryptoStream::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptoStream/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Threading.SemaphoreSlim> <>9__54_0
::System::Func_1<::System::Threading::SemaphoreSlim*>* System::Security::Cryptography::CryptoStream::$$c::_get_$$9__54_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$$c::_get_$$9__54_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::System::Threading::SemaphoreSlim*>*>("System.Security.Cryptography", "CryptoStream/<>c", "<>9__54_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Threading.SemaphoreSlim> <>9__54_0
void System::Security::Cryptography::CryptoStream::$$c::_set_$$9__54_0(::System::Func_1<::System::Threading::SemaphoreSlim*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$$c::_set_$$9__54_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptoStream/<>c", "<>9__54_0", value)));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/<>c..cctor
void System::Security::Cryptography::CryptoStream::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoStream/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/<>c.<get_AsyncActiveSemaphore>b__54_0
::System::Threading::SemaphoreSlim* System::Security::Cryptography::CryptoStream::$$c::$get_AsyncActiveSemaphore$b__54_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::$$c::<get_AsyncActiveSemaphore>b__54_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_AsyncActiveSemaphore>b__54_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SemaphoreSlim*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptoStreamMode
#include "System/Security/Cryptography/CryptoStreamMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CryptoStreamMode Read
::System::Security::Cryptography::CryptoStreamMode System::Security::Cryptography::CryptoStreamMode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStreamMode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CryptoStreamMode>("System.Security.Cryptography", "CryptoStreamMode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CryptoStreamMode Read
void System::Security::Cryptography::CryptoStreamMode::_set_Read(::System::Security::Cryptography::CryptoStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStreamMode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptoStreamMode", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CryptoStreamMode Write
::System::Security::Cryptography::CryptoStreamMode System::Security::Cryptography::CryptoStreamMode::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStreamMode::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CryptoStreamMode>("System.Security.Cryptography", "CryptoStreamMode", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CryptoStreamMode Write
void System::Security::Cryptography::CryptoStreamMode::_set_Write(::System::Security::Cryptography::CryptoStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStreamMode::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptoStreamMode", "Write", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStreamMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStreamMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptographicOperations
#include "System/Security/Cryptography/CryptographicOperations.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.CryptographicOperations.FixedTimeEquals
bool System::Security::Cryptography::CryptographicOperations::FixedTimeEquals(::System::ReadOnlySpan_1<uint8_t> left, ::System::ReadOnlySpan_1<uint8_t> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptographicOperations::FixedTimeEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptographicOperations", "FixedTimeEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Security.Cryptography.CryptographicOperations.ZeroMemory
void System::Security::Cryptography::CryptographicOperations::ZeroMemory(::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptographicOperations::ZeroMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptographicOperations", "ZeroMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::HashAlgorithm::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 HashSizeValue
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::HashAlgorithm::dyn_HashSizeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::dyn_HashSizeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HashSizeValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Byte[] HashValue
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::HashAlgorithm::dyn_HashValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::dyn_HashValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HashValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 State
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::HashAlgorithm::dyn_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::dyn_State");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "State"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.Create
::System::Security::Cryptography::HashAlgorithm* System::Security::Cryptography::HashAlgorithm::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HashAlgorithm", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.Create
::System::Security::Cryptography::HashAlgorithm* System::Security::Cryptography::HashAlgorithm::Create(::StringW hashName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HashAlgorithm", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashName);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.get_HashSize
int System::Security::Cryptography::HashAlgorithm::get_HashSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::get_HashSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.get_Hash
::ArrayW<uint8_t> System::Security::Cryptography::HashAlgorithm::get_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::get_Hash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.ComputeHash
::ArrayW<uint8_t> System::Security::Cryptography::HashAlgorithm::ComputeHash(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::ComputeHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.TryComputeHash
bool System::Security::Cryptography::HashAlgorithm::TryComputeHash(::System::ReadOnlySpan_1<uint8_t> source, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::TryComputeHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, destination, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.ComputeHash
::ArrayW<uint8_t> System::Security::Cryptography::HashAlgorithm::ComputeHash(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::ComputeHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.ComputeHash
::ArrayW<uint8_t> System::Security::Cryptography::HashAlgorithm::ComputeHash(::System::IO::Stream* inputStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::ComputeHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputStream)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputStream);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.CaptureHashCodeAndReinitialize
::ArrayW<uint8_t> System::Security::Cryptography::HashAlgorithm::CaptureHashCodeAndReinitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::CaptureHashCodeAndReinitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaptureHashCodeAndReinitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.Dispose
void System::Security::Cryptography::HashAlgorithm::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.Clear
void System::Security::Cryptography::HashAlgorithm::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.Dispose
void System::Security::Cryptography::HashAlgorithm::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.get_InputBlockSize
int System::Security::Cryptography::HashAlgorithm::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.get_OutputBlockSize
int System::Security::Cryptography::HashAlgorithm::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.get_CanTransformMultipleBlocks
bool System::Security::Cryptography::HashAlgorithm::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.get_CanReuseTransform
bool System::Security::Cryptography::HashAlgorithm::get_CanReuseTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::get_CanReuseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.TransformBlock
int System::Security::Cryptography::HashAlgorithm::TransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::TransformBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock
::ArrayW<uint8_t> System::Security::Cryptography::HashAlgorithm::TransformFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.ValidateTransformBlock
void System::Security::Cryptography::HashAlgorithm::ValidateTransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::ValidateTransformBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateTransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.HashCore
void System::Security::Cryptography::HashAlgorithm::HashCore(::ArrayW<uint8_t> array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::HashAlgorithm::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.Initialize
void System::Security::Cryptography::HashAlgorithm::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.HashCore
void System::Security::Cryptography::HashAlgorithm::HashCore(::System::ReadOnlySpan_1<uint8_t> source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithm.TryHashFinal
bool System::Security::Cryptography::HashAlgorithm::TryHashFinal(::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithm::TryHashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(bytesWritten));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.HashAlgorithmName
#include "System/Security/Cryptography/HashAlgorithmName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::HashAlgorithmName::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::dyn__name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.get_MD5
::System::Security::Cryptography::HashAlgorithmName System::Security::Cryptography::HashAlgorithmName::get_MD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::get_MD5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HashAlgorithmName", "get_MD5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithmName, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.get_SHA1
::System::Security::Cryptography::HashAlgorithmName System::Security::Cryptography::HashAlgorithmName::get_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::get_SHA1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HashAlgorithmName", "get_SHA1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithmName, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.get_SHA256
::System::Security::Cryptography::HashAlgorithmName System::Security::Cryptography::HashAlgorithmName::get_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::get_SHA256");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HashAlgorithmName", "get_SHA256", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithmName, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.get_SHA384
::System::Security::Cryptography::HashAlgorithmName System::Security::Cryptography::HashAlgorithmName::get_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::get_SHA384");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HashAlgorithmName", "get_SHA384", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithmName, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.get_SHA512
::System::Security::Cryptography::HashAlgorithmName System::Security::Cryptography::HashAlgorithmName::get_SHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::get_SHA512");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HashAlgorithmName", "get_SHA512", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithmName, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName..ctor
// ABORTED elsewhere.  System::Security::Cryptography::HashAlgorithmName::HashAlgorithmName(::StringW name)
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.get_Name
::StringW System::Security::Cryptography::HashAlgorithmName::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.Equals
bool System::Security::Cryptography::HashAlgorithmName::Equals(::System::Security::Cryptography::HashAlgorithmName other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Security::Cryptography::HashAlgorithmName), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.ToString
::StringW System::Security::Cryptography::HashAlgorithmName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.Equals
bool System::Security::Cryptography::HashAlgorithmName::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.GetHashCode
int System::Security::Cryptography::HashAlgorithmName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.op_Equality
bool System::Security::Cryptography::operator ==(const ::System::Security::Cryptography::HashAlgorithmName& left, const ::System::Security::Cryptography::HashAlgorithmName& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HashAlgorithmName", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.op_Inequality
bool System::Security::Cryptography::operator !=(const ::System::Security::Cryptography::HashAlgorithmName& left, const ::System::Security::Cryptography::HashAlgorithmName& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HashAlgorithmName", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.RSAEncryptionPadding
#include "System/Security/Cryptography/RSAEncryptionPadding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_pkcs1
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::_get_s_pkcs1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::_get_s_pkcs1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSAEncryptionPadding*>("System.Security.Cryptography", "RSAEncryptionPadding", "s_pkcs1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_pkcs1
void System::Security::Cryptography::RSAEncryptionPadding::_set_s_pkcs1(::System::Security::Cryptography::RSAEncryptionPadding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::_set_s_pkcs1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSAEncryptionPadding", "s_pkcs1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA1
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::_get_s_oaepSHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::_get_s_oaepSHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSAEncryptionPadding*>("System.Security.Cryptography", "RSAEncryptionPadding", "s_oaepSHA1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA1
void System::Security::Cryptography::RSAEncryptionPadding::_set_s_oaepSHA1(::System::Security::Cryptography::RSAEncryptionPadding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::_set_s_oaepSHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSAEncryptionPadding", "s_oaepSHA1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA256
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::_get_s_oaepSHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::_get_s_oaepSHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSAEncryptionPadding*>("System.Security.Cryptography", "RSAEncryptionPadding", "s_oaepSHA256"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA256
void System::Security::Cryptography::RSAEncryptionPadding::_set_s_oaepSHA256(::System::Security::Cryptography::RSAEncryptionPadding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::_set_s_oaepSHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSAEncryptionPadding", "s_oaepSHA256", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA384
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::_get_s_oaepSHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::_get_s_oaepSHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSAEncryptionPadding*>("System.Security.Cryptography", "RSAEncryptionPadding", "s_oaepSHA384"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA384
void System::Security::Cryptography::RSAEncryptionPadding::_set_s_oaepSHA384(::System::Security::Cryptography::RSAEncryptionPadding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::_set_s_oaepSHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSAEncryptionPadding", "s_oaepSHA384", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA512
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::_get_s_oaepSHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::_get_s_oaepSHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSAEncryptionPadding*>("System.Security.Cryptography", "RSAEncryptionPadding", "s_oaepSHA512"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA512
void System::Security::Cryptography::RSAEncryptionPadding::_set_s_oaepSHA512(::System::Security::Cryptography::RSAEncryptionPadding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::_set_s_oaepSHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSAEncryptionPadding", "s_oaepSHA512", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSAEncryptionPaddingMode _mode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSAEncryptionPaddingMode& System::Security::Cryptography::RSAEncryptionPadding::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSAEncryptionPaddingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.HashAlgorithmName _oaepHashAlgorithm
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithmName& System::Security::Cryptography::RSAEncryptionPadding::dyn__oaepHashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::dyn__oaepHashAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oaepHashAlgorithm"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithmName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.get_Pkcs1
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::get_Pkcs1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::get_Pkcs1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSAEncryptionPadding", "get_Pkcs1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAEncryptionPadding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.get_OaepSHA1
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSAEncryptionPadding", "get_OaepSHA1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAEncryptionPadding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.get_OaepSHA256
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA256");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSAEncryptionPadding", "get_OaepSHA256", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAEncryptionPadding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.get_OaepSHA384
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA384");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSAEncryptionPadding", "get_OaepSHA384", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAEncryptionPadding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.get_OaepSHA512
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA512");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSAEncryptionPadding", "get_OaepSHA512", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAEncryptionPadding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.CreateOaep
::System::Security::Cryptography::RSAEncryptionPadding* System::Security::Cryptography::RSAEncryptionPadding::CreateOaep(::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::CreateOaep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSAEncryptionPadding", "CreateOaep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashAlgorithm)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAEncryptionPadding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.get_Mode
::System::Security::Cryptography::RSAEncryptionPaddingMode System::Security::Cryptography::RSAEncryptionPadding::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::get_Mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAEncryptionPaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.get_OaepHashAlgorithm
::System::Security::Cryptography::HashAlgorithmName System::Security::Cryptography::RSAEncryptionPadding::get_OaepHashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::get_OaepHashAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OaepHashAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithmName, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.CombineHashCodes
int System::Security::Cryptography::RSAEncryptionPadding::CombineHashCodes(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSAEncryptionPadding", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.Equals
bool System::Security::Cryptography::RSAEncryptionPadding::Equals(::System::Security::Cryptography::RSAEncryptionPadding* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSAEncryptionPadding*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding..cctor
void System::Security::Cryptography::RSAEncryptionPadding::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSAEncryptionPadding", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.GetHashCode
int System::Security::Cryptography::RSAEncryptionPadding::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.Equals
bool System::Security::Cryptography::RSAEncryptionPadding::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.ToString
::StringW System::Security::Cryptography::RSAEncryptionPadding::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.op_Equality
bool System::Security::Cryptography::operator ==(::System::Security::Cryptography::RSAEncryptionPadding* left, ::System::Security::Cryptography::RSAEncryptionPadding& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSAEncryptionPadding", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Security.Cryptography.RSAEncryptionPadding.op_Inequality
bool System::Security::Cryptography::operator !=(::System::Security::Cryptography::RSAEncryptionPadding* left, ::System::Security::Cryptography::RSAEncryptionPadding& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSAEncryptionPadding", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAEncryptionPaddingMode
#include "System/Security/Cryptography/RSAEncryptionPaddingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.RSAEncryptionPaddingMode Pkcs1
::System::Security::Cryptography::RSAEncryptionPaddingMode System::Security::Cryptography::RSAEncryptionPaddingMode::_get_Pkcs1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPaddingMode::_get_Pkcs1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSAEncryptionPaddingMode>("System.Security.Cryptography", "RSAEncryptionPaddingMode", "Pkcs1"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.RSAEncryptionPaddingMode Pkcs1
void System::Security::Cryptography::RSAEncryptionPaddingMode::_set_Pkcs1(::System::Security::Cryptography::RSAEncryptionPaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPaddingMode::_set_Pkcs1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSAEncryptionPaddingMode", "Pkcs1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.RSAEncryptionPaddingMode Oaep
::System::Security::Cryptography::RSAEncryptionPaddingMode System::Security::Cryptography::RSAEncryptionPaddingMode::_get_Oaep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPaddingMode::_get_Oaep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSAEncryptionPaddingMode>("System.Security.Cryptography", "RSAEncryptionPaddingMode", "Oaep"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.RSAEncryptionPaddingMode Oaep
void System::Security::Cryptography::RSAEncryptionPaddingMode::_set_Oaep(::System::Security::Cryptography::RSAEncryptionPaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPaddingMode::_set_Oaep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSAEncryptionPaddingMode", "Oaep", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RSAEncryptionPaddingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPaddingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.RSASignaturePadding
#include "System/Security/Cryptography/RSASignaturePadding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pkcs1
::System::Security::Cryptography::RSASignaturePadding* System::Security::Cryptography::RSASignaturePadding::_get_s_pkcs1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::_get_s_pkcs1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSASignaturePadding*>("System.Security.Cryptography", "RSASignaturePadding", "s_pkcs1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pkcs1
void System::Security::Cryptography::RSASignaturePadding::_set_s_pkcs1(::System::Security::Cryptography::RSASignaturePadding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::_set_s_pkcs1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSASignaturePadding", "s_pkcs1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pss
::System::Security::Cryptography::RSASignaturePadding* System::Security::Cryptography::RSASignaturePadding::_get_s_pss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::_get_s_pss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSASignaturePadding*>("System.Security.Cryptography", "RSASignaturePadding", "s_pss"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pss
void System::Security::Cryptography::RSASignaturePadding::_set_s_pss(::System::Security::Cryptography::RSASignaturePadding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::_set_s_pss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSASignaturePadding", "s_pss", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.RSASignaturePaddingMode _mode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSASignaturePaddingMode& System::Security::Cryptography::RSASignaturePadding::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSASignaturePaddingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.get_Pkcs1
::System::Security::Cryptography::RSASignaturePadding* System::Security::Cryptography::RSASignaturePadding::get_Pkcs1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::get_Pkcs1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSASignaturePadding", "get_Pkcs1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSASignaturePadding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.get_Pss
::System::Security::Cryptography::RSASignaturePadding* System::Security::Cryptography::RSASignaturePadding::get_Pss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::get_Pss");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSASignaturePadding", "get_Pss", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSASignaturePadding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.get_Mode
::System::Security::Cryptography::RSASignaturePaddingMode System::Security::Cryptography::RSASignaturePadding::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::get_Mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSASignaturePaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.Equals
bool System::Security::Cryptography::RSASignaturePadding::Equals(::System::Security::Cryptography::RSASignaturePadding* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSASignaturePadding*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding..cctor
void System::Security::Cryptography::RSASignaturePadding::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSASignaturePadding", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.GetHashCode
int System::Security::Cryptography::RSASignaturePadding::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.Equals
bool System::Security::Cryptography::RSASignaturePadding::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.ToString
::StringW System::Security::Cryptography::RSASignaturePadding::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.op_Equality
bool System::Security::Cryptography::operator ==(::System::Security::Cryptography::RSASignaturePadding* left, ::System::Security::Cryptography::RSASignaturePadding& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSASignaturePadding", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.op_Inequality
bool System::Security::Cryptography::operator !=(::System::Security::Cryptography::RSASignaturePadding* left, ::System::Security::Cryptography::RSASignaturePadding& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSASignaturePadding", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSASignaturePaddingMode
#include "System/Security/Cryptography/RSASignaturePaddingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.RSASignaturePaddingMode Pkcs1
::System::Security::Cryptography::RSASignaturePaddingMode System::Security::Cryptography::RSASignaturePaddingMode::_get_Pkcs1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePaddingMode::_get_Pkcs1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSASignaturePaddingMode>("System.Security.Cryptography", "RSASignaturePaddingMode", "Pkcs1"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.RSASignaturePaddingMode Pkcs1
void System::Security::Cryptography::RSASignaturePaddingMode::_set_Pkcs1(::System::Security::Cryptography::RSASignaturePaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePaddingMode::_set_Pkcs1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSASignaturePaddingMode", "Pkcs1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.RSASignaturePaddingMode Pss
::System::Security::Cryptography::RSASignaturePaddingMode System::Security::Cryptography::RSASignaturePaddingMode::_get_Pss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePaddingMode::_get_Pss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSASignaturePaddingMode>("System.Security.Cryptography", "RSASignaturePaddingMode", "Pss"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.RSASignaturePaddingMode Pss
void System::Security::Cryptography::RSASignaturePaddingMode::_set_Pss(::System::Security::Cryptography::RSASignaturePaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePaddingMode::_set_Pss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSASignaturePaddingMode", "Pss", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RSASignaturePaddingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePaddingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.Aes
#include "System/Security/Cryptography/Aes.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::Aes::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "Aes", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void System::Security::Cryptography::Aes::_set_s_legalBlockSizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Aes", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::Aes::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "Aes", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void System::Security::Cryptography::Aes::_set_s_legalKeySizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Aes", "s_legalKeySizes", value));
}
// Autogenerated method: System.Security.Cryptography.Aes.Create
::System::Security::Cryptography::Aes* System::Security::Cryptography::Aes::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Aes", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Aes*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Aes.Create
::System::Security::Cryptography::Aes* System::Security::Cryptography::Aes::Create(::StringW algorithmName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Aes", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Aes*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algorithmName);
}
// Autogenerated method: System.Security.Cryptography.Aes..cctor
void System::Security::Cryptography::Aes::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Aes", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Security.Cryptography.PbeParameters
#include "System/Security/Cryptography/PbeParameters.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Int32 KeySizeValue
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::AsymmetricAlgorithm::dyn_KeySizeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::dyn_KeySizeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeySizeValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Security::Cryptography::KeySizes*>& System::Security::Cryptography::AsymmetricAlgorithm::dyn_LegalKeySizesValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::dyn_LegalKeySizesValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LegalKeySizesValue"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Security::Cryptography::KeySizes*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
void System::Security::Cryptography::AsymmetricAlgorithm::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.Clear
void System::Security::Cryptography::AsymmetricAlgorithm::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
void System::Security::Cryptography::AsymmetricAlgorithm::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.get_KeySize
int System::Security::Cryptography::AsymmetricAlgorithm::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.set_KeySize
void System::Security::Cryptography::AsymmetricAlgorithm::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::set_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.get_LegalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::AsymmetricAlgorithm::get_LegalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::get_LegalKeySizes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Security::Cryptography::KeySizes*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.get_SignatureAlgorithm
::StringW System::Security::Cryptography::AsymmetricAlgorithm::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.get_KeyExchangeAlgorithm
::StringW System::Security::Cryptography::AsymmetricAlgorithm::get_KeyExchangeAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::get_KeyExchangeAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.Create
::System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::AsymmetricAlgorithm::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "AsymmetricAlgorithm", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.Create
::System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::AsymmetricAlgorithm::Create(::StringW algName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "AsymmetricAlgorithm", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algName);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString
void System::Security::Cryptography::AsymmetricAlgorithm::FromXmlString(::StringW xmlString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::FromXmlString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlString);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString
::StringW System::Security::Cryptography::AsymmetricAlgorithm::ToXmlString(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::ToXmlString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey
::ArrayW<uint8_t> System::Security::Cryptography::AsymmetricAlgorithm::ExportEncryptedPkcs8PrivateKey(::System::ReadOnlySpan_1<uint8_t> passwordBytes, ::System::Security::Cryptography::PbeParameters* pbeParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::ExportEncryptedPkcs8PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, passwordBytes, pbeParameters);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey
::ArrayW<uint8_t> System::Security::Cryptography::AsymmetricAlgorithm::ExportEncryptedPkcs8PrivateKey(::System::ReadOnlySpan_1<::Il2CppChar> password, ::System::Security::Cryptography::PbeParameters* pbeParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::ExportEncryptedPkcs8PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, password, pbeParameters);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey
::ArrayW<uint8_t> System::Security::Cryptography::AsymmetricAlgorithm::ExportPkcs8PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::ExportPkcs8PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.ExportSubjectPublicKeyInfo
::ArrayW<uint8_t> System::Security::Cryptography::AsymmetricAlgorithm::ExportSubjectPublicKeyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::ExportSubjectPublicKeyInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey
void System::Security::Cryptography::AsymmetricAlgorithm::ImportEncryptedPkcs8PrivateKey(::System::ReadOnlySpan_1<uint8_t> passwordBytes, ::System::ReadOnlySpan_1<uint8_t> source, ByRef<int> bytesRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::ImportEncryptedPkcs8PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, passwordBytes, source, byref(bytesRead));
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey
void System::Security::Cryptography::AsymmetricAlgorithm::ImportEncryptedPkcs8PrivateKey(::System::ReadOnlySpan_1<::Il2CppChar> password, ::System::ReadOnlySpan_1<uint8_t> source, ByRef<int> bytesRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::ImportEncryptedPkcs8PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, password, source, byref(bytesRead));
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.ImportPkcs8PrivateKey
void System::Security::Cryptography::AsymmetricAlgorithm::ImportPkcs8PrivateKey(::System::ReadOnlySpan_1<uint8_t> source, ByRef<int> bytesRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::ImportPkcs8PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, byref(bytesRead));
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.ImportSubjectPublicKeyInfo
void System::Security::Cryptography::AsymmetricAlgorithm::ImportSubjectPublicKeyInfo(::System::ReadOnlySpan_1<uint8_t> source, ByRef<int> bytesRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::ImportSubjectPublicKeyInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, byref(bytesRead));
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey
bool System::Security::Cryptography::AsymmetricAlgorithm::TryExportEncryptedPkcs8PrivateKey(::System::ReadOnlySpan_1<uint8_t> passwordBytes, ::System::Security::Cryptography::PbeParameters* pbeParameters, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::TryExportEncryptedPkcs8PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, passwordBytes, pbeParameters, destination, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey
bool System::Security::Cryptography::AsymmetricAlgorithm::TryExportEncryptedPkcs8PrivateKey(::System::ReadOnlySpan_1<::Il2CppChar> password, ::System::Security::Cryptography::PbeParameters* pbeParameters, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::TryExportEncryptedPkcs8PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, password, pbeParameters, destination, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.TryExportPkcs8PrivateKey
bool System::Security::Cryptography::AsymmetricAlgorithm::TryExportPkcs8PrivateKey(::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::TryExportPkcs8PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.TryExportSubjectPublicKeyInfo
bool System::Security::Cryptography::AsymmetricAlgorithm::TryExportSubjectPublicKeyInfo(::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::TryExportSubjectPublicKeyInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(bytesWritten));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
#include "System/Security/Cryptography/AsymmetricKeyExchangeDeformatter.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.get_Parameters
::StringW System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::get_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.set_Parameters
void System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::set_Parameters(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::set_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.SetKey
void System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter.DecryptKeyExchange
::ArrayW<uint8_t> System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::DecryptKeyExchange(::ArrayW<uint8_t> rgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::DecryptKeyExchange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
#include "System/Security/Cryptography/AsymmetricKeyExchangeFormatter.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.get_Parameters
::StringW System::Security::Cryptography::AsymmetricKeyExchangeFormatter::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricKeyExchangeFormatter::get_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey
void System::Security::Cryptography::AsymmetricKeyExchangeFormatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricKeyExchangeFormatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange
::ArrayW<uint8_t> System::Security::Cryptography::AsymmetricKeyExchangeFormatter::CreateKeyExchange(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricKeyExchangeFormatter::CreateKeyExchange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange
::ArrayW<uint8_t> System::Security::Cryptography::AsymmetricKeyExchangeFormatter::CreateKeyExchange(::ArrayW<uint8_t> data, ::System::Type* symAlgType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricKeyExchangeFormatter::CreateKeyExchange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricKeyExchangeFormatter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, symAlgType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsymmetricSignatureDeformatter
#include "System/Security/Cryptography/AsymmetricSignatureDeformatter.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey
void System::Security::Cryptography::AsymmetricSignatureDeformatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureDeformatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm
void System::Security::Cryptography::AsymmetricSignatureDeformatter::SetHashAlgorithm(::StringW strName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureDeformatter::SetHashAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strName);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature
bool System::Security::Cryptography::AsymmetricSignatureDeformatter::VerifySignature(::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureDeformatter::VerifySignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hash, rgbSignature);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature
bool System::Security::Cryptography::AsymmetricSignatureDeformatter::VerifySignature(::ArrayW<uint8_t> rgbHash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureDeformatter::VerifySignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsymmetricSignatureFormatter
#include "System/Security/Cryptography/AsymmetricSignatureFormatter.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey
void System::Security::Cryptography::AsymmetricSignatureFormatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureFormatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm
void System::Security::Cryptography::AsymmetricSignatureFormatter::SetHashAlgorithm(::StringW strName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureFormatter::SetHashAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strName);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature
::ArrayW<uint8_t> System::Security::Cryptography::AsymmetricSignatureFormatter::CreateSignature(::System::Security::Cryptography::HashAlgorithm* hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureFormatter::CreateSignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, hash);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature
::ArrayW<uint8_t> System::Security::Cryptography::AsymmetricSignatureFormatter::CreateSignature(::ArrayW<uint8_t> rgbHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureFormatter::CreateSignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbHash);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.FromBase64TransformMode
#include "System/Security/Cryptography/FromBase64TransformMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.FromBase64TransformMode IgnoreWhiteSpaces
::System::Security::Cryptography::FromBase64TransformMode System::Security::Cryptography::FromBase64TransformMode::_get_IgnoreWhiteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64TransformMode::_get_IgnoreWhiteSpaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::FromBase64TransformMode>("System.Security.Cryptography", "FromBase64TransformMode", "IgnoreWhiteSpaces"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.FromBase64TransformMode IgnoreWhiteSpaces
void System::Security::Cryptography::FromBase64TransformMode::_set_IgnoreWhiteSpaces(::System::Security::Cryptography::FromBase64TransformMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64TransformMode::_set_IgnoreWhiteSpaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "FromBase64TransformMode", "IgnoreWhiteSpaces", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.FromBase64TransformMode DoNotIgnoreWhiteSpaces
::System::Security::Cryptography::FromBase64TransformMode System::Security::Cryptography::FromBase64TransformMode::_get_DoNotIgnoreWhiteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64TransformMode::_get_DoNotIgnoreWhiteSpaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::FromBase64TransformMode>("System.Security.Cryptography", "FromBase64TransformMode", "DoNotIgnoreWhiteSpaces"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.FromBase64TransformMode DoNotIgnoreWhiteSpaces
void System::Security::Cryptography::FromBase64TransformMode::_set_DoNotIgnoreWhiteSpaces(::System::Security::Cryptography::FromBase64TransformMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64TransformMode::_set_DoNotIgnoreWhiteSpaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "FromBase64TransformMode", "DoNotIgnoreWhiteSpaces", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::FromBase64TransformMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64TransformMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.ToBase64Transform
#include "System/Security/Cryptography/ToBase64Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.ToBase64Transform.get_InputBlockSize
int System::Security::Cryptography::ToBase64Transform::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ToBase64Transform::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ToBase64Transform*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ToBase64Transform.get_OutputBlockSize
int System::Security::Cryptography::ToBase64Transform::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ToBase64Transform::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ToBase64Transform*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ToBase64Transform.get_CanTransformMultipleBlocks
bool System::Security::Cryptography::ToBase64Transform::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ToBase64Transform::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ToBase64Transform*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ToBase64Transform.get_CanReuseTransform
bool System::Security::Cryptography::ToBase64Transform::get_CanReuseTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ToBase64Transform::get_CanReuseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ToBase64Transform*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ToBase64Transform.TransformBlock
int System::Security::Cryptography::ToBase64Transform::TransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ToBase64Transform::TransformBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ToBase64Transform*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: System.Security.Cryptography.ToBase64Transform.TransformFinalBlock
::ArrayW<uint8_t> System::Security::Cryptography::ToBase64Transform::TransformFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ToBase64Transform::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ToBase64Transform*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.ToBase64Transform.Dispose
void System::Security::Cryptography::ToBase64Transform::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ToBase64Transform::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ToBase64Transform*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ToBase64Transform.Clear
void System::Security::Cryptography::ToBase64Transform::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ToBase64Transform::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ToBase64Transform.Dispose
void System::Security::Cryptography::ToBase64Transform::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ToBase64Transform::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ToBase64Transform*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.ToBase64Transform.Finalize
void System::Security::Cryptography::ToBase64Transform::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ToBase64Transform::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.FromBase64Transform
#include "System/Security/Cryptography/FromBase64Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _inputBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::FromBase64Transform::dyn__inputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::dyn__inputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inputIndex
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::FromBase64Transform::dyn__inputIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::dyn__inputIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.FromBase64TransformMode _whitespaces
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::FromBase64TransformMode& System::Security::Cryptography::FromBase64Transform::dyn__whitespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::dyn__whitespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whitespaces"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::FromBase64TransformMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.get_InputBlockSize
int System::Security::Cryptography::FromBase64Transform::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::FromBase64Transform*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.get_OutputBlockSize
int System::Security::Cryptography::FromBase64Transform::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::FromBase64Transform*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.get_CanTransformMultipleBlocks
bool System::Security::Cryptography::FromBase64Transform::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::FromBase64Transform*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.get_CanReuseTransform
bool System::Security::Cryptography::FromBase64Transform::get_CanReuseTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::get_CanReuseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::FromBase64Transform*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.TransformBlock
int System::Security::Cryptography::FromBase64Transform::TransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::TransformBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::FromBase64Transform*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock
::ArrayW<uint8_t> System::Security::Cryptography::FromBase64Transform::TransformFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::FromBase64Transform*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.DiscardWhiteSpaces
::ArrayW<uint8_t> System::Security::Cryptography::FromBase64Transform::DiscardWhiteSpaces(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::DiscardWhiteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiscardWhiteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.Dispose
void System::Security::Cryptography::FromBase64Transform::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::FromBase64Transform*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.Reset
void System::Security::Cryptography::FromBase64Transform::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.Clear
void System::Security::Cryptography::FromBase64Transform::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.Dispose
void System::Security::Cryptography::FromBase64Transform::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::FromBase64Transform*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.FromBase64Transform.Finalize
void System::Security::Cryptography::FromBase64Transform::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::FromBase64Transform::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CipherMode
#include "System/Security/Cryptography/CipherMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CipherMode CBC
::System::Security::Cryptography::CipherMode System::Security::Cryptography::CipherMode::_get_CBC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_get_CBC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CipherMode>("System.Security.Cryptography", "CipherMode", "CBC"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CipherMode CBC
void System::Security::Cryptography::CipherMode::_set_CBC(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_set_CBC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CipherMode", "CBC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CipherMode ECB
::System::Security::Cryptography::CipherMode System::Security::Cryptography::CipherMode::_get_ECB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_get_ECB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CipherMode>("System.Security.Cryptography", "CipherMode", "ECB"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CipherMode ECB
void System::Security::Cryptography::CipherMode::_set_ECB(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_set_ECB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CipherMode", "ECB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CipherMode OFB
::System::Security::Cryptography::CipherMode System::Security::Cryptography::CipherMode::_get_OFB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_get_OFB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CipherMode>("System.Security.Cryptography", "CipherMode", "OFB"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CipherMode OFB
void System::Security::Cryptography::CipherMode::_set_OFB(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_set_OFB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CipherMode", "OFB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CipherMode CFB
::System::Security::Cryptography::CipherMode System::Security::Cryptography::CipherMode::_get_CFB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_get_CFB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CipherMode>("System.Security.Cryptography", "CipherMode", "CFB"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CipherMode CFB
void System::Security::Cryptography::CipherMode::_set_CFB(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_set_CFB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CipherMode", "CFB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CipherMode CTS
::System::Security::Cryptography::CipherMode System::Security::Cryptography::CipherMode::_get_CTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_get_CTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CipherMode>("System.Security.Cryptography", "CipherMode", "CTS"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CipherMode CTS
void System::Security::Cryptography::CipherMode::_set_CTS(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_set_CTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CipherMode", "CTS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CipherMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.PaddingMode
#include "System/Security/Cryptography/PaddingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PaddingMode None
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::PaddingMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PaddingMode>("System.Security.Cryptography", "PaddingMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PaddingMode None
void System::Security::Cryptography::PaddingMode::_set_None(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PaddingMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PaddingMode PKCS7
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::PaddingMode::_get_PKCS7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_get_PKCS7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PaddingMode>("System.Security.Cryptography", "PaddingMode", "PKCS7"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PaddingMode PKCS7
void System::Security::Cryptography::PaddingMode::_set_PKCS7(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_set_PKCS7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PaddingMode", "PKCS7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PaddingMode Zeros
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::PaddingMode::_get_Zeros() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_get_Zeros");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PaddingMode>("System.Security.Cryptography", "PaddingMode", "Zeros"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PaddingMode Zeros
void System::Security::Cryptography::PaddingMode::_set_Zeros(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_set_Zeros");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PaddingMode", "Zeros", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PaddingMode ANSIX923
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::PaddingMode::_get_ANSIX923() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_get_ANSIX923");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PaddingMode>("System.Security.Cryptography", "PaddingMode", "ANSIX923"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PaddingMode ANSIX923
void System::Security::Cryptography::PaddingMode::_set_ANSIX923(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_set_ANSIX923");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PaddingMode", "ANSIX923", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PaddingMode ISO10126
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::PaddingMode::_get_ISO10126() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_get_ISO10126");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PaddingMode>("System.Security.Cryptography", "PaddingMode", "ISO10126"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PaddingMode ISO10126
void System::Security::Cryptography::PaddingMode::_set_ISO10126(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_set_ISO10126");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PaddingMode", "ISO10126", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::PaddingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_minSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::KeySizes::dyn_m_minSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::dyn_m_minSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::KeySizes::dyn_m_maxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::dyn_m_maxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_skipSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::KeySizes::dyn_m_skipSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::dyn_m_skipSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_skipSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.get_MinSize
int System::Security::Cryptography::KeySizes::get_MinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::get_MinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.get_MaxSize
int System::Security::Cryptography::KeySizes::get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::get_MaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.get_SkipSize
int System::Security::Cryptography::KeySizes::get_SkipSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::get_SkipSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkipSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.IsLegal
bool System::Security::Cryptography::KeySizes::IsLegal(int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::IsLegal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLegal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, keySize);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.IsLegalKeySize
bool System::Security::Cryptography::KeySizes::IsLegalKeySize(::ArrayW<::System::Security::Cryptography::KeySizes*> legalKeys, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::IsLegalKeySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "KeySizes", "IsLegalKeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legalKeys), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, legalKeys, size);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptographicException
#include "System/Security/Cryptography/CryptographicException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 FORMAT_MESSAGE_IGNORE_INSERTS
int System::Security::Cryptography::CryptographicException::_get_FORMAT_MESSAGE_IGNORE_INSERTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptographicException::_get_FORMAT_MESSAGE_IGNORE_INSERTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "CryptographicException", "FORMAT_MESSAGE_IGNORE_INSERTS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FORMAT_MESSAGE_IGNORE_INSERTS
void System::Security::Cryptography::CryptographicException::_set_FORMAT_MESSAGE_IGNORE_INSERTS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptographicException::_set_FORMAT_MESSAGE_IGNORE_INSERTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptographicException", "FORMAT_MESSAGE_IGNORE_INSERTS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FORMAT_MESSAGE_FROM_SYSTEM
int System::Security::Cryptography::CryptographicException::_get_FORMAT_MESSAGE_FROM_SYSTEM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptographicException::_get_FORMAT_MESSAGE_FROM_SYSTEM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "CryptographicException", "FORMAT_MESSAGE_FROM_SYSTEM"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FORMAT_MESSAGE_FROM_SYSTEM
void System::Security::Cryptography::CryptographicException::_set_FORMAT_MESSAGE_FROM_SYSTEM(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptographicException::_set_FORMAT_MESSAGE_FROM_SYSTEM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptographicException", "FORMAT_MESSAGE_FROM_SYSTEM", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FORMAT_MESSAGE_ARGUMENT_ARRAY
int System::Security::Cryptography::CryptographicException::_get_FORMAT_MESSAGE_ARGUMENT_ARRAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptographicException::_get_FORMAT_MESSAGE_ARGUMENT_ARRAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "CryptographicException", "FORMAT_MESSAGE_ARGUMENT_ARRAY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FORMAT_MESSAGE_ARGUMENT_ARRAY
void System::Security::Cryptography::CryptographicException::_set_FORMAT_MESSAGE_ARGUMENT_ARRAY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptographicException::_set_FORMAT_MESSAGE_ARGUMENT_ARRAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptographicException", "FORMAT_MESSAGE_ARGUMENT_ARRAY", value));
}
// Autogenerated method: System.Security.Cryptography.CryptographicException.ThrowCryptographicException
void System::Security::Cryptography::CryptographicException::ThrowCryptographicException(int hr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptographicException::ThrowCryptographicException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptographicException", "ThrowCryptographicException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hr);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptographicUnexpectedOperationException
#include "System/Security/Cryptography/CryptographicUnexpectedOperationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CspProviderFlags
#include "System/Security/Cryptography/CspProviderFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags NoFlags
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_NoFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_NoFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "NoFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags NoFlags
void System::Security::Cryptography::CspProviderFlags::_set_NoFlags(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_NoFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "NoFlags", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseMachineKeyStore
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseMachineKeyStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseMachineKeyStore"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseMachineKeyStore
void System::Security::Cryptography::CspProviderFlags::_set_UseMachineKeyStore(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseMachineKeyStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseMachineKeyStore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseDefaultKeyContainer
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseDefaultKeyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseDefaultKeyContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseDefaultKeyContainer"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseDefaultKeyContainer
void System::Security::Cryptography::CspProviderFlags::_set_UseDefaultKeyContainer(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseDefaultKeyContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseDefaultKeyContainer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseNonExportableKey
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseNonExportableKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseNonExportableKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseNonExportableKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseNonExportableKey
void System::Security::Cryptography::CspProviderFlags::_set_UseNonExportableKey(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseNonExportableKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseNonExportableKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseExistingKey
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseExistingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseExistingKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseExistingKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseExistingKey
void System::Security::Cryptography::CspProviderFlags::_set_UseExistingKey(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseExistingKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseExistingKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseArchivableKey
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseArchivableKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseArchivableKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseArchivableKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseArchivableKey
void System::Security::Cryptography::CspProviderFlags::_set_UseArchivableKey(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseArchivableKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseArchivableKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseUserProtectedKey
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseUserProtectedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseUserProtectedKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseUserProtectedKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseUserProtectedKey
void System::Security::Cryptography::CspProviderFlags::_set_UseUserProtectedKey(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseUserProtectedKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseUserProtectedKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags NoPrompt
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_NoPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_NoPrompt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "NoPrompt"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags NoPrompt
void System::Security::Cryptography::CspProviderFlags::_set_NoPrompt(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_NoPrompt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "NoPrompt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags CreateEphemeralKey
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_CreateEphemeralKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_CreateEphemeralKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "CreateEphemeralKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags CreateEphemeralKey
void System::Security::Cryptography::CspProviderFlags::_set_CreateEphemeralKey(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_CreateEphemeralKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "CreateEphemeralKey", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CspProviderFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
// Including type: System.Security.AccessControl.CryptoKeySecurity
#include "System/Security/AccessControl/CryptoKeySecurity.hpp"
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProviderType
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CspParameters::dyn_ProviderType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_ProviderType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProviderType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ProviderName
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::CspParameters::dyn_ProviderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_ProviderName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProviderName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String KeyContainerName
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::CspParameters::dyn_KeyContainerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_KeyContainerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyContainerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 KeyNumber
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CspParameters::dyn_KeyNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_KeyNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_flags
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CspParameters::dyn_m_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_m_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.AccessControl.CryptoKeySecurity m_cryptoKeySecurity
[[deprecated("Use field access instead!")]] ::System::Security::AccessControl::CryptoKeySecurity*& System::Security::Cryptography::CspParameters::dyn_m_cryptoKeySecurity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_m_cryptoKeySecurity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cryptoKeySecurity"))->offset;
  return *reinterpret_cast<::System::Security::AccessControl::CryptoKeySecurity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.SecureString m_keyPassword
[[deprecated("Use field access instead!")]] ::System::Security::SecureString*& System::Security::Cryptography::CspParameters::dyn_m_keyPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_m_keyPassword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyPassword"))->offset;
  return *reinterpret_cast<::System::Security::SecureString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_parentWindowHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Security::Cryptography::CspParameters::dyn_m_parentWindowHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_m_parentWindowHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_parentWindowHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.CspParameters.get_Flags
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspParameters::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CspProviderFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspParameters.set_Flags
void System::Security::Cryptography::CspParameters::set_Flags(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::set_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.CspParameters.get_CryptoKeySecurity
::System::Security::AccessControl::CryptoKeySecurity* System::Security::Cryptography::CspParameters::get_CryptoKeySecurity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::get_CryptoKeySecurity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CryptoKeySecurity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::AccessControl::CryptoKeySecurity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspParameters.set_CryptoKeySecurity
void System::Security::Cryptography::CspParameters::set_CryptoKeySecurity(::System::Security::AccessControl::CryptoKeySecurity* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::set_CryptoKeySecurity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CryptoKeySecurity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.CspParameters.get_KeyPassword
::System::Security::SecureString* System::Security::Cryptography::CspParameters::get_KeyPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::get_KeyPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecureString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspParameters.set_KeyPassword
void System::Security::Cryptography::CspParameters::set_KeyPassword(::System::Security::SecureString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::set_KeyPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeyPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.CspParameters.get_ParentWindowHandle
::System::IntPtr System::Security::Cryptography::CspParameters::get_ParentWindowHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::get_ParentWindowHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentWindowHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspParameters.set_ParentWindowHandle
void System::Security::Cryptography::CspParameters::set_ParentWindowHandle(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::set_ParentWindowHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentWindowHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DeriveBytes
#include "System/Security/Cryptography/DeriveBytes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.DeriveBytes.GetBytes
::ArrayW<uint8_t> System::Security::Cryptography::DeriveBytes::GetBytes(int cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DeriveBytes::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DeriveBytes*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, cb);
}
// Autogenerated method: System.Security.Cryptography.DeriveBytes.Reset
void System::Security::Cryptography::DeriveBytes::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DeriveBytes::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DeriveBytes*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DeriveBytes.Dispose
void System::Security::Cryptography::DeriveBytes::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DeriveBytes::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DeriveBytes*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DeriveBytes.Dispose
void System::Security::Cryptography::DeriveBytes::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DeriveBytes::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DeriveBytes*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DES
#include "System/Security/Cryptography/DES.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::DES::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "DES", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void System::Security::Cryptography::DES::_set_s_legalBlockSizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DES", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::DES::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "DES", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void System::Security::Cryptography::DES::_set_s_legalKeySizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DES", "s_legalKeySizes", value));
}
// Autogenerated method: System.Security.Cryptography.DES.Create
::System::Security::Cryptography::DES* System::Security::Cryptography::DES::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DES", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DES*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DES.Create
::System::Security::Cryptography::DES* System::Security::Cryptography::DES::Create(::StringW algName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DES", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DES*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algName);
}
// Autogenerated method: System.Security.Cryptography.DES.IsWeakKey
bool System::Security::Cryptography::DES::IsWeakKey(::ArrayW<uint8_t> rgbKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::IsWeakKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DES", "IsWeakKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgbKey);
}
// Autogenerated method: System.Security.Cryptography.DES.IsSemiWeakKey
bool System::Security::Cryptography::DES::IsSemiWeakKey(::ArrayW<uint8_t> rgbKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::IsSemiWeakKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DES", "IsSemiWeakKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgbKey);
}
// Autogenerated method: System.Security.Cryptography.DES.IsLegalKeySize
bool System::Security::Cryptography::DES::IsLegalKeySize(::ArrayW<uint8_t> rgbKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::IsLegalKeySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DES", "IsLegalKeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgbKey);
}
// Autogenerated method: System.Security.Cryptography.DES.QuadWordFromBigEndian
uint64_t System::Security::Cryptography::DES::QuadWordFromBigEndian(::ArrayW<uint8_t> block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::QuadWordFromBigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DES", "QuadWordFromBigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, block);
}
// Autogenerated method: System.Security.Cryptography.DES..cctor
void System::Security::Cryptography::DES::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DES", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DES.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::DES::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DES.set_Key
void System::Security::Cryptography::DES::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DES::set_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DESCryptoServiceProvider
#include "System/Security/Cryptography/DESCryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::DESCryptoServiceProvider::CreateEncryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::DESCryptoServiceProvider::CreateDecryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey
void System::Security::Cryptography::DESCryptoServiceProvider::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESCryptoServiceProvider::GenerateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV
void System::Security::Cryptography::DESCryptoServiceProvider::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DESCryptoServiceProvider::GenerateIV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.HashAlgorithmName
#include "System/Security/Cryptography/HashAlgorithmName.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.DSA.Create
::System::Security::Cryptography::DSA* System::Security::Cryptography::DSA::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DSA", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSA.Create
::System::Security::Cryptography::DSA* System::Security::Cryptography::DSA::Create(::StringW algName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DSA", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algName);
}
// Autogenerated method: System.Security.Cryptography.DSA.CreateSignature
::ArrayW<uint8_t> System::Security::Cryptography::DSA::CreateSignature(::ArrayW<uint8_t> rgbHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::CreateSignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbHash);
}
// Autogenerated method: System.Security.Cryptography.DSA.VerifySignature
bool System::Security::Cryptography::DSA::VerifySignature(::ArrayW<uint8_t> rgbHash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::VerifySignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated method: System.Security.Cryptography.DSA.HashData
::ArrayW<uint8_t> System::Security::Cryptography::DSA::HashData(::ArrayW<uint8_t> data, int offset, int count, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::HashData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSA.HashData
::ArrayW<uint8_t> System::Security::Cryptography::DSA::HashData(::System::IO::Stream* data, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::HashData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSA.SignData
::ArrayW<uint8_t> System::Security::Cryptography::DSA::SignData(::ArrayW<uint8_t> data, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::SignData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(hashAlgorithm)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSA.SignData
::ArrayW<uint8_t> System::Security::Cryptography::DSA::SignData(::ArrayW<uint8_t> data, int offset, int count, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::SignData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSA.SignData
::ArrayW<uint8_t> System::Security::Cryptography::DSA::SignData(::System::IO::Stream* data, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::SignData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSA.VerifyData
bool System::Security::Cryptography::DSA::VerifyData(::ArrayW<uint8_t> data, ::ArrayW<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::VerifyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(hashAlgorithm)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, signature, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSA.VerifyData
bool System::Security::Cryptography::DSA::VerifyData(::ArrayW<uint8_t> data, int offset, int count, ::ArrayW<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::VerifyData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, offset, count, signature, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSA.VerifyData
bool System::Security::Cryptography::DSA::VerifyData(::System::IO::Stream* data, ::ArrayW<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::VerifyData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, signature, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSA.ExportParameters
::System::Security::Cryptography::DSAParameters System::Security::Cryptography::DSA::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::ExportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: System.Security.Cryptography.DSA.ImportParameters
void System::Security::Cryptography::DSA::ImportParameters(::System::Security::Cryptography::DSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::ImportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: System.Security.Cryptography.DSA.DerivedClassMustOverride
::System::Exception* System::Security::Cryptography::DSA::DerivedClassMustOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::DerivedClassMustOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DSA", "DerivedClassMustOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSA.HashAlgorithmNameNullOrEmpty
::System::Exception* System::Security::Cryptography::DSA::HashAlgorithmNameNullOrEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::HashAlgorithmNameNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DSA", "HashAlgorithmNameNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSA.Create
::System::Security::Cryptography::DSA* System::Security::Cryptography::DSA::Create(int keySizeInBits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DSA", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySizeInBits)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keySizeInBits);
}
// Autogenerated method: System.Security.Cryptography.DSA.Create
::System::Security::Cryptography::DSA* System::Security::Cryptography::DSA::Create(::System::Security::Cryptography::DSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DSA", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters);
}
// Autogenerated method: System.Security.Cryptography.DSA.TryCreateSignature
bool System::Security::Cryptography::DSA::TryCreateSignature(::System::ReadOnlySpan_1<uint8_t> hash, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::TryCreateSignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hash, destination, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.DSA.TryHashData
bool System::Security::Cryptography::DSA::TryHashData(::System::ReadOnlySpan_1<uint8_t> data, ::System::Span_1<uint8_t> destination, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::TryHashData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, destination, hashAlgorithm, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.DSA.TrySignData
bool System::Security::Cryptography::DSA::TrySignData(::System::ReadOnlySpan_1<uint8_t> data, ::System::Span_1<uint8_t> destination, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::TrySignData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 37));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, destination, hashAlgorithm, byref(bytesWritten));
}
// Autogenerated method: System.Security.Cryptography.DSA.VerifyData
bool System::Security::Cryptography::DSA::VerifyData(::System::ReadOnlySpan_1<uint8_t> data, ::System::ReadOnlySpan_1<uint8_t> signature, ::System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::VerifyData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 38));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, signature, hashAlgorithm);
}
// Autogenerated method: System.Security.Cryptography.DSA.VerifySignature
bool System::Security::Cryptography::DSA::VerifySignature(::System::ReadOnlySpan_1<uint8_t> hash, ::System::ReadOnlySpan_1<uint8_t> signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::VerifySignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DSA*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hash, signature);
}
// Autogenerated method: System.Security.Cryptography.DSA.FromXmlString
void System::Security::Cryptography::DSA::FromXmlString(::StringW xmlString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::FromXmlString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlString);
}
// Autogenerated method: System.Security.Cryptography.DSA.ToXmlString
::StringW System::Security::Cryptography::DSA::ToXmlString(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSA::ToXmlString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DSASignatureDeformatter
#include "System/Security/Cryptography/DSASignatureDeformatter.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DSA _dsaKey
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::DSA*& System::Security::Cryptography::DSASignatureDeformatter::dyn__dsaKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSASignatureDeformatter::dyn__dsaKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dsaKey"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _oid
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::DSASignatureDeformatter::dyn__oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSASignatureDeformatter::dyn__oid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.DSASignatureDeformatter.SetKey
void System::Security::Cryptography::DSASignatureDeformatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSASignatureDeformatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm
void System::Security::Cryptography::DSASignatureDeformatter::SetHashAlgorithm(::StringW strName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSASignatureDeformatter::SetHashAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strName);
}
// Autogenerated method: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature
bool System::Security::Cryptography::DSASignatureDeformatter::VerifySignature(::ArrayW<uint8_t> rgbHash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSASignatureDeformatter::VerifySignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DSASignatureFormatter
#include "System/Security/Cryptography/DSASignatureFormatter.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DSA _dsaKey
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::DSA*& System::Security::Cryptography::DSASignatureFormatter::dyn__dsaKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSASignatureFormatter::dyn__dsaKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dsaKey"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _oid
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::DSASignatureFormatter::dyn__oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSASignatureFormatter::dyn__oid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.DSASignatureFormatter.SetKey
void System::Security::Cryptography::DSASignatureFormatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSASignatureFormatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm
void System::Security::Cryptography::DSASignatureFormatter::SetHashAlgorithm(::StringW strName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSASignatureFormatter::SetHashAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strName);
}
// Autogenerated method: System.Security.Cryptography.DSASignatureFormatter.CreateSignature
::ArrayW<uint8_t> System::Security::Cryptography::DSASignatureFormatter::CreateSignature(::ArrayW<uint8_t> rgbHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DSASignatureFormatter::CreateSignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbHash);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.HMAC
#include "System/Security/Cryptography/HMAC.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 blockSizeValue
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::HMAC::dyn_blockSizeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::dyn_blockSizeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockSizeValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_hashName
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::HMAC::dyn_m_hashName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::dyn_m_hashName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hashName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.Cryptography.HashAlgorithm m_hash1
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithm*& System::Security::Cryptography::HMAC::dyn_m_hash1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::dyn_m_hash1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hash1"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.Cryptography.HashAlgorithm m_hash2
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithm*& System::Security::Cryptography::HMAC::dyn_m_hash2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::dyn_m_hash2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hash2"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_inner
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::HMAC::dyn_m_inner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::dyn_m_inner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inner"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_outer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::HMAC::dyn_m_outer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::dyn_m_outer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_outer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_hashing
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::HMAC::dyn_m_hashing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::dyn_m_hashing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hashing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.HMAC.get_BlockSizeValue
int System::Security::Cryptography::HMAC::get_BlockSizeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::get_BlockSizeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BlockSizeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMAC.set_BlockSizeValue
void System::Security::Cryptography::HMAC::set_BlockSizeValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::set_BlockSizeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BlockSizeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.HMAC.UpdateIOPadBuffers
void System::Security::Cryptography::HMAC::UpdateIOPadBuffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::UpdateIOPadBuffers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateIOPadBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMAC.InitializeKey
void System::Security::Cryptography::HMAC::InitializeKey(::ArrayW<uint8_t> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::InitializeKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.HMAC.get_HashName
::StringW System::Security::Cryptography::HMAC::get_HashName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::get_HashName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMAC.set_HashName
void System::Security::Cryptography::HMAC::set_HashName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::set_HashName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HashName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.HMAC.Create
::System::Security::Cryptography::HMAC* System::Security::Cryptography::HMAC::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HMAC", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HMAC*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMAC.Create
::System::Security::Cryptography::HMAC* System::Security::Cryptography::HMAC::Create(::StringW algorithmName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HMAC", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HMAC*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algorithmName);
}
// Autogenerated method: System.Security.Cryptography.HMAC.GetHashAlgorithmWithFipsFallback
::System::Security::Cryptography::HashAlgorithm* System::Security::Cryptography::HMAC::GetHashAlgorithmWithFipsFallback(::System::Func_1<::System::Security::Cryptography::HashAlgorithm*>* createStandardHashAlgorithmCallback, ::System::Func_1<::System::Security::Cryptography::HashAlgorithm*>* createFipsHashAlgorithmCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::GetHashAlgorithmWithFipsFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HMAC", "GetHashAlgorithmWithFipsFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(createStandardHashAlgorithmCallback), ::il2cpp_utils::ExtractType(createFipsHashAlgorithmCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, createStandardHashAlgorithmCallback, createFipsHashAlgorithmCallback);
}
// Autogenerated method: System.Security.Cryptography.HMAC.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::HMAC::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::KeyedHashAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMAC.set_Key
void System::Security::Cryptography::HMAC::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::set_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::KeyedHashAlgorithm*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.HMAC.Initialize
void System::Security::Cryptography::HMAC::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMAC.HashCore
void System::Security::Cryptography::HMAC::HashCore(::ArrayW<uint8_t> rgb, int ib, int cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgb, ib, cb);
}
// Autogenerated method: System.Security.Cryptography.HMAC.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::HMAC::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMAC.Dispose
void System::Security::Cryptography::HMAC::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMAC::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::KeyedHashAlgorithm*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.HMACMD5
#include "System/Security/Cryptography/HMACMD5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.HMACRIPEMD160
#include "System/Security/Cryptography/HMACRIPEMD160.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.HMACSHA1
#include "System/Security/Cryptography/HMACSHA1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.HMACSHA256
#include "System/Security/Cryptography/HMACSHA256.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.HMACSHA384
#include "System/Security/Cryptography/HMACSHA384.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useLegacyBlockSize
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::HMACSHA384::dyn_m_useLegacyBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMACSHA384::dyn_m_useLegacyBlockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useLegacyBlockSize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.HMACSHA384.get_BlockSize
int System::Security::Cryptography::HMACSHA384::get_BlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMACSHA384::get_BlockSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMACSHA384.get_ProduceLegacyHmacValues
bool System::Security::Cryptography::HMACSHA384::get_ProduceLegacyHmacValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMACSHA384::get_ProduceLegacyHmacValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProduceLegacyHmacValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMACSHA384.set_ProduceLegacyHmacValues
void System::Security::Cryptography::HMACSHA384::set_ProduceLegacyHmacValues(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMACSHA384::set_ProduceLegacyHmacValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProduceLegacyHmacValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.HMACSHA512
#include "System/Security/Cryptography/HMACSHA512.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useLegacyBlockSize
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::HMACSHA512::dyn_m_useLegacyBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMACSHA512::dyn_m_useLegacyBlockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useLegacyBlockSize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.HMACSHA512.get_BlockSize
int System::Security::Cryptography::HMACSHA512::get_BlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMACSHA512::get_BlockSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMACSHA512.get_ProduceLegacyHmacValues
bool System::Security::Cryptography::HMACSHA512::get_ProduceLegacyHmacValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMACSHA512::get_ProduceLegacyHmacValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProduceLegacyHmacValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HMACSHA512.set_ProduceLegacyHmacValues
void System::Security::Cryptography::HMACSHA512::set_ProduceLegacyHmacValues(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HMACSHA512::set_ProduceLegacyHmacValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProduceLegacyHmacValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.get_InputBlockSize
int System::Security::Cryptography::ICryptoTransform::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ICryptoTransform::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ICryptoTransform*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.get_OutputBlockSize
int System::Security::Cryptography::ICryptoTransform::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ICryptoTransform::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ICryptoTransform*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.get_CanTransformMultipleBlocks
bool System::Security::Cryptography::ICryptoTransform::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ICryptoTransform::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ICryptoTransform*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.get_CanReuseTransform
bool System::Security::Cryptography::ICryptoTransform::get_CanReuseTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ICryptoTransform::get_CanReuseTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ICryptoTransform*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.TransformBlock
int System::Security::Cryptography::ICryptoTransform::TransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ICryptoTransform::TransformBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ICryptoTransform*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.TransformFinalBlock
::ArrayW<uint8_t> System::Security::Cryptography::ICryptoTransform::TransformFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::ICryptoTransform::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::ICryptoTransform*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.KeyedHashAlgorithm
#include "System/Security/Cryptography/KeyedHashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] KeyValue
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::KeyedHashAlgorithm::dyn_KeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyedHashAlgorithm::dyn_KeyValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.KeyedHashAlgorithm.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::KeyedHashAlgorithm::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyedHashAlgorithm::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::KeyedHashAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeyedHashAlgorithm.set_Key
void System::Security::Cryptography::KeyedHashAlgorithm::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyedHashAlgorithm::set_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::KeyedHashAlgorithm*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.KeyedHashAlgorithm.Create
::System::Security::Cryptography::KeyedHashAlgorithm* System::Security::Cryptography::KeyedHashAlgorithm::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyedHashAlgorithm::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "KeyedHashAlgorithm", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::KeyedHashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeyedHashAlgorithm.Create
::System::Security::Cryptography::KeyedHashAlgorithm* System::Security::Cryptography::KeyedHashAlgorithm::Create(::StringW algName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyedHashAlgorithm::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "KeyedHashAlgorithm", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::KeyedHashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algName);
}
// Autogenerated method: System.Security.Cryptography.KeyedHashAlgorithm.Dispose
void System::Security::Cryptography::KeyedHashAlgorithm::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeyedHashAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.MACTripleDES
#include "System/Security/Cryptography/MACTripleDES.hpp"
// Including type: System.Security.Cryptography.CryptoStream
#include "System/Security/Cryptography/CryptoStream.hpp"
// Including type: System.Security.Cryptography.TailStream
#include "System/Security/Cryptography/TailStream.hpp"
// Including type: System.Security.Cryptography.TripleDES
#include "System/Security/Cryptography/TripleDES.hpp"
// Including type: System.Security.Cryptography.PaddingMode
#include "System/Security/Cryptography/PaddingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 m_bitsPerByte
int System::Security::Cryptography::MACTripleDES::_get_m_bitsPerByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::_get_m_bitsPerByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "MACTripleDES", "m_bitsPerByte"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 m_bitsPerByte
void System::Security::Cryptography::MACTripleDES::_set_m_bitsPerByte(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::_set_m_bitsPerByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "MACTripleDES", "m_bitsPerByte", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.ICryptoTransform m_encryptor
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::ICryptoTransform*& System::Security::Cryptography::MACTripleDES::dyn_m_encryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::dyn_m_encryptor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_encryptor"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::ICryptoTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.CryptoStream _cs
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CryptoStream*& System::Security::Cryptography::MACTripleDES::dyn__cs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::dyn__cs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cs"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CryptoStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.TailStream _ts
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::TailStream*& System::Security::Cryptography::MACTripleDES::dyn__ts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::dyn__ts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ts"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::TailStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_bytesPerBlock
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::MACTripleDES::dyn_m_bytesPerBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::dyn_m_bytesPerBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bytesPerBlock"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.TripleDES des
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::TripleDES*& System::Security::Cryptography::MACTripleDES::dyn_des() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::dyn_des");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "des"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::TripleDES**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.MACTripleDES.get_Padding
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::MACTripleDES::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::get_Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.MACTripleDES.set_Padding
void System::Security::Cryptography::MACTripleDES::set_Padding(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::set_Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.MACTripleDES.Initialize
void System::Security::Cryptography::MACTripleDES::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.MACTripleDES.HashCore
void System::Security::Cryptography::MACTripleDES::HashCore(::ArrayW<uint8_t> rgbData, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rgbData, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.MACTripleDES.HashFinal
::ArrayW<uint8_t> System::Security::Cryptography::MACTripleDES::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.MACTripleDES.Dispose
void System::Security::Cryptography::MACTripleDES::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MACTripleDES::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::KeyedHashAlgorithm*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.TailStream
#include "System/Security/Cryptography/TailStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _Buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::TailStream::dyn__Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::dyn__Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _BufferSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::TailStream::dyn__BufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::dyn__BufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _BufferIndex
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::TailStream::dyn__BufferIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::dyn__BufferIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BufferIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _BufferFull
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::TailStream::dyn__BufferFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::dyn__BufferFull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BufferFull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.TailStream.Clear
void System::Security::Cryptography::TailStream::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TailStream.get_Buffer
::ArrayW<uint8_t> System::Security::Cryptography::TailStream::get_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::get_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TailStream.Dispose
void System::Security::Cryptography::TailStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.TailStream.get_CanRead
bool System::Security::Cryptography::TailStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TailStream.get_CanSeek
bool System::Security::Cryptography::TailStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TailStream.get_CanWrite
bool System::Security::Cryptography::TailStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TailStream.get_Length
int64_t System::Security::Cryptography::TailStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TailStream.get_Position
int64_t System::Security::Cryptography::TailStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TailStream.set_Position
void System::Security::Cryptography::TailStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.TailStream.Flush
void System::Security::Cryptography::TailStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TailStream.Seek
int64_t System::Security::Cryptography::TailStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Security.Cryptography.TailStream.SetLength
void System::Security::Cryptography::TailStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.TailStream.Read
int System::Security::Cryptography::TailStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Security.Cryptography.TailStream.Write
void System::Security::Cryptography::TailStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::TailStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.MaskGenerationMethod
#include "System/Security/Cryptography/MaskGenerationMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.MaskGenerationMethod.GenerateMask
::ArrayW<uint8_t> System::Security::Cryptography::MaskGenerationMethod::GenerateMask(::ArrayW<uint8_t> rgbSeed, int cbReturn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MaskGenerationMethod::GenerateMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::MaskGenerationMethod*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbSeed, cbReturn);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.MD5
#include "System/Security/Cryptography/MD5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.MD5.Create
::System::Security::Cryptography::MD5* System::Security::Cryptography::MD5::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "MD5", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::MD5*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.MD5.Create
::System::Security::Cryptography::MD5* System::Security::Cryptography::MD5::Create(::StringW algName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::MD5::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "MD5", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::MD5*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.PasswordDeriveBytes
#include "System/Security/Cryptography/PasswordDeriveBytes.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
// Including type: System.Security.Cryptography.CryptoStream
#include "System/Security/Cryptography/CryptoStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _extraCount
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::PasswordDeriveBytes::dyn__extraCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::dyn__extraCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extraCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prefix
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::PasswordDeriveBytes::dyn__prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::dyn__prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefix"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _iterations
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::PasswordDeriveBytes::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _baseValue
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::PasswordDeriveBytes::dyn__baseValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::dyn__baseValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _extra
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::PasswordDeriveBytes::dyn__extra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::dyn__extra");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extra"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _salt
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::PasswordDeriveBytes::dyn__salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::dyn__salt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_salt"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _hashName
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::PasswordDeriveBytes::dyn__hashName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::dyn__hashName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _password
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::PasswordDeriveBytes::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.HashAlgorithm _hash
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithm*& System::Security::Cryptography::PasswordDeriveBytes::dyn__hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::dyn__hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hash"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.get_HashName
::StringW System::Security::Cryptography::PasswordDeriveBytes::get_HashName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::get_HashName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.set_HashName
void System::Security::Cryptography::PasswordDeriveBytes::set_HashName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::set_HashName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HashName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.get_IterationCount
int System::Security::Cryptography::PasswordDeriveBytes::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.set_IterationCount
void System::Security::Cryptography::PasswordDeriveBytes::set_IterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::set_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.get_Salt
::ArrayW<uint8_t> System::Security::Cryptography::PasswordDeriveBytes::get_Salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::get_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.set_Salt
void System::Security::Cryptography::PasswordDeriveBytes::set_Salt(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::set_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey
::ArrayW<uint8_t> System::Security::Cryptography::PasswordDeriveBytes::CryptDeriveKey(::StringW algname, ::StringW alghashname, int keySize, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::CryptDeriveKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CryptDeriveKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algname), ::il2cpp_utils::ExtractType(alghashname), ::il2cpp_utils::ExtractType(keySize), ::il2cpp_utils::ExtractType(rgbIV)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, algname, alghashname, keySize, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.ComputeBaseValue
::ArrayW<uint8_t> System::Security::Cryptography::PasswordDeriveBytes::ComputeBaseValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::ComputeBaseValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeBaseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.ComputeBytes
::ArrayW<uint8_t> System::Security::Cryptography::PasswordDeriveBytes::ComputeBytes(int cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::ComputeBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, cb);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.HashPrefix
void System::Security::Cryptography::PasswordDeriveBytes::HashPrefix(::System::Security::Cryptography::CryptoStream* cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::HashPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cs);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.GetBytes
::ArrayW<uint8_t> System::Security::Cryptography::PasswordDeriveBytes::GetBytes(int cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DeriveBytes*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, cb);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.Reset
void System::Security::Cryptography::PasswordDeriveBytes::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DeriveBytes*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.PasswordDeriveBytes.Dispose
void System::Security::Cryptography::PasswordDeriveBytes::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PasswordDeriveBytes::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::DeriveBytes*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.PKCS1MaskGenerationMethod
#include "System/Security/Cryptography/PKCS1MaskGenerationMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String HashNameValue
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::PKCS1MaskGenerationMethod::dyn_HashNameValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PKCS1MaskGenerationMethod::dyn_HashNameValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HashNameValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.PKCS1MaskGenerationMethod.get_HashName
::StringW System::Security::Cryptography::PKCS1MaskGenerationMethod::get_HashName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PKCS1MaskGenerationMethod::get_HashName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.PKCS1MaskGenerationMethod.set_HashName
void System::Security::Cryptography::PKCS1MaskGenerationMethod::set_HashName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PKCS1MaskGenerationMethod::set_HashName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HashName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.PKCS1MaskGenerationMethod.GenerateMask
::ArrayW<uint8_t> System::Security::Cryptography::PKCS1MaskGenerationMethod::GenerateMask(::ArrayW<uint8_t> rgbSeed, int cbReturn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PKCS1MaskGenerationMethod::GenerateMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::MaskGenerationMethod*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbSeed, cbReturn);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.Create
::System::Security::Cryptography::RandomNumberGenerator* System::Security::Cryptography::RandomNumberGenerator::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RandomNumberGenerator", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.Create
::System::Security::Cryptography::RandomNumberGenerator* System::Security::Cryptography::RandomNumberGenerator::Create(::StringW rngName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RandomNumberGenerator", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rngName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rngName);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.Dispose
void System::Security::Cryptography::RandomNumberGenerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RandomNumberGenerator*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.Dispose
void System::Security::Cryptography::RandomNumberGenerator::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RandomNumberGenerator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.GetBytes
void System::Security::Cryptography::RandomNumberGenerator::GetBytes(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RandomNumberGenerator*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.GetBytes
void System::Security::Cryptography::RandomNumberGenerator::GetBytes(::ArrayW<uint8_t> data, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RandomNumberGenerator*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offset, count);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes
void System::Security::Cryptography::RandomNumberGenerator::GetNonZeroBytes(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::GetNonZeroBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RandomNumberGenerator*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.Fill
void System::Security::Cryptography::RandomNumberGenerator::Fill(::System::Span_1<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::Fill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RandomNumberGenerator", "Fill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.FillSpan
void System::Security::Cryptography::RandomNumberGenerator::FillSpan(::System::Span_1<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::FillSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RandomNumberGenerator", "FillSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.GetBytes
void System::Security::Cryptography::RandomNumberGenerator::GetBytes(::System::Span_1<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RandomNumberGenerator*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes
void System::Security::Cryptography::RandomNumberGenerator::GetNonZeroBytes(::System::Span_1<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::GetNonZeroBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RandomNumberGenerator*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.GetInt32
int System::Security::Cryptography::RandomNumberGenerator::GetInt32(int fromInclusive, int toExclusive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::GetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RandomNumberGenerator", "GetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromInclusive), ::il2cpp_utils::ExtractType(toExclusive)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromInclusive, toExclusive);
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.GetInt32
int System::Security::Cryptography::RandomNumberGenerator::GetInt32(int toExclusive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RandomNumberGenerator::GetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RandomNumberGenerator", "GetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toExclusive)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toExclusive);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RC2
#include "System/Security/Cryptography/RC2.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::RC2::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "RC2", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void System::Security::Cryptography::RC2::_set_s_legalBlockSizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RC2", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::RC2::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "RC2", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void System::Security::Cryptography::RC2::_set_s_legalKeySizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RC2", "s_legalKeySizes", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 EffectiveKeySizeValue
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RC2::dyn_EffectiveKeySizeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::dyn_EffectiveKeySizeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EffectiveKeySizeValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RC2.get_EffectiveKeySize
int System::Security::Cryptography::RC2::get_EffectiveKeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::get_EffectiveKeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RC2*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RC2.set_EffectiveKeySize
void System::Security::Cryptography::RC2::set_EffectiveKeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::set_EffectiveKeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RC2*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RC2.Create
::System::Security::Cryptography::RC2* System::Security::Cryptography::RC2::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RC2", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RC2*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RC2.Create
::System::Security::Cryptography::RC2* System::Security::Cryptography::RC2::Create(::StringW AlgName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RC2", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(AlgName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RC2*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, AlgName);
}
// Autogenerated method: System.Security.Cryptography.RC2..cctor
void System::Security::Cryptography::RC2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RC2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RC2.get_KeySize
int System::Security::Cryptography::RC2::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RC2.set_KeySize
void System::Security::Cryptography::RC2::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2::set_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RC2CryptoServiceProvider
#include "System/Security/Cryptography/RC2CryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::RC2CryptoServiceProvider::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "RC2CryptoServiceProvider", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void System::Security::Cryptography::RC2CryptoServiceProvider::_set_s_legalKeySizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RC2CryptoServiceProvider", "s_legalKeySizes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_use40bitSalt
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::RC2CryptoServiceProvider::dyn_m_use40bitSalt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::dyn_m_use40bitSalt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_use40bitSalt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RC2CryptoServiceProvider.get_UseSalt
bool System::Security::Cryptography::RC2CryptoServiceProvider::get_UseSalt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::get_UseSalt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseSalt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RC2CryptoServiceProvider.set_UseSalt
void System::Security::Cryptography::RC2CryptoServiceProvider::set_UseSalt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::set_UseSalt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseSalt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RC2CryptoServiceProvider.get_EffectiveKeySize
int System::Security::Cryptography::RC2CryptoServiceProvider::get_EffectiveKeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::get_EffectiveKeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RC2*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RC2CryptoServiceProvider.set_EffectiveKeySize
void System::Security::Cryptography::RC2CryptoServiceProvider::set_EffectiveKeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::set_EffectiveKeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RC2*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::RC2CryptoServiceProvider::CreateEncryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::RC2CryptoServiceProvider::CreateDecryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey
void System::Security::Cryptography::RC2CryptoServiceProvider::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::GenerateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV
void System::Security::Cryptography::RC2CryptoServiceProvider::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::GenerateIV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RC2CryptoServiceProvider..cctor
void System::Security::Cryptography::RC2CryptoServiceProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RC2CryptoServiceProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RC2CryptoServiceProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.Rijndael
#include "System/Security/Cryptography/Rijndael.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::Rijndael::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rijndael::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "Rijndael", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void System::Security::Cryptography::Rijndael::_set_s_legalBlockSizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rijndael::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Rijndael", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::Rijndael::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rijndael::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "Rijndael", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void System::Security::Cryptography::Rijndael::_set_s_legalKeySizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rijndael::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Rijndael", "s_legalKeySizes", value));
}
// Autogenerated method: System.Security.Cryptography.Rijndael.Create
::System::Security::Cryptography::Rijndael* System::Security::Cryptography::Rijndael::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rijndael::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Rijndael", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Rijndael*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Rijndael.Create
::System::Security::Cryptography::Rijndael* System::Security::Cryptography::Rijndael::Create(::StringW algName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rijndael::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Rijndael", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Rijndael*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, algName);
}
// Autogenerated method: System.Security.Cryptography.Rijndael..cctor
void System::Security::Cryptography::Rijndael::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rijndael::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Rijndael", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RijndaelManaged
#include "System/Security/Cryptography/RijndaelManaged.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
// Including type: System.Security.Cryptography.RijndaelManagedTransformMode
#include "System/Security/Cryptography/RijndaelManagedTransformMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.RijndaelManaged.NewEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::RijndaelManaged::NewEncryptor(::ArrayW<uint8_t> rgbKey, ::System::Security::Cryptography::CipherMode mode, ::ArrayW<uint8_t> rgbIV, int feedbackSize, ::System::Security::Cryptography::RijndaelManagedTransformMode encryptMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManaged::NewEncryptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(rgbIV), ::il2cpp_utils::ExtractType(feedbackSize), ::il2cpp_utils::ExtractType(encryptMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, mode, rgbIV, feedbackSize, encryptMode);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManaged.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::RijndaelManaged::CreateEncryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManaged::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManaged.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::RijndaelManaged::CreateDecryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManaged::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManaged.GenerateKey
void System::Security::Cryptography::RijndaelManaged::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManaged::GenerateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RijndaelManaged.GenerateIV
void System::Security::Cryptography::RijndaelManaged::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RijndaelManaged::GenerateIV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
