// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackedPropertyError
#include "OVR/OpenVR/ETrackedPropertyError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_Success(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDataType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDataType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDataType(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDataType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDataType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDeviceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDeviceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDeviceClass"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDeviceClass(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDeviceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDeviceClass", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_BufferTooSmall(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_UnknownProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_UnknownProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_UnknownProperty(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_UnknownProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidDevice(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CouldNotContactServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CouldNotContactServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CouldNotContactServer"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CouldNotContactServer(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CouldNotContactServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CouldNotContactServer", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_ValueNotProvidedByDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_ValueNotProvidedByDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_ValueNotProvidedByDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_ValueNotProvidedByDevice(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_ValueNotProvidedByDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_ValueNotProvidedByDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_StringExceedsMaximumLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_StringExceedsMaximumLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_StringExceedsMaximumLength"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_StringExceedsMaximumLength(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_StringExceedsMaximumLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_StringExceedsMaximumLength", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_NotYetAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_NotYetAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_NotYetAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_NotYetAvailable(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_NotYetAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_NotYetAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_PermissionDenied(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidOperation(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CannotWriteToWildcards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CannotWriteToWildcards");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CannotWriteToWildcards"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CannotWriteToWildcards(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CannotWriteToWildcards");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CannotWriteToWildcards", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::ETrackedPropertyError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSubmitFlags
#include "OVR/OpenVR/EVRSubmitFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Default
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Default
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_Default(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_LensDistortionAlreadyApplied
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_LensDistortionAlreadyApplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_LensDistortionAlreadyApplied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_LensDistortionAlreadyApplied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_LensDistortionAlreadyApplied
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_LensDistortionAlreadyApplied(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_LensDistortionAlreadyApplied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_LensDistortionAlreadyApplied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_GlRenderBuffer
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_GlRenderBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_GlRenderBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_GlRenderBuffer"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_GlRenderBuffer
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_GlRenderBuffer(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_GlRenderBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_GlRenderBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Reserved
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_Reserved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Reserved
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_Reserved(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithPose
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithPose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithPose"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithPose
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithPose(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithPose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithPose", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithDepth
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithDepth"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithDepth
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithDepth(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithDepth", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRSubmitFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRState
#include "OVR/OpenVR/EVRState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Undefined
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Undefined
void OVR::OpenVR::EVRState::_set_Undefined(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Off
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Off
void OVR::OpenVR::EVRState::_set_Off(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Searching
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Searching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Searching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Searching"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Searching
void OVR::OpenVR::EVRState::_set_Searching(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Searching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Searching", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Searching_Alert
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Searching_Alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Searching_Alert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Searching_Alert"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Searching_Alert
void OVR::OpenVR::EVRState::_set_Searching_Alert(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Searching_Alert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Searching_Alert", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Ready
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Ready
void OVR::OpenVR::EVRState::_set_Ready(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Ready_Alert
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Ready_Alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Ready_Alert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Ready_Alert"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Ready_Alert
void OVR::OpenVR::EVRState::_set_Ready_Alert(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Ready_Alert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Ready_Alert", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState NotReady
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_NotReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_NotReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "NotReady"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState NotReady
void OVR::OpenVR::EVRState::_set_NotReady(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_NotReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "NotReady", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Standby
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Standby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Standby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Standby"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Standby
void OVR::OpenVR::EVRState::_set_Standby(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Standby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Standby", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Ready_Alert_Low
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Ready_Alert_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Ready_Alert_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Ready_Alert_Low"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Ready_Alert_Low
void OVR::OpenVR::EVRState::_set_Ready_Alert_Low(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Ready_Alert_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Ready_Alert_Low", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVREventType
#include "OVR/OpenVR/EVREventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_None
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_None
void OVR::OpenVR::EVREventType::_set_VREvent_None(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceActivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceActivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceActivated
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceActivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceActivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceDeactivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceDeactivated
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceDeactivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionStarted
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionEnded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionEnded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionEnded
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionEnded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionEnded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_IpdChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_IpdChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_IpdChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_IpdChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_IpdChanged
void OVR::OpenVR::EVREventType::_set_VREvent_IpdChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_IpdChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_IpdChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_EnterStandbyMode
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_EnterStandbyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_EnterStandbyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_EnterStandbyMode"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_EnterStandbyMode
void OVR::OpenVR::EVREventType::_set_VREvent_EnterStandbyMode(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_EnterStandbyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_EnterStandbyMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_LeaveStandbyMode
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_LeaveStandbyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_LeaveStandbyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_LeaveStandbyMode"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_LeaveStandbyMode
void OVR::OpenVR::EVREventType::_set_VREvent_LeaveStandbyMode(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_LeaveStandbyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_LeaveStandbyMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceRoleChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceRoleChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceRoleChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceRoleChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceRoleChanged
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceRoleChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceRoleChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceRoleChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WatchdogWakeUpRequested
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WatchdogWakeUpRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WatchdogWakeUpRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WatchdogWakeUpRequested"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WatchdogWakeUpRequested
void OVR::OpenVR::EVREventType::_set_VREvent_WatchdogWakeUpRequested(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WatchdogWakeUpRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WatchdogWakeUpRequested", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_LensDistortionChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_LensDistortionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_LensDistortionChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_LensDistortionChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_LensDistortionChanged
void OVR::OpenVR::EVREventType::_set_VREvent_LensDistortionChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_LensDistortionChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_LensDistortionChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PropertyChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PropertyChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PropertyChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PropertyChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PropertyChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PropertyChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PropertyChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WirelessDisconnect
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WirelessDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WirelessDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WirelessDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WirelessDisconnect
void OVR::OpenVR::EVREventType::_set_VREvent_WirelessDisconnect(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WirelessDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WirelessDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WirelessReconnect
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WirelessReconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WirelessReconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WirelessReconnect"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WirelessReconnect
void OVR::OpenVR::EVREventType::_set_VREvent_WirelessReconnect(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WirelessReconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WirelessReconnect", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonPress
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonPress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonPress
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonPress(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonPress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUnpress
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonUnpress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonUnpress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonUnpress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUnpress
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonUnpress(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonUnpress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonUnpress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonTouch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonTouch
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonTouch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUntouch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonUntouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonUntouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonUntouch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUntouch
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonUntouch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonUntouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonUntouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Press
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Press() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Press");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Press"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Press
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Press(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Press");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Press", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Unpress
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Unpress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Unpress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Unpress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Unpress
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Unpress(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Unpress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Unpress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Touch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Touch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Touch
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Touch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Touch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Untouch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Untouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Untouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Untouch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Untouch
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Untouch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Untouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Untouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Move
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Move");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Move"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Move
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Move(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Move");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Move", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch1
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch1
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch1(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch2
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch2
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch2(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Cancel
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Cancel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Cancel
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Cancel(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MouseMove
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MouseMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MouseMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MouseMove"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MouseMove
void OVR::OpenVR::EVREventType::_set_VREvent_MouseMove(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MouseMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MouseMove", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonDown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonDown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonDown
void OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonDown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonUp
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonUp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonUp
void OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonUp(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FocusEnter
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FocusEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FocusEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FocusEnter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FocusEnter
void OVR::OpenVR::EVREventType::_set_VREvent_FocusEnter(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FocusEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FocusEnter", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FocusLeave
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FocusLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FocusLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FocusLeave"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FocusLeave
void OVR::OpenVR::EVREventType::_set_VREvent_FocusLeave(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FocusLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FocusLeave", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Scroll
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Scroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Scroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Scroll"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Scroll
void OVR::OpenVR::EVREventType::_set_VREvent_Scroll(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Scroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Scroll", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TouchPadMove
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TouchPadMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TouchPadMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TouchPadMove"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TouchPadMove
void OVR::OpenVR::EVREventType::_set_VREvent_TouchPadMove(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TouchPadMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TouchPadMove", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayFocusChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayFocusChanged
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayFocusChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusCaptured
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_InputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_InputFocusCaptured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_InputFocusCaptured"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusCaptured
void OVR::OpenVR::EVREventType::_set_VREvent_InputFocusCaptured(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_InputFocusCaptured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_InputFocusCaptured", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusReleased
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_InputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_InputFocusReleased");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_InputFocusReleased"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusReleased
void OVR::OpenVR::EVREventType::_set_VREvent_InputFocusReleased(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_InputFocusReleased");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_InputFocusReleased", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusLost
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusLost"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusLost
void OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusLost(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusGained
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusGained() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusGained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusGained"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusGained
void OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusGained(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusGained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusGained", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationChanged
void OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusChanged
void OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_InputFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_InputFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_InputFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusChanged
void OVR::OpenVR::EVREventType::_set_VREvent_InputFocusChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_InputFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_InputFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationSecondaryRenderingStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationSecondaryRenderingStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationSecondaryRenderingStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationSecondaryRenderingStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationSecondaryRenderingStarted
void OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationSecondaryRenderingStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationSecondaryRenderingStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationSecondaryRenderingStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationUsingWrongGraphicsAdapter
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationUsingWrongGraphicsAdapter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationUsingWrongGraphicsAdapter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationUsingWrongGraphicsAdapter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationUsingWrongGraphicsAdapter
void OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationUsingWrongGraphicsAdapter(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationUsingWrongGraphicsAdapter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationUsingWrongGraphicsAdapter", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ActionBindingReloaded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ActionBindingReloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ActionBindingReloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ActionBindingReloaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ActionBindingReloaded
void OVR::OpenVR::EVREventType::_set_VREvent_ActionBindingReloaded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ActionBindingReloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ActionBindingReloaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_HideRenderModels
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_HideRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_HideRenderModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_HideRenderModels"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_HideRenderModels
void OVR::OpenVR::EVREventType::_set_VREvent_HideRenderModels(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_HideRenderModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_HideRenderModels", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ShowRenderModels
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ShowRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ShowRenderModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ShowRenderModels"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ShowRenderModels
void OVR::OpenVR::EVREventType::_set_VREvent_ShowRenderModels(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ShowRenderModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ShowRenderModels", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleOpened
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ConsoleOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ConsoleOpened");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ConsoleOpened"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleOpened
void OVR::OpenVR::EVREventType::_set_VREvent_ConsoleOpened(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ConsoleOpened");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ConsoleOpened", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleClosed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ConsoleClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ConsoleClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ConsoleClosed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleClosed
void OVR::OpenVR::EVREventType::_set_VREvent_ConsoleClosed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ConsoleClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ConsoleClosed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayShown
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayHidden
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardActivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardActivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardActivated
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardActivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardActivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardDeactivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardDeactivated
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardDeactivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardThumbSelected
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardThumbSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardThumbSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardThumbSelected"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardThumbSelected
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardThumbSelected(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardThumbSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardThumbSelected", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardRequested
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardRequested"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardRequested
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardRequested(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardRequested", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ResetDashboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ResetDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ResetDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ResetDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ResetDashboard
void OVR::OpenVR::EVREventType::_set_VREvent_ResetDashboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ResetDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ResetDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RenderToast
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RenderToast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RenderToast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RenderToast"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RenderToast
void OVR::OpenVR::EVREventType::_set_VREvent_RenderToast(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RenderToast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RenderToast", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ImageLoaded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ImageLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ImageLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ImageLoaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ImageLoaded
void OVR::OpenVR::EVREventType::_set_VREvent_ImageLoaded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ImageLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ImageLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ShowKeyboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ShowKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ShowKeyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ShowKeyboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ShowKeyboard
void OVR::OpenVR::EVREventType::_set_VREvent_ShowKeyboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ShowKeyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ShowKeyboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_HideKeyboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_HideKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_HideKeyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_HideKeyboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_HideKeyboard
void OVR::OpenVR::EVREventType::_set_VREvent_HideKeyboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_HideKeyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_HideKeyboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusGained
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusGained() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusGained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusGained"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusGained
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusGained(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusGained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusGained", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusLost
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusLost"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusLost
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusLost(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlaySharedTextureChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlaySharedTextureChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlaySharedTextureChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlaySharedTextureChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlaySharedTextureChanged
void OVR::OpenVR::EVREventType::_set_VREvent_OverlaySharedTextureChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlaySharedTextureChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlaySharedTextureChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTriggered
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTriggered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTriggered"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTriggered
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTriggered(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTriggered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTriggered", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ImageFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ImageFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ImageFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ImageFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ImageFailed
void OVR::OpenVR::EVREventType::_set_VREvent_ImageFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ImageFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ImageFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardOverlayCreated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardOverlayCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardOverlayCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardOverlayCreated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardOverlayCreated
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardOverlayCreated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardOverlayCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardOverlayCreated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SwitchGamepadFocus
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SwitchGamepadFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SwitchGamepadFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SwitchGamepadFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SwitchGamepadFocus
void OVR::OpenVR::EVREventType::_set_VREvent_SwitchGamepadFocus(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SwitchGamepadFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SwitchGamepadFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RequestScreenshot
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RequestScreenshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RequestScreenshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RequestScreenshot"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RequestScreenshot
void OVR::OpenVR::EVREventType::_set_VREvent_RequestScreenshot(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RequestScreenshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RequestScreenshot", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTaken
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTaken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTaken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTaken"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTaken
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTaken(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTaken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTaken", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotFailed
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SubmitScreenshotToDashboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SubmitScreenshotToDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SubmitScreenshotToDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SubmitScreenshotToDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SubmitScreenshotToDashboard
void OVR::OpenVR::EVREventType::_set_VREvent_SubmitScreenshotToDashboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SubmitScreenshotToDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SubmitScreenshotToDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotProgressToDashboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotProgressToDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotProgressToDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotProgressToDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotProgressToDashboard
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotProgressToDashboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotProgressToDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotProgressToDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PrimaryDashboardDeviceChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PrimaryDashboardDeviceChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PrimaryDashboardDeviceChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PrimaryDashboardDeviceChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PrimaryDashboardDeviceChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PrimaryDashboardDeviceChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PrimaryDashboardDeviceChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PrimaryDashboardDeviceChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RoomViewShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RoomViewShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RoomViewShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewShown
void OVR::OpenVR::EVREventType::_set_VREvent_RoomViewShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RoomViewShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RoomViewShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RoomViewHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RoomViewHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RoomViewHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewHidden
void OVR::OpenVR::EVREventType::_set_VREvent_RoomViewHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RoomViewHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RoomViewHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Shown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_Shown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_Shown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_Shown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Shown
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_Shown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_Shown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_Shown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Hidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_Hidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Hidden
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_Hidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_BeginInteraction
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_BeginInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_BeginInteraction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_BeginInteraction"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_BeginInteraction
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_BeginInteraction(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_BeginInteraction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_BeginInteraction", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Destroyed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_Destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_Destroyed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_Destroyed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Destroyed
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_Destroyed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_Destroyed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_Destroyed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Quit
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Quit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Quit
void OVR::OpenVR::EVREventType::_set_VREvent_Quit(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Quit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ProcessQuit
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ProcessQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ProcessQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ProcessQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ProcessQuit
void OVR::OpenVR::EVREventType::_set_VREvent_ProcessQuit(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ProcessQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ProcessQuit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_QuitAborted_UserPrompt
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_QuitAborted_UserPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_QuitAborted_UserPrompt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_QuitAborted_UserPrompt"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_QuitAborted_UserPrompt
void OVR::OpenVR::EVREventType::_set_VREvent_QuitAborted_UserPrompt(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_QuitAborted_UserPrompt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_QuitAborted_UserPrompt", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_QuitAcknowledged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_QuitAcknowledged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_QuitAcknowledged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_QuitAcknowledged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_QuitAcknowledged
void OVR::OpenVR::EVREventType::_set_VREvent_QuitAcknowledged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_QuitAcknowledged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_QuitAcknowledged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DriverRequestedQuit
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DriverRequestedQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DriverRequestedQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DriverRequestedQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DriverRequestedQuit
void OVR::OpenVR::EVREventType::_set_VREvent_DriverRequestedQuit(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DriverRequestedQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DriverRequestedQuit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneDataHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneDataHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneDataHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneDataHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneDataHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneDataHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneDataHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneDataHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneUniverseHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneUniverseHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneUniverseHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneUniverseHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneUniverseHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneUniverseHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneUniverseHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneUniverseHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneTempDataHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneTempDataHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneTempDataHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneTempDataHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneTempDataHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneTempDataHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneTempDataHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneTempDataHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SeatedZeroPoseReset
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SeatedZeroPoseReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SeatedZeroPoseReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SeatedZeroPoseReset"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SeatedZeroPoseReset
void OVR::OpenVR::EVREventType::_set_VREvent_SeatedZeroPoseReset(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SeatedZeroPoseReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SeatedZeroPoseReset", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_AudioSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_AudioSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_AudioSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_AudioSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_AudioSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_AudioSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_AudioSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_AudioSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_BackgroundSettingHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_BackgroundSettingHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_BackgroundSettingHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_BackgroundSettingHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_BackgroundSettingHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_BackgroundSettingHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_BackgroundSettingHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_BackgroundSettingHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_CameraSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_CameraSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_CameraSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_CameraSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_CameraSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_CameraSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_CameraSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_CameraSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ReprojectionSettingHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ReprojectionSettingHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ReprojectionSettingHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ReprojectionSettingHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ReprojectionSettingHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ReprojectionSettingHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ReprojectionSettingHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ReprojectionSettingHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ModelSkinSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ModelSkinSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ModelSkinSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ModelSkinSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ModelSkinSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ModelSkinSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ModelSkinSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ModelSkinSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_EnvironmentSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_EnvironmentSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_EnvironmentSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_EnvironmentSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_EnvironmentSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_EnvironmentSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_EnvironmentSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_EnvironmentSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PowerSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PowerSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PowerSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PowerSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PowerSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PowerSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PowerSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PowerSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_EnableHomeAppSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_EnableHomeAppSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_EnableHomeAppSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_EnableHomeAppSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_EnableHomeAppSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_EnableHomeAppSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_EnableHomeAppSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_EnableHomeAppSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SteamVRSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SteamVRSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SteamVRSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SteamVRSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SteamVRSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_SteamVRSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SteamVRSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SteamVRSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_LighthouseSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_LighthouseSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_LighthouseSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_LighthouseSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_LighthouseSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_LighthouseSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_LighthouseSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_LighthouseSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_NullSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_NullSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_NullSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_NullSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_NullSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_NullSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_NullSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_NullSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_UserInterfaceSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_UserInterfaceSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_UserInterfaceSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_UserInterfaceSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_UserInterfaceSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_UserInterfaceSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_UserInterfaceSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_UserInterfaceSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_NotificationsSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_NotificationsSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_NotificationsSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_NotificationsSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_NotificationsSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_NotificationsSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_NotificationsSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_NotificationsSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerfSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerfSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerfSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerfSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerfSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PerfSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerfSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerfSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WebInterfaceSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WebInterfaceSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WebInterfaceSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WebInterfaceSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WebInterfaceSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_WebInterfaceSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WebInterfaceSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WebInterfaceSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackersSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackersSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackersSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackersSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackersSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_TrackersSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackersSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackersSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_StatusUpdate
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_StatusUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_StatusUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_StatusUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_StatusUpdate
void OVR::OpenVR::EVREventType::_set_VREvent_StatusUpdate(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_StatusUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_StatusUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WebInterface_InstallDriverCompleted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WebInterface_InstallDriverCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WebInterface_InstallDriverCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WebInterface_InstallDriverCompleted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WebInterface_InstallDriverCompleted
void OVR::OpenVR::EVREventType::_set_VREvent_WebInterface_InstallDriverCompleted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WebInterface_InstallDriverCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WebInterface_InstallDriverCompleted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MCImageUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MCImageUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MCImageUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MCImageUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MCImageUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_MCImageUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MCImageUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MCImageUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateStarted
void OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateFinished
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateFinished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateFinished"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateFinished
void OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateFinished(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateFinished", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardClosed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardClosed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardClosed
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardClosed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardClosed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardCharInput
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardCharInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardCharInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardCharInput"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardCharInput
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardCharInput(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardCharInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardCharInput", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardDone
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardDone"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardDone
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardDone(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardDone", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionStarted
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionAborted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionAborted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionAborted
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionAborted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppStarted
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationListUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationListUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationListUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationListUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationListUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationListUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationListUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationListUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationMimeTypeLoad
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationMimeTypeLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationMimeTypeLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationMimeTypeLoad"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationMimeTypeLoad
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationMimeTypeLoad(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationMimeTypeLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationMimeTypeLoad", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppLaunchComplete
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppLaunchComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppLaunchComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppLaunchComplete"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppLaunchComplete
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppLaunchComplete(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppLaunchComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppLaunchComplete", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ProcessConnected
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ProcessConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ProcessConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ProcessConnected"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ProcessConnected
void OVR::OpenVR::EVREventType::_set_VREvent_ProcessConnected(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ProcessConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ProcessConnected", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ProcessDisconnected
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ProcessDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ProcessDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ProcessDisconnected"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ProcessDisconnected
void OVR::OpenVR::EVREventType::_set_VREvent_ProcessDisconnected(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ProcessDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ProcessDisconnected", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowShown
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowHidden
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsShown
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsHidden
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StartVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StartVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StartVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StartVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StartVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StartVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StartVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StartVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StopVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StopVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StopVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StopVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StopVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StopVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StopVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StopVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_PauseVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_PauseVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_PauseVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_PauseVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_PauseVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_PauseVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_PauseVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_PauseVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_ResumeVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_ResumeVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_ResumeVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_ResumeVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_ResumeVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_ResumeVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_ResumeVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_ResumeVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_EditingSurface
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_EditingSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_EditingSurface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_EditingSurface"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_EditingSurface
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_EditingSurface(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_EditingSurface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_EditingSurface", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_EnableCapture
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_EnableCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_EnableCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_EnableCapture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_EnableCapture
void OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_EnableCapture(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_EnableCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_EnableCapture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_DisableCapture
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_DisableCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_DisableCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_DisableCapture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_DisableCapture
void OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_DisableCapture(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_DisableCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_DisableCapture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_FidelityLevel
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_FidelityLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_FidelityLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_FidelityLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_FidelityLevel
void OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_FidelityLevel(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_FidelityLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_FidelityLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlay_Closed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlay_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlay_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlay_Closed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlay_Closed
void OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlay_Closed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlay_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlay_Closed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlayCloseRequested
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlayCloseRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlayCloseRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlayCloseRequested"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlayCloseRequested
void OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlayCloseRequested(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlayCloseRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlayCloseRequested", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_HapticVibration
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_HapticVibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_HapticVibration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_HapticVibration"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_HapticVibration
void OVR::OpenVR::EVREventType::_set_VREvent_Input_HapticVibration(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_HapticVibration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_HapticVibration", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadFailed
void OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadSuccessful
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadSuccessful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadSuccessful");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadSuccessful"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadSuccessful
void OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadSuccessful(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadSuccessful");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadSuccessful", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestReloaded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestReloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestReloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestReloaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestReloaded
void OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestReloaded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestReloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestReloaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestLoadFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestLoadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestLoadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestLoadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestLoadFailed
void OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestLoadFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestLoadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestLoadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_PoseUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_PoseUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_PoseUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_PoseUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_PoseUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_PoseUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_PoseUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_PoseUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_DescriptorUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_DescriptorUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_DescriptorUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_DescriptorUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_DescriptorUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_DescriptorUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_DescriptorUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_DescriptorUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestPoseUpdate
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestPoseUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestPoseUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestPoseUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestPoseUpdate
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestPoseUpdate(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestPoseUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestPoseUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestDescriptorUpdate
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestDescriptorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestDescriptorUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestDescriptorUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestDescriptorUpdate
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestDescriptorUpdate(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestDescriptorUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestDescriptorUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_Start
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_Start
void OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_Start(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_End
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_End"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_End
void OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_End(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVREventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EDeviceActivityLevel
#include "OVR/OpenVR/EDeviceActivityLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Unknown
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Unknown
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Unknown(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Idle
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Idle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Idle
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Idle(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Idle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction_Timeout
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction_Timeout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction_Timeout
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction_Timeout(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction_Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Standby
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Standby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Standby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Standby"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Standby
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Standby(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Standby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Standby", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EDeviceActivityLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRButtonId
#include "OVR/OpenVR/EVRButtonId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_System
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_System"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_System
void OVR::OpenVR::EVRButtonId::_set_k_EButton_System(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_System", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_ApplicationMenu
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_ApplicationMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_ApplicationMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_ApplicationMenu"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_ApplicationMenu
void OVR::OpenVR::EVRButtonId::_set_k_EButton_ApplicationMenu(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_ApplicationMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_ApplicationMenu", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Grip
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Grip"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Grip
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Grip(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Grip", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Left
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Left
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Left(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Up
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Up"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Up
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Up(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Right
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Right
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Right(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Down
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Down"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Down
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Down(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_A
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_A"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_A
void OVR::OpenVR::EVRButtonId::_set_k_EButton_A(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_A", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_ProximitySensor
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_ProximitySensor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_ProximitySensor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_ProximitySensor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_ProximitySensor
void OVR::OpenVR::EVRButtonId::_set_k_EButton_ProximitySensor(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_ProximitySensor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_ProximitySensor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis0
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis0"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis0
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis0(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis0", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis1
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis1
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis1(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis2
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis2
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis2(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis3
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis3
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis3(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis4
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis4"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis4
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis4(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis4", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Touchpad
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Touchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Touchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Touchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Touchpad
void OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Touchpad(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Touchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Touchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Trigger
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Trigger"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Trigger
void OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Trigger(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Trigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Dashboard_Back
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Dashboard_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Dashboard_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Dashboard_Back"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Dashboard_Back
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Dashboard_Back(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Dashboard_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Dashboard_Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_A
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_A"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_A
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_A(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_A", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_B
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_B"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_B
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_B(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_B", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_JoyStick
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_JoyStick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_JoyStick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_JoyStick"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_JoyStick
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_JoyStick(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_JoyStick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_JoyStick", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Max
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Max
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Max(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRButtonId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRMouseButton
#include "OVR/OpenVR/EVRMouseButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMouseButton Left
::OVR::OpenVR::EVRMouseButton OVR::OpenVR::EVRMouseButton::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMouseButton>("OVR.OpenVR", "EVRMouseButton", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMouseButton Left
void OVR::OpenVR::EVRMouseButton::_set_Left(::OVR::OpenVR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMouseButton", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMouseButton Right
::OVR::OpenVR::EVRMouseButton OVR::OpenVR::EVRMouseButton::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMouseButton>("OVR.OpenVR", "EVRMouseButton", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMouseButton Right
void OVR::OpenVR::EVRMouseButton::_set_Right(::OVR::OpenVR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMouseButton", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMouseButton Middle
::OVR::OpenVR::EVRMouseButton OVR::OpenVR::EVRMouseButton::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMouseButton>("OVR.OpenVR", "EVRMouseButton", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMouseButton Middle
void OVR::OpenVR::EVRMouseButton::_set_Middle(::OVR::OpenVR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMouseButton", "Middle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRMouseButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EDualAnalogWhich
#include "OVR/OpenVR/EDualAnalogWhich.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Left
::OVR::OpenVR::EDualAnalogWhich OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDualAnalogWhich>("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Left
void OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Left(::OVR::OpenVR::EDualAnalogWhich value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Right
::OVR::OpenVR::EDualAnalogWhich OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDualAnalogWhich>("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Right
void OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Right(::OVR::OpenVR::EDualAnalogWhich value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EDualAnalogWhich::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError None
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError None
void OVR::OpenVR::EVRInputError::_set_None(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NameNotFound
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NameNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NameNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NameNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NameNotFound
void OVR::OpenVR::EVRInputError::_set_NameNotFound(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NameNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NameNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError WrongType
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_WrongType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_WrongType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "WrongType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError WrongType
void OVR::OpenVR::EVRInputError::_set_WrongType(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_WrongType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "WrongType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidHandle
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidHandle
void OVR::OpenVR::EVRInputError::_set_InvalidHandle(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidParam
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidParam
void OVR::OpenVR::EVRInputError::_set_InvalidParam(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoSteam
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoSteam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NoSteam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoSteam"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoSteam
void OVR::OpenVR::EVRInputError::_set_NoSteam(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NoSteam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoSteam", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MaxCapacityReached
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MaxCapacityReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_MaxCapacityReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MaxCapacityReached"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MaxCapacityReached
void OVR::OpenVR::EVRInputError::_set_MaxCapacityReached(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_MaxCapacityReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MaxCapacityReached", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError IPCError
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_IPCError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_IPCError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "IPCError"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError IPCError
void OVR::OpenVR::EVRInputError::_set_IPCError(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_IPCError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "IPCError", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoActiveActionSet
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoActiveActionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NoActiveActionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoActiveActionSet"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoActiveActionSet
void OVR::OpenVR::EVRInputError::_set_NoActiveActionSet(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NoActiveActionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoActiveActionSet", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidDevice
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidDevice
void OVR::OpenVR::EVRInputError::_set_InvalidDevice(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidSkeleton
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidSkeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidSkeleton"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidSkeleton
void OVR::OpenVR::EVRInputError::_set_InvalidSkeleton(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidSkeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidSkeleton", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidBoneCount
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidBoneCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidBoneCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidBoneCount"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidBoneCount
void OVR::OpenVR::EVRInputError::_set_InvalidBoneCount(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidBoneCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidBoneCount", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidCompressedData
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidCompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidCompressedData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidCompressedData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidCompressedData
void OVR::OpenVR::EVRInputError::_set_InvalidCompressedData(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidCompressedData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidCompressedData", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoData
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoData
void OVR::OpenVR::EVRInputError::_set_NoData(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoData", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError BufferTooSmall
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError BufferTooSmall
void OVR::OpenVR::EVRInputError::_set_BufferTooSmall(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MismatchedActionManifest
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MismatchedActionManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_MismatchedActionManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MismatchedActionManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MismatchedActionManifest
void OVR::OpenVR::EVRInputError::_set_MismatchedActionManifest(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_MismatchedActionManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MismatchedActionManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MissingSkeletonData
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MissingSkeletonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_MissingSkeletonData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MissingSkeletonData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MissingSkeletonData
void OVR::OpenVR::EVRInputError::_set_MissingSkeletonData(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_MissingSkeletonData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MissingSkeletonData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRInputError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSpatialAnchorError
#include "OVR/OpenVR/EVRSpatialAnchorError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Success
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Success
void OVR::OpenVR::EVRSpatialAnchorError::_set_Success(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Internal
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Internal
void OVR::OpenVR::EVRSpatialAnchorError::_set_Internal(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Internal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownHandle
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownHandle
void OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownHandle(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError ArrayTooSmall
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_ArrayTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_ArrayTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "ArrayTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError ArrayTooSmall
void OVR::OpenVR::EVRSpatialAnchorError::_set_ArrayTooSmall(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_ArrayTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "ArrayTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidDescriptorChar
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidDescriptorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidDescriptorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidDescriptorChar"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidDescriptorChar
void OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidDescriptorChar(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidDescriptorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidDescriptorChar", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NotYetAvailable
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NotYetAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_NotYetAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NotYetAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NotYetAvailable
void OVR::OpenVR::EVRSpatialAnchorError::_set_NotYetAvailable(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_NotYetAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NotYetAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NotAvailableInThisUniverse
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NotAvailableInThisUniverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_NotAvailableInThisUniverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NotAvailableInThisUniverse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NotAvailableInThisUniverse
void OVR::OpenVR::EVRSpatialAnchorError::_set_NotAvailableInThisUniverse(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_NotAvailableInThisUniverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NotAvailableInThisUniverse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError PermanentlyUnavailable
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_PermanentlyUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_PermanentlyUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "PermanentlyUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError PermanentlyUnavailable
void OVR::OpenVR::EVRSpatialAnchorError::_set_PermanentlyUnavailable(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_PermanentlyUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "PermanentlyUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError WrongDriver
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_WrongDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_WrongDriver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "WrongDriver"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError WrongDriver
void OVR::OpenVR::EVRSpatialAnchorError::_set_WrongDriver(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_WrongDriver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "WrongDriver", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError DescriptorTooLong
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_DescriptorTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_DescriptorTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "DescriptorTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError DescriptorTooLong
void OVR::OpenVR::EVRSpatialAnchorError::_set_DescriptorTooLong(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_DescriptorTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "DescriptorTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Unknown
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Unknown
void OVR::OpenVR::EVRSpatialAnchorError::_set_Unknown(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NoRoomCalibration
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NoRoomCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_NoRoomCalibration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NoRoomCalibration"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NoRoomCalibration
void OVR::OpenVR::EVRSpatialAnchorError::_set_NoRoomCalibration(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_NoRoomCalibration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NoRoomCalibration", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidArgument
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidArgument
void OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidArgument(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownDriver
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownDriver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownDriver"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownDriver
void OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownDriver(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownDriver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownDriver", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRSpatialAnchorError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EHiddenAreaMeshType
#include "OVR/OpenVR/EHiddenAreaMeshType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Standard
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Standard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Standard
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Standard(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Standard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Inverse
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Inverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Inverse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Inverse
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Inverse(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Inverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Inverse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_LineLoop
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_LineLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_LineLoop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_LineLoop"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_LineLoop
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_LineLoop(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_LineLoop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_LineLoop", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Max
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Max
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Max(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EHiddenAreaMeshType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRControllerAxisType
#include "OVR/OpenVR/EVRControllerAxisType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_None
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_None
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_None(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_TrackPad
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_TrackPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_TrackPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_TrackPad"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_TrackPad
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_TrackPad(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_TrackPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_TrackPad", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Joystick
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Joystick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Joystick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Joystick"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Joystick
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Joystick(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Joystick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Joystick", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Trigger
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Trigger"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Trigger
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Trigger(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Trigger", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRControllerAxisType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRControllerEventOutputType
#include "OVR/OpenVR/EVRControllerEventOutputType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_OSEvents
::OVR::OpenVR::EVRControllerEventOutputType OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_OSEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_OSEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerEventOutputType>("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_OSEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_OSEvents
void OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_OSEvents(::OVR::OpenVR::EVRControllerEventOutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_OSEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_OSEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_VREvents
::OVR::OpenVR::EVRControllerEventOutputType OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_VREvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_VREvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerEventOutputType>("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_VREvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_VREvents
void OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_VREvents(::OVR::OpenVR::EVRControllerEventOutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_VREvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_VREvents", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRControllerEventOutputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ECollisionBoundsStyle
#include "OVR/OpenVR/ECollisionBoundsStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_BEGINNER
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_BEGINNER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_BEGINNER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_BEGINNER"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_BEGINNER
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_BEGINNER(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_BEGINNER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_BEGINNER", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_INTERMEDIATE
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_INTERMEDIATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_INTERMEDIATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_INTERMEDIATE"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_INTERMEDIATE
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_INTERMEDIATE(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_INTERMEDIATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_INTERMEDIATE", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_SQUARES
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_SQUARES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_SQUARES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_SQUARES"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_SQUARES
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_SQUARES(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_SQUARES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_SQUARES", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_ADVANCED
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_ADVANCED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_ADVANCED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_ADVANCED"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_ADVANCED
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_ADVANCED(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_ADVANCED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_ADVANCED", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_NONE
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_NONE"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_NONE
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_NONE(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_NONE", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_COUNT
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_COUNT"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_COUNT
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_COUNT(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_COUNT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::ECollisionBoundsStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError None
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError None
void OVR::OpenVR::EVROverlayError::_set_None(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError UnknownOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_UnknownOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_UnknownOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "UnknownOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError UnknownOverlay
void OVR::OpenVR::EVROverlayError::_set_UnknownOverlay(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_UnknownOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "UnknownOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidHandle
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidHandle
void OVR::OpenVR::EVROverlayError::_set_InvalidHandle(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError PermissionDenied
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError PermissionDenied
void OVR::OpenVR::EVROverlayError::_set_PermissionDenied(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError OverlayLimitExceeded
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_OverlayLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_OverlayLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "OverlayLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError OverlayLimitExceeded
void OVR::OpenVR::EVROverlayError::_set_OverlayLimitExceeded(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_OverlayLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "OverlayLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError WrongVisibilityType
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_WrongVisibilityType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_WrongVisibilityType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "WrongVisibilityType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError WrongVisibilityType
void OVR::OpenVR::EVROverlayError::_set_WrongVisibilityType(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_WrongVisibilityType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "WrongVisibilityType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyTooLong
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_KeyTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyTooLong
void OVR::OpenVR::EVROverlayError::_set_KeyTooLong(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_KeyTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError NameTooLong
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_NameTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_NameTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "NameTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError NameTooLong
void OVR::OpenVR::EVROverlayError::_set_NameTooLong(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_NameTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "NameTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyInUse
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_KeyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyInUse
void OVR::OpenVR::EVROverlayError::_set_KeyInUse(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_KeyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError WrongTransformType
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_WrongTransformType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_WrongTransformType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "WrongTransformType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError WrongTransformType
void OVR::OpenVR::EVROverlayError::_set_WrongTransformType(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_WrongTransformType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "WrongTransformType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidTrackedDevice
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidTrackedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidTrackedDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidTrackedDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidTrackedDevice
void OVR::OpenVR::EVROverlayError::_set_InvalidTrackedDevice(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidTrackedDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidTrackedDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidParameter
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidParameter
void OVR::OpenVR::EVROverlayError::_set_InvalidParameter(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError ThumbnailCantBeDestroyed
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_ThumbnailCantBeDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_ThumbnailCantBeDestroyed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "ThumbnailCantBeDestroyed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError ThumbnailCantBeDestroyed
void OVR::OpenVR::EVROverlayError::_set_ThumbnailCantBeDestroyed(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_ThumbnailCantBeDestroyed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "ThumbnailCantBeDestroyed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError ArrayTooSmall
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_ArrayTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_ArrayTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "ArrayTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError ArrayTooSmall
void OVR::OpenVR::EVROverlayError::_set_ArrayTooSmall(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_ArrayTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "ArrayTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError RequestFailed
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError RequestFailed
void OVR::OpenVR::EVROverlayError::_set_RequestFailed(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidTexture
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidTexture
void OVR::OpenVR::EVROverlayError::_set_InvalidTexture(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError UnableToLoadFile
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_UnableToLoadFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_UnableToLoadFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "UnableToLoadFile"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError UnableToLoadFile
void OVR::OpenVR::EVROverlayError::_set_UnableToLoadFile(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_UnableToLoadFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "UnableToLoadFile", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyboardAlreadyInUse
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyboardAlreadyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_KeyboardAlreadyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyboardAlreadyInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyboardAlreadyInUse
void OVR::OpenVR::EVROverlayError::_set_KeyboardAlreadyInUse(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_KeyboardAlreadyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyboardAlreadyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError NoNeighbor
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_NoNeighbor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_NoNeighbor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "NoNeighbor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError NoNeighbor
void OVR::OpenVR::EVROverlayError::_set_NoNeighbor(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_NoNeighbor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "NoNeighbor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TooManyMaskPrimitives
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TooManyMaskPrimitives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TooManyMaskPrimitives");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TooManyMaskPrimitives"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TooManyMaskPrimitives
void OVR::OpenVR::EVROverlayError::_set_TooManyMaskPrimitives(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TooManyMaskPrimitives");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TooManyMaskPrimitives", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError BadMaskPrimitive
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_BadMaskPrimitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_BadMaskPrimitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "BadMaskPrimitive"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError BadMaskPrimitive
void OVR::OpenVR::EVROverlayError::_set_BadMaskPrimitive(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_BadMaskPrimitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "BadMaskPrimitive", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureAlreadyLocked
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureAlreadyLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TextureAlreadyLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureAlreadyLocked"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureAlreadyLocked
void OVR::OpenVR::EVROverlayError::_set_TextureAlreadyLocked(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TextureAlreadyLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureAlreadyLocked", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureLockCapacityReached
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureLockCapacityReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TextureLockCapacityReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureLockCapacityReached"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureLockCapacityReached
void OVR::OpenVR::EVROverlayError::_set_TextureLockCapacityReached(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TextureLockCapacityReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureLockCapacityReached", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureNotLocked
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureNotLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TextureNotLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureNotLocked"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureNotLocked
void OVR::OpenVR::EVROverlayError::_set_TextureNotLocked(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TextureNotLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureNotLocked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVROverlayError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationType
#include "OVR/OpenVR/EVRApplicationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Other
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Other"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Other
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Other(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Other", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Scene
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Scene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Scene"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Scene
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Scene(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Scene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Scene", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Overlay
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Overlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Overlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Overlay
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Overlay(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Overlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Overlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Background
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Background"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Background
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Background(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Background", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Utility
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Utility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Utility");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Utility"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Utility
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Utility(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Utility");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Utility", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_VRMonitor
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_VRMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_VRMonitor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_VRMonitor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_VRMonitor
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_VRMonitor(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_VRMonitor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_VRMonitor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_SteamWatchdog
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_SteamWatchdog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_SteamWatchdog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_SteamWatchdog"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_SteamWatchdog
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_SteamWatchdog(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_SteamWatchdog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_SteamWatchdog", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Bootstrapper
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Bootstrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Bootstrapper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Bootstrapper"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Bootstrapper
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Bootstrapper(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Bootstrapper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Bootstrapper", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Max
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Max
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Max(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRApplicationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRFirmwareError
#include "OVR/OpenVR/EVRFirmwareError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRFirmwareError None
::OVR::OpenVR::EVRFirmwareError OVR::OpenVR::EVRFirmwareError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRFirmwareError>("OVR.OpenVR", "EVRFirmwareError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRFirmwareError None
void OVR::OpenVR::EVRFirmwareError::_set_None(::OVR::OpenVR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRFirmwareError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRFirmwareError Success
::OVR::OpenVR::EVRFirmwareError OVR::OpenVR::EVRFirmwareError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRFirmwareError>("OVR.OpenVR", "EVRFirmwareError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRFirmwareError Success
void OVR::OpenVR::EVRFirmwareError::_set_Success(::OVR::OpenVR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRFirmwareError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRFirmwareError Fail
::OVR::OpenVR::EVRFirmwareError OVR::OpenVR::EVRFirmwareError::_get_Fail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_get_Fail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRFirmwareError>("OVR.OpenVR", "EVRFirmwareError", "Fail"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRFirmwareError Fail
void OVR::OpenVR::EVRFirmwareError::_set_Fail(::OVR::OpenVR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_set_Fail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRFirmwareError", "Fail", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRFirmwareError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationError
#include "OVR/OpenVR/EVRNotificationError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError OK
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "OK"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError OK
void OVR::OpenVR::EVRNotificationError::_set_OK(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError InvalidNotificationId
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_InvalidNotificationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_InvalidNotificationId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "InvalidNotificationId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError InvalidNotificationId
void OVR::OpenVR::EVRNotificationError::_set_InvalidNotificationId(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_InvalidNotificationId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "InvalidNotificationId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError NotificationQueueFull
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_NotificationQueueFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_NotificationQueueFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "NotificationQueueFull"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError NotificationQueueFull
void OVR::OpenVR::EVRNotificationError::_set_NotificationQueueFull(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_NotificationQueueFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "NotificationQueueFull", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError InvalidOverlayHandle
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_InvalidOverlayHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_InvalidOverlayHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "InvalidOverlayHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError InvalidOverlayHandle
void OVR::OpenVR::EVRNotificationError::_set_InvalidOverlayHandle(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_InvalidOverlayHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "InvalidOverlayHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError SystemWithUserValueAlreadyExists
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_SystemWithUserValueAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_SystemWithUserValueAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "SystemWithUserValueAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError SystemWithUserValueAlreadyExists
void OVR::OpenVR::EVRNotificationError::_set_SystemWithUserValueAlreadyExists(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_SystemWithUserValueAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "SystemWithUserValueAlreadyExists", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRNotificationError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSkeletalMotionRange
#include "OVR/OpenVR/EVRSkeletalMotionRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithController
::OVR::OpenVR::EVRSkeletalMotionRange OVR::OpenVR::EVRSkeletalMotionRange::_get_WithController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_get_WithController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalMotionRange>("OVR.OpenVR", "EVRSkeletalMotionRange", "WithController"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithController
void OVR::OpenVR::EVRSkeletalMotionRange::_set_WithController(::OVR::OpenVR::EVRSkeletalMotionRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_set_WithController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalMotionRange", "WithController", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithoutController
::OVR::OpenVR::EVRSkeletalMotionRange OVR::OpenVR::EVRSkeletalMotionRange::_get_WithoutController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_get_WithoutController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalMotionRange>("OVR.OpenVR", "EVRSkeletalMotionRange", "WithoutController"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithoutController
void OVR::OpenVR::EVRSkeletalMotionRange::_set_WithoutController(::OVR::OpenVR::EVRSkeletalMotionRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_set_WithoutController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalMotionRange", "WithoutController", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRSkeletalMotionRange::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInitError
#include "OVR/OpenVR/EVRInitError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError None
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError None
void OVR::OpenVR::EVRInitError::_set_None(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Unknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Unknown
void OVR::OpenVR::EVRInitError::_set_Unknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InstallationNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InstallationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InstallationNotFound
void OVR::OpenVR::EVRInitError::_set_Init_InstallationNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InstallationNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InstallationCorrupt
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InstallationCorrupt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InstallationCorrupt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InstallationCorrupt"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InstallationCorrupt
void OVR::OpenVR::EVRInitError::_set_Init_InstallationCorrupt(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InstallationCorrupt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InstallationCorrupt", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRClientDLLNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRClientDLLNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRClientDLLNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRClientDLLNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRClientDLLNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRClientDLLNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRClientDLLNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRClientDLLNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FileNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FileNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FileNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FileNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FileNotFound
void OVR::OpenVR::EVRInitError::_set_Init_FileNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FileNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FileNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FactoryNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FactoryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FactoryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FactoryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FactoryNotFound
void OVR::OpenVR::EVRInitError::_set_Init_FactoryNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FactoryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FactoryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InterfaceNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InterfaceNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InterfaceNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InterfaceNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InterfaceNotFound
void OVR::OpenVR::EVRInitError::_set_Init_InterfaceNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InterfaceNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InterfaceNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InvalidInterface
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InvalidInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InvalidInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InvalidInterface"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InvalidInterface
void OVR::OpenVR::EVRInitError::_set_Init_InvalidInterface(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InvalidInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InvalidInterface", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_UserConfigDirectoryInvalid
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_UserConfigDirectoryInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_UserConfigDirectoryInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_UserConfigDirectoryInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_UserConfigDirectoryInvalid
void OVR::OpenVR::EVRInitError::_set_Init_UserConfigDirectoryInvalid(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_UserConfigDirectoryInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_UserConfigDirectoryInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFound
void OVR::OpenVR::EVRInitError::_set_Init_HmdNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotInitialized
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotInitialized
void OVR::OpenVR::EVRInitError::_set_Init_NotInitialized(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotFound
void OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoConfigPath
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoConfigPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoConfigPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoConfigPath"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoConfigPath
void OVR::OpenVR::EVRInitError::_set_Init_NoConfigPath(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoConfigPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoConfigPath", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoLogPath
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoLogPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoLogPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoLogPath"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoLogPath
void OVR::OpenVR::EVRInitError::_set_Init_NoLogPath(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoLogPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoLogPath", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotWritable
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotWritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotWritable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotWritable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotWritable
void OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotWritable(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotWritable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotWritable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_AppInfoInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_AppInfoInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_AppInfoInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_AppInfoInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_AppInfoInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_AppInfoInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_AppInfoInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_AppInfoInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_Retry
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_Retry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_Retry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_Retry"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_Retry
void OVR::OpenVR::EVRInitError::_set_Init_Retry(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_Retry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_Retry", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InitCanceledByUser
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InitCanceledByUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InitCanceledByUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InitCanceledByUser"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InitCanceledByUser
void OVR::OpenVR::EVRInitError::_set_Init_InitCanceledByUser(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InitCanceledByUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InitCanceledByUser", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_AnotherAppLaunching
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_AnotherAppLaunching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_AnotherAppLaunching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_AnotherAppLaunching"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_AnotherAppLaunching
void OVR::OpenVR::EVRInitError::_set_Init_AnotherAppLaunching(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_AnotherAppLaunching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_AnotherAppLaunching", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_SettingsInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_SettingsInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_SettingsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_SettingsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_SettingsInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_SettingsInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_SettingsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_SettingsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_ShuttingDown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_ShuttingDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_ShuttingDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_ShuttingDown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_ShuttingDown
void OVR::OpenVR::EVRInitError::_set_Init_ShuttingDown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_ShuttingDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_ShuttingDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_TooManyObjects
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_TooManyObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_TooManyObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_TooManyObjects"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_TooManyObjects
void OVR::OpenVR::EVRInitError::_set_Init_TooManyObjects(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_TooManyObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_TooManyObjects", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoServerForBackgroundApp
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoServerForBackgroundApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoServerForBackgroundApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoServerForBackgroundApp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoServerForBackgroundApp
void OVR::OpenVR::EVRInitError::_set_Init_NoServerForBackgroundApp(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoServerForBackgroundApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoServerForBackgroundApp", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotSupportedWithCompositor
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotSupportedWithCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotSupportedWithCompositor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotSupportedWithCompositor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotSupportedWithCompositor
void OVR::OpenVR::EVRInitError::_set_Init_NotSupportedWithCompositor(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotSupportedWithCompositor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotSupportedWithCompositor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToUtilityApps
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToUtilityApps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToUtilityApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToUtilityApps"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToUtilityApps
void OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToUtilityApps(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToUtilityApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToUtilityApps", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_Internal
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_Internal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_Internal
void OVR::OpenVR::EVRInitError::_set_Init_Internal(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_Internal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdDriverIdIsNone
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdDriverIdIsNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdDriverIdIsNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdDriverIdIsNone"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdDriverIdIsNone
void OVR::OpenVR::EVRInitError::_set_Init_HmdDriverIdIsNone(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdDriverIdIsNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdDriverIdIsNone", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFoundPresenceFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdNotFoundPresenceFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFoundPresenceFailed
void OVR::OpenVR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdNotFoundPresenceFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRMonitorNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRMonitorNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRMonitorNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRMonitorNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRMonitorNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRMonitorNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRMonitorStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRMonitorStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRMonitorStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRMonitorStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRMonitorStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRMonitorStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_LowPowerWatchdogNotSupported
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_LowPowerWatchdogNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_LowPowerWatchdogNotSupported
void OVR::OpenVR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_LowPowerWatchdogNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InvalidApplicationType
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InvalidApplicationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InvalidApplicationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InvalidApplicationType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InvalidApplicationType
void OVR::OpenVR::EVRInitError::_set_Init_InvalidApplicationType(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InvalidApplicationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InvalidApplicationType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToWatchdogApps
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToWatchdogApps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToWatchdogApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToWatchdogApps"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToWatchdogApps
void OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToWatchdogApps(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToWatchdogApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToWatchdogApps", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_WatchdogDisabledInSettings
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_WatchdogDisabledInSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_WatchdogDisabledInSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_WatchdogDisabledInSettings"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_WatchdogDisabledInSettings
void OVR::OpenVR::EVRInitError::_set_Init_WatchdogDisabledInSettings(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_WatchdogDisabledInSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_WatchdogDisabledInSettings", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRDashboardNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRDashboardNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRDashboardNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRDashboardNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRDashboardNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRDashboardNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRDashboardStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRDashboardStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRDashboardStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRDashboardStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRDashboardStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRDashboardStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRHomeNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRHomeNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRHomeNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRHomeNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRHomeNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRHomeNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRHomeNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRHomeNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRHomeStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRHomeStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRHomeStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRHomeStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRHomeStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRHomeStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRHomeStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRHomeStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_RebootingBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_RebootingBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_RebootingBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_RebootingBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_RebootingBusy
void OVR::OpenVR::EVRInitError::_set_Init_RebootingBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_RebootingBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_RebootingBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FirmwareUpdateBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FirmwareUpdateBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FirmwareUpdateBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FirmwareUpdateBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FirmwareUpdateBusy
void OVR::OpenVR::EVRInitError::_set_Init_FirmwareUpdateBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FirmwareUpdateBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FirmwareUpdateBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FirmwareRecoveryBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FirmwareRecoveryBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FirmwareRecoveryBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FirmwareRecoveryBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FirmwareRecoveryBusy
void OVR::OpenVR::EVRInitError::_set_Init_FirmwareRecoveryBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FirmwareRecoveryBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FirmwareRecoveryBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_USBServiceBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_USBServiceBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_USBServiceBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_USBServiceBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_USBServiceBusy
void OVR::OpenVR::EVRInitError::_set_Init_USBServiceBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_USBServiceBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_USBServiceBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRWebHelperStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRWebHelperStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRWebHelperStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRWebHelperStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRWebHelperStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRWebHelperStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRWebHelperStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRWebHelperStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_TrackerManagerInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_TrackerManagerInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_TrackerManagerInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_TrackerManagerInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_TrackerManagerInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_TrackerManagerInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_TrackerManagerInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_TrackerManagerInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_Failed
void OVR::OpenVR::EVRInitError::_set_Driver_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_Unknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_Unknown
void OVR::OpenVR::EVRInitError::_set_Driver_Unknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdUnknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdUnknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdUnknown
void OVR::OpenVR::EVRInitError::_set_Driver_HmdUnknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_NotLoaded
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_NotLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_NotLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_NotLoaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_NotLoaded
void OVR::OpenVR::EVRInitError::_set_Driver_NotLoaded(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_NotLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_NotLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_RuntimeOutOfDate
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_RuntimeOutOfDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_RuntimeOutOfDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_RuntimeOutOfDate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_RuntimeOutOfDate
void OVR::OpenVR::EVRInitError::_set_Driver_RuntimeOutOfDate(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_RuntimeOutOfDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_RuntimeOutOfDate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdInUse
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdInUse
void OVR::OpenVR::EVRInitError::_set_Driver_HmdInUse(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_NotCalibrated
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_NotCalibrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_NotCalibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_NotCalibrated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_NotCalibrated
void OVR::OpenVR::EVRInitError::_set_Driver_NotCalibrated(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_NotCalibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_NotCalibrated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_CalibrationInvalid
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_CalibrationInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_CalibrationInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_CalibrationInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_CalibrationInvalid
void OVR::OpenVR::EVRInitError::_set_Driver_CalibrationInvalid(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_CalibrationInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_CalibrationInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayNotFound
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
void OVR::OpenVR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDriverIdOutOfBounds
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDriverIdOutOfBounds
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayMirrored
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayMirrored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayMirrored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayMirrored"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayMirrored
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayMirrored(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayMirrored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayMirrored", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ServerInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ServerInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ServerInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ServerInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ServerInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_ServerInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ServerInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ServerInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailed
void OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_SharedStateInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_SharedStateInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_SharedStateInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_SharedStateInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_SharedStateInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_SharedStateInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_SharedStateInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_SharedStateInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_MutexInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_MutexInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_MutexInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_MutexInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_MutexInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_MutexInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_MutexInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_MutexInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_Failed
void OVR::OpenVR::EVRInitError::_set_IPC_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorConnectFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorConnectFailed
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorConnectFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInvalidConnectResponse
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorInvalidConnectResponse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInvalidConnectResponse
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorInvalidConnectResponse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
void OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_Failed
void OVR::OpenVR::EVRInitError::_set_Compositor_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_D3D11HardwareRequired
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_D3D11HardwareRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_D3D11HardwareRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_D3D11HardwareRequired"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_D3D11HardwareRequired
void OVR::OpenVR::EVRInitError::_set_Compositor_D3D11HardwareRequired(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_D3D11HardwareRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_D3D11HardwareRequired", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_FirmwareRequiresUpdate
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_FirmwareRequiresUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_FirmwareRequiresUpdate
void OVR::OpenVR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_FirmwareRequiresUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_OverlayInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_OverlayInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_OverlayInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_OverlayInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_OverlayInitFailed
void OVR::OpenVR::EVRInitError::_set_Compositor_OverlayInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_OverlayInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_OverlayInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_ScreenshotsInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_ScreenshotsInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_ScreenshotsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_ScreenshotsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_ScreenshotsInitFailed
void OVR::OpenVR::EVRInitError::_set_Compositor_ScreenshotsInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_ScreenshotsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_ScreenshotsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_UnableToCreateDevice
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_UnableToCreateDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_UnableToCreateDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_UnableToCreateDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_UnableToCreateDevice
void OVR::OpenVR::EVRInitError::_set_Compositor_UnableToCreateDevice(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_UnableToCreateDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_UnableToCreateDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_WindowsNotInDevMode
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_WindowsNotInDevMode
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataError
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataError
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Steam_SteamInstallationNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Steam_SteamInstallationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Steam_SteamInstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Steam_SteamInstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Steam_SteamInstallationNotFound
void OVR::OpenVR::EVRInitError::_set_Steam_SteamInstallationNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Steam_SteamInstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Steam_SteamInstallationNotFound", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRInitError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotType
#include "OVR/OpenVR/EVRScreenshotType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType None
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType None
void OVR::OpenVR::EVRScreenshotType::_set_None(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Mono
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Mono
void OVR::OpenVR::EVRScreenshotType::_set_Mono(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Stereo
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Stereo
void OVR::OpenVR::EVRScreenshotType::_set_Stereo(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Cubemap
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Cubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Cubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Cubemap"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Cubemap
void OVR::OpenVR::EVRScreenshotType::_set_Cubemap(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Cubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Cubemap", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType MonoPanorama
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_MonoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_MonoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "MonoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType MonoPanorama
void OVR::OpenVR::EVRScreenshotType::_set_MonoPanorama(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_MonoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "MonoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType StereoPanorama
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType StereoPanorama
void OVR::OpenVR::EVRScreenshotType::_set_StereoPanorama(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "StereoPanorama", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRScreenshotType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotPropertyFilenames
#include "OVR/OpenVR/EVRScreenshotPropertyFilenames.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames Preview
::OVR::OpenVR::EVRScreenshotPropertyFilenames OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_Preview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_Preview");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotPropertyFilenames>("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "Preview"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames Preview
void OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_Preview(::OVR::OpenVR::EVRScreenshotPropertyFilenames value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_Preview");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "Preview", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames VR
::OVR::OpenVR::EVRScreenshotPropertyFilenames OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_VR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_VR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotPropertyFilenames>("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "VR"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames VR
void OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_VR(::OVR::OpenVR::EVRScreenshotPropertyFilenames value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_VR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "VR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRScreenshotPropertyFilenames::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraError
#include "OVR/OpenVR/EVRTrackedCameraError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError None
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError None
void OVR::OpenVR::EVRTrackedCameraError::_set_None(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError OperationFailed
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError OperationFailed
void OVR::OpenVR::EVRTrackedCameraError::_set_OperationFailed(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidHandle
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidHandle
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidHandle(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameHeaderVersion
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameHeaderVersion
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError OutOfHandles
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_OutOfHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_OutOfHandles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "OutOfHandles"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError OutOfHandles
void OVR::OpenVR::EVRTrackedCameraError::_set_OutOfHandles(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_OutOfHandles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "OutOfHandles", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError IPCFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_IPCFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_IPCFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "IPCFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError IPCFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_IPCFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_IPCFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "IPCFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError NotSupportedForThisDevice
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_NotSupportedForThisDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_NotSupportedForThisDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "NotSupportedForThisDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError NotSupportedForThisDevice
void OVR::OpenVR::EVRTrackedCameraError::_set_NotSupportedForThisDevice(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_NotSupportedForThisDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "NotSupportedForThisDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError SharedMemoryFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_SharedMemoryFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_SharedMemoryFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "SharedMemoryFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError SharedMemoryFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_SharedMemoryFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_SharedMemoryFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "SharedMemoryFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError FrameBufferingFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_FrameBufferingFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_FrameBufferingFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "FrameBufferingFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError FrameBufferingFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_FrameBufferingFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_FrameBufferingFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "FrameBufferingFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError StreamSetupFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_StreamSetupFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_StreamSetupFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "StreamSetupFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError StreamSetupFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_StreamSetupFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_StreamSetupFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "StreamSetupFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidGLTextureId
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidGLTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidGLTextureId
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidGLTextureId(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidSharedTextureHandle
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidSharedTextureHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidSharedTextureHandle
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidSharedTextureHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError FailedToGetGLTextureId
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_FailedToGetGLTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_FailedToGetGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "FailedToGetGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError FailedToGetGLTextureId
void OVR::OpenVR::EVRTrackedCameraError::_set_FailedToGetGLTextureId(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_FailedToGetGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "FailedToGetGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError SharedTextureFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_SharedTextureFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_SharedTextureFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "SharedTextureFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError SharedTextureFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_SharedTextureFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_SharedTextureFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "SharedTextureFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError NoFrameAvailable
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_NoFrameAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_NoFrameAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "NoFrameAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError NoFrameAvailable
void OVR::OpenVR::EVRTrackedCameraError::_set_NoFrameAvailable(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_NoFrameAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "NoFrameAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidArgument
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidArgument
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidArgument(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameBufferSize
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameBufferSize
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameBufferSize(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRTrackedCameraError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraFrameLayout
#include "OVR/OpenVR/EVRTrackedCameraFrameLayout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Mono
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Mono
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Mono(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Stereo
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Stereo
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Stereo(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout VerticalLayout
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_VerticalLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_VerticalLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "VerticalLayout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout VerticalLayout
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_VerticalLayout(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_VerticalLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "VerticalLayout", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout HorizontalLayout
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_HorizontalLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_HorizontalLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "HorizontalLayout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout HorizontalLayout
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_HorizontalLayout(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_HorizontalLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "HorizontalLayout", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRTrackedCameraFrameLayout::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraFrameType
#include "OVR/OpenVR/EVRTrackedCameraFrameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Distorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_Distorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_Distorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "Distorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Distorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_Distorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_Distorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "Distorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Undistorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_Undistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_Undistorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "Undistorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Undistorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_Undistorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_Undistorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "Undistorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MaximumUndistorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_MaximumUndistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_MaximumUndistorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "MaximumUndistorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MaximumUndistorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_MaximumUndistorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_MaximumUndistorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "MaximumUndistorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRTrackedCameraFrameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVSync
#include "OVR/OpenVR/EVSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync None
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync None
void OVR::OpenVR::EVSync::_set_None(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync WaitRender
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_WaitRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_WaitRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "WaitRender"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync WaitRender
void OVR::OpenVR::EVSync::_set_WaitRender(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_WaitRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "WaitRender", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync NoWaitRender
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_NoWaitRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_NoWaitRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "NoWaitRender"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync NoWaitRender
void OVR::OpenVR::EVSync::_set_NoWaitRender(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_NoWaitRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "NoWaitRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVSync::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRMuraCorrectionMode
#include "OVR/OpenVR/EVRMuraCorrectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMuraCorrectionMode Default
::OVR::OpenVR::EVRMuraCorrectionMode OVR::OpenVR::EVRMuraCorrectionMode::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMuraCorrectionMode>("OVR.OpenVR", "EVRMuraCorrectionMode", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMuraCorrectionMode Default
void OVR::OpenVR::EVRMuraCorrectionMode::_set_Default(::OVR::OpenVR::EVRMuraCorrectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMuraCorrectionMode", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMuraCorrectionMode NoCorrection
::OVR::OpenVR::EVRMuraCorrectionMode OVR::OpenVR::EVRMuraCorrectionMode::_get_NoCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_get_NoCorrection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMuraCorrectionMode>("OVR.OpenVR", "EVRMuraCorrectionMode", "NoCorrection"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMuraCorrectionMode NoCorrection
void OVR::OpenVR::EVRMuraCorrectionMode::_set_NoCorrection(::OVR::OpenVR::EVRMuraCorrectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_set_NoCorrection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMuraCorrectionMode", "NoCorrection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRMuraCorrectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.Imu_OffScaleFlags
#include "OVR/OpenVR/Imu_OffScaleFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelX
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelX
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelX(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelY
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelY"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelY
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelY(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelY", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelZ
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelZ"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelZ
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelZ(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelZ", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroX
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroX
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroX(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroY
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroY"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroY
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroY(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroY", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroZ
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroZ"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroZ
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroZ(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroZ", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::Imu_OffScaleFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError None
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError None
void OVR::OpenVR::EVRApplicationError::_set_None(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError AppKeyAlreadyExists
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_AppKeyAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_AppKeyAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "AppKeyAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError AppKeyAlreadyExists
void OVR::OpenVR::EVRApplicationError::_set_AppKeyAlreadyExists(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_AppKeyAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "AppKeyAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError NoManifest
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_NoManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_NoManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "NoManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError NoManifest
void OVR::OpenVR::EVRApplicationError::_set_NoManifest(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_NoManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "NoManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError NoApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_NoApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_NoApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "NoApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError NoApplication
void OVR::OpenVR::EVRApplicationError::_set_NoApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_NoApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "NoApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidIndex
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidIndex"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidIndex
void OVR::OpenVR::EVRApplicationError::_set_InvalidIndex(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidIndex", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError UnknownApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_UnknownApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_UnknownApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "UnknownApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError UnknownApplication
void OVR::OpenVR::EVRApplicationError::_set_UnknownApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_UnknownApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "UnknownApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError IPCFailed
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError IPCFailed
void OVR::OpenVR::EVRApplicationError::_set_IPCFailed(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyRunning
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyRunning"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyRunning
void OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyRunning(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyRunning", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidManifest
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidManifest
void OVR::OpenVR::EVRApplicationError::_set_InvalidManifest(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidApplication
void OVR::OpenVR::EVRApplicationError::_set_InvalidApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError LaunchFailed
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_LaunchFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_LaunchFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "LaunchFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError LaunchFailed
void OVR::OpenVR::EVRApplicationError::_set_LaunchFailed(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_LaunchFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "LaunchFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyStarting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyStarting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyStarting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyStarting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyStarting
void OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyStarting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyStarting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyStarting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError LaunchInProgress
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_LaunchInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_LaunchInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "LaunchInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError LaunchInProgress
void OVR::OpenVR::EVRApplicationError::_set_LaunchInProgress(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_LaunchInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "LaunchInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError OldApplicationQuitting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_OldApplicationQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_OldApplicationQuitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "OldApplicationQuitting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError OldApplicationQuitting
void OVR::OpenVR::EVRApplicationError::_set_OldApplicationQuitting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_OldApplicationQuitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "OldApplicationQuitting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError TransitionAborted
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_TransitionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_TransitionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "TransitionAborted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError TransitionAborted
void OVR::OpenVR::EVRApplicationError::_set_TransitionAborted(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_TransitionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "TransitionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError IsTemplate
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_IsTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_IsTemplate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "IsTemplate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError IsTemplate
void OVR::OpenVR::EVRApplicationError::_set_IsTemplate(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_IsTemplate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "IsTemplate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError SteamVRIsExiting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_SteamVRIsExiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_SteamVRIsExiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "SteamVRIsExiting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError SteamVRIsExiting
void OVR::OpenVR::EVRApplicationError::_set_SteamVRIsExiting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_SteamVRIsExiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "SteamVRIsExiting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError BufferTooSmall
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError BufferTooSmall
void OVR::OpenVR::EVRApplicationError::_set_BufferTooSmall(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError PropertyNotSet
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_PropertyNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_PropertyNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "PropertyNotSet"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError PropertyNotSet
void OVR::OpenVR::EVRApplicationError::_set_PropertyNotSet(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_PropertyNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "PropertyNotSet", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError UnknownProperty
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_UnknownProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_UnknownProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError UnknownProperty
void OVR::OpenVR::EVRApplicationError::_set_UnknownProperty(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_UnknownProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidParameter
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidParameter
void OVR::OpenVR::EVRApplicationError::_set_InvalidParameter(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidParameter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRApplicationError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationProperty
#include "OVR/OpenVR/EVRApplicationProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Name_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Name_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Name_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Name_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Name_String
void OVR::OpenVR::EVRApplicationProperty::_set_Name_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Name_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Name_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty LaunchType_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_LaunchType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_LaunchType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "LaunchType_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty LaunchType_String
void OVR::OpenVR::EVRApplicationProperty::_set_LaunchType_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_LaunchType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "LaunchType_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty WorkingDirectory_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_WorkingDirectory_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_WorkingDirectory_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "WorkingDirectory_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty WorkingDirectory_String
void OVR::OpenVR::EVRApplicationProperty::_set_WorkingDirectory_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_WorkingDirectory_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "WorkingDirectory_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty BinaryPath_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_BinaryPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_BinaryPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "BinaryPath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty BinaryPath_String
void OVR::OpenVR::EVRApplicationProperty::_set_BinaryPath_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_BinaryPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "BinaryPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Arguments_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Arguments_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Arguments_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Arguments_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Arguments_String
void OVR::OpenVR::EVRApplicationProperty::_set_Arguments_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Arguments_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Arguments_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty URL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_URL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_URL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "URL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty URL_String
void OVR::OpenVR::EVRApplicationProperty::_set_URL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_URL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "URL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Description_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Description_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Description_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Description_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Description_String
void OVR::OpenVR::EVRApplicationProperty::_set_Description_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Description_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Description_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty NewsURL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_NewsURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_NewsURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "NewsURL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty NewsURL_String
void OVR::OpenVR::EVRApplicationProperty::_set_NewsURL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_NewsURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "NewsURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty ImagePath_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_ImagePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_ImagePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "ImagePath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty ImagePath_String
void OVR::OpenVR::EVRApplicationProperty::_set_ImagePath_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_ImagePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "ImagePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Source_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Source_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Source_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Source_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Source_String
void OVR::OpenVR::EVRApplicationProperty::_set_Source_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Source_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Source_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty ActionManifestURL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_ActionManifestURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_ActionManifestURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "ActionManifestURL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty ActionManifestURL_String
void OVR::OpenVR::EVRApplicationProperty::_set_ActionManifestURL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_ActionManifestURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "ActionManifestURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsDashboardOverlay_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsDashboardOverlay_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsDashboardOverlay_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsDashboardOverlay_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsDashboardOverlay_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsDashboardOverlay_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsDashboardOverlay_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsDashboardOverlay_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsTemplate_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsTemplate_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsTemplate_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsTemplate_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsTemplate_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsTemplate_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsTemplate_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsTemplate_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsInstanced_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsInstanced_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsInstanced_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsInstanced_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsInstanced_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsInstanced_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsInstanced_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsInstanced_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsInternal_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsInternal_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsInternal_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsInternal_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsInternal_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsInternal_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsInternal_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsInternal_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty WantsCompositorPauseInStandby_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_WantsCompositorPauseInStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_WantsCompositorPauseInStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "WantsCompositorPauseInStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty WantsCompositorPauseInStandby_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_WantsCompositorPauseInStandby_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_WantsCompositorPauseInStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "WantsCompositorPauseInStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty LastLaunchTime_Uint64
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_LastLaunchTime_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_LastLaunchTime_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "LastLaunchTime_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty LastLaunchTime_Uint64
void OVR::OpenVR::EVRApplicationProperty::_set_LastLaunchTime_Uint64(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_LastLaunchTime_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "LastLaunchTime_Uint64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRApplicationProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationTransitionState
#include "OVR/OpenVR/EVRApplicationTransitionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_None
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_None
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_None(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_OldAppQuitSent
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_OldAppQuitSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_OldAppQuitSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_OldAppQuitSent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_OldAppQuitSent
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_OldAppQuitSent(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_OldAppQuitSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_OldAppQuitSent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_WaitingForExternalLaunch
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_WaitingForExternalLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_WaitingForExternalLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_WaitingForExternalLaunch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_WaitingForExternalLaunch
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_WaitingForExternalLaunch(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_WaitingForExternalLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_WaitingForExternalLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_NewAppLaunched
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_NewAppLaunched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_NewAppLaunched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_NewAppLaunched"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_NewAppLaunched
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_NewAppLaunched(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_NewAppLaunched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_NewAppLaunched", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRApplicationTransitionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ChaperoneCalibrationState
#include "OVR/OpenVR/ChaperoneCalibrationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState OK
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "OK"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState OK
void OVR::OpenVR::ChaperoneCalibrationState::_set_OK(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationMayHaveMoved
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationMayHaveMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationMayHaveMoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationMayHaveMoved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationMayHaveMoved
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationMayHaveMoved(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationMayHaveMoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationMayHaveMoved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationRemoved
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationRemoved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationRemoved
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationRemoved(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationRemoved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_SeatedBoundsInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_SeatedBoundsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_SeatedBoundsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_SeatedBoundsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_SeatedBoundsInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_SeatedBoundsInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_SeatedBoundsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_SeatedBoundsInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationUninitialized
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationUninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationUninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationUninitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationUninitialized
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationUninitialized(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationUninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationUninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationConflict
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationConflict"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationConflict
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationConflict(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationConflict", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_PlayAreaInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_PlayAreaInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_PlayAreaInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_PlayAreaInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_PlayAreaInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_PlayAreaInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_PlayAreaInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_PlayAreaInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_CollisionBoundsInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_CollisionBoundsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_CollisionBoundsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_CollisionBoundsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_CollisionBoundsInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_CollisionBoundsInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_CollisionBoundsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_CollisionBoundsInvalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::ChaperoneCalibrationState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EChaperoneConfigFile
#include "OVR/OpenVR/EChaperoneConfigFile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneConfigFile Live
::OVR::OpenVR::EChaperoneConfigFile OVR::OpenVR::EChaperoneConfigFile::_get_Live() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_get_Live");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneConfigFile>("OVR.OpenVR", "EChaperoneConfigFile", "Live"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneConfigFile Live
void OVR::OpenVR::EChaperoneConfigFile::_set_Live(::OVR::OpenVR::EChaperoneConfigFile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_set_Live");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneConfigFile", "Live", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneConfigFile Temp
::OVR::OpenVR::EChaperoneConfigFile OVR::OpenVR::EChaperoneConfigFile::_get_Temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_get_Temp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneConfigFile>("OVR.OpenVR", "EChaperoneConfigFile", "Temp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneConfigFile Temp
void OVR::OpenVR::EChaperoneConfigFile::_set_Temp(::OVR::OpenVR::EChaperoneConfigFile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_set_Temp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneConfigFile", "Temp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EChaperoneConfigFile::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EChaperoneImportFlags
#include "OVR/OpenVR/EChaperoneImportFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneImportFlags EChaperoneImport_BoundsOnly
::OVR::OpenVR::EChaperoneImportFlags OVR::OpenVR::EChaperoneImportFlags::_get_EChaperoneImport_BoundsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::_get_EChaperoneImport_BoundsOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneImportFlags>("OVR.OpenVR", "EChaperoneImportFlags", "EChaperoneImport_BoundsOnly"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneImportFlags EChaperoneImport_BoundsOnly
void OVR::OpenVR::EChaperoneImportFlags::_set_EChaperoneImport_BoundsOnly(::OVR::OpenVR::EChaperoneImportFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::_set_EChaperoneImport_BoundsOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneImportFlags", "EChaperoneImport_BoundsOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EChaperoneImportFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError None
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError None
void OVR::OpenVR::EVRCompositorError::_set_None(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError RequestFailed
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError RequestFailed
void OVR::OpenVR::EVRCompositorError::_set_RequestFailed(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IncompatibleVersion
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IncompatibleVersion
void OVR::OpenVR::EVRCompositorError::_set_IncompatibleVersion(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError DoNotHaveFocus
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_DoNotHaveFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_DoNotHaveFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "DoNotHaveFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError DoNotHaveFocus
void OVR::OpenVR::EVRCompositorError::_set_DoNotHaveFocus(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_DoNotHaveFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "DoNotHaveFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError InvalidTexture
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError InvalidTexture
void OVR::OpenVR::EVRCompositorError::_set_InvalidTexture(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IsNotSceneApplication
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IsNotSceneApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IsNotSceneApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IsNotSceneApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IsNotSceneApplication
void OVR::OpenVR::EVRCompositorError::_set_IsNotSceneApplication(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IsNotSceneApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IsNotSceneApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError TextureIsOnWrongDevice
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_TextureIsOnWrongDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_TextureIsOnWrongDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "TextureIsOnWrongDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError TextureIsOnWrongDevice
void OVR::OpenVR::EVRCompositorError::_set_TextureIsOnWrongDevice(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_TextureIsOnWrongDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "TextureIsOnWrongDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError TextureUsesUnsupportedFormat
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_TextureUsesUnsupportedFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_TextureUsesUnsupportedFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "TextureUsesUnsupportedFormat"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError TextureUsesUnsupportedFormat
void OVR::OpenVR::EVRCompositorError::_set_TextureUsesUnsupportedFormat(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_TextureUsesUnsupportedFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "TextureUsesUnsupportedFormat", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError SharedTexturesNotSupported
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_SharedTexturesNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_SharedTexturesNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "SharedTexturesNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError SharedTexturesNotSupported
void OVR::OpenVR::EVRCompositorError::_set_SharedTexturesNotSupported(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_SharedTexturesNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "SharedTexturesNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IndexOutOfRange
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IndexOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IndexOutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IndexOutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IndexOutOfRange
void OVR::OpenVR::EVRCompositorError::_set_IndexOutOfRange(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IndexOutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IndexOutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError AlreadySubmitted
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_AlreadySubmitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_AlreadySubmitted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "AlreadySubmitted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError AlreadySubmitted
void OVR::OpenVR::EVRCompositorError::_set_AlreadySubmitted(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_AlreadySubmitted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "AlreadySubmitted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError InvalidBounds
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_InvalidBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_InvalidBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "InvalidBounds"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError InvalidBounds
void OVR::OpenVR::EVRCompositorError::_set_InvalidBounds(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_InvalidBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "InvalidBounds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRCompositorError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRCompositorTimingMode
#include "OVR/OpenVR/EVRCompositorTimingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Implicit
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Implicit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Implicit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Implicit
void OVR::OpenVR::EVRCompositorTimingMode::_set_Implicit(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Implicit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Implicit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_RuntimePerformsPostPresentHandoff
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_RuntimePerformsPostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_RuntimePerformsPostPresentHandoff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_RuntimePerformsPostPresentHandoff"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_RuntimePerformsPostPresentHandoff
void OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_RuntimePerformsPostPresentHandoff(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_RuntimePerformsPostPresentHandoff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_RuntimePerformsPostPresentHandoff", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_ApplicationPerformsPostPresentHandoff
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_ApplicationPerformsPostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_ApplicationPerformsPostPresentHandoff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_ApplicationPerformsPostPresentHandoff"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_ApplicationPerformsPostPresentHandoff
void OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_ApplicationPerformsPostPresentHandoff(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_ApplicationPerformsPostPresentHandoff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_ApplicationPerformsPostPresentHandoff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRCompositorTimingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayInputMethod
#include "OVR/OpenVR/VROverlayInputMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod None
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod None
void OVR::OpenVR::VROverlayInputMethod::_set_None(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod Mouse
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod Mouse
void OVR::OpenVR::VROverlayInputMethod::_set_Mouse(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod DualAnalog
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_DualAnalog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_DualAnalog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "DualAnalog"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod DualAnalog
void OVR::OpenVR::VROverlayInputMethod::_set_DualAnalog(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_DualAnalog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "DualAnalog", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::VROverlayInputMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayTransformType
#include "OVR/OpenVR/VROverlayTransformType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_Absolute
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_Absolute"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_Absolute
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_Absolute(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedDeviceRelative
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedDeviceRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedDeviceRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedDeviceRelative"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedDeviceRelative
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedDeviceRelative(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedDeviceRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedDeviceRelative", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_SystemOverlay
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_SystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_SystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_SystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_SystemOverlay
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_SystemOverlay(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_SystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_SystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedComponent
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedComponent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedComponent
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedComponent(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedComponent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::VROverlayTransformType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayFlags
#include "OVR/OpenVR/VROverlayFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags None
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags None
void OVR::OpenVR::VROverlayFlags::_set_None(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags Curved
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_Curved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_Curved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "Curved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags Curved
void OVR::OpenVR::VROverlayFlags::_set_Curved(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_Curved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "Curved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags RGSS4X
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_RGSS4X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_RGSS4X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "RGSS4X"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags RGSS4X
void OVR::OpenVR::VROverlayFlags::_set_RGSS4X(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_RGSS4X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "RGSS4X", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags NoDashboardTab
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_NoDashboardTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_NoDashboardTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "NoDashboardTab"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags NoDashboardTab
void OVR::OpenVR::VROverlayFlags::_set_NoDashboardTab(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_NoDashboardTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "NoDashboardTab", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags AcceptsGamepadEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_AcceptsGamepadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_AcceptsGamepadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "AcceptsGamepadEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags AcceptsGamepadEvents
void OVR::OpenVR::VROverlayFlags::_set_AcceptsGamepadEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_AcceptsGamepadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "AcceptsGamepadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags ShowGamepadFocus
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_ShowGamepadFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_ShowGamepadFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "ShowGamepadFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags ShowGamepadFocus
void OVR::OpenVR::VROverlayFlags::_set_ShowGamepadFocus(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_ShowGamepadFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "ShowGamepadFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SendVRScrollEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SendVRScrollEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SendVRScrollEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SendVRScrollEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SendVRScrollEvents
void OVR::OpenVR::VROverlayFlags::_set_SendVRScrollEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SendVRScrollEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SendVRScrollEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SendVRTouchpadEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SendVRTouchpadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SendVRTouchpadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SendVRTouchpadEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SendVRTouchpadEvents
void OVR::OpenVR::VROverlayFlags::_set_SendVRTouchpadEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SendVRTouchpadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SendVRTouchpadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags ShowTouchPadScrollWheel
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_ShowTouchPadScrollWheel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_ShowTouchPadScrollWheel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "ShowTouchPadScrollWheel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags ShowTouchPadScrollWheel
void OVR::OpenVR::VROverlayFlags::_set_ShowTouchPadScrollWheel(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_ShowTouchPadScrollWheel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "ShowTouchPadScrollWheel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags TransferOwnershipToInternalProcess
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_TransferOwnershipToInternalProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_TransferOwnershipToInternalProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "TransferOwnershipToInternalProcess"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags TransferOwnershipToInternalProcess
void OVR::OpenVR::VROverlayFlags::_set_TransferOwnershipToInternalProcess(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_TransferOwnershipToInternalProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "TransferOwnershipToInternalProcess", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Parallel
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SideBySide_Parallel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SideBySide_Parallel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SideBySide_Parallel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Parallel
void OVR::OpenVR::VROverlayFlags::_set_SideBySide_Parallel(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SideBySide_Parallel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SideBySide_Parallel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Crossed
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SideBySide_Crossed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SideBySide_Crossed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SideBySide_Crossed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Crossed
void OVR::OpenVR::VROverlayFlags::_set_SideBySide_Crossed(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SideBySide_Crossed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SideBySide_Crossed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags Panorama
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_Panorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_Panorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "Panorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags Panorama
void OVR::OpenVR::VROverlayFlags::_set_Panorama(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_Panorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "Panorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags StereoPanorama
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags StereoPanorama
void OVR::OpenVR::VROverlayFlags::_set_StereoPanorama(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "StereoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SortWithNonSceneOverlays
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SortWithNonSceneOverlays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SortWithNonSceneOverlays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SortWithNonSceneOverlays"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SortWithNonSceneOverlays
void OVR::OpenVR::VROverlayFlags::_set_SortWithNonSceneOverlays(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SortWithNonSceneOverlays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SortWithNonSceneOverlays", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags VisibleInDashboard
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_VisibleInDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_VisibleInDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "VisibleInDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags VisibleInDashboard
void OVR::OpenVR::VROverlayFlags::_set_VisibleInDashboard(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_VisibleInDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "VisibleInDashboard", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::VROverlayFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VRMessageOverlayResponse
#include "OVR/OpenVR/VRMessageOverlayResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_0
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_0"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_0
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_0(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_0", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_1
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_1
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_1(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_2
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_2
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_2(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_3
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_3
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_3(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindSystemOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindSystemOverlay
void OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
void OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ApplicationQuit
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ApplicationQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ApplicationQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ApplicationQuit
void OVR::OpenVR::VRMessageOverlayResponse::_set_ApplicationQuit(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ApplicationQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ApplicationQuit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::VRMessageOverlayResponse::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EGamepadTextInputMode
#include "OVR/OpenVR/EGamepadTextInputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModePassword
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModePassword
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EGamepadTextInputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EGamepadTextInputLineMode
#include "OVR/OpenVR/EGamepadTextInputLineMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
::OVR::OpenVR::EGamepadTextInputLineMode OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputLineMode>("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
void OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine(::OVR::OpenVR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
::OVR::OpenVR::EGamepadTextInputLineMode OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputLineMode>("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
void OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines(::OVR::OpenVR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EGamepadTextInputLineMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EOverlayDirection
#include "OVR/OpenVR/EOverlayDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Up
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Up
void OVR::OpenVR::EOverlayDirection::_set_Up(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Down
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Down
void OVR::OpenVR::EOverlayDirection::_set_Down(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Left
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Left
void OVR::OpenVR::EOverlayDirection::_set_Left(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Right
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Right
void OVR::OpenVR::EOverlayDirection::_set_Right(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Count
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Count
void OVR::OpenVR::EOverlayDirection::_set_Count(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EOverlayDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType
#include "OVR/OpenVR/EVROverlayIntersectionMaskPrimitiveType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType>("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
void OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType>("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
void OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError None
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError None
void OVR::OpenVR::EVRRenderModelError::_set_None(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError Loading
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError Loading
void OVR::OpenVR::EVRRenderModelError::_set_Loading(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotSupported
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotSupported
void OVR::OpenVR::EVRRenderModelError::_set_NotSupported(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidArg
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidArg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidArg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidArg"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidArg
void OVR::OpenVR::EVRRenderModelError::_set_InvalidArg(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidArg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidArg", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidModel
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidModel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidModel
void OVR::OpenVR::EVRRenderModelError::_set_InvalidModel(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidModel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NoShapes
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NoShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NoShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NoShapes"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NoShapes
void OVR::OpenVR::EVRRenderModelError::_set_NoShapes(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NoShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NoShapes", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError MultipleShapes
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_MultipleShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_MultipleShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "MultipleShapes"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError MultipleShapes
void OVR::OpenVR::EVRRenderModelError::_set_MultipleShapes(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_MultipleShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "MultipleShapes", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError TooManyVertices
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_TooManyVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_TooManyVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "TooManyVertices"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError TooManyVertices
void OVR::OpenVR::EVRRenderModelError::_set_TooManyVertices(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_TooManyVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "TooManyVertices", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError MultipleTextures
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_MultipleTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_MultipleTextures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "MultipleTextures"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError MultipleTextures
void OVR::OpenVR::EVRRenderModelError::_set_MultipleTextures(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_MultipleTextures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "MultipleTextures", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError BufferTooSmall
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError BufferTooSmall
void OVR::OpenVR::EVRRenderModelError::_set_BufferTooSmall(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughNormals
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotEnoughNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotEnoughNormals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotEnoughNormals"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughNormals
void OVR::OpenVR::EVRRenderModelError::_set_NotEnoughNormals(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotEnoughNormals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotEnoughNormals", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughTexCoords
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotEnoughTexCoords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotEnoughTexCoords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotEnoughTexCoords"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughTexCoords
void OVR::OpenVR::EVRRenderModelError::_set_NotEnoughTexCoords(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotEnoughTexCoords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotEnoughTexCoords", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidTexture
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidTexture
void OVR::OpenVR::EVRRenderModelError::_set_InvalidTexture(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidTexture", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRRenderModelError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRComponentProperty
#include "OVR/OpenVR/EVRComponentProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsStatic
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsStatic"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsStatic
void OVR::OpenVR::EVRComponentProperty::_set_IsStatic(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsStatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsVisible
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsVisible"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsVisible
void OVR::OpenVR::EVRComponentProperty::_set_IsVisible(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsVisible", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsTouched
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsTouched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsTouched"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsTouched
void OVR::OpenVR::EVRComponentProperty::_set_IsTouched(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsTouched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsTouched", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsPressed
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsPressed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsPressed
void OVR::OpenVR::EVRComponentProperty::_set_IsPressed(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsPressed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsScrolled
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsScrolled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsScrolled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsScrolled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsScrolled
void OVR::OpenVR::EVRComponentProperty::_set_IsScrolled(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsScrolled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsScrolled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRComponentProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationType
#include "OVR/OpenVR/EVRNotificationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Transient
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Transient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Transient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Transient"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Transient
void OVR::OpenVR::EVRNotificationType::_set_Transient(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Transient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Transient", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Persistent
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Persistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Persistent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Persistent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Persistent
void OVR::OpenVR::EVRNotificationType::_set_Persistent(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Persistent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Persistent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Transient_SystemWithUserValue
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Transient_SystemWithUserValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Transient_SystemWithUserValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Transient_SystemWithUserValue"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Transient_SystemWithUserValue
void OVR::OpenVR::EVRNotificationType::_set_Transient_SystemWithUserValue(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Transient_SystemWithUserValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Transient_SystemWithUserValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRNotificationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationStyle
#include "OVR/OpenVR/EVRNotificationStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle None
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle None
void OVR::OpenVR::EVRNotificationStyle::_set_None(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Application
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Application() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Application");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Application"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Application
void OVR::OpenVR::EVRNotificationStyle::_set_Application(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Application");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Application", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Disabled
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Disabled
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Disabled(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Enabled
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Enabled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Enabled
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Enabled(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Active
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Active"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Active
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Active(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Active", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRNotificationStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError None
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError None
void OVR::OpenVR::EVRSettingsError::_set_None(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError IPCFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError IPCFailed
void OVR::OpenVR::EVRSettingsError::_set_IPCFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError WriteFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_WriteFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_WriteFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "WriteFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError WriteFailed
void OVR::OpenVR::EVRSettingsError::_set_WriteFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_WriteFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "WriteFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError ReadFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_ReadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_ReadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "ReadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError ReadFailed
void OVR::OpenVR::EVRSettingsError::_set_ReadFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_ReadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "ReadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError JsonParseFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_JsonParseFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_JsonParseFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "JsonParseFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError JsonParseFailed
void OVR::OpenVR::EVRSettingsError::_set_JsonParseFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_JsonParseFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "JsonParseFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError UnsetSettingHasNoDefault
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_UnsetSettingHasNoDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_UnsetSettingHasNoDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "UnsetSettingHasNoDefault"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError UnsetSettingHasNoDefault
void OVR::OpenVR::EVRSettingsError::_set_UnsetSettingHasNoDefault(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_UnsetSettingHasNoDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "UnsetSettingHasNoDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRSettingsError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError None
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError None
void OVR::OpenVR::EVRScreenshotError::_set_None(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
void OVR::OpenVR::EVRScreenshotError::_set_RequestFailed(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
void OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError NotFound
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_NotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_NotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError NotFound
void OVR::OpenVR::EVRScreenshotError::_set_NotFound(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_NotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
void OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
void OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRScreenshotError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSkeletalTransformSpace
#include "OVR/OpenVR/EVRSkeletalTransformSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Model
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Model");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Model"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Model
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Model(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Model");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Model", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Parent
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Parent
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Parent(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Additive
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Additive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Additive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Additive"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Additive
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Additive(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Additive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Additive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRSkeletalTransformSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInputFilterCancelType
#include "OVR/OpenVR/EVRInputFilterCancelType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Timers
::OVR::OpenVR::EVRInputFilterCancelType OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Timers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Timers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputFilterCancelType>("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Timers"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Timers
void OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Timers(::OVR::OpenVR::EVRInputFilterCancelType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Timers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Timers", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Momentum
::OVR::OpenVR::EVRInputFilterCancelType OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Momentum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Momentum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputFilterCancelType>("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Momentum"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Momentum
void OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Momentum(::OVR::OpenVR::EVRInputFilterCancelType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Momentum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Momentum", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRInputFilterCancelType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Success
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Success
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_Success(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_OperationFailed
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_OperationFailed
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_OperationFailed(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidHandle
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidHandle
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidHandle(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidArgument
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidArgument
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidArgument(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathExists
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathExists
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathExists(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathExists", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathDoesNotExist
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathDoesNotExist
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathDoesNotExist(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Permission
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_Permission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_Permission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_Permission"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Permission
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_Permission(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_Permission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_Permission", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EIOBufferError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EIOBufferMode
#include "OVR/OpenVR/EIOBufferMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Read
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Read
void OVR::OpenVR::EIOBufferMode::_set_Read(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Write
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Write"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Write
void OVR::OpenVR::EIOBufferMode::_set_Write(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Create
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Create
void OVR::OpenVR::EIOBufferMode::_set_Create(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Create", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EIOBufferMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VREvent_Keyboard_t
#include "OVR/OpenVR/VREvent_Keyboard_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput0
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput1
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput2
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput3
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput4
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput5
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput6
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput7
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 uUserValue
[[deprecated("Use field access instead!")]] uint64_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_uUserValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_uUserValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uUserValue"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VREvent_Keyboard_t.get_cNewInput
::StringW OVR::OpenVR::VREvent_Keyboard_t::get_cNewInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::get_cNewInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_cNewInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VREvent_t_Packed
#include "OVR/OpenVR/VREvent_t_Packed.hpp"
// Including type: OVR.OpenVR.VREvent_t
#include "OVR/OpenVR/VREvent_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 eventType
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::VREvent_t_Packed::dyn_eventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_eventType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventType"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 trackedDeviceIndex
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::VREvent_t_Packed::dyn_trackedDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_trackedDeviceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eventAgeSeconds
[[deprecated("Use field access instead!")]] float& OVR::OpenVR::VREvent_t_Packed::dyn_eventAgeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_eventAgeSeconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventAgeSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VREvent_Data_t data
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VREvent_Data_t& OVR::OpenVR::VREvent_t_Packed::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VREvent_Data_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VREvent_t_Packed..ctor
OVR::OpenVR::VREvent_t_Packed::VREvent_t_Packed(::OVR::OpenVR::VREvent_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.VREvent_t_Packed.Unpack
void OVR::OpenVR::VREvent_t_Packed::Unpack(ByRef<::OVR::OpenVR::VREvent_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VRControllerState_t_Packed
#include "OVR/OpenVR/VRControllerState_t_Packed.hpp"
// Including type: OVR.OpenVR.VRControllerState_t
#include "OVR/OpenVR/VRControllerState_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unPacketNum
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::VRControllerState_t_Packed::dyn_unPacketNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_unPacketNum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unPacketNum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonPressed
[[deprecated("Use field access instead!")]] uint64_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonPressed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonPressed"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonTouched
[[deprecated("Use field access instead!")]] uint64_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonTouched");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonTouched"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis0
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis0"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis1
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis1"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis2
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis2"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis3
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis3"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis4
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis4"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VRControllerState_t_Packed..ctor
OVR::OpenVR::VRControllerState_t_Packed::VRControllerState_t_Packed(::OVR::OpenVR::VRControllerState_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.VRControllerState_t_Packed.Unpack
void OVR::OpenVR::VRControllerState_t_Packed::Unpack(ByRef<::OVR::OpenVR::VRControllerState_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.RenderModel_TextureMap_t_Packed
#include "OVR/OpenVR/RenderModel_TextureMap_t_Packed.hpp"
// Including type: OVR.OpenVR.RenderModel_TextureMap_t
#include "OVR/OpenVR/RenderModel_TextureMap_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt16 unWidth
[[deprecated("Use field access instead!")]] uint16_t& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unWidth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unWidth"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 unHeight
[[deprecated("Use field access instead!")]] uint16_t& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unHeight"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rubTextureMapData
[[deprecated("Use field access instead!")]] ::System::IntPtr& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rubTextureMapData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.RenderModel_TextureMap_t_Packed..ctor
OVR::OpenVR::RenderModel_TextureMap_t_Packed::RenderModel_TextureMap_t_Packed(::OVR::OpenVR::RenderModel_TextureMap_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.RenderModel_TextureMap_t_Packed.Unpack
void OVR::OpenVR::RenderModel_TextureMap_t_Packed::Unpack(ByRef<::OVR::OpenVR::RenderModel_TextureMap_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.RenderModel_t_Packed
#include "OVR/OpenVR/RenderModel_t_Packed.hpp"
// Including type: OVR.OpenVR.RenderModel_t
#include "OVR/OpenVR/RenderModel_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rVertexData
[[deprecated("Use field access instead!")]] ::System::IntPtr& OVR::OpenVR::RenderModel_t_Packed::dyn_rVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_rVertexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rVertexData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unVertexCount
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::RenderModel_t_Packed::dyn_unVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_unVertexCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unVertexCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rIndexData
[[deprecated("Use field access instead!")]] ::System::IntPtr& OVR::OpenVR::RenderModel_t_Packed::dyn_rIndexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_rIndexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rIndexData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unTriangleCount
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::RenderModel_t_Packed::dyn_unTriangleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_unTriangleCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unTriangleCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 diffuseTextureId
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::RenderModel_t_Packed::dyn_diffuseTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_diffuseTextureId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diffuseTextureId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.RenderModel_t_Packed..ctor
OVR::OpenVR::RenderModel_t_Packed::RenderModel_t_Packed(::OVR::OpenVR::RenderModel_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.RenderModel_t_Packed.Unpack
void OVR::OpenVR::RenderModel_t_Packed::Unpack(ByRef<::OVR::OpenVR::RenderModel_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.InputOriginInfo_t
#include "OVR/OpenVR/InputOriginInfo_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 devicePath
[[deprecated("Use field access instead!")]] uint64_t& OVR::OpenVR::InputOriginInfo_t::dyn_devicePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_devicePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "devicePath"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 trackedDeviceIndex
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::InputOriginInfo_t::dyn_trackedDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_trackedDeviceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName0
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName1
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName2
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName3
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName4
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName5
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName6
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName7
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName8
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName8"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName9
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName9"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName10
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName10"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName11
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName11"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName12
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName12"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName13
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName13"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName14
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName14");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName14"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName15
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName15");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName15"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName16
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName16");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName16"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName17
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName17");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName17"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName18
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName18");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName18"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName19
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName19");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName19"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName20
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName20"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName21
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName21"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName22
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName22"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName23
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName23"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName24
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName24");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName24"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName25
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName25");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName25"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName26
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName26");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName26"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName27
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName27");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName27"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName28
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName28");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName28"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName29
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName29");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName29"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName30
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName30"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName31
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName31"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName32
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName32"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName33
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName33"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName34
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName34");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName34"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName35
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName35() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName35");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName35"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName36
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName36() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName36");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName36"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName37
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName37() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName37");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName37"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName38
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName38() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName38");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName38"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName39
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName39() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName39");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName39"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName40
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName40() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName40");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName40"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName41
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName41() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName41");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName41"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName42
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName42() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName42");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName42"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName43
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName43() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName43");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName43"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName44
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName44() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName44");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName44"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName45
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName45() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName45");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName45"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName46
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName46() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName46");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName46"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName47
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName47() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName47");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName47"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName48
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName48() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName48");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName48"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName49
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName49() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName49");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName49"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName50
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName50() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName50");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName50"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName51
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName51() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName51");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName51"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName52
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName52() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName52");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName52"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName53
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName53() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName53");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName53"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName54
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName54() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName54");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName54"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName55
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName55() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName55");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName55"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName56
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName56() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName56");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName56"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName57
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName57() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName57");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName57"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName58
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName58() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName58");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName58"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName59
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName59() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName59");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName59"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName60
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName60() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName60");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName60"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName61
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName61() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName61");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName61"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName62
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName62() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName62");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName62"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName63
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName63() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName63");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName63"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName64
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName64");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName64"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName65
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName65() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName65");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName65"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName66
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName66() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName66");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName66"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName67
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName67() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName67");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName67"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName68
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName68() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName68");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName68"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName69
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName69() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName69");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName69"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName70
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName70() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName70");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName70"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName71
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName71() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName71");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName71"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName72
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName72() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName72");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName72"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName73
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName73() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName73");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName73"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName74
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName74() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName74");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName74"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName75
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName75() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName75");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName75"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName76
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName76() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName76");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName76"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName77
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName77() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName77");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName77"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName78
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName78() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName78");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName78"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName79
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName79() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName79");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName79"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName80
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName80() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName80");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName80"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName81
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName81() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName81");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName81"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName82
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName82() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName82");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName82"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName83
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName83() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName83");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName83"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName84
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName84() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName84");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName84"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName85
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName85() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName85");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName85"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName86
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName86() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName86");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName86"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName87
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName87() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName87");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName87"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName88
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName88() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName88");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName88"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName89
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName89() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName89");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName89"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName90
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName90() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName90");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName90"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName91
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName91() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName91");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName91"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName92
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName92() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName92");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName92"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName93
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName93() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName93");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName93"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName94
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName94() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName94");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName94"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName95
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName95() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName95");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName95"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName96
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName96() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName96");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName96"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName97
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName97() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName97");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName97"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName98
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName98() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName98");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName98"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName99
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName99() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName99");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName99"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName100
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName100() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName100");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName100"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName101
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName101() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName101");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName101"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName102
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName102() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName102");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName102"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName103
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName103() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName103");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName103"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName104
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName104() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName104");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName104"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName105
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName105() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName105");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName105"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName106
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName106() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName106");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName106"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName107
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName107() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName107");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName107"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName108
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName108() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName108");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName108"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName109
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName109() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName109");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName109"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName110
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName110() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName110");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName110"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName111
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName111");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName111"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName112
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName112() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName112");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName112"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName113
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName113() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName113");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName113"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName114
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName114() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName114");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName114"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName115
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName115() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName115");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName115"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName116
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName116() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName116");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName116"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName117
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName117() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName117");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName117"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName118
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName118() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName118");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName118"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName119
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName119() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName119");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName119"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName120
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName120() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName120");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName120"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName121
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName121() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName121");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName121"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName122
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName122() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName122");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName122"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName123
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName123() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName123");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName123"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName124
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName124() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName124");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName124"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName125
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName125() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName125");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName125"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName126
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName126() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName126");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName126"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName127
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName127() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName127");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName127"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.InputOriginInfo_t.get_rchRenderModelComponentName
::StringW OVR::OpenVR::InputOriginInfo_t::get_rchRenderModelComponentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::get_rchRenderModelComponentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rchRenderModelComponentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVR
#include "OVR/OpenVR/OpenVR.hpp"
// Including type: OVR.OpenVR.OpenVR/COpenVRContext
#include "OVR/OpenVR/OpenVR_COpenVRContext.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVR.OpenVR.EVRInitError
#include "OVR/OpenVR/EVRInitError.hpp"
// Including type: OVR.OpenVR.EVRApplicationType
#include "OVR/OpenVR/EVRApplicationType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVR.OpenVR.CVRSystem
#include "OVR/OpenVR/CVRSystem.hpp"
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: OVR.OpenVR.CVRChaperoneSetup
#include "OVR/OpenVR/CVRChaperoneSetup.hpp"
// Including type: OVR.OpenVR.CVRCompositor
#include "OVR/OpenVR/CVRCompositor.hpp"
// Including type: OVR.OpenVR.CVROverlay
#include "OVR/OpenVR/CVROverlay.hpp"
// Including type: OVR.OpenVR.CVRRenderModels
#include "OVR/OpenVR/CVRRenderModels.hpp"
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: OVR.OpenVR.CVRSettings
#include "OVR/OpenVR/CVRSettings.hpp"
// Including type: OVR.OpenVR.CVRApplications
#include "OVR/OpenVR/CVRApplications.hpp"
// Including type: OVR.OpenVR.CVRScreenshots
#include "OVR/OpenVR/CVRScreenshots.hpp"
// Including type: OVR.OpenVR.CVRTrackedCamera
#include "OVR/OpenVR/CVRTrackedCamera.hpp"
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_nDriverNone
uint OVR::OpenVR::OpenVR::_get_k_nDriverNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_nDriverNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_nDriverNone"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_nDriverNone
void OVR::OpenVR::OpenVR::_set_k_nDriverNone(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_nDriverNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_nDriverNone", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
uint OVR::OpenVR::OpenVR::_get_k_unMaxDriverDebugResponseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxDriverDebugResponseSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxDriverDebugResponseSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
void OVR::OpenVR::OpenVR::_set_k_unMaxDriverDebugResponseSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxDriverDebugResponseSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxDriverDebugResponseSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndex_Hmd"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndex_Hmd", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxTrackedDeviceCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxTrackedDeviceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxTrackedDeviceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxTrackedDeviceCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxTrackedDeviceCount
void OVR::OpenVR::OpenVR::_set_k_unMaxTrackedDeviceCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxTrackedDeviceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxTrackedDeviceCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexOther
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexOther() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexOther");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexOther"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexOther
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexOther(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexOther");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexOther", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidPropertyContainer
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidPropertyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidPropertyContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidPropertyContainer"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidPropertyContainer
void OVR::OpenVR::OpenVR::_set_k_ulInvalidPropertyContainer(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidPropertyContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidPropertyContainer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInvalidPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInvalidPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInvalidPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInvalidPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInvalidPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInvalidPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInvalidPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInvalidPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidDriverHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidDriverHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidDriverHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidDriverHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidDriverHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidDriverHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidDriverHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidDriverHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unFloatPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unFloatPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unFloatPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unFloatPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unFloatPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unFloatPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unFloatPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unFloatPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInt32PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInt32PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInt32PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInt32PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInt32PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInt32PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInt32PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInt32PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unUint64PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unUint64PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unUint64PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unUint64PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unUint64PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unUint64PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unUint64PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unUint64PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unBoolPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unBoolPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unBoolPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unBoolPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unBoolPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unBoolPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unBoolPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unBoolPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unStringPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unStringPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unStringPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unStringPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unStringPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unStringPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unStringPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unStringPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdMatrix34PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdMatrix34PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdMatrix34PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdMatrix34PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdMatrix34PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdMatrix34PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdMatrix44PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdMatrix44PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdMatrix44PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdMatrix44PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdMatrix44PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdMatrix44PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector3PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdVector3PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdVector3PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdVector3PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector3PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdVector3PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdVector3PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdVector3PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector4PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdVector4PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdVector4PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdVector4PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector4PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdVector4PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdVector4PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdVector4PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHiddenAreaPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHiddenAreaPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHiddenAreaPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHiddenAreaPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHiddenAreaPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHiddenAreaPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHiddenAreaPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHiddenAreaPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unPathHandleInfoTag
uint OVR::OpenVR::OpenVR::_get_k_unPathHandleInfoTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unPathHandleInfoTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unPathHandleInfoTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unPathHandleInfoTag
void OVR::OpenVR::OpenVR::_set_k_unPathHandleInfoTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unPathHandleInfoTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unPathHandleInfoTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unActionPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unActionPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unActionPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unActionPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unActionPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unActionPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unActionPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unActionPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInputValuePropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInputValuePropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInputValuePropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInputValuePropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInputValuePropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInputValuePropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInputValuePropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInputValuePropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unWildcardPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unWildcardPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unWildcardPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unWildcardPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unWildcardPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unWildcardPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unWildcardPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unWildcardPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHapticVibrationPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHapticVibrationPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHapticVibrationPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHapticVibrationPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHapticVibrationPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHapticVibrationPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHapticVibrationPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHapticVibrationPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unSkeletonPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unSkeletonPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unSkeletonPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unSkeletonPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unSkeletonPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unSkeletonPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unSkeletonPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unSkeletonPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unSpatialAnchorPosePropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unSpatialAnchorPosePropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unSpatialAnchorPosePropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unSpatialAnchorPosePropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unSpatialAnchorPosePropertyTag
void OVR::OpenVR::OpenVR::_set_k_unSpatialAnchorPosePropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unSpatialAnchorPosePropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unSpatialAnchorPosePropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
uint OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
void OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_Start(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_End
uint OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_End"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_End
void OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_End(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_End", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxPropertyStringSize
uint OVR::OpenVR::OpenVR::_get_k_unMaxPropertyStringSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxPropertyStringSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxPropertyStringSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxPropertyStringSize
void OVR::OpenVR::OpenVR::_set_k_unMaxPropertyStringSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxPropertyStringSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxPropertyStringSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidActionHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidActionHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidActionHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidActionHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidActionHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidActionHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidActionHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidActionHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidActionSetHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidActionSetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidActionSetHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidActionSetHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidActionSetHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidActionSetHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidActionSetHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidActionSetHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidInputValueHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidInputValueHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidInputValueHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidInputValueHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidInputValueHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidInputValueHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidInputValueHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidInputValueHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unControllerStateAxisCount
uint OVR::OpenVR::OpenVR::_get_k_unControllerStateAxisCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unControllerStateAxisCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unControllerStateAxisCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unControllerStateAxisCount
void OVR::OpenVR::OpenVR::_set_k_unControllerStateAxisCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unControllerStateAxisCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unControllerStateAxisCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulOverlayHandleInvalid
uint64_t OVR::OpenVR::OpenVR::_get_k_ulOverlayHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulOverlayHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulOverlayHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulOverlayHandleInvalid
void OVR::OpenVR::OpenVR::_set_k_ulOverlayHandleInvalid(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulOverlayHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulOverlayHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unScreenshotHandleInvalid
uint OVR::OpenVR::OpenVR::_get_k_unScreenshotHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unScreenshotHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unScreenshotHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unScreenshotHandleInvalid
void OVR::OpenVR::OpenVR::_set_k_unScreenshotHandleInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unScreenshotHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unScreenshotHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSystem_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSystem_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSystem_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSystem_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSystem_Version
void OVR::OpenVR::OpenVR::_set_IVRSystem_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSystem_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSystem_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRExtendedDisplay_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRExtendedDisplay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRExtendedDisplay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRExtendedDisplay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRExtendedDisplay_Version
void OVR::OpenVR::OpenVR::_set_IVRExtendedDisplay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRExtendedDisplay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRExtendedDisplay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRTrackedCamera_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRTrackedCamera_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRTrackedCamera_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRTrackedCamera_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRTrackedCamera_Version
void OVR::OpenVR::OpenVR::_set_IVRTrackedCamera_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRTrackedCamera_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRTrackedCamera_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxApplicationKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxApplicationKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxApplicationKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxApplicationKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxApplicationKeyLength
void OVR::OpenVR::OpenVR::_set_k_unMaxApplicationKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxApplicationKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxApplicationKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_HomeApp
::StringW OVR::OpenVR::OpenVR::_get_k_pch_MimeType_HomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_MimeType_HomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_MimeType_HomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_HomeApp
void OVR::OpenVR::OpenVR::_set_k_pch_MimeType_HomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_MimeType_HomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_MimeType_HomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_GameTheater
::StringW OVR::OpenVR::OpenVR::_get_k_pch_MimeType_GameTheater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_MimeType_GameTheater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_MimeType_GameTheater"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_GameTheater
void OVR::OpenVR::OpenVR::_set_k_pch_MimeType_GameTheater(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_MimeType_GameTheater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_MimeType_GameTheater", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRApplications_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRApplications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRApplications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRApplications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRApplications_Version
void OVR::OpenVR::OpenVR::_set_IVRApplications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRApplications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRApplications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperone_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRChaperone_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRChaperone_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRChaperone_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperone_Version
void OVR::OpenVR::OpenVR::_set_IVRChaperone_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRChaperone_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRChaperone_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperoneSetup_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRChaperoneSetup_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRChaperoneSetup_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRChaperoneSetup_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperoneSetup_Version
void OVR::OpenVR::OpenVR::_set_IVRChaperoneSetup_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRChaperoneSetup_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRChaperoneSetup_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRCompositor_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRCompositor_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRCompositor_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRCompositor_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRCompositor_Version
void OVR::OpenVR::OpenVR::_set_IVRCompositor_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRCompositor_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRCompositor_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxKeyLength
void OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxNameLength
uint OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxNameLength
void OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxOverlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxOverlayCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxOverlayCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayCount
void OVR::OpenVR::OpenVR::_set_k_unMaxOverlayCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxOverlayCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxOverlayCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
void OVR::OpenVR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVROverlay_Version
::StringW OVR::OpenVR::OpenVR::_get_IVROverlay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVROverlay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVROverlay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVROverlay_Version
void OVR::OpenVR::OpenVR::_set_IVROverlay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVROverlay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVROverlay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_GDC2015
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_GDC2015() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_GDC2015");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_GDC2015"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_GDC2015
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_GDC2015(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_GDC2015");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_GDC2015", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Base
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Base"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Base
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Base(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Base", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Tip
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Tip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Tip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Tip
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Tip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Tip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Tip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_HandGrip
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_HandGrip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_HandGrip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_HandGrip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_HandGrip
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_HandGrip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_HandGrip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_HandGrip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Status
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Status"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Status
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Status(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Status", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRRenderModels_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRRenderModels_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRRenderModels_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRRenderModels_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRRenderModels_Version
void OVR::OpenVR::OpenVR::_set_IVRRenderModels_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRRenderModels_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRRenderModels_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unNotificationTextMaxSize
uint OVR::OpenVR::OpenVR::_get_k_unNotificationTextMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unNotificationTextMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unNotificationTextMaxSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unNotificationTextMaxSize
void OVR::OpenVR::OpenVR::_set_k_unNotificationTextMaxSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unNotificationTextMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unNotificationTextMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRNotifications_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRNotifications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRNotifications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRNotifications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRNotifications_Version
void OVR::OpenVR::OpenVR::_set_IVRNotifications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRNotifications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRNotifications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxSettingsKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxSettingsKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxSettingsKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxSettingsKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxSettingsKeyLength
void OVR::OpenVR::OpenVR::_set_k_unMaxSettingsKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxSettingsKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxSettingsKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSettings_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSettings_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSettings_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSettings_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSettings_Version
void OVR::OpenVR::OpenVR::_set_IVRSettings_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSettings_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSettings_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Section
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RequireHmd_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RequireHmd_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RequireHmd_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RequireHmd_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_LogLevel_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_LogLevel_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IPD_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IPD_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IPD_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IPD_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IPD_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IPD_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IPD_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IPD_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Background_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Background_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Background_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Background_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Background_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Background_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Background_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Background_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_GridColor_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_GridColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_GridColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_GridColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_GridColor_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_GridColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_GridColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_GridColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowStage_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowStage_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableHomeApp
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableHomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableHomeApp
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableHomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IpdOffset_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IpdOffset_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SupersampleManualOverride_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleManualOverride_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleManualOverride_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleManualOverride_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SupersampleManualOverride_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleManualOverride_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleManualOverride_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleManualOverride_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugInput
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInput"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugInput
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInput(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInput", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_LegacyInputRebinding
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LegacyInputRebinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LegacyInputRebinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LegacyInputRebinding"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_LegacyInputRebinding
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LegacyInputRebinding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LegacyInputRebinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LegacyInputRebinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugInputBinding
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInputBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInputBinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInputBinding"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugInputBinding
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInputBinding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInputBinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInputBinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_InputBindingUIBlock
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_InputBindingUIBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_InputBindingUIBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_InputBindingUIBlock"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_InputBindingUIBlock
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_InputBindingUIBlock(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_InputBindingUIBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_InputBindingUIBlock", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RenderCameraMode
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RenderCameraMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RenderCameraMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RenderCameraMode"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RenderCameraMode
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RenderCameraMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RenderCameraMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RenderCameraMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_PowerManagedBaseStations_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PowerManagedBaseStations_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PowerManagedBaseStations_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PowerManagedBaseStations_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_PowerManagedBaseStations_String
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PowerManagedBaseStations_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PowerManagedBaseStations_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PowerManagedBaseStations_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Null_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SerialNumber_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_SerialNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_SerialNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_SerialNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SerialNumber_String
void OVR::OpenVR::OpenVR::_set_k_pch_Null_SerialNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_SerialNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_SerialNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_ModelNumber_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_ModelNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_ModelNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_ModelNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_ModelNumber_String
void OVR::OpenVR::OpenVR::_set_k_pch_Null_ModelNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_ModelNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_ModelNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowX_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowX_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowY_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowY_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowWidth_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowWidth_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowHeight_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowHeight_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderWidth_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderWidth_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderHeight_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderHeight_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_DisplayFrequency_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_DisplayFrequency_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_DisplayFrequency_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_DisplayFrequency_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Section
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Screenshots_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Screenshots_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Notifications_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Notifications_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Notifications_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Notifications_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Notifications_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Notifications_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_TutorialCompletions
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_TutorialCompletions"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_TutorialCompletions
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_TutorialCompletions", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleY
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleY
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetLeftX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetLeftX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetLeftX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetLeftX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetRightX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetRightX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetRightX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetRightX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetRightX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetRightX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetRightX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetRightX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetY
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetY
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Smoothing
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Smoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Smoothing"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Smoothing
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Smoothing(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Smoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Smoothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_HeuristicActive_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_HeuristicActive_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_TestData_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_TestData_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_TestData_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_TestData_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_TestData_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_TestData_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_TestData_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_TestData_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Section
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Style_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Style_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Style_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Style_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCamera_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCamera_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCamera_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCamera_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsStrength_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsStrength_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_RoomViewMode_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_RoomViewMode_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_RoomViewMode_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_RoomViewMode_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_RoomViewMode_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_RoomViewMode_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_RoomViewMode_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_RoomViewMode_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_Section
void OVR::OpenVR::OpenVR::_set_k_pch_audio_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnRecordDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnRecordDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffPlaybackDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffPlaybackDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffRecordDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OffRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OffRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OffRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffRecordDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OffRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OffRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OffRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_VIVEHDMIGain
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_VIVEHDMIGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_VIVEHDMIGain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_VIVEHDMIGain"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_VIVEHDMIGain
void OVR::OpenVR::OpenVR::_set_k_pch_audio_VIVEHDMIGain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_VIVEHDMIGain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_VIVEHDMIGain", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Power_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
void OVR::OpenVR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUI
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUI"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUI
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUI(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUI", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUIDevTools
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDevTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDevTools");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDevTools"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUIDevTools
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDevTools(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDevTools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDevTools", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUIDashboardReplacement
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDashboardReplacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDashboardReplacement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDashboardReplacement"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUIDashboardReplacement
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDashboardReplacement(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDashboardReplacement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDashboardReplacement", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_modelskin_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_modelskin_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_modelskin_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_modelskin_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_modelskin_Section
void OVR::OpenVR::OpenVR::_set_k_pch_modelskin_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_modelskin_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_modelskin_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Driver_Enable_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Driver_Enable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Driver_Enable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Driver_Enable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Driver_Enable_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Driver_Enable_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Driver_Enable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Driver_Enable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_Section
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_WebEnable_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebEnable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebEnable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebEnable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_WebEnable_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebEnable_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebEnable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebEnable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_WebPort_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebPort_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebPort_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebPort_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_WebPort_String
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebPort_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebPort_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebPort_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_TrackingOverride_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_TrackingOverride_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_TrackingOverride_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_TrackingOverride_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_TrackingOverride_Section
void OVR::OpenVR::OpenVR::_set_k_pch_TrackingOverride_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_TrackingOverride_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_TrackingOverride_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_BindingAutosaveURLSuffix_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_BindingAutosaveURLSuffix_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_BindingAutosaveURLSuffix_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_BindingAutosaveURLSuffix_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_BindingAutosaveURLSuffix_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_BindingAutosaveURLSuffix_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_BindingAutosaveURLSuffix_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_BindingAutosaveURLSuffix_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_BindingCurrentURLSuffix_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_BindingCurrentURLSuffix_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_BindingCurrentURLSuffix_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_BindingCurrentURLSuffix_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_BindingCurrentURLSuffix_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_BindingCurrentURLSuffix_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_BindingCurrentURLSuffix_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_BindingCurrentURLSuffix_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_NeedToUpdateAutosaveSuffix_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_NeedToUpdateAutosaveSuffix_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_NeedToUpdateAutosaveSuffix_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_NeedToUpdateAutosaveSuffix_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_NeedToUpdateAutosaveSuffix_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_App_NeedToUpdateAutosaveSuffix_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_NeedToUpdateAutosaveSuffix_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_NeedToUpdateAutosaveSuffix_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_ActionManifestURL_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_ActionManifestURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_ActionManifestURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_ActionManifestURL_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_ActionManifestURL_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_ActionManifestURL_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_ActionManifestURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_ActionManifestURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Trackers_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Trackers_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Trackers_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Trackers_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Trackers_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Trackers_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Trackers_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Trackers_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRScreenshots_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRScreenshots_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRScreenshots_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRScreenshots_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRScreenshots_Version
void OVR::OpenVR::OpenVR::_set_IVRScreenshots_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRScreenshots_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRScreenshots_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRResources_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRResources_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRResources_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRResources_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRResources_Version
void OVR::OpenVR::OpenVR::_set_IVRResources_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRResources_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRResources_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRDriverManager_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRDriverManager_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRDriverManager_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRDriverManager_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRDriverManager_Version
void OVR::OpenVR::OpenVR::_set_IVRDriverManager_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRDriverManager_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRDriverManager_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionNameLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionNameLength
void OVR::OpenVR::OpenVR::_set_k_unMaxActionNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionSetNameLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionSetNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionSetNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionSetNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionSetNameLength
void OVR::OpenVR::OpenVR::_set_k_unMaxActionSetNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionSetNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionSetNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionOriginCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionOriginCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionOriginCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionOriginCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionOriginCount
void OVR::OpenVR::OpenVR::_set_k_unMaxActionOriginCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionOriginCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionOriginCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRInput_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRInput_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRInput_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRInput_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRInput_Version
void OVR::OpenVR::OpenVR::_set_IVRInput_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRInput_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRInput_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidIOBufferHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidIOBufferHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidIOBufferHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidIOBufferHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidIOBufferHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidIOBufferHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidIOBufferHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidIOBufferHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRIOBuffer_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRIOBuffer_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRIOBuffer_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRIOBuffer_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRIOBuffer_Version
void OVR::OpenVR::OpenVR::_set_IVRIOBuffer_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRIOBuffer_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRIOBuffer_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_ulInvalidSpatialAnchorHandle
uint OVR::OpenVR::OpenVR::_get_k_ulInvalidSpatialAnchorHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidSpatialAnchorHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_ulInvalidSpatialAnchorHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_ulInvalidSpatialAnchorHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidSpatialAnchorHandle(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidSpatialAnchorHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidSpatialAnchorHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSpatialAnchors_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSpatialAnchors_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSpatialAnchors_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSpatialAnchors_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSpatialAnchors_Version
void OVR::OpenVR::OpenVR::_set_IVRSpatialAnchors_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSpatialAnchors_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSpatialAnchors_Version", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 <VRToken>k__BackingField
uint OVR::OpenVR::OpenVR::_get_$VRToken$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_$VRToken$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "<VRToken>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 <VRToken>k__BackingField
void OVR::OpenVR::OpenVR::_set_$VRToken$k__BackingField(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_$VRToken$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "<VRToken>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FnTable_Prefix
::StringW OVR::OpenVR::OpenVR::_get_FnTable_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_FnTable_Prefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "FnTable_Prefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String FnTable_Prefix
void OVR::OpenVR::OpenVR::_set_FnTable_Prefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_FnTable_Prefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "FnTable_Prefix", value));
}
// Autogenerated static field getter
// Get static field: static private OVR.OpenVR.OpenVR/COpenVRContext _OpenVRInternal_ModuleContext
::OVR::OpenVR::OpenVR::COpenVRContext* OVR::OpenVR::OpenVR::_get__OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get__OpenVRInternal_ModuleContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::OpenVR::COpenVRContext*>("OVR.OpenVR", "OpenVR", "_OpenVRInternal_ModuleContext"));
}
// Autogenerated static field setter
// Set static field: static private OVR.OpenVR.OpenVR/COpenVRContext _OpenVRInternal_ModuleContext
void OVR::OpenVR::OpenVR::_set__OpenVRInternal_ModuleContext(::OVR::OpenVR::OpenVR::COpenVRContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set__OpenVRInternal_ModuleContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "_OpenVRInternal_ModuleContext", value));
}
// Autogenerated method: OVR.OpenVR.OpenVR.InitInternal
uint OVR::OpenVR::OpenVR::InitInternal(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: OVR.OpenVR.OpenVR.InitInternal2
uint OVR::OpenVR::OpenVR::InitInternal2(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType, ::StringW pchStartupInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::InitInternal2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "InitInternal2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType), ::il2cpp_utils::ExtractType(pchStartupInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType, pchStartupInfo);
}
// Autogenerated method: OVR.OpenVR.OpenVR.ShutdownInternal
void OVR::OpenVR::OpenVR::ShutdownInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::ShutdownInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "ShutdownInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsHmdPresent
bool OVR::OpenVR::OpenVR::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsRuntimeInstalled
bool OVR::OpenVR::OpenVR::IsRuntimeInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsRuntimeInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsRuntimeInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetStringForHmdError
::StringW OVR::OpenVR::OpenVR::GetStringForHmdError(::OVR::OpenVR::EVRInitError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetStringForHmdError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetStringForHmdError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetGenericInterface
::System::IntPtr OVR::OpenVR::OpenVR::GetGenericInterface(::StringW pchInterfaceVersion, ByRef<::OVR::OpenVR::EVRInitError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetGenericInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetGenericInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion, byref(peError));
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsInterfaceVersionValid
bool OVR::OpenVR::OpenVR::IsInterfaceVersionValid(::StringW pchInterfaceVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsInterfaceVersionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsInterfaceVersionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetInitToken
uint OVR::OpenVR::OpenVR::GetInitToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetInitToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetInitToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_VRToken
uint OVR::OpenVR::OpenVR::get_VRToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.set_VRToken
void OVR::OpenVR::OpenVR::set_VRToken(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::set_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "set_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_OpenVRInternal_ModuleContext
::OVR::OpenVR::OpenVR::COpenVRContext* OVR::OpenVR::OpenVR::get_OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_OpenVRInternal_ModuleContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_OpenVRInternal_ModuleContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::OpenVR::COpenVRContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_System
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_System");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Chaperone
::OVR::OpenVR::CVRChaperone* OVR::OpenVR::OpenVR::get_Chaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Chaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Chaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperone*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_ChaperoneSetup
::OVR::OpenVR::CVRChaperoneSetup* OVR::OpenVR::OpenVR::get_ChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_ChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_ChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperoneSetup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Compositor
::OVR::OpenVR::CVRCompositor* OVR::OpenVR::OpenVR::get_Compositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Compositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Compositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRCompositor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Overlay
::OVR::OpenVR::CVROverlay* OVR::OpenVR::OpenVR::get_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Overlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Overlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVROverlay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_RenderModels
::OVR::OpenVR::CVRRenderModels* OVR::OpenVR::OpenVR::get_RenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_RenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_RenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRRenderModels*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_ExtendedDisplay
::OVR::OpenVR::CVRExtendedDisplay* OVR::OpenVR::OpenVR::get_ExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_ExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_ExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRExtendedDisplay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Settings
::OVR::OpenVR::CVRSettings* OVR::OpenVR::OpenVR::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Applications
::OVR::OpenVR::CVRApplications* OVR::OpenVR::OpenVR::get_Applications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Applications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Applications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRApplications*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Screenshots
::OVR::OpenVR::CVRScreenshots* OVR::OpenVR::OpenVR::get_Screenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Screenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Screenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRScreenshots*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_TrackedCamera
::OVR::OpenVR::CVRTrackedCamera* OVR::OpenVR::OpenVR::get_TrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_TrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_TrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRTrackedCamera*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Input
::OVR::OpenVR::CVRInput* OVR::OpenVR::OpenVR::get_Input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRInput*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_SpatialAnchors
::OVR::OpenVR::CVRSpatialAnchors* OVR::OpenVR::OpenVR::get_SpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_SpatialAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_SpatialAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSpatialAnchors*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.Init
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::Init(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType, ::StringW pchStartupInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType), ::il2cpp_utils::ExtractType(pchStartupInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType, pchStartupInfo);
}
// Autogenerated method: OVR.OpenVR.OpenVR.Shutdown
void OVR::OpenVR::OpenVR::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVR/COpenVRContext
#include "OVR/OpenVR/OpenVR_COpenVRContext.hpp"
// Including type: OVR.OpenVR.CVRSystem
#include "OVR/OpenVR/CVRSystem.hpp"
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: OVR.OpenVR.CVRChaperoneSetup
#include "OVR/OpenVR/CVRChaperoneSetup.hpp"
// Including type: OVR.OpenVR.CVRCompositor
#include "OVR/OpenVR/CVRCompositor.hpp"
// Including type: OVR.OpenVR.CVROverlay
#include "OVR/OpenVR/CVROverlay.hpp"
// Including type: OVR.OpenVR.CVRRenderModels
#include "OVR/OpenVR/CVRRenderModels.hpp"
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: OVR.OpenVR.CVRSettings
#include "OVR/OpenVR/CVRSettings.hpp"
// Including type: OVR.OpenVR.CVRApplications
#include "OVR/OpenVR/CVRApplications.hpp"
// Including type: OVR.OpenVR.CVRScreenshots
#include "OVR/OpenVR/CVRScreenshots.hpp"
// Including type: OVR.OpenVR.CVRTrackedCamera
#include "OVR/OpenVR/CVRTrackedCamera.hpp"
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSystem m_pVRSystem
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRSystem*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSystem"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRChaperone m_pVRChaperone
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRChaperone*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperone"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRChaperone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRChaperoneSetup m_pVRChaperoneSetup
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRChaperoneSetup*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperoneSetup"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRChaperoneSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRCompositor m_pVRCompositor
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRCompositor*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRCompositor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRCompositor"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRCompositor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVROverlay m_pVROverlay
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVROverlay*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVROverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVROverlay"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRRenderModels m_pVRRenderModels
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRRenderModels*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRRenderModels"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRRenderModels**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRExtendedDisplay m_pVRExtendedDisplay
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRExtendedDisplay*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRExtendedDisplay"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRExtendedDisplay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSettings m_pVRSettings
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRSettings*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSettings"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRApplications m_pVRApplications
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRApplications*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRApplications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRApplications"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRApplications**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRScreenshots m_pVRScreenshots
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRScreenshots*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRScreenshots"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRScreenshots**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRTrackedCamera m_pVRTrackedCamera
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRTrackedCamera*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRTrackedCamera"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRTrackedCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRInput m_pVRInput
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRInput*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRInput"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSpatialAnchors m_pVRSpatialAnchors
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRSpatialAnchors*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSpatialAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSpatialAnchors"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSpatialAnchors**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.Clear
void OVR::OpenVR::OpenVR::COpenVRContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.CheckClear
void OVR::OpenVR::OpenVR::COpenVRContext::CheckClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::CheckClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRSystem
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::COpenVRContext::VRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRChaperone
::OVR::OpenVR::CVRChaperone* OVR::OpenVR::OpenVR::COpenVRContext::VRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRChaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperone*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRChaperoneSetup
::OVR::OpenVR::CVRChaperoneSetup* OVR::OpenVR::OpenVR::COpenVRContext::VRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperoneSetup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRCompositor
::OVR::OpenVR::CVRCompositor* OVR::OpenVR::OpenVR::COpenVRContext::VRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRCompositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRCompositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRCompositor*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VROverlay
::OVR::OpenVR::CVROverlay* OVR::OpenVR::OpenVR::COpenVRContext::VROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VROverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VROverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVROverlay*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRRenderModels
::OVR::OpenVR::CVRRenderModels* OVR::OpenVR::OpenVR::COpenVRContext::VRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRRenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRRenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRRenderModels*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRExtendedDisplay
::OVR::OpenVR::CVRExtendedDisplay* OVR::OpenVR::OpenVR::COpenVRContext::VRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRExtendedDisplay*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRSettings
::OVR::OpenVR::CVRSettings* OVR::OpenVR::OpenVR::COpenVRContext::VRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSettings*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRApplications
::OVR::OpenVR::CVRApplications* OVR::OpenVR::OpenVR::COpenVRContext::VRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRApplications*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRScreenshots
::OVR::OpenVR::CVRScreenshots* OVR::OpenVR::OpenVR::COpenVRContext::VRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRScreenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRScreenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRScreenshots*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRTrackedCamera
::OVR::OpenVR::CVRTrackedCamera* OVR::OpenVR::OpenVR::COpenVRContext::VRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRTrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRTrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRTrackedCamera*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRInput
::OVR::OpenVR::CVRInput* OVR::OpenVR::OpenVR::COpenVRContext::VRInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRInput*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRSpatialAnchors
::OVR::OpenVR::CVRSpatialAnchors* OVR::OpenVR::OpenVR::COpenVRContext::VRSpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSpatialAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSpatialAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSpatialAnchors*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.XR.Samples.SampleMetadata
#include "Meta/XR/Samples/SampleMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _timestampOpen
[[deprecated("Use field access instead!")]] float& Meta::XR::Samples::SampleMetadata::dyn__timestampOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::SampleMetadata::dyn__timestampOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timestampOpen"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.XR.Samples.SampleMetadata.Awake
void Meta::XR::Samples::SampleMetadata::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::SampleMetadata::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.XR.Samples.SampleMetadata.Start
void Meta::XR::Samples::SampleMetadata::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::SampleMetadata::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.XR.Samples.SampleMetadata.OnDestroy
void Meta::XR::Samples::SampleMetadata::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::SampleMetadata::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.XR.Samples.SampleMetadata.SendEvent
void Meta::XR::Samples::SampleMetadata::SendEvent(int eventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::SampleMetadata::SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.XR.Samples.Telemetry.SampleTelemetryEvents/EventTypes
#include "Meta/XR/Samples/Telemetry/SampleTelemetryEvents_EventTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Open
int Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_get_Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_get_Open");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/EventTypes", "Open"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Open
void Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_set_Open(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_set_Open");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/EventTypes", "Open", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Close
int Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_get_Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_get_Close");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/EventTypes", "Close"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Close
void Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_set_Close(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_set_Close");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/EventTypes", "Close", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Run
int Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_get_Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_get_Run");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/EventTypes", "Run"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Run
void Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_set_Run(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::EventTypes::_set_Run");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/EventTypes", "Run", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.XR.Samples.Telemetry.SampleTelemetryEvents/AnnotationTypes
#include "Meta/XR/Samples/Telemetry/SampleTelemetryEvents_AnnotationTypes.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String Sample
::StringW Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_Sample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_Sample");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "Sample"));
}
// Autogenerated static field setter
// Set static field: static public System.String Sample
void Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_Sample(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_Sample");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "Sample", value));
}
// Autogenerated static field getter
// Get static field: static public System.String TimeSpent
::StringW Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_TimeSpent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_TimeSpent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "TimeSpent"));
}
// Autogenerated static field setter
// Set static field: static public System.String TimeSpent
void Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_TimeSpent(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_TimeSpent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "TimeSpent", value));
}
// Autogenerated static field getter
// Get static field: static public System.String TimeSinceEditorStart
::StringW Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_TimeSinceEditorStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_TimeSinceEditorStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "TimeSinceEditorStart"));
}
// Autogenerated static field setter
// Set static field: static public System.String TimeSinceEditorStart
void Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_TimeSinceEditorStart(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_TimeSinceEditorStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "TimeSinceEditorStart", value));
}
// Autogenerated static field getter
// Get static field: static public System.String BuildTarget
::StringW Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_BuildTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_BuildTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "BuildTarget"));
}
// Autogenerated static field setter
// Set static field: static public System.String BuildTarget
void Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_BuildTarget(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_BuildTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "BuildTarget", value));
}
// Autogenerated static field getter
// Get static field: static public System.String RuntimePlatform
::StringW Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_RuntimePlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_RuntimePlatform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "RuntimePlatform"));
}
// Autogenerated static field setter
// Set static field: static public System.String RuntimePlatform
void Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_RuntimePlatform(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_RuntimePlatform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "RuntimePlatform", value));
}
// Autogenerated static field getter
// Get static field: static public System.String InEditor
::StringW Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_InEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_get_InEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "InEditor"));
}
// Autogenerated static field setter
// Set static field: static public System.String InEditor
void Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_InEditor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::XR::Samples::Telemetry::SampleTelemetryEvents::AnnotationTypes::_set_InEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.XR.Samples.Telemetry", "SampleTelemetryEvents/AnnotationTypes", "InEditor", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.Record
#include "Assets/OVR/Scripts/Record.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortOrder
[[deprecated("Use field access instead!")]] int& Assets::OVR::Scripts::Record::dyn_sortOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_sortOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String category
[[deprecated("Use field access instead!")]] ::StringW& Assets::OVR::Scripts::Record::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String message
[[deprecated("Use field access instead!")]] ::StringW& Assets::OVR::Scripts::Record::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.RangedRecord
#include "Assets/OVR/Scripts/RangedRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single value
[[deprecated("Use field access instead!")]] float& Assets::OVR::Scripts::RangedRecord::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
[[deprecated("Use field access instead!")]] float& Assets::OVR::Scripts::RangedRecord::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
[[deprecated("Use field access instead!")]] float& Assets::OVR::Scripts::RangedRecord::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Assets.OVR.Scripts.FixMethodDelegate
#include "Assets/OVR/Scripts/FixMethodDelegate.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.Invoke
void Assets::OVR::Scripts::FixMethodDelegate::Invoke(::UnityEngine::Object* obj, bool isLastInSet, int selectedIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Assets::OVR::Scripts::FixMethodDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, isLastInSet, selectedIndex);
}
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.BeginInvoke
::System::IAsyncResult* Assets::OVR::Scripts::FixMethodDelegate::BeginInvoke(::UnityEngine::Object* obj, bool isLastInSet, int selectedIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Assets::OVR::Scripts::FixMethodDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, obj, isLastInSet, selectedIndex, callback, object);
}
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.EndInvoke
void Assets::OVR::Scripts::FixMethodDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Assets::OVR::Scripts::FixMethodDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.FixRecord
#include "Assets/OVR/Scripts/FixRecord.hpp"
// Including type: Assets.OVR.Scripts.FixMethodDelegate
#include "Assets/OVR/Scripts/FixMethodDelegate.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Assets.OVR.Scripts.FixMethodDelegate fixMethod
[[deprecated("Use field access instead!")]] ::Assets::OVR::Scripts::FixMethodDelegate*& Assets::OVR::Scripts::FixRecord::dyn_fixMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_fixMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixMethod"))->offset;
  return *reinterpret_cast<::Assets::OVR::Scripts::FixMethodDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object targetObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Assets::OVR::Scripts::FixRecord::dyn_targetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_targetObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] buttonNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Assets::OVR::Scripts::FixRecord::dyn_buttonNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_buttonNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean editModeRequired
[[deprecated("Use field access instead!")]] bool& Assets::OVR::Scripts::FixRecord::dyn_editModeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_editModeRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editModeRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean complete
[[deprecated("Use field access instead!")]] bool& Assets::OVR::Scripts::FixRecord::dyn_complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_complete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule/InputMode
#include "UnityEngine/EventSystems/OVRInputModule_InputMode.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRCursor
#include "GlobalNamespace/OVRCursor.hpp"
// Including type: OVRRaycaster
#include "GlobalNamespace/OVRRaycaster.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.EventSystems.OVRPointerEventData
#include "UnityEngine/EventSystems/OVRPointerEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/MouseState
#include "UnityEngine/EventSystems/PointerInputModule_MouseState.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/MouseButtonEventData
#include "UnityEngine/EventSystems/PointerInputModule_MouseButtonEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rayTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::EventSystems::OVRInputModule::dyn_rayTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_rayTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCursor m_Cursor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCursor*& UnityEngine::EventSystems::OVRInputModule::dyn_m_Cursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_Cursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cursor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCursor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Button joyPadClickButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Button& UnityEngine::EventSystems::OVRInputModule::dyn_joyPadClickButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_joyPadClickButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joyPadClickButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode gazeClickKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& UnityEngine::EventSystems::OVRInputModule::dyn_gazeClickKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_gazeClickKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gazeClickKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean performSphereCastForGazepointer
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_performSphereCastForGazepointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_performSphereCastForGazepointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "performSphereCastForGazepointer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRightStickScroll
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_useRightStickScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_useRightStickScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRightStickScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightStickDeadZone
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_rightStickDeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_rightStickDeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightStickDeadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useSwipeScroll
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_useSwipeScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_useSwipeScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useSwipeScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swipeDragThreshold
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeDragThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swipeDragScale
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeDragScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertSwipeXAxis
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_InvertSwipeXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_InvertSwipeXAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertSwipeXAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRRaycaster activeGraphicRaycaster
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRRaycaster*& UnityEngine::EventSystems::OVRInputModule::dyn_activeGraphicRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_activeGraphicRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeGraphicRaycaster"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angleDragThreshold
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_angleDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_angleDragThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleDragThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SpherecastRadius
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_SpherecastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_SpherecastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpherecastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_NextAction
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_NextAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_NextAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NextAction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_LastMousePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRInputModule::dyn_m_LastMousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_LastMousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastMousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_MousePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRInputModule::dyn_m_MousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_MousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_HorizontalAxis
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_HorizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_HorizontalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalAxis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_VerticalAxis
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_VerticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_VerticalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalAxis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_SubmitButton
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_SubmitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_SubmitButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubmitButton"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_CancelButton
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_CancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_CancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CancelButton"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InputActionsPerSecond
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_InputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_InputActionsPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputActionsPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowActivationOnMobileDevice
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_m_AllowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_AllowActivationOnMobileDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowActivationOnMobileDevice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.EventSystems.OVRPointerEventData> m_VRRayPointerData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::OVRPointerEventData*>*& UnityEngine::EventSystems::OVRInputModule::dyn_m_VRRayPointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_VRRayPointerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VRRayPointerData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::OVRPointerEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.EventSystems.PointerInputModule/MouseState m_MouseState
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerInputModule::MouseState*& UnityEngine::EventSystems::OVRInputModule::dyn_m_MouseState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_MouseState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MouseState"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerInputModule::MouseState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_inputMode
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::get_inputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_inputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::OVRInputModule::InputMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_allowActivationOnMobileDevice
bool UnityEngine::EventSystems::OVRInputModule::get_allowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_allowActivationOnMobileDevice
void UnityEngine::EventSystems::OVRInputModule::set_allowActivationOnMobileDevice(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_inputActionsPerSecond
float UnityEngine::EventSystems::OVRInputModule::get_inputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_inputActionsPerSecond
void UnityEngine::EventSystems::OVRInputModule::set_inputActionsPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_horizontalAxis
::StringW UnityEngine::EventSystems::OVRInputModule::get_horizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_horizontalAxis
void UnityEngine::EventSystems::OVRInputModule::set_horizontalAxis(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_verticalAxis
::StringW UnityEngine::EventSystems::OVRInputModule::get_verticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_verticalAxis
void UnityEngine::EventSystems::OVRInputModule::set_verticalAxis(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_submitButton
::StringW UnityEngine::EventSystems::OVRInputModule::get_submitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_submitButton
void UnityEngine::EventSystems::OVRInputModule::set_submitButton(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_cancelButton
::StringW UnityEngine::EventSystems::OVRInputModule::get_cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_cancelButton
void UnityEngine::EventSystems::OVRInputModule::set_cancelButton(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendSubmitEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendSubmitEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendSubmitEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSubmitEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.AllowMoveEventProcessing
bool UnityEngine::EventSystems::OVRInputModule::AllowMoveEventProcessing(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::AllowMoveEventProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllowMoveEventProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetRawMoveVector
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::GetRawMoveVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetRawMoveVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawMoveVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendMoveEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendMoveEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendMoveEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMoveEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendUpdateEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendUpdateEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendUpdateEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUpdateEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessMousePress
void UnityEngine::EventSystems::OVRInputModule::ProcessMousePress(::UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessMouseEvent
void UnityEngine::EventSystems::OVRInputModule::ProcessMouseEvent(::UnityEngine::EventSystems::PointerInputModule::MouseState* mouseData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessMouseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouseData);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.UseMouse
bool UnityEngine::EventSystems::OVRInputModule::UseMouse(bool pressed, bool released, ::UnityEngine::EventSystems::PointerEventData* pointerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::UseMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "UseMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(released), ::il2cpp_utils::ExtractType(pointerData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pressed, released, pointerData);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.CopyFromTo
void UnityEngine::EventSystems::OVRInputModule::CopyFromTo(::UnityEngine::EventSystems::OVRPointerEventData* from, ::UnityEngine::EventSystems::OVRPointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.CopyFromTo
void UnityEngine::EventSystems::OVRInputModule::CopyFromTo(::UnityEngine::EventSystems::PointerEventData* from, ::UnityEngine::EventSystems::PointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetPointerData
bool UnityEngine::EventSystems::OVRInputModule::GetPointerData(int id, ByRef<::UnityEngine::EventSystems::OVRPointerEventData*> data, bool create) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::EventSystems::OVRPointerEventData*&>(), ::il2cpp_utils::ExtractType(create)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, byref(data), create);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ClearSelection
void UnityEngine::EventSystems::OVRInputModule::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetRectTransformNormal
::UnityEngine::Vector3 UnityEngine::EventSystems::OVRInputModule::GetRectTransformNormal(::UnityEngine::RectTransform* rectTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetRectTransformNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "GetRectTransformNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetGazePointerData
::UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::OVRInputModule::GetGazePointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetGazePointerData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::OVRInputModule*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetCanvasPointerData
::UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::OVRInputModule::GetCanvasPointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetCanvasPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvasPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ShouldStartDrag
bool UnityEngine::EventSystems::OVRInputModule::ShouldStartDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ShouldStartDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldStartDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.IsPointerMoving
bool UnityEngine::EventSystems::OVRInputModule::IsPointerMoving(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::IsPointerMoving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "IsPointerMoving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SwipeAdjustedPosition
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::SwipeAdjustedPosition(::UnityEngine::Vector2 originalPosition, ::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SwipeAdjustedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwipeAdjustedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPosition), ::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, originalPosition, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetGazeButtonState
::UnityEngine::EventSystems::PointerEventData::FramePressState UnityEngine::EventSystems::OVRInputModule::GetGazeButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetGazeButtonState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::OVRInputModule*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerEventData::FramePressState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetExtraScrollDelta
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::GetExtraScrollDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetExtraScrollDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtraScrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.UpdateModule
void UnityEngine::EventSystems::OVRInputModule::UpdateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::UpdateModule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.IsModuleSupported
bool UnityEngine::EventSystems::OVRInputModule::IsModuleSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::IsModuleSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ShouldActivateModule
bool UnityEngine::EventSystems::OVRInputModule::ShouldActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ShouldActivateModule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ActivateModule
void UnityEngine::EventSystems::OVRInputModule::ActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ActivateModule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.DeactivateModule
void UnityEngine::EventSystems::OVRInputModule::DeactivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::DeactivateModule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.Process
void UnityEngine::EventSystems::OVRInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessDrag
void UnityEngine::EventSystems::OVRInputModule::ProcessDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::PointerInputModule*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRInputModule/InputMode
#include "UnityEngine/EventSystems/OVRInputModule_InputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.OVRInputModule/InputMode Mouse
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRInputModule::InputMode>("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.OVRInputModule/InputMode Mouse
void UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Mouse(::UnityEngine::EventSystems::OVRInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.OVRInputModule/InputMode Buttons
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Buttons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRInputModule::InputMode>("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Buttons"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.OVRInputModule/InputMode Buttons
void UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Buttons(::UnityEngine::EventSystems::OVRInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Buttons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Buttons", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::OVRInputModule::InputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster.hpp"
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster/<>c
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster_--c.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 kNoEventMaskSet
int UnityEngine::EventSystems::OVRPhysicsRaycaster::_get_kNoEventMaskSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::_get_kNoEventMaskSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "OVRPhysicsRaycaster", "kNoEventMaskSet"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 kNoEventMaskSet
void UnityEngine::EventSystems::OVRPhysicsRaycaster::_set_kNoEventMaskSet(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::_set_kNoEventMaskSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster", "kNoEventMaskSet", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.LayerMask m_EventMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_m_EventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_m_EventMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EventMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortOrder
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_sortOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_sortOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_depth
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_depth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::OVRPhysicsRaycaster*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_finalEventMask
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_finalEventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_finalEventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_finalEventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_eventMask
::UnityEngine::LayerMask UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.set_eventMask
void UnityEngine::EventSystems::OVRPhysicsRaycaster::set_eventMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::set_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.Spherecast
void UnityEngine::EventSystems::OVRPhysicsRaycaster::Spherecast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::Spherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Spherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList, radius);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.GetScreenPos
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRPhysicsRaycaster::GetScreenPos(::UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::GetScreenPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_eventCamera
::UnityEngine::Camera* UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseRaycaster*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_sortOrderPriority
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_sortOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_sortOrderPriority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseRaycaster*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.Raycast
void UnityEngine::EventSystems::OVRPhysicsRaycaster::Raycast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseRaycaster*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster/<>c
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.EventSystems.OVRPhysicsRaycaster/<>c <>9
::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.EventSystems.OVRPhysicsRaycaster/<>c <>9
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9(::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__15_0
::System::Comparison_1<::UnityEngine::RaycastHit>* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::RaycastHit>*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__15_0
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__15_0(::System::Comparison_1<::UnityEngine::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__16_0
::System::Comparison_1<::UnityEngine::RaycastHit>* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::RaycastHit>*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__16_0
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__16_0(::System::Comparison_1<::UnityEngine::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__16_0", value)));
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/<>c..cctor
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/<>c.<Raycast>b__15_0
int UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::$Raycast$b__15_0(::UnityEngine::RaycastHit r1, ::UnityEngine::RaycastHit r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::<Raycast>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Raycast>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r1, r2);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/<>c.<Spherecast>b__16_0
int UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::$Spherecast$b__16_0(::UnityEngine::RaycastHit r1, ::UnityEngine::RaycastHit r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::<Spherecast>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Spherecast>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r1, r2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPointerEventData
#include "UnityEngine/EventSystems/OVRPointerEventData.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Ray worldSpaceRay
[[deprecated("Use field access instead!")]] ::UnityEngine::Ray& UnityEngine::EventSystems::OVRPointerEventData::dyn_worldSpaceRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::dyn_worldSpaceRay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldSpaceRay"))->offset;
  return *reinterpret_cast<::UnityEngine::Ray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 swipeStart
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRPointerEventData::dyn_swipeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::dyn_swipeStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPointerEventData.ToString
::StringW UnityEngine::EventSystems::OVRPointerEventData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::PointerEventData*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerEventDataExtension
#include "UnityEngine/EventSystems/PointerEventDataExtension.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.IsVRPointer
bool UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "IsVRPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetRay
::UnityEngine::Ray UnityEngine::EventSystems::PointerEventDataExtension::GetRay(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetSwipeStart
::UnityEngine::Vector2 UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.SetSwipeStart
void UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData, ::UnityEngine::Vector2 start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "SetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData), ::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData, start);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: __JobReflectionRegistrationOutput__3186306228
#include "GlobalNamespace/__JobReflectionRegistrationOutput__3186306228.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: __JobReflectionRegistrationOutput__3186306228.CreateJobReflectionData
void GlobalNamespace::__JobReflectionRegistrationOutput__3186306228::CreateJobReflectionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::__JobReflectionRegistrationOutput__3186306228::CreateJobReflectionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "__JobReflectionRegistrationOutput__3186306228", "CreateJobReflectionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: __JobReflectionRegistrationOutput__3186306228.EarlyInit
void GlobalNamespace::__JobReflectionRegistrationOutput__3186306228::EarlyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::__JobReflectionRegistrationOutput__3186306228::EarlyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "__JobReflectionRegistrationOutput__3186306228", "EarlyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.ClipperLib.PolyTree
#include "Pathfinding/ClipperLib/PolyTree.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<Pathfinding.ClipperLib.PolyNode> m_AllPolys
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::PolyNode*>*& Pathfinding::ClipperLib::PolyTree::dyn_m_AllPolys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyTree::dyn_m_AllPolys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllPolys"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::PolyNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ClipperLib.PolyTree.Clear
void Pathfinding::ClipperLib::PolyTree::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyTree::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.PolyTree.Finalize
void Pathfinding::ClipperLib::PolyTree::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyTree::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.PolyNode
#include "Pathfinding/ClipperLib/PolyNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Pathfinding.ClipperLib.PolyNode m_Parent
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::PolyNode*& Pathfinding::ClipperLib::PolyNode::dyn_m_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyNode::dyn_m_Parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Parent"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::PolyNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<Pathfinding.ClipperLib.IntPoint> m_polygon
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*& Pathfinding::ClipperLib::PolyNode::dyn_m_polygon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyNode::dyn_m_polygon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_polygon"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Index
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::PolyNode::dyn_m_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyNode::dyn_m_Index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<Pathfinding.ClipperLib.PolyNode> m_Childs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::PolyNode*>*& Pathfinding::ClipperLib::PolyNode::dyn_m_Childs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyNode::dyn_m_Childs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Childs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::PolyNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsOpen>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::ClipperLib::PolyNode::dyn_$IsOpen$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyNode::dyn_$IsOpen$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsOpen>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ClipperLib.PolyNode.get_ChildCount
int Pathfinding::ClipperLib::PolyNode::get_ChildCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyNode::get_ChildCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.PolyNode.get_Contour
::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>* Pathfinding::ClipperLib::PolyNode::get_Contour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyNode::get_Contour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Contour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.PolyNode.AddChild
void Pathfinding::ClipperLib::PolyNode::AddChild(::Pathfinding::ClipperLib::PolyNode* Child) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyNode::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Child)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Child);
}
// Autogenerated method: Pathfinding.ClipperLib.PolyNode.get_Childs
::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::PolyNode*>* Pathfinding::ClipperLib::PolyNode::get_Childs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyNode::get_Childs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Childs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::PolyNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.PolyNode.set_IsOpen
void Pathfinding::ClipperLib::PolyNode::set_IsOpen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyNode::set_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.ClipperLib.Int128
#include "Pathfinding/ClipperLib/Int128.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 hi
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::ClipperLib::Int128::dyn_hi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::dyn_hi");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hi"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 lo
[[deprecated("Use field access instead!")]] uint64_t& Pathfinding::ClipperLib::Int128::dyn_lo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::dyn_lo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lo"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128..ctor
Pathfinding::ClipperLib::Int128::Int128(int64_t _lo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_lo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _lo);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128..ctor
// ABORTED elsewhere.  Pathfinding::ClipperLib::Int128::Int128(int64_t _hi, uint64_t _lo)
// Autogenerated method: Pathfinding.ClipperLib.Int128.Int128Mul
::Pathfinding::ClipperLib::Int128 Pathfinding::ClipperLib::Int128::Int128Mul(int64_t lhs, int64_t rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::Int128Mul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Int128", "Int128Mul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::Int128, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128.Equals
bool Pathfinding::ClipperLib::Int128::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128.GetHashCode
int Pathfinding::ClipperLib::Int128::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128.op_Equality
bool Pathfinding::ClipperLib::operator ==(const ::Pathfinding::ClipperLib::Int128& val1, const ::Pathfinding::ClipperLib::Int128& val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Int128", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128.op_GreaterThan
bool Pathfinding::ClipperLib::operator >(const ::Pathfinding::ClipperLib::Int128& val1, const ::Pathfinding::ClipperLib::Int128& val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Int128", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128.op_LessThan
bool Pathfinding::ClipperLib::operator <(const ::Pathfinding::ClipperLib::Int128& val1, const ::Pathfinding::ClipperLib::Int128& val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Int128", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128.op_Addition
::Pathfinding::ClipperLib::Int128 Pathfinding::ClipperLib::operator+(const ::Pathfinding::ClipperLib::Int128& lhs, const ::Pathfinding::ClipperLib::Int128& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Int128", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::Int128, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128.op_Subtraction
::Pathfinding::ClipperLib::Int128 Pathfinding::ClipperLib::operator-(const ::Pathfinding::ClipperLib::Int128& lhs, const ::Pathfinding::ClipperLib::Int128& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Int128", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::Int128, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128.op_UnaryNegation
::Pathfinding::ClipperLib::Int128 Pathfinding::ClipperLib::operator-(const ::Pathfinding::ClipperLib::Int128& val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Int128", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::Int128, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: Pathfinding.ClipperLib.Int128.op_Division
::Pathfinding::ClipperLib::Int128 Pathfinding::ClipperLib::operator/(const ::Pathfinding::ClipperLib::Int128& lhs, const ::Pathfinding::ClipperLib::Int128& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Int128::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Int128", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::Int128, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.ClipperLib.IntPoint
#include "Pathfinding/ClipperLib/IntPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int64 X
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::ClipperLib::IntPoint::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::IntPoint::dyn_X");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 Y
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::ClipperLib::IntPoint::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::IntPoint::dyn_Y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ClipperLib.IntPoint..ctor
// ABORTED elsewhere.  Pathfinding::ClipperLib::IntPoint::IntPoint(int64_t X, int64_t Y)
// Autogenerated method: Pathfinding.ClipperLib.IntPoint..ctor
// ABORTED elsewhere.  Pathfinding::ClipperLib::IntPoint::IntPoint(::Pathfinding::ClipperLib::IntPoint pt)
// Autogenerated method: Pathfinding.ClipperLib.IntPoint.Equals
bool Pathfinding::ClipperLib::IntPoint::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::IntPoint::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.ClipperLib.IntPoint.GetHashCode
int Pathfinding::ClipperLib::IntPoint::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::IntPoint::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.IntPoint.op_Equality
bool Pathfinding::ClipperLib::operator ==(const ::Pathfinding::ClipperLib::IntPoint& a, const ::Pathfinding::ClipperLib::IntPoint& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::IntPoint::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "IntPoint", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pathfinding.ClipperLib.IntPoint.op_Inequality
bool Pathfinding::ClipperLib::operator !=(const ::Pathfinding::ClipperLib::IntPoint& a, const ::Pathfinding::ClipperLib::IntPoint& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::IntPoint::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "IntPoint", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.ClipType
#include "Pathfinding/ClipperLib/ClipType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.ClipType ctIntersection
::Pathfinding::ClipperLib::ClipType Pathfinding::ClipperLib::ClipType::_get_ctIntersection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipType::_get_ctIntersection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::ClipType>("Pathfinding.ClipperLib", "ClipType", "ctIntersection"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.ClipType ctIntersection
void Pathfinding::ClipperLib::ClipType::_set_ctIntersection(::Pathfinding::ClipperLib::ClipType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipType::_set_ctIntersection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "ClipType", "ctIntersection", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.ClipType ctUnion
::Pathfinding::ClipperLib::ClipType Pathfinding::ClipperLib::ClipType::_get_ctUnion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipType::_get_ctUnion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::ClipType>("Pathfinding.ClipperLib", "ClipType", "ctUnion"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.ClipType ctUnion
void Pathfinding::ClipperLib::ClipType::_set_ctUnion(::Pathfinding::ClipperLib::ClipType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipType::_set_ctUnion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "ClipType", "ctUnion", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.ClipType ctDifference
::Pathfinding::ClipperLib::ClipType Pathfinding::ClipperLib::ClipType::_get_ctDifference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipType::_get_ctDifference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::ClipType>("Pathfinding.ClipperLib", "ClipType", "ctDifference"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.ClipType ctDifference
void Pathfinding::ClipperLib::ClipType::_set_ctDifference(::Pathfinding::ClipperLib::ClipType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipType::_set_ctDifference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "ClipType", "ctDifference", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.ClipType ctXor
::Pathfinding::ClipperLib::ClipType Pathfinding::ClipperLib::ClipType::_get_ctXor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipType::_get_ctXor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::ClipType>("Pathfinding.ClipperLib", "ClipType", "ctXor"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.ClipType ctXor
void Pathfinding::ClipperLib::ClipType::_set_ctXor(::Pathfinding::ClipperLib::ClipType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipType::_set_ctXor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "ClipType", "ctXor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::ClipType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.PolyType
#include "Pathfinding/ClipperLib/PolyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.PolyType ptSubject
::Pathfinding::ClipperLib::PolyType Pathfinding::ClipperLib::PolyType::_get_ptSubject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyType::_get_ptSubject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::PolyType>("Pathfinding.ClipperLib", "PolyType", "ptSubject"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.PolyType ptSubject
void Pathfinding::ClipperLib::PolyType::_set_ptSubject(::Pathfinding::ClipperLib::PolyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyType::_set_ptSubject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "PolyType", "ptSubject", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.PolyType ptClip
::Pathfinding::ClipperLib::PolyType Pathfinding::ClipperLib::PolyType::_get_ptClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyType::_get_ptClip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::PolyType>("Pathfinding.ClipperLib", "PolyType", "ptClip"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.PolyType ptClip
void Pathfinding::ClipperLib::PolyType::_set_ptClip(::Pathfinding::ClipperLib::PolyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyType::_set_ptClip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "PolyType", "ptClip", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::PolyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.PolyFillType
#include "Pathfinding/ClipperLib/PolyFillType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.PolyFillType pftEvenOdd
::Pathfinding::ClipperLib::PolyFillType Pathfinding::ClipperLib::PolyFillType::_get_pftEvenOdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyFillType::_get_pftEvenOdd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::PolyFillType>("Pathfinding.ClipperLib", "PolyFillType", "pftEvenOdd"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.PolyFillType pftEvenOdd
void Pathfinding::ClipperLib::PolyFillType::_set_pftEvenOdd(::Pathfinding::ClipperLib::PolyFillType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyFillType::_set_pftEvenOdd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "PolyFillType", "pftEvenOdd", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.PolyFillType pftNonZero
::Pathfinding::ClipperLib::PolyFillType Pathfinding::ClipperLib::PolyFillType::_get_pftNonZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyFillType::_get_pftNonZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::PolyFillType>("Pathfinding.ClipperLib", "PolyFillType", "pftNonZero"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.PolyFillType pftNonZero
void Pathfinding::ClipperLib::PolyFillType::_set_pftNonZero(::Pathfinding::ClipperLib::PolyFillType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyFillType::_set_pftNonZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "PolyFillType", "pftNonZero", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.PolyFillType pftPositive
::Pathfinding::ClipperLib::PolyFillType Pathfinding::ClipperLib::PolyFillType::_get_pftPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyFillType::_get_pftPositive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::PolyFillType>("Pathfinding.ClipperLib", "PolyFillType", "pftPositive"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.PolyFillType pftPositive
void Pathfinding::ClipperLib::PolyFillType::_set_pftPositive(::Pathfinding::ClipperLib::PolyFillType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyFillType::_set_pftPositive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "PolyFillType", "pftPositive", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.PolyFillType pftNegative
::Pathfinding::ClipperLib::PolyFillType Pathfinding::ClipperLib::PolyFillType::_get_pftNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyFillType::_get_pftNegative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::PolyFillType>("Pathfinding.ClipperLib", "PolyFillType", "pftNegative"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.PolyFillType pftNegative
void Pathfinding::ClipperLib::PolyFillType::_set_pftNegative(::Pathfinding::ClipperLib::PolyFillType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyFillType::_set_pftNegative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "PolyFillType", "pftNegative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::PolyFillType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::PolyFillType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.EdgeSide
#include "Pathfinding/ClipperLib/EdgeSide.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.EdgeSide esLeft
::Pathfinding::ClipperLib::EdgeSide Pathfinding::ClipperLib::EdgeSide::_get_esLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::EdgeSide::_get_esLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::EdgeSide>("Pathfinding.ClipperLib", "EdgeSide", "esLeft"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.EdgeSide esLeft
void Pathfinding::ClipperLib::EdgeSide::_set_esLeft(::Pathfinding::ClipperLib::EdgeSide value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::EdgeSide::_set_esLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "EdgeSide", "esLeft", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.EdgeSide esRight
::Pathfinding::ClipperLib::EdgeSide Pathfinding::ClipperLib::EdgeSide::_get_esRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::EdgeSide::_get_esRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::EdgeSide>("Pathfinding.ClipperLib", "EdgeSide", "esRight"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.EdgeSide esRight
void Pathfinding::ClipperLib::EdgeSide::_set_esRight(::Pathfinding::ClipperLib::EdgeSide value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::EdgeSide::_set_esRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "EdgeSide", "esRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::EdgeSide::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::EdgeSide::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.Direction
#include "Pathfinding/ClipperLib/Direction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.Direction dRightToLeft
::Pathfinding::ClipperLib::Direction Pathfinding::ClipperLib::Direction::_get_dRightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Direction::_get_dRightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::Direction>("Pathfinding.ClipperLib", "Direction", "dRightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.Direction dRightToLeft
void Pathfinding::ClipperLib::Direction::_set_dRightToLeft(::Pathfinding::ClipperLib::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Direction::_set_dRightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "Direction", "dRightToLeft", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ClipperLib.Direction dLeftToRight
::Pathfinding::ClipperLib::Direction Pathfinding::ClipperLib::Direction::_get_dLeftToRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Direction::_get_dLeftToRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ClipperLib::Direction>("Pathfinding.ClipperLib", "Direction", "dLeftToRight"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ClipperLib.Direction dLeftToRight
void Pathfinding::ClipperLib::Direction::_set_dLeftToRight(::Pathfinding::ClipperLib::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Direction::_set_dLeftToRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "Direction", "dLeftToRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::Direction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Direction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.TEdge
#include "Pathfinding/ClipperLib/TEdge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.IntPoint Bot
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::IntPoint& Pathfinding::ClipperLib::TEdge::dyn_Bot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_Bot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bot"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.IntPoint Curr
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::IntPoint& Pathfinding::ClipperLib::TEdge::dyn_Curr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_Curr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Curr"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.IntPoint Top
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::IntPoint& Pathfinding::ClipperLib::TEdge::dyn_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_Top");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Top"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.IntPoint Delta
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::IntPoint& Pathfinding::ClipperLib::TEdge::dyn_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_Delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delta"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Dx
[[deprecated("Use field access instead!")]] double& Pathfinding::ClipperLib::TEdge::dyn_Dx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_Dx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dx"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.PolyType PolyTyp
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::PolyType& Pathfinding::ClipperLib::TEdge::dyn_PolyTyp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_PolyTyp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PolyTyp"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::PolyType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.EdgeSide Side
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::EdgeSide& Pathfinding::ClipperLib::TEdge::dyn_Side() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_Side");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Side"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::EdgeSide*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WindDelta
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::TEdge::dyn_WindDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_WindDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindDelta"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WindCnt
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::TEdge::dyn_WindCnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_WindCnt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindCnt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WindCnt2
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::TEdge::dyn_WindCnt2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_WindCnt2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindCnt2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 OutIdx
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::TEdge::dyn_OutIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_OutIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge Next
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::TEdge::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge Prev
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::TEdge::dyn_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_Prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prev"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge NextInLML
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::TEdge::dyn_NextInLML() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_NextInLML");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextInLML"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge NextInAEL
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::TEdge::dyn_NextInAEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_NextInAEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextInAEL"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge PrevInAEL
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::TEdge::dyn_PrevInAEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_PrevInAEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrevInAEL"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge NextInSEL
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::TEdge::dyn_NextInSEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_NextInSEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextInSEL"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge PrevInSEL
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::TEdge::dyn_PrevInSEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::TEdge::dyn_PrevInSEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrevInSEL"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.IntersectNode
#include "Pathfinding/ClipperLib/IntersectNode.hpp"
// Including type: Pathfinding.ClipperLib.TEdge
#include "Pathfinding/ClipperLib/TEdge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge Edge1
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::IntersectNode::dyn_Edge1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::IntersectNode::dyn_Edge1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Edge1"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge Edge2
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::IntersectNode::dyn_Edge2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::IntersectNode::dyn_Edge2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Edge2"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.IntPoint Pt
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::IntPoint& Pathfinding::ClipperLib::IntersectNode::dyn_Pt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::IntersectNode::dyn_Pt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pt"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.IntersectNode Next
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::IntersectNode*& Pathfinding::ClipperLib::IntersectNode::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::IntersectNode::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::IntersectNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.LocalMinima
#include "Pathfinding/ClipperLib/LocalMinima.hpp"
// Including type: Pathfinding.ClipperLib.TEdge
#include "Pathfinding/ClipperLib/TEdge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int64 Y
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::ClipperLib::LocalMinima::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::LocalMinima::dyn_Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge LeftBound
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::LocalMinima::dyn_LeftBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::LocalMinima::dyn_LeftBound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftBound"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.TEdge RightBound
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::LocalMinima::dyn_RightBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::LocalMinima::dyn_RightBound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightBound"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.LocalMinima Next
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::LocalMinima*& Pathfinding::ClipperLib::LocalMinima::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::LocalMinima::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::LocalMinima**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.Scanbeam
#include "Pathfinding/ClipperLib/Scanbeam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int64 Y
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::ClipperLib::Scanbeam::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Scanbeam::dyn_Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.Scanbeam Next
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::Scanbeam*& Pathfinding::ClipperLib::Scanbeam::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Scanbeam::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::Scanbeam**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.OutRec
#include "Pathfinding/ClipperLib/OutRec.hpp"
// Including type: Pathfinding.ClipperLib.OutPt
#include "Pathfinding/ClipperLib/OutPt.hpp"
// Including type: Pathfinding.ClipperLib.PolyNode
#include "Pathfinding/ClipperLib/PolyNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Idx
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::OutRec::dyn_Idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutRec::dyn_Idx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsHole
[[deprecated("Use field access instead!")]] bool& Pathfinding::ClipperLib::OutRec::dyn_IsHole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutRec::dyn_IsHole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsHole"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsOpen
[[deprecated("Use field access instead!")]] bool& Pathfinding::ClipperLib::OutRec::dyn_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutRec::dyn_IsOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.OutRec FirstLeft
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::OutRec*& Pathfinding::ClipperLib::OutRec::dyn_FirstLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutRec::dyn_FirstLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstLeft"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::OutRec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.OutPt Pts
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::OutPt*& Pathfinding::ClipperLib::OutRec::dyn_Pts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutRec::dyn_Pts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pts"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.OutPt BottomPt
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::OutPt*& Pathfinding::ClipperLib::OutRec::dyn_BottomPt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutRec::dyn_BottomPt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BottomPt"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.PolyNode PolyNode
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::PolyNode*& Pathfinding::ClipperLib::OutRec::dyn_PolyNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutRec::dyn_PolyNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PolyNode"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::PolyNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.OutPt
#include "Pathfinding/ClipperLib/OutPt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Idx
[[deprecated("Use field access instead!")]] int& Pathfinding::ClipperLib::OutPt::dyn_Idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutPt::dyn_Idx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.IntPoint Pt
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::IntPoint& Pathfinding::ClipperLib::OutPt::dyn_Pt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutPt::dyn_Pt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pt"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.OutPt Next
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::OutPt*& Pathfinding::ClipperLib::OutPt::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutPt::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.OutPt Prev
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::OutPt*& Pathfinding::ClipperLib::OutPt::dyn_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::OutPt::dyn_Prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prev"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.Join
#include "Pathfinding/ClipperLib/Join.hpp"
// Including type: Pathfinding.ClipperLib.OutPt
#include "Pathfinding/ClipperLib/OutPt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.OutPt OutPt1
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::OutPt*& Pathfinding::ClipperLib::Join::dyn_OutPt1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Join::dyn_OutPt1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutPt1"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.OutPt OutPt2
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::OutPt*& Pathfinding::ClipperLib::Join::dyn_OutPt2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Join::dyn_OutPt2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutPt2"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ClipperLib.IntPoint OffPt
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::IntPoint& Pathfinding::ClipperLib::Join::dyn_OffPt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Join::dyn_OffPt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffPt"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.ClipperBase
#include "Pathfinding/ClipperLib/ClipperBase.hpp"
// Including type: Pathfinding.ClipperLib.LocalMinima
#include "Pathfinding/ClipperLib/LocalMinima.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.ClipperLib.TEdge
#include "Pathfinding/ClipperLib/TEdge.hpp"
// Including type: Pathfinding.ClipperLib.OutPt
#include "Pathfinding/ClipperLib/OutPt.hpp"
// Including type: Pathfinding.ClipperLib.PolyType
#include "Pathfinding/ClipperLib/PolyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Double horizontal
double Pathfinding::ClipperLib::ClipperBase::_get_horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_get_horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("Pathfinding.ClipperLib", "ClipperBase", "horizontal"));
}
// Autogenerated static field setter
// Set static field: static protected System.Double horizontal
void Pathfinding::ClipperLib::ClipperBase::_set_horizontal(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_set_horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "ClipperBase", "horizontal", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 Skip
int Pathfinding::ClipperLib::ClipperBase::_get_Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_get_Skip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.ClipperLib", "ClipperBase", "Skip"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 Skip
void Pathfinding::ClipperLib::ClipperBase::_set_Skip(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_set_Skip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "ClipperBase", "Skip", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 Unassigned
int Pathfinding::ClipperLib::ClipperBase::_get_Unassigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_get_Unassigned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.ClipperLib", "ClipperBase", "Unassigned"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 Unassigned
void Pathfinding::ClipperLib::ClipperBase::_set_Unassigned(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_set_Unassigned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "ClipperBase", "Unassigned", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Double tolerance
double Pathfinding::ClipperLib::ClipperBase::_get_tolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_get_tolerance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("Pathfinding.ClipperLib", "ClipperBase", "tolerance"));
}
// Autogenerated static field setter
// Set static field: static protected System.Double tolerance
void Pathfinding::ClipperLib::ClipperBase::_set_tolerance(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_set_tolerance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "ClipperBase", "tolerance", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 loRange
int64_t Pathfinding::ClipperLib::ClipperBase::_get_loRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_get_loRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Pathfinding.ClipperLib", "ClipperBase", "loRange"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 loRange
void Pathfinding::ClipperLib::ClipperBase::_set_loRange(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_set_loRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "ClipperBase", "loRange", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 hiRange
int64_t Pathfinding::ClipperLib::ClipperBase::_get_hiRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_get_hiRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Pathfinding.ClipperLib", "ClipperBase", "hiRange"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 hiRange
void Pathfinding::ClipperLib::ClipperBase::_set_hiRange(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::_set_hiRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "ClipperBase", "hiRange", value));
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.ClipperLib.LocalMinima m_MinimaList
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::LocalMinima*& Pathfinding::ClipperLib::ClipperBase::dyn_m_MinimaList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::dyn_m_MinimaList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinimaList"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::LocalMinima**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.ClipperLib.LocalMinima m_CurrentLM
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::LocalMinima*& Pathfinding::ClipperLib::ClipperBase::dyn_m_CurrentLM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::dyn_m_CurrentLM");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentLM"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::LocalMinima**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Collections.Generic.List`1<Pathfinding.ClipperLib.TEdge>> m_edges
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::TEdge*>*>*& Pathfinding::ClipperLib::ClipperBase::dyn_m_edges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::dyn_m_edges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_edges"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::TEdge*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_UseFullRange
[[deprecated("Use field access instead!")]] bool& Pathfinding::ClipperLib::ClipperBase::dyn_m_UseFullRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::dyn_m_UseFullRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseFullRange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_HasOpenPaths
[[deprecated("Use field access instead!")]] bool& Pathfinding::ClipperLib::ClipperBase::dyn_m_HasOpenPaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::dyn_m_HasOpenPaths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasOpenPaths"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PreserveCollinear>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::ClipperLib::ClipperBase::dyn_$PreserveCollinear$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::dyn_$PreserveCollinear$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreserveCollinear>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.get_PreserveCollinear
bool Pathfinding::ClipperLib::ClipperBase::get_PreserveCollinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::get_PreserveCollinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreserveCollinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.set_PreserveCollinear
void Pathfinding::ClipperLib::ClipperBase::set_PreserveCollinear(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::set_PreserveCollinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreserveCollinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.IsHorizontal
bool Pathfinding::ClipperLib::ClipperBase::IsHorizontal(::Pathfinding::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::IsHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "ClipperBase", "IsHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.PointOnLineSegment
bool Pathfinding::ClipperLib::ClipperBase::PointOnLineSegment(::Pathfinding::ClipperLib::IntPoint pt, ::Pathfinding::ClipperLib::IntPoint linePt1, ::Pathfinding::ClipperLib::IntPoint linePt2, bool UseFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::PointOnLineSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointOnLineSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt), ::il2cpp_utils::ExtractType(linePt1), ::il2cpp_utils::ExtractType(linePt2), ::il2cpp_utils::ExtractType(UseFullRange)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pt, linePt1, linePt2, UseFullRange);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.PointOnPolygon
bool Pathfinding::ClipperLib::ClipperBase::PointOnPolygon(::Pathfinding::ClipperLib::IntPoint pt, ::Pathfinding::ClipperLib::OutPt* pp, bool UseFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::PointOnPolygon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointOnPolygon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt), ::il2cpp_utils::ExtractType(pp), ::il2cpp_utils::ExtractType(UseFullRange)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pt, pp, UseFullRange);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.PointInPolygon
bool Pathfinding::ClipperLib::ClipperBase::PointInPolygon(::Pathfinding::ClipperLib::IntPoint pt, ::Pathfinding::ClipperLib::OutPt* pp, bool UseFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::PointInPolygon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointInPolygon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt), ::il2cpp_utils::ExtractType(pp), ::il2cpp_utils::ExtractType(UseFullRange)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pt, pp, UseFullRange);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.SlopesEqual
bool Pathfinding::ClipperLib::ClipperBase::SlopesEqual(::Pathfinding::ClipperLib::TEdge* e1, ::Pathfinding::ClipperLib::TEdge* e2, bool UseFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::SlopesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "ClipperBase", "SlopesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2), ::il2cpp_utils::ExtractType(UseFullRange)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e1, e2, UseFullRange);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.SlopesEqual
bool Pathfinding::ClipperLib::ClipperBase::SlopesEqual(::Pathfinding::ClipperLib::IntPoint pt1, ::Pathfinding::ClipperLib::IntPoint pt2, ::Pathfinding::ClipperLib::IntPoint pt3, bool UseFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::SlopesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "ClipperBase", "SlopesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt1), ::il2cpp_utils::ExtractType(pt2), ::il2cpp_utils::ExtractType(pt3), ::il2cpp_utils::ExtractType(UseFullRange)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pt1, pt2, pt3, UseFullRange);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.Clear
void Pathfinding::ClipperLib::ClipperBase::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ClipperLib::ClipperBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.DisposeLocalMinimaList
void Pathfinding::ClipperLib::ClipperBase::DisposeLocalMinimaList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::DisposeLocalMinimaList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeLocalMinimaList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.RangeTest
void Pathfinding::ClipperLib::ClipperBase::RangeTest(::Pathfinding::ClipperLib::IntPoint Pt, ByRef<bool> useFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::RangeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RangeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Pt), ::il2cpp_utils::ExtractType(useFullRange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Pt, byref(useFullRange));
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.InitEdge
void Pathfinding::ClipperLib::ClipperBase::InitEdge(::Pathfinding::ClipperLib::TEdge* e, ::Pathfinding::ClipperLib::TEdge* eNext, ::Pathfinding::ClipperLib::TEdge* ePrev, ::Pathfinding::ClipperLib::IntPoint pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::InitEdge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitEdge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(eNext), ::il2cpp_utils::ExtractType(ePrev), ::il2cpp_utils::ExtractType(pt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, eNext, ePrev, pt);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.InitEdge2
void Pathfinding::ClipperLib::ClipperBase::InitEdge2(::Pathfinding::ClipperLib::TEdge* e, ::Pathfinding::ClipperLib::PolyType polyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::InitEdge2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitEdge2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(polyType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, polyType);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.AddPath
bool Pathfinding::ClipperLib::ClipperBase::AddPath(::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>* pg, ::Pathfinding::ClipperLib::PolyType polyType, bool Closed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::AddPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pg), ::il2cpp_utils::ExtractType(polyType), ::il2cpp_utils::ExtractType(Closed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pg, polyType, Closed);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.AddPolygon
bool Pathfinding::ClipperLib::ClipperBase::AddPolygon(::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>* pg, ::Pathfinding::ClipperLib::PolyType polyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::AddPolygon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPolygon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pg), ::il2cpp_utils::ExtractType(polyType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pg, polyType);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.Pt2IsBetweenPt1AndPt3
bool Pathfinding::ClipperLib::ClipperBase::Pt2IsBetweenPt1AndPt3(::Pathfinding::ClipperLib::IntPoint pt1, ::Pathfinding::ClipperLib::IntPoint pt2, ::Pathfinding::ClipperLib::IntPoint pt3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::Pt2IsBetweenPt1AndPt3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pt2IsBetweenPt1AndPt3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt1), ::il2cpp_utils::ExtractType(pt2), ::il2cpp_utils::ExtractType(pt3)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pt1, pt2, pt3);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.RemoveEdge
::Pathfinding::ClipperLib::TEdge* Pathfinding::ClipperLib::ClipperBase::RemoveEdge(::Pathfinding::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::RemoveEdge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEdge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::TEdge*, false>(this, ___internal__method, e);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.GetLastHorz
::Pathfinding::ClipperLib::TEdge* Pathfinding::ClipperLib::ClipperBase::GetLastHorz(::Pathfinding::ClipperLib::TEdge* Edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::GetLastHorz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastHorz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Edge)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::TEdge*, false>(this, ___internal__method, Edge);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.SharedVertWithPrevAtTop
bool Pathfinding::ClipperLib::ClipperBase::SharedVertWithPrevAtTop(::Pathfinding::ClipperLib::TEdge* Edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::SharedVertWithPrevAtTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SharedVertWithPrevAtTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, Edge);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.SharedVertWithNextIsBot
bool Pathfinding::ClipperLib::ClipperBase::SharedVertWithNextIsBot(::Pathfinding::ClipperLib::TEdge* Edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::SharedVertWithNextIsBot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SharedVertWithNextIsBot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, Edge);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.MoreBelow
bool Pathfinding::ClipperLib::ClipperBase::MoreBelow(::Pathfinding::ClipperLib::TEdge* Edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::MoreBelow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoreBelow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, Edge);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.JustBeforeLocMin
bool Pathfinding::ClipperLib::ClipperBase::JustBeforeLocMin(::Pathfinding::ClipperLib::TEdge* Edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::JustBeforeLocMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JustBeforeLocMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, Edge);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.MoreAbove
bool Pathfinding::ClipperLib::ClipperBase::MoreAbove(::Pathfinding::ClipperLib::TEdge* Edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::MoreAbove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoreAbove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, Edge);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.AllHorizontal
bool Pathfinding::ClipperLib::ClipperBase::AllHorizontal(::Pathfinding::ClipperLib::TEdge* Edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::AllHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, Edge);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.SetDx
void Pathfinding::ClipperLib::ClipperBase::SetDx(::Pathfinding::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::SetDx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.DoMinimaLML
void Pathfinding::ClipperLib::ClipperBase::DoMinimaLML(::Pathfinding::ClipperLib::TEdge* E1, ::Pathfinding::ClipperLib::TEdge* E2, bool IsClosed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::DoMinimaLML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoMinimaLML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(E1), ::il2cpp_utils::ExtractType(E2), ::il2cpp_utils::ExtractType(IsClosed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, E1, E2, IsClosed);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.DescendToMin
::Pathfinding::ClipperLib::TEdge* Pathfinding::ClipperLib::ClipperBase::DescendToMin(ByRef<::Pathfinding::ClipperLib::TEdge*> E) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::DescendToMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DescendToMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(E)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::TEdge*, false>(this, ___internal__method, byref(E));
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.AscendToMax
void Pathfinding::ClipperLib::ClipperBase::AscendToMax(ByRef<::Pathfinding::ClipperLib::TEdge*> E, bool Appending, bool IsClosed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::AscendToMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AscendToMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(E), ::il2cpp_utils::ExtractType(Appending), ::il2cpp_utils::ExtractType(IsClosed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(E), Appending, IsClosed);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.AddBoundsToLML
::Pathfinding::ClipperLib::TEdge* Pathfinding::ClipperLib::ClipperBase::AddBoundsToLML(::Pathfinding::ClipperLib::TEdge* E, bool Closed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::AddBoundsToLML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBoundsToLML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(E), ::il2cpp_utils::ExtractType(Closed)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::TEdge*, false>(this, ___internal__method, E, Closed);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.InsertLocalMinima
void Pathfinding::ClipperLib::ClipperBase::InsertLocalMinima(::Pathfinding::ClipperLib::LocalMinima* newLm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::InsertLocalMinima");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertLocalMinima", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLm)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newLm);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.PopLocalMinima
void Pathfinding::ClipperLib::ClipperBase::PopLocalMinima() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::PopLocalMinima");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopLocalMinima", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.ReverseHorizontal
void Pathfinding::ClipperLib::ClipperBase::ReverseHorizontal(::Pathfinding::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::ReverseHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReverseHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Pathfinding.ClipperLib.ClipperBase.Reset
void Pathfinding::ClipperLib::ClipperBase::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::ClipperBase::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ClipperLib::ClipperBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.Clipper
#include "Pathfinding/ClipperLib/Clipper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.ClipperLib.OutRec
#include "Pathfinding/ClipperLib/OutRec.hpp"
// Including type: Pathfinding.ClipperLib.Scanbeam
#include "Pathfinding/ClipperLib/Scanbeam.hpp"
// Including type: Pathfinding.ClipperLib.TEdge
#include "Pathfinding/ClipperLib/TEdge.hpp"
// Including type: Pathfinding.ClipperLib.IntersectNode
#include "Pathfinding/ClipperLib/IntersectNode.hpp"
// Including type: Pathfinding.ClipperLib.Join
#include "Pathfinding/ClipperLib/Join.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.ClipperLib.PolyTree
#include "Pathfinding/ClipperLib/PolyTree.hpp"
// Including type: Pathfinding.ClipperLib.OutPt
#include "Pathfinding/ClipperLib/OutPt.hpp"
// Including type: Pathfinding.ClipperLib.Direction
#include "Pathfinding/ClipperLib/Direction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 ioReverseSolution
int Pathfinding::ClipperLib::Clipper::_get_ioReverseSolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::_get_ioReverseSolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.ClipperLib", "Clipper", "ioReverseSolution"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ioReverseSolution
void Pathfinding::ClipperLib::Clipper::_set_ioReverseSolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::_set_ioReverseSolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "Clipper", "ioReverseSolution", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ioStrictlySimple
int Pathfinding::ClipperLib::Clipper::_get_ioStrictlySimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::_get_ioStrictlySimple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.ClipperLib", "Clipper", "ioStrictlySimple"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ioStrictlySimple
void Pathfinding::ClipperLib::Clipper::_set_ioStrictlySimple(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::_set_ioStrictlySimple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "Clipper", "ioStrictlySimple", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ioPreserveCollinear
int Pathfinding::ClipperLib::Clipper::_get_ioPreserveCollinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::_get_ioPreserveCollinear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.ClipperLib", "Clipper", "ioPreserveCollinear"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ioPreserveCollinear
void Pathfinding::ClipperLib::Clipper::_set_ioPreserveCollinear(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::_set_ioPreserveCollinear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "Clipper", "ioPreserveCollinear", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Collections.Generic.List`1<Pathfinding.ClipperLib.IntPoint>> <>f__am$cacheE
::System::Action_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*>* Pathfinding::ClipperLib::Clipper::_get_$$f__am$cacheE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::_get_$$f__am$cacheE");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*>*>("Pathfinding.ClipperLib", "Clipper", "<>f__am$cacheE")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Collections.Generic.List`1<Pathfinding.ClipperLib.IntPoint>> <>f__am$cacheE
void Pathfinding::ClipperLib::Clipper::_set_$$f__am$cacheE(::System::Action_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::_set_$$f__am$cacheE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "Clipper", "<>f__am$cacheE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Collections.Generic.List`1<Pathfinding.ClipperLib.IntPoint>> <>f__am$cacheF
::System::Action_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*>* Pathfinding::ClipperLib::Clipper::_get_$$f__am$cacheF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::_get_$$f__am$cacheF");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*>*>("Pathfinding.ClipperLib", "Clipper", "<>f__am$cacheF")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Collections.Generic.List`1<Pathfinding.ClipperLib.IntPoint>> <>f__am$cacheF
void Pathfinding::ClipperLib::Clipper::_set_$$f__am$cacheF(::System::Action_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::_set_$$f__am$cacheF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.ClipperLib", "Clipper", "<>f__am$cacheF", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.ClipperLib.OutRec> m_PolyOuts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::OutRec*>*& Pathfinding::ClipperLib::Clipper::dyn_m_PolyOuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_PolyOuts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PolyOuts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::OutRec*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.ClipperLib.ClipType m_ClipType
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::ClipType& Pathfinding::ClipperLib::Clipper::dyn_m_ClipType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_ClipType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipType"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::ClipType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.ClipperLib.Scanbeam m_Scanbeam
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::Scanbeam*& Pathfinding::ClipperLib::Clipper::dyn_m_Scanbeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_Scanbeam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scanbeam"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::Scanbeam**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.ClipperLib.TEdge m_ActiveEdges
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::Clipper::dyn_m_ActiveEdges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_ActiveEdges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveEdges"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.ClipperLib.TEdge m_SortedEdges
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::TEdge*& Pathfinding::ClipperLib::Clipper::dyn_m_SortedEdges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_SortedEdges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SortedEdges"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.ClipperLib.IntersectNode m_IntersectNodes
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::IntersectNode*& Pathfinding::ClipperLib::Clipper::dyn_m_IntersectNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_IntersectNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntersectNodes"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::IntersectNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ExecuteLocked
[[deprecated("Use field access instead!")]] bool& Pathfinding::ClipperLib::Clipper::dyn_m_ExecuteLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_ExecuteLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExecuteLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.ClipperLib.PolyFillType m_ClipFillType
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::PolyFillType& Pathfinding::ClipperLib::Clipper::dyn_m_ClipFillType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_ClipFillType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipFillType"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::PolyFillType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.ClipperLib.PolyFillType m_SubjFillType
[[deprecated("Use field access instead!")]] ::Pathfinding::ClipperLib::PolyFillType& Pathfinding::ClipperLib::Clipper::dyn_m_SubjFillType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_SubjFillType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubjFillType"))->offset;
  return *reinterpret_cast<::Pathfinding::ClipperLib::PolyFillType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.ClipperLib.Join> m_Joins
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::Join*>*& Pathfinding::ClipperLib::Clipper::dyn_m_Joins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_Joins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Joins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::Join*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.ClipperLib.Join> m_GhostJoins
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::Join*>*& Pathfinding::ClipperLib::Clipper::dyn_m_GhostJoins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_GhostJoins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GhostJoins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::Join*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UsingPolyTree
[[deprecated("Use field access instead!")]] bool& Pathfinding::ClipperLib::Clipper::dyn_m_UsingPolyTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_m_UsingPolyTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UsingPolyTree"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ReverseSolution>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::ClipperLib::Clipper::dyn_$ReverseSolution$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_$ReverseSolution$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReverseSolution>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <StrictlySimple>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::ClipperLib::Clipper::dyn_$StrictlySimple$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::dyn_$StrictlySimple$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StrictlySimple>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.get_ReverseSolution
bool Pathfinding::ClipperLib::Clipper::get_ReverseSolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::get_ReverseSolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReverseSolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.set_ReverseSolution
void Pathfinding::ClipperLib::Clipper::set_ReverseSolution(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::set_ReverseSolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReverseSolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.get_StrictlySimple
bool Pathfinding::ClipperLib::Clipper::get_StrictlySimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::get_StrictlySimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StrictlySimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.set_StrictlySimple
void Pathfinding::ClipperLib::Clipper::set_StrictlySimple(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::set_StrictlySimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StrictlySimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.InsertScanbeam
void Pathfinding::ClipperLib::Clipper::InsertScanbeam(int64_t Y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::InsertScanbeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertScanbeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Y);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.Execute
bool Pathfinding::ClipperLib::Clipper::Execute(::Pathfinding::ClipperLib::ClipType clipType, ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*>* solution, ::Pathfinding::ClipperLib::PolyFillType subjFillType, ::Pathfinding::ClipperLib::PolyFillType clipFillType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipType), ::il2cpp_utils::ExtractType(solution), ::il2cpp_utils::ExtractType(subjFillType), ::il2cpp_utils::ExtractType(clipFillType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clipType, solution, subjFillType, clipFillType);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.Execute
bool Pathfinding::ClipperLib::Clipper::Execute(::Pathfinding::ClipperLib::ClipType clipType, ::Pathfinding::ClipperLib::PolyTree* polytree, ::Pathfinding::ClipperLib::PolyFillType subjFillType, ::Pathfinding::ClipperLib::PolyFillType clipFillType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipType), ::il2cpp_utils::ExtractType(polytree), ::il2cpp_utils::ExtractType(subjFillType), ::il2cpp_utils::ExtractType(clipFillType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clipType, polytree, subjFillType, clipFillType);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.FixHoleLinkage
void Pathfinding::ClipperLib::Clipper::FixHoleLinkage(::Pathfinding::ClipperLib::OutRec* outRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::FixHoleLinkage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixHoleLinkage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outRec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outRec);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.ExecuteInternal
bool Pathfinding::ClipperLib::Clipper::ExecuteInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::ExecuteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.PopScanbeam
int64_t Pathfinding::ClipperLib::Clipper::PopScanbeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::PopScanbeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopScanbeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.DisposeAllPolyPts
void Pathfinding::ClipperLib::Clipper::DisposeAllPolyPts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::DisposeAllPolyPts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeAllPolyPts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.DisposeOutRec
void Pathfinding::ClipperLib::Clipper::DisposeOutRec(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::DisposeOutRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeOutRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.DisposeOutPts
void Pathfinding::ClipperLib::Clipper::DisposeOutPts(::Pathfinding::ClipperLib::OutPt* pp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::DisposeOutPts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeOutPts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pp);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.AddJoin
void Pathfinding::ClipperLib::Clipper::AddJoin(::Pathfinding::ClipperLib::OutPt* Op1, ::Pathfinding::ClipperLib::OutPt* Op2, ::Pathfinding::ClipperLib::IntPoint OffPt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::AddJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Op1), ::il2cpp_utils::ExtractType(Op2), ::il2cpp_utils::ExtractType(OffPt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Op1, Op2, OffPt);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.AddGhostJoin
void Pathfinding::ClipperLib::Clipper::AddGhostJoin(::Pathfinding::ClipperLib::OutPt* Op, ::Pathfinding::ClipperLib::IntPoint OffPt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::AddGhostJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGhostJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Op), ::il2cpp_utils::ExtractType(OffPt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Op, OffPt);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.InsertLocalMinimaIntoAEL
void Pathfinding::ClipperLib::Clipper::InsertLocalMinimaIntoAEL(int64_t botY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::InsertLocalMinimaIntoAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertLocalMinimaIntoAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(botY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, botY);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.InsertEdgeIntoAEL
void Pathfinding::ClipperLib::Clipper::InsertEdgeIntoAEL(::Pathfinding::ClipperLib::TEdge* edge, ::Pathfinding::ClipperLib::TEdge* startEdge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::InsertEdgeIntoAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertEdgeIntoAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge), ::il2cpp_utils::ExtractType(startEdge)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge, startEdge);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.E2InsertsBeforeE1
bool Pathfinding::ClipperLib::Clipper::E2InsertsBeforeE1(::Pathfinding::ClipperLib::TEdge* e1, ::Pathfinding::ClipperLib::TEdge* e2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::E2InsertsBeforeE1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "E2InsertsBeforeE1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e1, e2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.IsEvenOddFillType
bool Pathfinding::ClipperLib::Clipper::IsEvenOddFillType(::Pathfinding::ClipperLib::TEdge* edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::IsEvenOddFillType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEvenOddFillType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, edge);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.IsEvenOddAltFillType
bool Pathfinding::ClipperLib::Clipper::IsEvenOddAltFillType(::Pathfinding::ClipperLib::TEdge* edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::IsEvenOddAltFillType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEvenOddAltFillType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, edge);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.IsContributing
bool Pathfinding::ClipperLib::Clipper::IsContributing(::Pathfinding::ClipperLib::TEdge* edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::IsContributing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsContributing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, edge);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.SetWindingCount
void Pathfinding::ClipperLib::Clipper::SetWindingCount(::Pathfinding::ClipperLib::TEdge* edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::SetWindingCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWindingCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.AddEdgeToSEL
void Pathfinding::ClipperLib::Clipper::AddEdgeToSEL(::Pathfinding::ClipperLib::TEdge* edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::AddEdgeToSEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEdgeToSEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.CopyAELToSEL
void Pathfinding::ClipperLib::Clipper::CopyAELToSEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::CopyAELToSEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyAELToSEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.SwapPositionsInAEL
void Pathfinding::ClipperLib::Clipper::SwapPositionsInAEL(::Pathfinding::ClipperLib::TEdge* edge1, ::Pathfinding::ClipperLib::TEdge* edge2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::SwapPositionsInAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapPositionsInAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge1), ::il2cpp_utils::ExtractType(edge2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge1, edge2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.SwapPositionsInSEL
void Pathfinding::ClipperLib::Clipper::SwapPositionsInSEL(::Pathfinding::ClipperLib::TEdge* edge1, ::Pathfinding::ClipperLib::TEdge* edge2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::SwapPositionsInSEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapPositionsInSEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge1), ::il2cpp_utils::ExtractType(edge2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge1, edge2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.AddLocalMaxPoly
void Pathfinding::ClipperLib::Clipper::AddLocalMaxPoly(::Pathfinding::ClipperLib::TEdge* e1, ::Pathfinding::ClipperLib::TEdge* e2, ::Pathfinding::ClipperLib::IntPoint pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::AddLocalMaxPoly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLocalMaxPoly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2), ::il2cpp_utils::ExtractType(pt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e1, e2, pt);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.AddLocalMinPoly
::Pathfinding::ClipperLib::OutPt* Pathfinding::ClipperLib::Clipper::AddLocalMinPoly(::Pathfinding::ClipperLib::TEdge* e1, ::Pathfinding::ClipperLib::TEdge* e2, ::Pathfinding::ClipperLib::IntPoint pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::AddLocalMinPoly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLocalMinPoly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2), ::il2cpp_utils::ExtractType(pt)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::OutPt*, false>(this, ___internal__method, e1, e2, pt);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.CreateOutRec
::Pathfinding::ClipperLib::OutRec* Pathfinding::ClipperLib::Clipper::CreateOutRec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::CreateOutRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOutRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::OutRec*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.AddOutPt
::Pathfinding::ClipperLib::OutPt* Pathfinding::ClipperLib::Clipper::AddOutPt(::Pathfinding::ClipperLib::TEdge* e, ::Pathfinding::ClipperLib::IntPoint pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::AddOutPt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOutPt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(pt)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::OutPt*, false>(this, ___internal__method, e, pt);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.HorzSegmentsOverlap
bool Pathfinding::ClipperLib::Clipper::HorzSegmentsOverlap(::Pathfinding::ClipperLib::IntPoint Pt1a, ::Pathfinding::ClipperLib::IntPoint Pt1b, ::Pathfinding::ClipperLib::IntPoint Pt2a, ::Pathfinding::ClipperLib::IntPoint Pt2b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::HorzSegmentsOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HorzSegmentsOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Pt1a), ::il2cpp_utils::ExtractType(Pt1b), ::il2cpp_utils::ExtractType(Pt2a), ::il2cpp_utils::ExtractType(Pt2b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, Pt1a, Pt1b, Pt2a, Pt2b);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.SetHoleState
void Pathfinding::ClipperLib::Clipper::SetHoleState(::Pathfinding::ClipperLib::TEdge* e, ::Pathfinding::ClipperLib::OutRec* outRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::SetHoleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHoleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(outRec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, outRec);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.GetDx
double Pathfinding::ClipperLib::Clipper::GetDx(::Pathfinding::ClipperLib::IntPoint pt1, ::Pathfinding::ClipperLib::IntPoint pt2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::GetDx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt1), ::il2cpp_utils::ExtractType(pt2)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, pt1, pt2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.FirstIsBottomPt
bool Pathfinding::ClipperLib::Clipper::FirstIsBottomPt(::Pathfinding::ClipperLib::OutPt* btmPt1, ::Pathfinding::ClipperLib::OutPt* btmPt2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::FirstIsBottomPt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirstIsBottomPt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btmPt1), ::il2cpp_utils::ExtractType(btmPt2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, btmPt1, btmPt2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.GetBottomPt
::Pathfinding::ClipperLib::OutPt* Pathfinding::ClipperLib::Clipper::GetBottomPt(::Pathfinding::ClipperLib::OutPt* pp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::GetBottomPt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBottomPt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pp)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::OutPt*, false>(this, ___internal__method, pp);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.GetLowermostRec
::Pathfinding::ClipperLib::OutRec* Pathfinding::ClipperLib::Clipper::GetLowermostRec(::Pathfinding::ClipperLib::OutRec* outRec1, ::Pathfinding::ClipperLib::OutRec* outRec2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::GetLowermostRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLowermostRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outRec1), ::il2cpp_utils::ExtractType(outRec2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::OutRec*, false>(this, ___internal__method, outRec1, outRec2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.Param1RightOfParam2
bool Pathfinding::ClipperLib::Clipper::Param1RightOfParam2(::Pathfinding::ClipperLib::OutRec* outRec1, ::Pathfinding::ClipperLib::OutRec* outRec2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::Param1RightOfParam2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Param1RightOfParam2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outRec1), ::il2cpp_utils::ExtractType(outRec2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, outRec1, outRec2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.GetOutRec
::Pathfinding::ClipperLib::OutRec* Pathfinding::ClipperLib::Clipper::GetOutRec(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::GetOutRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::OutRec*, false>(this, ___internal__method, idx);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.AppendPolygon
void Pathfinding::ClipperLib::Clipper::AppendPolygon(::Pathfinding::ClipperLib::TEdge* e1, ::Pathfinding::ClipperLib::TEdge* e2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::AppendPolygon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendPolygon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e1, e2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.ReversePolyPtLinks
void Pathfinding::ClipperLib::Clipper::ReversePolyPtLinks(::Pathfinding::ClipperLib::OutPt* pp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::ReversePolyPtLinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReversePolyPtLinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pp);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.SwapSides
void Pathfinding::ClipperLib::Clipper::SwapSides(::Pathfinding::ClipperLib::TEdge* edge1, ::Pathfinding::ClipperLib::TEdge* edge2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::SwapSides");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Clipper", "SwapSides", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge1), ::il2cpp_utils::ExtractType(edge2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, edge1, edge2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.SwapPolyIndexes
void Pathfinding::ClipperLib::Clipper::SwapPolyIndexes(::Pathfinding::ClipperLib::TEdge* edge1, ::Pathfinding::ClipperLib::TEdge* edge2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::SwapPolyIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Clipper", "SwapPolyIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge1), ::il2cpp_utils::ExtractType(edge2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, edge1, edge2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.IntersectEdges
void Pathfinding::ClipperLib::Clipper::IntersectEdges(::Pathfinding::ClipperLib::TEdge* e1, ::Pathfinding::ClipperLib::TEdge* e2, ::Pathfinding::ClipperLib::IntPoint pt, bool protect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::IntersectEdges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IntersectEdges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2), ::il2cpp_utils::ExtractType(pt), ::il2cpp_utils::ExtractType(protect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e1, e2, pt, protect);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.DeleteFromAEL
void Pathfinding::ClipperLib::Clipper::DeleteFromAEL(::Pathfinding::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::DeleteFromAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteFromAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.DeleteFromSEL
void Pathfinding::ClipperLib::Clipper::DeleteFromSEL(::Pathfinding::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::DeleteFromSEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteFromSEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.UpdateEdgeIntoAEL
void Pathfinding::ClipperLib::Clipper::UpdateEdgeIntoAEL(ByRef<::Pathfinding::ClipperLib::TEdge*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::UpdateEdgeIntoAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEdgeIntoAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(e));
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.ProcessHorizontals
void Pathfinding::ClipperLib::Clipper::ProcessHorizontals(bool isTopOfScanbeam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::ProcessHorizontals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHorizontals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isTopOfScanbeam)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isTopOfScanbeam);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.GetHorzDirection
void Pathfinding::ClipperLib::Clipper::GetHorzDirection(::Pathfinding::ClipperLib::TEdge* HorzEdge, ByRef<::Pathfinding::ClipperLib::Direction> Dir, ByRef<int64_t> Left, ByRef<int64_t> Right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::GetHorzDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHorzDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(HorzEdge), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::ClipperLib::Direction&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, HorzEdge, byref(Dir), byref(Left), byref(Right));
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.PrepareHorzJoins
void Pathfinding::ClipperLib::Clipper::PrepareHorzJoins(::Pathfinding::ClipperLib::TEdge* horzEdge, bool isTopOfScanbeam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::PrepareHorzJoins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareHorzJoins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(horzEdge), ::il2cpp_utils::ExtractType(isTopOfScanbeam)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, horzEdge, isTopOfScanbeam);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.ProcessHorizontal
void Pathfinding::ClipperLib::Clipper::ProcessHorizontal(::Pathfinding::ClipperLib::TEdge* horzEdge, bool isTopOfScanbeam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::ProcessHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(horzEdge), ::il2cpp_utils::ExtractType(isTopOfScanbeam)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, horzEdge, isTopOfScanbeam);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.GetNextInAEL
::Pathfinding::ClipperLib::TEdge* Pathfinding::ClipperLib::Clipper::GetNextInAEL(::Pathfinding::ClipperLib::TEdge* e, ::Pathfinding::ClipperLib::Direction Direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::GetNextInAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextInAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(Direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::TEdge*, false>(this, ___internal__method, e, Direction);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.IsMaxima
bool Pathfinding::ClipperLib::Clipper::IsMaxima(::Pathfinding::ClipperLib::TEdge* e, double Y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::IsMaxima");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMaxima", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(Y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e, Y);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.IsIntermediate
bool Pathfinding::ClipperLib::Clipper::IsIntermediate(::Pathfinding::ClipperLib::TEdge* e, double Y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::IsIntermediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsIntermediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(Y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e, Y);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.GetMaximaPair
::Pathfinding::ClipperLib::TEdge* Pathfinding::ClipperLib::Clipper::GetMaximaPair(::Pathfinding::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::GetMaximaPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaximaPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::TEdge*, false>(this, ___internal__method, e);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.ProcessIntersections
bool Pathfinding::ClipperLib::Clipper::ProcessIntersections(int64_t botY, int64_t topY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::ProcessIntersections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessIntersections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(botY), ::il2cpp_utils::ExtractType(topY)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, botY, topY);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.BuildIntersectList
void Pathfinding::ClipperLib::Clipper::BuildIntersectList(int64_t botY, int64_t topY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::BuildIntersectList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildIntersectList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(botY), ::il2cpp_utils::ExtractType(topY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, botY, topY);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.EdgesAdjacent
bool Pathfinding::ClipperLib::Clipper::EdgesAdjacent(::Pathfinding::ClipperLib::IntersectNode* inode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::EdgesAdjacent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EdgesAdjacent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inode);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.FixupIntersectionOrder
bool Pathfinding::ClipperLib::Clipper::FixupIntersectionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::FixupIntersectionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupIntersectionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.ProcessIntersectList
void Pathfinding::ClipperLib::Clipper::ProcessIntersectList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::ProcessIntersectList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessIntersectList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.Round
int64_t Pathfinding::ClipperLib::Clipper::Round(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::Round");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Clipper", "Round", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.TopX
int64_t Pathfinding::ClipperLib::Clipper::TopX(::Pathfinding::ClipperLib::TEdge* edge, int64_t currentY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::TopX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Clipper", "TopX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge), ::il2cpp_utils::ExtractType(currentY)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, edge, currentY);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.InsertIntersectNode
void Pathfinding::ClipperLib::Clipper::InsertIntersectNode(::Pathfinding::ClipperLib::TEdge* e1, ::Pathfinding::ClipperLib::TEdge* e2, ::Pathfinding::ClipperLib::IntPoint pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::InsertIntersectNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertIntersectNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2), ::il2cpp_utils::ExtractType(pt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e1, e2, pt);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.SwapIntersectNodes
void Pathfinding::ClipperLib::Clipper::SwapIntersectNodes(::Pathfinding::ClipperLib::IntersectNode* int1, ::Pathfinding::ClipperLib::IntersectNode* int2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::SwapIntersectNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapIntersectNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(int1), ::il2cpp_utils::ExtractType(int2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, int1, int2);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.IntersectPoint
bool Pathfinding::ClipperLib::Clipper::IntersectPoint(::Pathfinding::ClipperLib::TEdge* edge1, ::Pathfinding::ClipperLib::TEdge* edge2, ByRef<::Pathfinding::ClipperLib::IntPoint> ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::IntersectPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IntersectPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge1), ::il2cpp_utils::ExtractType(edge2), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::ClipperLib::IntPoint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, edge1, edge2, byref(ip));
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.DisposeIntersectNodes
void Pathfinding::ClipperLib::Clipper::DisposeIntersectNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::DisposeIntersectNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeIntersectNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.ProcessEdgesAtTopOfScanbeam
void Pathfinding::ClipperLib::Clipper::ProcessEdgesAtTopOfScanbeam(int64_t topY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::ProcessEdgesAtTopOfScanbeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessEdgesAtTopOfScanbeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topY);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.DoMaxima
void Pathfinding::ClipperLib::Clipper::DoMaxima(::Pathfinding::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::DoMaxima");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoMaxima", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.Orientation
bool Pathfinding::ClipperLib::Clipper::Orientation(::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>* poly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::Orientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Clipper", "Orientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, poly);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.PointCount
int Pathfinding::ClipperLib::Clipper::PointCount(::Pathfinding::ClipperLib::OutPt* pts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::PointCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pts)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pts);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.BuildResult
void Pathfinding::ClipperLib::Clipper::BuildResult(::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>*>* polyg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::BuildResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(polyg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, polyg);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.BuildResult2
void Pathfinding::ClipperLib::Clipper::BuildResult2(::Pathfinding::ClipperLib::PolyTree* polytree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::BuildResult2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildResult2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(polytree)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, polytree);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.FixupOutPolygon
void Pathfinding::ClipperLib::Clipper::FixupOutPolygon(::Pathfinding::ClipperLib::OutRec* outRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::FixupOutPolygon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupOutPolygon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outRec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outRec);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.DupOutPt
::Pathfinding::ClipperLib::OutPt* Pathfinding::ClipperLib::Clipper::DupOutPt(::Pathfinding::ClipperLib::OutPt* outPt, bool InsertAfter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::DupOutPt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DupOutPt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outPt), ::il2cpp_utils::ExtractType(InsertAfter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ClipperLib::OutPt*, false>(this, ___internal__method, outPt, InsertAfter);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.GetOverlap
bool Pathfinding::ClipperLib::Clipper::GetOverlap(int64_t a1, int64_t a2, int64_t b1, int64_t b2, ByRef<int64_t> Left, ByRef<int64_t> Right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::GetOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a1), ::il2cpp_utils::ExtractType(a2), ::il2cpp_utils::ExtractType(b1), ::il2cpp_utils::ExtractType(b2), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a1, a2, b1, b2, byref(Left), byref(Right));
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.JoinHorz
bool Pathfinding::ClipperLib::Clipper::JoinHorz(::Pathfinding::ClipperLib::OutPt* op1, ::Pathfinding::ClipperLib::OutPt* op1b, ::Pathfinding::ClipperLib::OutPt* op2, ::Pathfinding::ClipperLib::OutPt* op2b, ::Pathfinding::ClipperLib::IntPoint Pt, bool DiscardLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::JoinHorz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinHorz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op1), ::il2cpp_utils::ExtractType(op1b), ::il2cpp_utils::ExtractType(op2), ::il2cpp_utils::ExtractType(op2b), ::il2cpp_utils::ExtractType(Pt), ::il2cpp_utils::ExtractType(DiscardLeft)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, op1, op1b, op2, op2b, Pt, DiscardLeft);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.JoinPoints
bool Pathfinding::ClipperLib::Clipper::JoinPoints(::Pathfinding::ClipperLib::Join* j, ByRef<::Pathfinding::ClipperLib::OutPt*> p1, ByRef<::Pathfinding::ClipperLib::OutPt*> p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::JoinPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(j), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::ClipperLib::OutPt*&>(), ::il2cpp_utils::ExtractIndependentType<::Pathfinding::ClipperLib::OutPt*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, j, byref(p1), byref(p2));
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.Poly2ContainsPoly1
bool Pathfinding::ClipperLib::Clipper::Poly2ContainsPoly1(::Pathfinding::ClipperLib::OutPt* outPt1, ::Pathfinding::ClipperLib::OutPt* outPt2, bool UseFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::Poly2ContainsPoly1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Poly2ContainsPoly1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outPt1), ::il2cpp_utils::ExtractType(outPt2), ::il2cpp_utils::ExtractType(UseFullRange)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, outPt1, outPt2, UseFullRange);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.FixupFirstLefts1
void Pathfinding::ClipperLib::Clipper::FixupFirstLefts1(::Pathfinding::ClipperLib::OutRec* OldOutRec, ::Pathfinding::ClipperLib::OutRec* NewOutRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::FixupFirstLefts1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupFirstLefts1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(OldOutRec), ::il2cpp_utils::ExtractType(NewOutRec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, OldOutRec, NewOutRec);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.FixupFirstLefts2
void Pathfinding::ClipperLib::Clipper::FixupFirstLefts2(::Pathfinding::ClipperLib::OutRec* OldOutRec, ::Pathfinding::ClipperLib::OutRec* NewOutRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::FixupFirstLefts2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupFirstLefts2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(OldOutRec), ::il2cpp_utils::ExtractType(NewOutRec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, OldOutRec, NewOutRec);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.JoinCommonEdges
void Pathfinding::ClipperLib::Clipper::JoinCommonEdges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::JoinCommonEdges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinCommonEdges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.UpdateOutPtIdxs
void Pathfinding::ClipperLib::Clipper::UpdateOutPtIdxs(::Pathfinding::ClipperLib::OutRec* outrec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::UpdateOutPtIdxs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOutPtIdxs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outrec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outrec);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.DoSimplePolygons
void Pathfinding::ClipperLib::Clipper::DoSimplePolygons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::DoSimplePolygons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoSimplePolygons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.Area
double Pathfinding::ClipperLib::Clipper::Area(::System::Collections::Generic::List_1<::Pathfinding::ClipperLib::IntPoint>* poly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::Area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.ClipperLib", "Clipper", "Area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poly)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, poly);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.Area
double Pathfinding::ClipperLib::Clipper::Area(::Pathfinding::ClipperLib::OutRec* outRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::Area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outRec)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, outRec);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.Clear
void Pathfinding::ClipperLib::Clipper::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ClipperLib::ClipperBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ClipperLib.Clipper.Reset
void Pathfinding::ClipperLib::Clipper::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ClipperLib::Clipper::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ClipperLib::ClipperBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.ClipperLib.ClipperException
#include "Pathfinding/ClipperLib/ClipperException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.EncryptionAlgorithm
#include "Pathfinding/Ionic/Zip/EncryptionAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.EncryptionAlgorithm None
::Pathfinding::Ionic::Zip::EncryptionAlgorithm Pathfinding::Ionic::Zip::EncryptionAlgorithm::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::EncryptionAlgorithm::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::EncryptionAlgorithm>("Pathfinding.Ionic.Zip", "EncryptionAlgorithm", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.EncryptionAlgorithm None
void Pathfinding::Ionic::Zip::EncryptionAlgorithm::_set_None(::Pathfinding::Ionic::Zip::EncryptionAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::EncryptionAlgorithm::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "EncryptionAlgorithm", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.EncryptionAlgorithm PkzipWeak
::Pathfinding::Ionic::Zip::EncryptionAlgorithm Pathfinding::Ionic::Zip::EncryptionAlgorithm::_get_PkzipWeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::EncryptionAlgorithm::_get_PkzipWeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::EncryptionAlgorithm>("Pathfinding.Ionic.Zip", "EncryptionAlgorithm", "PkzipWeak"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.EncryptionAlgorithm PkzipWeak
void Pathfinding::Ionic::Zip::EncryptionAlgorithm::_set_PkzipWeak(::Pathfinding::Ionic::Zip::EncryptionAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::EncryptionAlgorithm::_set_PkzipWeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "EncryptionAlgorithm", "PkzipWeak", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.EncryptionAlgorithm Unsupported
::Pathfinding::Ionic::Zip::EncryptionAlgorithm Pathfinding::Ionic::Zip::EncryptionAlgorithm::_get_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::EncryptionAlgorithm::_get_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::EncryptionAlgorithm>("Pathfinding.Ionic.Zip", "EncryptionAlgorithm", "Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.EncryptionAlgorithm Unsupported
void Pathfinding::Ionic::Zip::EncryptionAlgorithm::_set_Unsupported(::Pathfinding::Ionic::Zip::EncryptionAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::EncryptionAlgorithm::_set_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "EncryptionAlgorithm", "Unsupported", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zip::EncryptionAlgorithm::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::EncryptionAlgorithm::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Ionic.Zip.WriteDelegate
#include "Pathfinding/Ionic/Zip/WriteDelegate.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Ionic.Zip.WriteDelegate.Invoke
void Pathfinding::Ionic::Zip::WriteDelegate::Invoke(::StringW entryName, ::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::WriteDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Ionic::Zip::WriteDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entryName, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Ionic.Zip.OpenDelegate
#include "Pathfinding/Ionic/Zip/OpenDelegate.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Ionic.Zip.OpenDelegate.Invoke
::System::IO::Stream* Pathfinding::Ionic::Zip::OpenDelegate::Invoke(::StringW entryName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OpenDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Ionic::Zip::OpenDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, entryName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Ionic.Zip.CloseDelegate
#include "Pathfinding/Ionic/Zip/CloseDelegate.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Ionic.Zip.CloseDelegate.Invoke
void Pathfinding::Ionic::Zip::CloseDelegate::Invoke(::StringW entryName, ::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CloseDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Ionic::Zip::CloseDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entryName, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Ionic.Zip.SetCompressionCallback
#include "Pathfinding/Ionic/Zip/SetCompressionCallback.hpp"
// Including type: Pathfinding.Ionic.Zlib.CompressionLevel
#include "Pathfinding/Ionic/Zlib/CompressionLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Ionic.Zip.SetCompressionCallback.Invoke
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zip::SetCompressionCallback::Invoke(::StringW localFileName, ::StringW fileNameInArchive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SetCompressionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Ionic::Zip::SetCompressionCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zlib::CompressionLevel, false>(this, ___internal__method, localFileName, fileNameInArchive);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.ZipProgressEventType
#include "Pathfinding/Ionic/Zip/ZipProgressEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Adding_Started
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Adding_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Adding_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Adding_Started"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Adding_Started
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Adding_Started(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Adding_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Adding_Started", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Adding_AfterAddEntry
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Adding_AfterAddEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Adding_AfterAddEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Adding_AfterAddEntry"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Adding_AfterAddEntry
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Adding_AfterAddEntry(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Adding_AfterAddEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Adding_AfterAddEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Adding_Completed
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Adding_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Adding_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Adding_Completed"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Adding_Completed
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Adding_Completed(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Adding_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Adding_Completed", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Reading_Started
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Reading_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Reading_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Reading_Started"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Reading_Started
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Reading_Started(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Reading_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Reading_Started", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Reading_BeforeReadEntry
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Reading_BeforeReadEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Reading_BeforeReadEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Reading_BeforeReadEntry"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Reading_BeforeReadEntry
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Reading_BeforeReadEntry(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Reading_BeforeReadEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Reading_BeforeReadEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Reading_AfterReadEntry
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Reading_AfterReadEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Reading_AfterReadEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Reading_AfterReadEntry"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Reading_AfterReadEntry
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Reading_AfterReadEntry(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Reading_AfterReadEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Reading_AfterReadEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Reading_Completed
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Reading_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Reading_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Reading_Completed"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Reading_Completed
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Reading_Completed(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Reading_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Reading_Completed", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Reading_ArchiveBytesRead
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Reading_ArchiveBytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Reading_ArchiveBytesRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Reading_ArchiveBytesRead"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Reading_ArchiveBytesRead
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Reading_ArchiveBytesRead(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Reading_ArchiveBytesRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Reading_ArchiveBytesRead", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_Started
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_Started"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_Started
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_Started(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_Started", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_BeforeWriteEntry
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_BeforeWriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_BeforeWriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_BeforeWriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_BeforeWriteEntry
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_BeforeWriteEntry(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_BeforeWriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_BeforeWriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_AfterWriteEntry
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_AfterWriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_AfterWriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_AfterWriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_AfterWriteEntry
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_AfterWriteEntry(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_AfterWriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_AfterWriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_Completed
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_Completed"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_Completed
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_Completed(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_Completed", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_AfterSaveTempArchive
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_AfterSaveTempArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_AfterSaveTempArchive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_AfterSaveTempArchive"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_AfterSaveTempArchive
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_AfterSaveTempArchive(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_AfterSaveTempArchive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_AfterSaveTempArchive", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_BeforeRenameTempArchive
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_BeforeRenameTempArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_BeforeRenameTempArchive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_BeforeRenameTempArchive"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_BeforeRenameTempArchive
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_BeforeRenameTempArchive(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_BeforeRenameTempArchive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_BeforeRenameTempArchive", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_AfterRenameTempArchive
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_AfterRenameTempArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_AfterRenameTempArchive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_AfterRenameTempArchive"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_AfterRenameTempArchive
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_AfterRenameTempArchive(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_AfterRenameTempArchive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_AfterRenameTempArchive", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_AfterCompileSelfExtractor
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_AfterCompileSelfExtractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_AfterCompileSelfExtractor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_AfterCompileSelfExtractor"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_AfterCompileSelfExtractor
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_AfterCompileSelfExtractor(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_AfterCompileSelfExtractor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_AfterCompileSelfExtractor", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_EntryBytesRead
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_EntryBytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Saving_EntryBytesRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_EntryBytesRead"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Saving_EntryBytesRead
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_EntryBytesRead(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Saving_EntryBytesRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Saving_EntryBytesRead", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_BeforeExtractEntry
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_BeforeExtractEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_BeforeExtractEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_BeforeExtractEntry"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_BeforeExtractEntry
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_BeforeExtractEntry(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_BeforeExtractEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_BeforeExtractEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_AfterExtractEntry
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_AfterExtractEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_AfterExtractEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_AfterExtractEntry"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_AfterExtractEntry
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_AfterExtractEntry(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_AfterExtractEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_AfterExtractEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_ExtractEntryWouldOverwrite
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_ExtractEntryWouldOverwrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_ExtractEntryWouldOverwrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_ExtractEntryWouldOverwrite"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_ExtractEntryWouldOverwrite
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_ExtractEntryWouldOverwrite(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_ExtractEntryWouldOverwrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_ExtractEntryWouldOverwrite", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_EntryBytesWritten
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_EntryBytesWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_EntryBytesWritten");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_EntryBytesWritten"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_EntryBytesWritten
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_EntryBytesWritten(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_EntryBytesWritten");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_EntryBytesWritten", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_BeforeExtractAll
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_BeforeExtractAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_BeforeExtractAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_BeforeExtractAll"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_BeforeExtractAll
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_BeforeExtractAll(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_BeforeExtractAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_BeforeExtractAll", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_AfterExtractAll
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_AfterExtractAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Extracting_AfterExtractAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_AfterExtractAll"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Extracting_AfterExtractAll
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_AfterExtractAll(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Extracting_AfterExtractAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Extracting_AfterExtractAll", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Error_Saving
::Pathfinding::Ionic::Zip::ZipProgressEventType Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Error_Saving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_get_Error_Saving");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ZipProgressEventType>("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Error_Saving"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ZipProgressEventType Error_Saving
void Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Error_Saving(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::_set_Error_Saving");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ZipProgressEventType", "Error_Saving", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zip::ZipProgressEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.ZipProgressEventArgs
#include "Pathfinding/Ionic/Zip/ZipProgressEventArgs.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipEntry
#include "Pathfinding/Ionic/Zip/ZipEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _entriesTotal
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__entriesTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__entriesTotal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entriesTotal"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cancel
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__cancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zip.ZipEntry _latestEntry
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zip::ZipEntry*& Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__latestEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__latestEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_latestEntry"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zip::ZipEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zip.ZipProgressEventType _flavor
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zip::ZipProgressEventType& Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__flavor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__flavor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flavor"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zip::ZipProgressEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _archiveName
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__archiveName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__archiveName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archiveName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _bytesTransferred
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__bytesTransferred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__bytesTransferred");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesTransferred"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _totalBytesToTransfer
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__totalBytesToTransfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::dyn__totalBytesToTransfer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalBytesToTransfer"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipProgressEventArgs.set_EntriesTotal
void Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_EntriesTotal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_EntriesTotal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EntriesTotal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipProgressEventArgs.set_CurrentEntry
void Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_CurrentEntry(::Pathfinding::Ionic::Zip::ZipEntry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_CurrentEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipProgressEventArgs.get_Cancel
bool Pathfinding::Ionic::Zip::ZipProgressEventArgs::get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::get_Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipProgressEventArgs.set_EventType
void Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_EventType(::Pathfinding::Ionic::Zip::ZipProgressEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_EventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipProgressEventArgs.set_ArchiveName
void Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_ArchiveName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_ArchiveName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ArchiveName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipProgressEventArgs.set_BytesTransferred
void Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_BytesTransferred(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_BytesTransferred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BytesTransferred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipProgressEventArgs.set_TotalBytesToTransfer
void Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_TotalBytesToTransfer(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipProgressEventArgs::set_TotalBytesToTransfer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TotalBytesToTransfer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.ReadProgressEventArgs
#include "Pathfinding/Ionic/Zip/ReadProgressEventArgs.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipEntry
#include "Pathfinding/Ionic/Zip/ZipEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Ionic.Zip.ReadProgressEventArgs.Before
::Pathfinding::Ionic::Zip::ReadProgressEventArgs* Pathfinding::Ionic::Zip::ReadProgressEventArgs::Before(::StringW archiveName, int entriesTotal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ReadProgressEventArgs::Before");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ReadProgressEventArgs", "Before", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName), ::il2cpp_utils::ExtractType(entriesTotal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ReadProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName, entriesTotal);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ReadProgressEventArgs.After
::Pathfinding::Ionic::Zip::ReadProgressEventArgs* Pathfinding::Ionic::Zip::ReadProgressEventArgs::After(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, int entriesTotal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ReadProgressEventArgs::After");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ReadProgressEventArgs", "After", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(entriesTotal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ReadProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName, entry, entriesTotal);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ReadProgressEventArgs.Started
::Pathfinding::Ionic::Zip::ReadProgressEventArgs* Pathfinding::Ionic::Zip::ReadProgressEventArgs::Started(::StringW archiveName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ReadProgressEventArgs::Started");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ReadProgressEventArgs", "Started", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ReadProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ReadProgressEventArgs.ByteUpdate
::Pathfinding::Ionic::Zip::ReadProgressEventArgs* Pathfinding::Ionic::Zip::ReadProgressEventArgs::ByteUpdate(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, int64_t bytesXferred, int64_t totalBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ReadProgressEventArgs::ByteUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ReadProgressEventArgs", "ByteUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(bytesXferred), ::il2cpp_utils::ExtractType(totalBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ReadProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName, entry, bytesXferred, totalBytes);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ReadProgressEventArgs.Completed
::Pathfinding::Ionic::Zip::ReadProgressEventArgs* Pathfinding::Ionic::Zip::ReadProgressEventArgs::Completed(::StringW archiveName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ReadProgressEventArgs::Completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ReadProgressEventArgs", "Completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ReadProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.AddProgressEventArgs
#include "Pathfinding/Ionic/Zip/AddProgressEventArgs.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipEntry
#include "Pathfinding/Ionic/Zip/ZipEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Ionic.Zip.AddProgressEventArgs.AfterEntry
::Pathfinding::Ionic::Zip::AddProgressEventArgs* Pathfinding::Ionic::Zip::AddProgressEventArgs::AfterEntry(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, int entriesTotal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::AddProgressEventArgs::AfterEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "AddProgressEventArgs", "AfterEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(entriesTotal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::AddProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName, entry, entriesTotal);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.SaveProgressEventArgs
#include "Pathfinding/Ionic/Zip/SaveProgressEventArgs.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipEntry
#include "Pathfinding/Ionic/Zip/ZipEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _entriesSaved
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zip::SaveProgressEventArgs::dyn__entriesSaved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SaveProgressEventArgs::dyn__entriesSaved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entriesSaved"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SaveProgressEventArgs.ByteUpdate
::Pathfinding::Ionic::Zip::SaveProgressEventArgs* Pathfinding::Ionic::Zip::SaveProgressEventArgs::ByteUpdate(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, int64_t bytesXferred, int64_t totalBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SaveProgressEventArgs::ByteUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SaveProgressEventArgs", "ByteUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(bytesXferred), ::il2cpp_utils::ExtractType(totalBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::SaveProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName, entry, bytesXferred, totalBytes);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SaveProgressEventArgs.Started
::Pathfinding::Ionic::Zip::SaveProgressEventArgs* Pathfinding::Ionic::Zip::SaveProgressEventArgs::Started(::StringW archiveName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SaveProgressEventArgs::Started");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SaveProgressEventArgs", "Started", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::SaveProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SaveProgressEventArgs.Completed
::Pathfinding::Ionic::Zip::SaveProgressEventArgs* Pathfinding::Ionic::Zip::SaveProgressEventArgs::Completed(::StringW archiveName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SaveProgressEventArgs::Completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SaveProgressEventArgs", "Completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::SaveProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.ExtractProgressEventArgs
#include "Pathfinding/Ionic/Zip/ExtractProgressEventArgs.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipEntry
#include "Pathfinding/Ionic/Zip/ZipEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _target
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Ionic::Zip::ExtractProgressEventArgs::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractProgressEventArgs::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ExtractProgressEventArgs.BeforeExtractEntry
::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* Pathfinding::Ionic::Zip::ExtractProgressEventArgs::BeforeExtractEntry(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, ::StringW extractLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractProgressEventArgs::BeforeExtractEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ExtractProgressEventArgs", "BeforeExtractEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(extractLocation)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ExtractProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName, entry, extractLocation);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ExtractProgressEventArgs.ExtractExisting
::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* Pathfinding::Ionic::Zip::ExtractProgressEventArgs::ExtractExisting(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, ::StringW extractLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractProgressEventArgs::ExtractExisting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ExtractProgressEventArgs", "ExtractExisting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(extractLocation)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ExtractProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName, entry, extractLocation);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ExtractProgressEventArgs.AfterExtractEntry
::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* Pathfinding::Ionic::Zip::ExtractProgressEventArgs::AfterExtractEntry(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, ::StringW extractLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractProgressEventArgs::AfterExtractEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ExtractProgressEventArgs", "AfterExtractEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(extractLocation)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ExtractProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName, entry, extractLocation);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ExtractProgressEventArgs.ByteUpdate
::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* Pathfinding::Ionic::Zip::ExtractProgressEventArgs::ByteUpdate(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, int64_t bytesWritten, int64_t totalBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractProgressEventArgs::ByteUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ExtractProgressEventArgs", "ByteUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(bytesWritten), ::il2cpp_utils::ExtractType(totalBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ExtractProgressEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName, entry, bytesWritten, totalBytes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.ZipErrorEventArgs
#include "Pathfinding/Ionic/Zip/ZipErrorEventArgs.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipEntry
#include "Pathfinding/Ionic/Zip/ZipEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Exception _exc
[[deprecated("Use field access instead!")]] ::System::Exception*& Pathfinding::Ionic::Zip::ZipErrorEventArgs::dyn__exc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipErrorEventArgs::dyn__exc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exc"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipErrorEventArgs.Saving
::Pathfinding::Ionic::Zip::ZipErrorEventArgs* Pathfinding::Ionic::Zip::ZipErrorEventArgs::Saving(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, ::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipErrorEventArgs::Saving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ZipErrorEventArgs", "Saving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveName), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ZipErrorEventArgs*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveName, entry, exception);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.BadPasswordException
#include "Pathfinding/Ionic/Zip/BadPasswordException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.BadReadException
#include "Pathfinding/Ionic/Zip/BadReadException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.BadCrcException
#include "Pathfinding/Ionic/Zip/BadCrcException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.BadStateException
#include "Pathfinding/Ionic/Zip/BadStateException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.ZipException
#include "Pathfinding/Ionic/Zip/ZipException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.ExtractExistingFileAction
#include "Pathfinding/Ionic/Zip/ExtractExistingFileAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ExtractExistingFileAction Throw
::Pathfinding::Ionic::Zip::ExtractExistingFileAction Pathfinding::Ionic::Zip::ExtractExistingFileAction::_get_Throw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractExistingFileAction::_get_Throw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ExtractExistingFileAction>("Pathfinding.Ionic.Zip", "ExtractExistingFileAction", "Throw"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ExtractExistingFileAction Throw
void Pathfinding::Ionic::Zip::ExtractExistingFileAction::_set_Throw(::Pathfinding::Ionic::Zip::ExtractExistingFileAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractExistingFileAction::_set_Throw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ExtractExistingFileAction", "Throw", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ExtractExistingFileAction OverwriteSilently
::Pathfinding::Ionic::Zip::ExtractExistingFileAction Pathfinding::Ionic::Zip::ExtractExistingFileAction::_get_OverwriteSilently() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractExistingFileAction::_get_OverwriteSilently");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ExtractExistingFileAction>("Pathfinding.Ionic.Zip", "ExtractExistingFileAction", "OverwriteSilently"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ExtractExistingFileAction OverwriteSilently
void Pathfinding::Ionic::Zip::ExtractExistingFileAction::_set_OverwriteSilently(::Pathfinding::Ionic::Zip::ExtractExistingFileAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractExistingFileAction::_set_OverwriteSilently");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ExtractExistingFileAction", "OverwriteSilently", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ExtractExistingFileAction DoNotOverwrite
::Pathfinding::Ionic::Zip::ExtractExistingFileAction Pathfinding::Ionic::Zip::ExtractExistingFileAction::_get_DoNotOverwrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractExistingFileAction::_get_DoNotOverwrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ExtractExistingFileAction>("Pathfinding.Ionic.Zip", "ExtractExistingFileAction", "DoNotOverwrite"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ExtractExistingFileAction DoNotOverwrite
void Pathfinding::Ionic::Zip::ExtractExistingFileAction::_set_DoNotOverwrite(::Pathfinding::Ionic::Zip::ExtractExistingFileAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractExistingFileAction::_set_DoNotOverwrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ExtractExistingFileAction", "DoNotOverwrite", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.ExtractExistingFileAction InvokeExtractProgressEvent
::Pathfinding::Ionic::Zip::ExtractExistingFileAction Pathfinding::Ionic::Zip::ExtractExistingFileAction::_get_InvokeExtractProgressEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractExistingFileAction::_get_InvokeExtractProgressEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::ExtractExistingFileAction>("Pathfinding.Ionic.Zip", "ExtractExistingFileAction", "InvokeExtractProgressEvent"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.ExtractExistingFileAction InvokeExtractProgressEvent
void Pathfinding::Ionic::Zip::ExtractExistingFileAction::_set_InvokeExtractProgressEvent(::Pathfinding::Ionic::Zip::ExtractExistingFileAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractExistingFileAction::_set_InvokeExtractProgressEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "ExtractExistingFileAction", "InvokeExtractProgressEvent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zip::ExtractExistingFileAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractExistingFileAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.OffsetStream
#include "Pathfinding/Ionic/Zip/OffsetStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 _originalPosition
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Zip::OffsetStream::dyn__originalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::dyn__originalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _innerStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Pathfinding::Ionic::Zip::OffsetStream::dyn__innerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::dyn__innerStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.System.IDisposable.Dispose
void Pathfinding::Ionic::Zip::OffsetStream::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Ionic::Zip::OffsetStream*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.Read
int Pathfinding::Ionic::Zip::OffsetStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.Write
void Pathfinding::Ionic::Zip::OffsetStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.get_CanRead
bool Pathfinding::Ionic::Zip::OffsetStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.get_CanSeek
bool Pathfinding::Ionic::Zip::OffsetStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.get_CanWrite
bool Pathfinding::Ionic::Zip::OffsetStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.Flush
void Pathfinding::Ionic::Zip::OffsetStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.get_Length
int64_t Pathfinding::Ionic::Zip::OffsetStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.get_Position
int64_t Pathfinding::Ionic::Zip::OffsetStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.set_Position
void Pathfinding::Ionic::Zip::OffsetStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.Seek
int64_t Pathfinding::Ionic::Zip::OffsetStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.SetLength
void Pathfinding::Ionic::Zip::OffsetStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zip.OffsetStream.Close
void Pathfinding::Ionic::Zip::OffsetStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::OffsetStream::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.SharedUtilities
#include "Pathfinding/Ionic/Zip/SharedUtilities.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex doubleDotRegex1
::System::Text::RegularExpressions::Regex* Pathfinding::Ionic::Zip::SharedUtilities::_get_doubleDotRegex1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::_get_doubleDotRegex1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("Pathfinding.Ionic.Zip", "SharedUtilities", "doubleDotRegex1"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex doubleDotRegex1
void Pathfinding::Ionic::Zip::SharedUtilities::_set_doubleDotRegex1(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::_set_doubleDotRegex1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "SharedUtilities", "doubleDotRegex1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding ibm437
::System::Text::Encoding* Pathfinding::Ionic::Zip::SharedUtilities::_get_ibm437() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::_get_ibm437");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("Pathfinding.Ionic.Zip", "SharedUtilities", "ibm437"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding ibm437
void Pathfinding::Ionic::Zip::SharedUtilities::_set_ibm437(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::_set_ibm437");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "SharedUtilities", "ibm437", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding utf8
::System::Text::Encoding* Pathfinding::Ionic::Zip::SharedUtilities::_get_utf8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::_get_utf8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("Pathfinding.Ionic.Zip", "SharedUtilities", "utf8"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding utf8
void Pathfinding::Ionic::Zip::SharedUtilities::_set_utf8(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::_set_utf8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "SharedUtilities", "utf8", value));
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities..cctor
void Pathfinding::Ionic::Zip::SharedUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.GetFileLength
int64_t Pathfinding::Ionic::Zip::SharedUtilities::GetFileLength(::StringW fileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::GetFileLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "GetFileLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fileName);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.SimplifyFwdSlashPath
::StringW Pathfinding::Ionic::Zip::SharedUtilities::SimplifyFwdSlashPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::SimplifyFwdSlashPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "SimplifyFwdSlashPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.NormalizePathForUseInZipFile
::StringW Pathfinding::Ionic::Zip::SharedUtilities::NormalizePathForUseInZipFile(::StringW pathName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::NormalizePathForUseInZipFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "NormalizePathForUseInZipFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pathName);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.StringToByteArray
::ArrayW<uint8_t> Pathfinding::Ionic::Zip::SharedUtilities::StringToByteArray(::StringW value, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::StringToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "StringToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, encoding);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.StringToByteArray
::ArrayW<uint8_t> Pathfinding::Ionic::Zip::SharedUtilities::StringToByteArray(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::StringToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "StringToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.Utf8StringFromBuffer
::StringW Pathfinding::Ionic::Zip::SharedUtilities::Utf8StringFromBuffer(::ArrayW<uint8_t> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::Utf8StringFromBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "Utf8StringFromBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buf);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.StringFromBuffer
::StringW Pathfinding::Ionic::Zip::SharedUtilities::StringFromBuffer(::ArrayW<uint8_t> buf, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::StringFromBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "StringFromBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buf, encoding);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.ReadSignature
int Pathfinding::Ionic::Zip::SharedUtilities::ReadSignature(::System::IO::Stream* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::ReadSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "ReadSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.ReadEntrySignature
int Pathfinding::Ionic::Zip::SharedUtilities::ReadEntrySignature(::System::IO::Stream* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::ReadEntrySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "ReadEntrySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.ReadInt
int Pathfinding::Ionic::Zip::SharedUtilities::ReadInt(::System::IO::Stream* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::ReadInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "ReadInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities._ReadFourBytes
int Pathfinding::Ionic::Zip::SharedUtilities::_ReadFourBytes(::System::IO::Stream* s, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::_ReadFourBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "_ReadFourBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, message);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.FindSignature
int64_t Pathfinding::Ionic::Zip::SharedUtilities::FindSignature(::System::IO::Stream* stream, int SignatureToFind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::FindSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "FindSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(SignatureToFind)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, SignatureToFind);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.AdjustTime_Reverse
::System::DateTime Pathfinding::Ionic::Zip::SharedUtilities::AdjustTime_Reverse(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::AdjustTime_Reverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "AdjustTime_Reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.PackedToDateTime
::System::DateTime Pathfinding::Ionic::Zip::SharedUtilities::PackedToDateTime(int packedDateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::PackedToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "PackedToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packedDateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packedDateTime);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.DateTimeToPacked
int Pathfinding::Ionic::Zip::SharedUtilities::DateTimeToPacked(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::DateTimeToPacked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "DateTimeToPacked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.CreateAndOpenUniqueTempFile
void Pathfinding::Ionic::Zip::SharedUtilities::CreateAndOpenUniqueTempFile(::StringW dir, ByRef<::System::IO::Stream*> fs, ByRef<::StringW> filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::CreateAndOpenUniqueTempFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "CreateAndOpenUniqueTempFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractIndependentType<::System::IO::Stream*&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dir, byref(fs), byref(filename));
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.InternalGetTempFileName
::StringW Pathfinding::Ionic::Zip::SharedUtilities::InternalGetTempFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::InternalGetTempFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "InternalGetTempFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.GenerateRandomStringImpl
::StringW Pathfinding::Ionic::Zip::SharedUtilities::GenerateRandomStringImpl(int length, int delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::GenerateRandomStringImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "GenerateRandomStringImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length, delta);
}
// Autogenerated method: Pathfinding.Ionic.Zip.SharedUtilities.ReadWithRetry
int Pathfinding::Ionic::Zip::SharedUtilities::ReadWithRetry(::System::IO::Stream* s, ::ArrayW<uint8_t> buffer, int offset, int count, ::StringW FileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::SharedUtilities::ReadWithRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "SharedUtilities", "ReadWithRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(FileName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, buffer, offset, count, FileName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.CountingStream
#include "Pathfinding/Ionic/Zip/CountingStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _s
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Pathfinding::Ionic::Zip::CountingStream::dyn__s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::dyn__s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_s"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _bytesWritten
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Zip::CountingStream::dyn__bytesWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::dyn__bytesWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesWritten"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _bytesRead
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Zip::CountingStream::dyn__bytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::dyn__bytesRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesRead"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _initialOffset
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Zip::CountingStream::dyn__initialOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::dyn__initialOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialOffset"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.get_BytesWritten
int64_t Pathfinding::Ionic::Zip::CountingStream::get_BytesWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::get_BytesWritten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesWritten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.get_BytesRead
int64_t Pathfinding::Ionic::Zip::CountingStream::get_BytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::get_BytesRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.Adjust
void Pathfinding::Ionic::Zip::CountingStream::Adjust(int64_t delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::Adjust");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Adjust", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delta);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.get_ComputedPosition
int64_t Pathfinding::Ionic::Zip::CountingStream::get_ComputedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::get_ComputedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ComputedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.Read
int Pathfinding::Ionic::Zip::CountingStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.Write
void Pathfinding::Ionic::Zip::CountingStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.get_CanRead
bool Pathfinding::Ionic::Zip::CountingStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.get_CanSeek
bool Pathfinding::Ionic::Zip::CountingStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.get_CanWrite
bool Pathfinding::Ionic::Zip::CountingStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.Flush
void Pathfinding::Ionic::Zip::CountingStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.get_Length
int64_t Pathfinding::Ionic::Zip::CountingStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.get_Position
int64_t Pathfinding::Ionic::Zip::CountingStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.set_Position
void Pathfinding::Ionic::Zip::CountingStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.Seek
int64_t Pathfinding::Ionic::Zip::CountingStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Pathfinding.Ionic.Zip.CountingStream.SetLength
void Pathfinding::Ionic::Zip::CountingStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CountingStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.ZipCrypto
#include "Pathfinding/Ionic/Zip/ZipCrypto.hpp"
// Including type: Pathfinding.Ionic.Crc.CRC32
#include "Pathfinding/Ionic/Crc/CRC32.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipEntry
#include "Pathfinding/Ionic/Zip/ZipEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _Keys
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Pathfinding::Ionic::Zip::ZipCrypto::dyn__Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCrypto::dyn__Keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Keys"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Crc.CRC32 crc32
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Crc::CRC32*& Pathfinding::Ionic::Zip::ZipCrypto::dyn_crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCrypto::dyn_crc32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crc32"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Crc::CRC32**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCrypto.ForWrite
::Pathfinding::Ionic::Zip::ZipCrypto* Pathfinding::Ionic::Zip::ZipCrypto::ForWrite(::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCrypto::ForWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ZipCrypto", "ForWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ZipCrypto*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, password);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCrypto.ForRead
::Pathfinding::Ionic::Zip::ZipCrypto* Pathfinding::Ionic::Zip::ZipCrypto::ForRead(::StringW password, ::Pathfinding::Ionic::Zip::ZipEntry* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCrypto::ForRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zip", "ZipCrypto", "ForRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zip::ZipCrypto*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, password, e);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCrypto.get_MagicByte
uint8_t Pathfinding::Ionic::Zip::ZipCrypto::get_MagicByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCrypto::get_MagicByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MagicByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCrypto.DecryptMessage
::ArrayW<uint8_t> Pathfinding::Ionic::Zip::ZipCrypto::DecryptMessage(::ArrayW<uint8_t> cipherText, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCrypto::DecryptMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cipherText), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, cipherText, length);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCrypto.EncryptMessage
::ArrayW<uint8_t> Pathfinding::Ionic::Zip::ZipCrypto::EncryptMessage(::ArrayW<uint8_t> plainText, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCrypto::EncryptMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plainText), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, plainText, length);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCrypto.InitCipher
void Pathfinding::Ionic::Zip::ZipCrypto::InitCipher(::StringW passphrase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCrypto::InitCipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitCipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passphrase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, passphrase);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCrypto.UpdateKeys
void Pathfinding::Ionic::Zip::ZipCrypto::UpdateKeys(uint8_t byteValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCrypto::UpdateKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byteValue);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.CryptoMode
#include "Pathfinding/Ionic/Zip/CryptoMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.CryptoMode Encrypt
::Pathfinding::Ionic::Zip::CryptoMode Pathfinding::Ionic::Zip::CryptoMode::_get_Encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CryptoMode::_get_Encrypt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::CryptoMode>("Pathfinding.Ionic.Zip", "CryptoMode", "Encrypt"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.CryptoMode Encrypt
void Pathfinding::Ionic::Zip::CryptoMode::_set_Encrypt(::Pathfinding::Ionic::Zip::CryptoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CryptoMode::_set_Encrypt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "CryptoMode", "Encrypt", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zip.CryptoMode Decrypt
::Pathfinding::Ionic::Zip::CryptoMode Pathfinding::Ionic::Zip::CryptoMode::_get_Decrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CryptoMode::_get_Decrypt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zip::CryptoMode>("Pathfinding.Ionic.Zip", "CryptoMode", "Decrypt"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zip.CryptoMode Decrypt
void Pathfinding::Ionic::Zip::CryptoMode::_set_Decrypt(::Pathfinding::Ionic::Zip::CryptoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CryptoMode::_set_Decrypt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zip", "CryptoMode", "Decrypt", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zip::CryptoMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::CryptoMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zip.ZipCipherStream
#include "Pathfinding/Ionic/Zip/ZipCipherStream.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipCrypto
#include "Pathfinding/Ionic/Zip/ZipCrypto.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zip.ZipCrypto _cipher
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zip::ZipCrypto*& Pathfinding::Ionic::Zip::ZipCipherStream::dyn__cipher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::dyn__cipher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cipher"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zip::ZipCrypto**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _s
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Pathfinding::Ionic::Zip::ZipCipherStream::dyn__s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::dyn__s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_s"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zip.CryptoMode _mode
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zip::CryptoMode& Pathfinding::Ionic::Zip::ZipCipherStream::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zip::CryptoMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.Read
int Pathfinding::Ionic::Zip::ZipCipherStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.Write
void Pathfinding::Ionic::Zip::ZipCipherStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.get_CanRead
bool Pathfinding::Ionic::Zip::ZipCipherStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.get_CanSeek
bool Pathfinding::Ionic::Zip::ZipCipherStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.get_CanWrite
bool Pathfinding::Ionic::Zip::ZipCipherStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.Flush
void Pathfinding::Ionic::Zip::ZipCipherStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.get_Length
int64_t Pathfinding::Ionic::Zip::ZipCipherStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.get_Position
int64_t Pathfinding::Ionic::Zip::ZipCipherStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.set_Position
void Pathfinding::Ionic::Zip::ZipCipherStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.Seek
int64_t Pathfinding::Ionic::Zip::ZipCipherStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Pathfinding.Ionic.Zip.ZipCipherStream.SetLength
void Pathfinding::Ionic::Zip::ZipCipherStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ZipCipherStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
