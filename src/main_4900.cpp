// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.FlagsAttribute
#include "System/FlagsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.FormatException
#include "System/FormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.FormattableString
#include "System/FormattableString.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.FormattableString.get_Format
::StringW System::FormattableString::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FormattableString::get_Format");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::FormattableString*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.FormattableString.GetArguments
::ArrayW<::Il2CppObject*> System::FormattableString::GetArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FormattableString::GetArguments");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::FormattableString*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.FormattableString.get_ArgumentCount
int System::FormattableString::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FormattableString::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::FormattableString*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.FormattableString.GetArgument
::Il2CppObject* System::FormattableString::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FormattableString::GetArgument");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::FormattableString*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.FormattableString.ToString
::StringW System::FormattableString::ToString(::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FormattableString::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::FormattableString*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, formatProvider);
}
// Autogenerated method: System.FormattableString.System.IFormattable.ToString
::StringW System::FormattableString::System_IFormattable_ToString(::StringW ignored, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FormattableString::System.IFormattable.ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::FormattableString*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ignored, formatProvider);
}
// Autogenerated method: System.FormattableString.ToString
::StringW System::FormattableString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::FormattableString::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Gen2GcCallback
#include "System/Gen2GcCallback.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.Boolean> _callback
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, bool>*& System::Gen2GcCallback::dyn__callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Gen2GcCallback::dyn__callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callback"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle _weakTargetObj
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& System::Gen2GcCallback::dyn__weakTargetObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Gen2GcCallback::dyn__weakTargetObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_weakTargetObj"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Gen2GcCallback.Register
void System::Gen2GcCallback::Register(::System::Func_2<::Il2CppObject*, bool>* callback, ::Il2CppObject* targetObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Gen2GcCallback::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Gen2GcCallback", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(targetObj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, targetObj);
}
// Autogenerated method: System.Gen2GcCallback.Setup
void System::Gen2GcCallback::Setup(::System::Func_2<::Il2CppObject*, bool>* callback, ::Il2CppObject* targetObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Gen2GcCallback::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(targetObj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, targetObj);
}
// Autogenerated method: System.Gen2GcCallback.Finalize
void System::Gen2GcCallback::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Gen2GcCallback::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::ConstrainedExecution::CriticalFinalizerObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DateTimeFormat
#include "System/DateTimeFormat.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.TimeSpan NullOffset
::System::TimeSpan System::DateTimeFormat::_get_NullOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_get_NullOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System", "DateTimeFormat", "NullOffset"));
}
// Autogenerated static field setter
// Set static field: static readonly System.TimeSpan NullOffset
void System::DateTimeFormat::_set_NullOffset(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_set_NullOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "NullOffset", value));
}
// Autogenerated static field getter
// Get static field: static System.Char[] allStandardFormats
::ArrayW<::Il2CppChar> System::DateTimeFormat::_get_allStandardFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_get_allStandardFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "DateTimeFormat", "allStandardFormats"));
}
// Autogenerated static field setter
// Set static field: static System.Char[] allStandardFormats
void System::DateTimeFormat::_set_allStandardFormats(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_set_allStandardFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "allStandardFormats", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Globalization.DateTimeFormatInfo InvariantFormatInfo
::System::Globalization::DateTimeFormatInfo* System::DateTimeFormat::_get_InvariantFormatInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_get_InvariantFormatInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfo*>("System", "DateTimeFormat", "InvariantFormatInfo"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Globalization.DateTimeFormatInfo InvariantFormatInfo
void System::DateTimeFormat::_set_InvariantFormatInfo(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_set_InvariantFormatInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "InvariantFormatInfo", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String[] InvariantAbbreviatedMonthNames
::ArrayW<::StringW> System::DateTimeFormat::_get_InvariantAbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_get_InvariantAbbreviatedMonthNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "DateTimeFormat", "InvariantAbbreviatedMonthNames"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String[] InvariantAbbreviatedMonthNames
void System::DateTimeFormat::_set_InvariantAbbreviatedMonthNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_set_InvariantAbbreviatedMonthNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "InvariantAbbreviatedMonthNames", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String[] InvariantAbbreviatedDayNames
::ArrayW<::StringW> System::DateTimeFormat::_get_InvariantAbbreviatedDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_get_InvariantAbbreviatedDayNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "DateTimeFormat", "InvariantAbbreviatedDayNames"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String[] InvariantAbbreviatedDayNames
void System::DateTimeFormat::_set_InvariantAbbreviatedDayNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_set_InvariantAbbreviatedDayNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "InvariantAbbreviatedDayNames", value));
}
// Autogenerated static field getter
// Get static field: static System.String[] fixedNumberFormats
::ArrayW<::StringW> System::DateTimeFormat::_get_fixedNumberFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_get_fixedNumberFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "DateTimeFormat", "fixedNumberFormats"));
}
// Autogenerated static field setter
// Set static field: static System.String[] fixedNumberFormats
void System::DateTimeFormat::_set_fixedNumberFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::_set_fixedNumberFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "fixedNumberFormats", value));
}
// Autogenerated method: System.DateTimeFormat.FormatDigits
void System::DateTimeFormat::FormatDigits(::System::Text::StringBuilder* outputBuffer, int value, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::FormatDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outputBuffer, value, len);
}
// Autogenerated method: System.DateTimeFormat.FormatDigits
void System::DateTimeFormat::FormatDigits(::System::Text::StringBuilder* outputBuffer, int value, int len, bool overrideLengthLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::FormatDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(overrideLengthLimit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outputBuffer, value, len, overrideLengthLimit);
}
// Autogenerated method: System.DateTimeFormat.HebrewFormatDigits
void System::DateTimeFormat::HebrewFormatDigits(::System::Text::StringBuilder* outputBuffer, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::HebrewFormatDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "HebrewFormatDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outputBuffer, digits);
}
// Autogenerated method: System.DateTimeFormat.ParseRepeatPattern
int System::DateTimeFormat::ParseRepeatPattern(::System::ReadOnlySpan_1<::Il2CppChar> format, int pos, ::Il2CppChar patternChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::ParseRepeatPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ParseRepeatPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(patternChar)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, pos, patternChar);
}
// Autogenerated method: System.DateTimeFormat.FormatDayOfWeek
::StringW System::DateTimeFormat::FormatDayOfWeek(int dayOfWeek, int repeat, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::FormatDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatDayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayOfWeek), ::il2cpp_utils::ExtractType(repeat), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dayOfWeek, repeat, dtfi);
}
// Autogenerated method: System.DateTimeFormat.FormatMonth
::StringW System::DateTimeFormat::FormatMonth(int month, int repeatCount, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::FormatMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(repeatCount), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, month, repeatCount, dtfi);
}
// Autogenerated method: System.DateTimeFormat.FormatHebrewMonthName
::StringW System::DateTimeFormat::FormatHebrewMonthName(::System::DateTime time, int month, int repeatCount, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::FormatHebrewMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatHebrewMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(repeatCount), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, month, repeatCount, dtfi);
}
// Autogenerated method: System.DateTimeFormat.ParseQuoteString
int System::DateTimeFormat::ParseQuoteString(::System::ReadOnlySpan_1<::Il2CppChar> format, int pos, ::System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::ParseQuoteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ParseQuoteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, pos, result);
}
// Autogenerated method: System.DateTimeFormat.ParseNextChar
int System::DateTimeFormat::ParseNextChar(::System::ReadOnlySpan_1<::Il2CppChar> format, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::ParseNextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ParseNextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, pos);
}
// Autogenerated method: System.DateTimeFormat.IsUseGenitiveForm
bool System::DateTimeFormat::IsUseGenitiveForm(::System::ReadOnlySpan_1<::Il2CppChar> format, int index, int tokenLen, ::Il2CppChar patternToMatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::IsUseGenitiveForm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "IsUseGenitiveForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(tokenLen), ::il2cpp_utils::ExtractType(patternToMatch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, index, tokenLen, patternToMatch);
}
// Autogenerated method: System.DateTimeFormat.FormatCustomized
::System::Text::StringBuilder* System::DateTimeFormat::FormatCustomized(::System::DateTime dateTime, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::TimeSpan offset, ::System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::FormatCustomized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatCustomized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, format, dtfi, offset, result);
}
// Autogenerated method: System.DateTimeFormat.FormatCustomizedTimeZone
void System::DateTimeFormat::FormatCustomizedTimeZone(::System::DateTime dateTime, ::System::TimeSpan offset, ::System::ReadOnlySpan_1<::Il2CppChar> format, int tokenLen, bool timeOnly, ::System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::FormatCustomizedTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatCustomizedTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(tokenLen), ::il2cpp_utils::ExtractType(timeOnly), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, offset, format, tokenLen, timeOnly, result);
}
// Autogenerated method: System.DateTimeFormat.FormatCustomizedRoundripTimeZone
void System::DateTimeFormat::FormatCustomizedRoundripTimeZone(::System::DateTime dateTime, ::System::TimeSpan offset, ::System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::FormatCustomizedRoundripTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatCustomizedRoundripTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, offset, result);
}
// Autogenerated method: System.DateTimeFormat.Append2DigitNumber
void System::DateTimeFormat::Append2DigitNumber(::System::Text::StringBuilder* result, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::Append2DigitNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "Append2DigitNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, result, val);
}
// Autogenerated method: System.DateTimeFormat.GetRealFormat
::StringW System::DateTimeFormat::GetRealFormat(::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::GetRealFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "GetRealFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, dtfi);
}
// Autogenerated method: System.DateTimeFormat.ExpandPredefinedFormat
::StringW System::DateTimeFormat::ExpandPredefinedFormat(::System::ReadOnlySpan_1<::Il2CppChar> format, ByRef<::System::DateTime> dateTime, ByRef<::System::Globalization::DateTimeFormatInfo*> dtfi, ByRef<::System::TimeSpan> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::ExpandPredefinedFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ExpandPredefinedFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(dateTime), byref(dtfi), byref(offset));
}
// Autogenerated method: System.DateTimeFormat.Format
::StringW System::DateTimeFormat::Format(::System::DateTime dateTime, ::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, format, provider);
}
// Autogenerated method: System.DateTimeFormat.Format
::StringW System::DateTimeFormat::Format(::System::DateTime dateTime, ::StringW format, ::System::IFormatProvider* provider, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, format, provider, offset);
}
// Autogenerated method: System.DateTimeFormat.TryFormat
bool System::DateTimeFormat::TryFormat(::System::DateTime dateTime, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, destination, byref(charsWritten), format, provider);
}
// Autogenerated method: System.DateTimeFormat.TryFormat
bool System::DateTimeFormat::TryFormat(::System::DateTime dateTime, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, destination, byref(charsWritten), format, provider, offset);
}
// Autogenerated method: System.DateTimeFormat.FormatStringBuilder
::System::Text::StringBuilder* System::DateTimeFormat::FormatStringBuilder(::System::DateTime dateTime, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::FormatStringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, format, dtfi, offset);
}
// Autogenerated method: System.DateTimeFormat.TryFormatO
bool System::DateTimeFormat::TryFormatO(::System::DateTime dateTime, ::System::TimeSpan offset, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::TryFormatO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "TryFormatO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, offset, destination, byref(charsWritten));
}
// Autogenerated method: System.DateTimeFormat.TryFormatR
bool System::DateTimeFormat::TryFormatR(::System::DateTime dateTime, ::System::TimeSpan offset, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::TryFormatR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "TryFormatR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, offset, destination, byref(charsWritten));
}
// Autogenerated method: System.DateTimeFormat.WriteTwoDecimalDigits
void System::DateTimeFormat::WriteTwoDecimalDigits(uint value, ::System::Span_1<::Il2CppChar> destination, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::WriteTwoDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "WriteTwoDecimalDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, offset);
}
// Autogenerated method: System.DateTimeFormat.WriteFourDecimalDigits
void System::DateTimeFormat::WriteFourDecimalDigits(uint value, ::System::Span_1<::Il2CppChar> buffer, int startingIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::WriteFourDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "WriteFourDecimalDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(startingIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer, startingIndex);
}
// Autogenerated method: System.DateTimeFormat.WriteDigits
void System::DateTimeFormat::WriteDigits(uint64_t value, ::System::Span_1<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::WriteDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "WriteDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, buffer);
}
// Autogenerated method: System.DateTimeFormat.InvalidFormatForLocal
void System::DateTimeFormat::InvalidFormatForLocal(::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::InvalidFormatForLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", "InvalidFormatForLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dateTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, dateTime);
}
// Autogenerated method: System.DateTimeFormat..cctor
void System::DateTimeFormat::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeFormat::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeFormat", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DateTimeParse
#include "System/DateTimeParse.hpp"
// Including type: System.DateTimeParse/MatchNumberDelegate
#include "System/DateTimeParse_MatchNumberDelegate.hpp"
// Including type: System.DateTimeParse/DTT
#include "System/DateTimeParse_DTT.hpp"
// Including type: System.DateTimeParse/TM
#include "System/DateTimeParse_TM.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeParse/<>c
#include "System/DateTimeParse_--c.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.DateTimeStyles
#include "System/Globalization/DateTimeStyles.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DateTimeResult
#include "System/DateTimeResult.hpp"
// Including type: System.__DTString
#include "System/__DTString.hpp"
// Including type: System.DateTimeToken
#include "System/DateTimeToken.hpp"
// Including type: System.DateTimeRawInfo
#include "System/DateTimeRawInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.ParsingInfo
#include "System/ParsingInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.DateTimeParse/MatchNumberDelegate m_hebrewNumberParser
::System::DateTimeParse::MatchNumberDelegate* System::DateTimeParse::_get_m_hebrewNumberParser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::_get_m_hebrewNumberParser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::MatchNumberDelegate*>("System", "DateTimeParse", "m_hebrewNumberParser"));
}
// Autogenerated static field setter
// Set static field: static System.DateTimeParse/MatchNumberDelegate m_hebrewNumberParser
void System::DateTimeParse::_set_m_hebrewNumberParser(::System::DateTimeParse::MatchNumberDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::_set_m_hebrewNumberParser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse", "m_hebrewNumberParser", value));
}
// Autogenerated static field getter
// Get static field: static private System.DateTimeParse/DS[][] dateParsingStates
::ArrayW<::ArrayW<::System::DateTimeParse::DS>> System::DateTimeParse::_get_dateParsingStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::_get_dateParsingStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::ArrayW<::System::DateTimeParse::DS>>>("System", "DateTimeParse", "dateParsingStates"));
}
// Autogenerated static field setter
// Set static field: static private System.DateTimeParse/DS[][] dateParsingStates
void System::DateTimeParse::_set_dateParsingStates(::ArrayW<::ArrayW<::System::DateTimeParse::DS>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::_set_dateParsingStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse", "dateParsingStates", value));
}
// Autogenerated method: System.DateTimeParse.ParseExact
::System::DateTime System::DateTimeParse::ParseExact(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, format, dtfi, style);
}
// Autogenerated method: System.DateTimeParse.ParseExact
::System::DateTime System::DateTimeParse::ParseExact(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::TimeSpan> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, format, dtfi, style, byref(offset));
}
// Autogenerated method: System.DateTimeParse.TryParseExact
bool System::DateTimeParse::TryParseExact(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, format, dtfi, style, byref(result));
}
// Autogenerated method: System.DateTimeParse.TryParseExact
bool System::DateTimeParse::TryParseExact(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTime> result, ByRef<::System::TimeSpan> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>(), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, format, dtfi, style, byref(result), byref(offset));
}
// Autogenerated method: System.DateTimeParse.TryParseExact
bool System::DateTimeParse::TryParseExact(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, format, dtfi, style, byref(result));
}
// Autogenerated method: System.DateTimeParse.ParseExactMultiple
::System::DateTime System::DateTimeParse::ParseExactMultiple(::System::ReadOnlySpan_1<::Il2CppChar> s, ::ArrayW<::StringW> formats, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseExactMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseExactMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, formats, dtfi, style);
}
// Autogenerated method: System.DateTimeParse.ParseExactMultiple
::System::DateTime System::DateTimeParse::ParseExactMultiple(::System::ReadOnlySpan_1<::Il2CppChar> s, ::ArrayW<::StringW> formats, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::TimeSpan> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseExactMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseExactMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, formats, dtfi, style, byref(offset));
}
// Autogenerated method: System.DateTimeParse.TryParseExactMultiple
bool System::DateTimeParse::TryParseExactMultiple(::System::ReadOnlySpan_1<::Il2CppChar> s, ::ArrayW<::StringW> formats, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTime> result, ByRef<::System::TimeSpan> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryParseExactMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExactMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>(), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, formats, dtfi, style, byref(result), byref(offset));
}
// Autogenerated method: System.DateTimeParse.TryParseExactMultiple
bool System::DateTimeParse::TryParseExactMultiple(::System::ReadOnlySpan_1<::Il2CppChar> s, ::ArrayW<::StringW> formats, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryParseExactMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExactMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, formats, dtfi, style, byref(result));
}
// Autogenerated method: System.DateTimeParse.TryParseExactMultiple
bool System::DateTimeParse::TryParseExactMultiple(::System::ReadOnlySpan_1<::Il2CppChar> s, ::ArrayW<::StringW> formats, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryParseExactMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExactMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formats), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, formats, dtfi, style, byref(result));
}
// Autogenerated method: System.DateTimeParse.MatchWord
bool System::DateTimeParse::MatchWord(ByRef<::System::__DTString> str, ::StringW target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::MatchWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), target);
}
// Autogenerated method: System.DateTimeParse.GetTimeZoneName
bool System::DateTimeParse::GetTimeZoneName(ByRef<::System::__DTString> str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetTimeZoneName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeZoneName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str));
}
// Autogenerated method: System.DateTimeParse.IsDigit
bool System::DateTimeParse::IsDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.DateTimeParse.ParseFraction
bool System::DateTimeParse::ParseFraction(ByRef<::System::__DTString> str, ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseFraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseFraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), byref(result));
}
// Autogenerated method: System.DateTimeParse.ParseTimeZone
bool System::DateTimeParse::ParseTimeZone(ByRef<::System::__DTString> str, ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), byref(result));
}
// Autogenerated method: System.DateTimeParse.HandleTimeZone
bool System::DateTimeParse::HandleTimeZone(ByRef<::System::__DTString> str, ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::HandleTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "HandleTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), byref(result));
}
// Autogenerated method: System.DateTimeParse.Lex
bool System::DateTimeParse::Lex(::System::DateTimeParse::DS dps, ByRef<::System::__DTString> str, ByRef<::System::DateTimeToken> dtok, ByRef<::System::DateTimeRawInfo> raw, ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeFormatInfo*> dtfi, ::System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::Lex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "Lex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dps), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtok), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dps, byref(str), byref(dtok), byref(raw), byref(result), byref(dtfi), styles);
}
// Autogenerated method: System.DateTimeParse.GetJapaneseCalendarDefaultInstance
::System::Globalization::Calendar* System::DateTimeParse::GetJapaneseCalendarDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetJapaneseCalendarDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetJapaneseCalendarDefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DateTimeParse.GetTaiwanCalendarDefaultInstance
::System::Globalization::Calendar* System::DateTimeParse::GetTaiwanCalendarDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetTaiwanCalendarDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTaiwanCalendarDefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DateTimeParse.VerifyValidPunctuation
bool System::DateTimeParse::VerifyValidPunctuation(ByRef<::System::__DTString> str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::VerifyValidPunctuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "VerifyValidPunctuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str));
}
// Autogenerated method: System.DateTimeParse.GetYearMonthDayOrder
bool System::DateTimeParse::GetYearMonthDayOrder(::StringW datePattern, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetYearMonthDayOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetYearMonthDayOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datePattern), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, datePattern, dtfi, byref(order));
}
// Autogenerated method: System.DateTimeParse.GetYearMonthOrder
bool System::DateTimeParse::GetYearMonthOrder(::StringW pattern, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetYearMonthOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetYearMonthOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pattern, dtfi, byref(order));
}
// Autogenerated method: System.DateTimeParse.GetMonthDayOrder
bool System::DateTimeParse::GetMonthDayOrder(::StringW pattern, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetMonthDayOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetMonthDayOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pattern, dtfi, byref(order));
}
// Autogenerated method: System.DateTimeParse.TryAdjustYear
bool System::DateTimeParse::TryAdjustYear(ByRef<::System::DateTimeResult> result, int year, ByRef<int> adjustedYear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryAdjustYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryAdjustYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), year, byref(adjustedYear));
}
// Autogenerated method: System.DateTimeParse.SetDateYMD
bool System::DateTimeParse::SetDateYMD(ByRef<::System::DateTimeResult> result, int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::SetDateYMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateYMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), year, month, day);
}
// Autogenerated method: System.DateTimeParse.SetDateMDY
bool System::DateTimeParse::SetDateMDY(ByRef<::System::DateTimeResult> result, int month, int day, int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::SetDateMDY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateMDY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), month, day, year);
}
// Autogenerated method: System.DateTimeParse.SetDateDMY
bool System::DateTimeParse::SetDateDMY(ByRef<::System::DateTimeResult> result, int day, int month, int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::SetDateDMY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateDMY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), day, month, year);
}
// Autogenerated method: System.DateTimeParse.SetDateYDM
bool System::DateTimeParse::SetDateYDM(ByRef<::System::DateTimeResult> result, int year, int day, int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::SetDateYDM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateYDM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(month)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), year, day, month);
}
// Autogenerated method: System.DateTimeParse.GetDefaultYear
void System::DateTimeParse::GetDefaultYear(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDefaultYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDefaultYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(styles));
}
// Autogenerated method: System.DateTimeParse.GetDayOfNN
bool System::DateTimeParse::GetDayOfNN(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDayOfNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(styles), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNNN
bool System::DateTimeParse::GetDayOfNNN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDayOfNNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfMN
bool System::DateTimeParse::GetDayOfMN(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDayOfMN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfMN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(styles), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.GetHebrewDayOfNM
bool System::DateTimeParse::GetHebrewDayOfNM(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetHebrewDayOfNM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetHebrewDayOfNM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNM
bool System::DateTimeParse::GetDayOfNM(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDayOfNM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(styles), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfMNN
bool System::DateTimeParse::GetDayOfMNN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDayOfMNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfMNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfYNN
bool System::DateTimeParse::GetDayOfYNN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDayOfYNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNNY
bool System::DateTimeParse::GetDayOfNNY(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDayOfNNY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNNY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfYMN
bool System::DateTimeParse::GetDayOfYMN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDayOfYMN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYMN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw));
}
// Autogenerated method: System.DateTimeParse.GetDayOfYN
bool System::DateTimeParse::GetDayOfYN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDayOfYN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw));
}
// Autogenerated method: System.DateTimeParse.GetDayOfYM
bool System::DateTimeParse::GetDayOfYM(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDayOfYM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw));
}
// Autogenerated method: System.DateTimeParse.AdjustTimeMark
void System::DateTimeParse::AdjustTimeMark(::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeRawInfo> raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::AdjustTimeMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustTimeMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(raw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dtfi, byref(raw));
}
// Autogenerated method: System.DateTimeParse.AdjustHour
bool System::DateTimeParse::AdjustHour(ByRef<int> hour, ::System::DateTimeParse::TM timeMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::AdjustHour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustHour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(timeMark)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(hour), timeMark);
}
// Autogenerated method: System.DateTimeParse.GetTimeOfN
bool System::DateTimeParse::GetTimeOfN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetTimeOfN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeOfN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw));
}
// Autogenerated method: System.DateTimeParse.GetTimeOfNN
bool System::DateTimeParse::GetTimeOfNN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetTimeOfNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeOfNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw));
}
// Autogenerated method: System.DateTimeParse.GetTimeOfNNN
bool System::DateTimeParse::GetTimeOfNNN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetTimeOfNNN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeOfNNN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw));
}
// Autogenerated method: System.DateTimeParse.GetDateOfDSN
bool System::DateTimeParse::GetDateOfDSN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDateOfDSN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateOfDSN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw));
}
// Autogenerated method: System.DateTimeParse.GetDateOfNDS
bool System::DateTimeParse::GetDateOfNDS(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDateOfNDS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateOfNDS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw));
}
// Autogenerated method: System.DateTimeParse.GetDateOfNNDS
bool System::DateTimeParse::GetDateOfNNDS(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDateOfNNDS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateOfNNDS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.ProcessDateTimeSuffix
bool System::DateTimeParse::ProcessDateTimeSuffix(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ByRef<::System::DateTimeToken> dtok) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ProcessDateTimeSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ProcessDateTimeSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtok)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(raw), byref(dtok));
}
// Autogenerated method: System.DateTimeParse.ProcessHebrewTerminalState
bool System::DateTimeParse::ProcessHebrewTerminalState(::System::DateTimeParse::DS dps, ByRef<::System::__DTString> str, ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ProcessHebrewTerminalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ProcessHebrewTerminalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dps), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dps, byref(str), byref(result), byref(styles), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.ProcessTerminalState
bool System::DateTimeParse::ProcessTerminalState(::System::DateTimeParse::DS dps, ByRef<::System::__DTString> str, ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ProcessTerminalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ProcessTerminalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dps), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dps, byref(str), byref(result), byref(styles), byref(raw), dtfi);
}
// Autogenerated method: System.DateTimeParse.Parse
::System::DateTime System::DateTimeParse::Parse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, dtfi, styles);
}
// Autogenerated method: System.DateTimeParse.Parse
::System::DateTime System::DateTimeParse::Parse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles styles, ByRef<::System::TimeSpan> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, dtfi, styles, byref(offset));
}
// Autogenerated method: System.DateTimeParse.TryParse
bool System::DateTimeParse::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, dtfi, styles, byref(result));
}
// Autogenerated method: System.DateTimeParse.TryParse
bool System::DateTimeParse::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTime> result, ByRef<::System::TimeSpan> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>(), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, dtfi, styles, byref(result), byref(offset));
}
// Autogenerated method: System.DateTimeParse.TryParse
bool System::DateTimeParse::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, dtfi, styles, byref(result));
}
// Autogenerated method: System.DateTimeParse.DetermineTimeZoneAdjustments
bool System::DateTimeParse::DetermineTimeZoneAdjustments(ByRef<::System::__DTString> str, ByRef<::System::DateTimeResult> result, ::System::Globalization::DateTimeStyles styles, bool bTimeOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DetermineTimeZoneAdjustments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "DetermineTimeZoneAdjustments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(bTimeOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), byref(result), styles, bTimeOnly);
}
// Autogenerated method: System.DateTimeParse.DateTimeOffsetTimeZonePostProcessing
bool System::DateTimeParse::DateTimeOffsetTimeZonePostProcessing(ByRef<::System::__DTString> str, ByRef<::System::DateTimeResult> result, ::System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DateTimeOffsetTimeZonePostProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "DateTimeOffsetTimeZonePostProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), byref(result), styles);
}
// Autogenerated method: System.DateTimeParse.AdjustTimeZoneToUniversal
bool System::DateTimeParse::AdjustTimeZoneToUniversal(ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::AdjustTimeZoneToUniversal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustTimeZoneToUniversal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result));
}
// Autogenerated method: System.DateTimeParse.AdjustTimeZoneToLocal
bool System::DateTimeParse::AdjustTimeZoneToLocal(ByRef<::System::DateTimeResult> result, bool bTimeOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::AdjustTimeZoneToLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustTimeZoneToLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(bTimeOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), bTimeOnly);
}
// Autogenerated method: System.DateTimeParse.ParseISO8601
bool System::DateTimeParse::ParseISO8601(ByRef<::System::DateTimeRawInfo> raw, ByRef<::System::__DTString> str, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseISO8601");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseISO8601", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(raw), byref(str), styles, byref(result));
}
// Autogenerated method: System.DateTimeParse.MatchHebrewDigits
bool System::DateTimeParse::MatchHebrewDigits(ByRef<::System::__DTString> str, int digitLen, ByRef<int> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::MatchHebrewDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchHebrewDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(digitLen), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), digitLen, byref(number));
}
// Autogenerated method: System.DateTimeParse.ParseDigits
bool System::DateTimeParse::ParseDigits(ByRef<::System::__DTString> str, int digitLen, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(digitLen), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), digitLen, byref(result));
}
// Autogenerated method: System.DateTimeParse.ParseDigits
bool System::DateTimeParse::ParseDigits(ByRef<::System::__DTString> str, int minDigitLen, int maxDigitLen, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(minDigitLen), ::il2cpp_utils::ExtractType(maxDigitLen), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), minDigitLen, maxDigitLen, byref(result));
}
// Autogenerated method: System.DateTimeParse.ParseFractionExact
bool System::DateTimeParse::ParseFractionExact(ByRef<::System::__DTString> str, int maxDigitLen, ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseFractionExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseFractionExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(maxDigitLen), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), maxDigitLen, byref(result));
}
// Autogenerated method: System.DateTimeParse.ParseSign
bool System::DateTimeParse::ParseSign(ByRef<::System::__DTString> str, ByRef<bool> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseSign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseSign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), byref(result));
}
// Autogenerated method: System.DateTimeParse.ParseTimeZoneOffset
bool System::DateTimeParse::ParseTimeZoneOffset(ByRef<::System::__DTString> str, int len, ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseTimeZoneOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseTimeZoneOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), len, byref(result));
}
// Autogenerated method: System.DateTimeParse.MatchAbbreviatedMonthName
bool System::DateTimeParse::MatchAbbreviatedMonthName(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::MatchAbbreviatedMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchAbbreviatedMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), dtfi, byref(result));
}
// Autogenerated method: System.DateTimeParse.MatchMonthName
bool System::DateTimeParse::MatchMonthName(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::MatchMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), dtfi, byref(result));
}
// Autogenerated method: System.DateTimeParse.MatchAbbreviatedDayName
bool System::DateTimeParse::MatchAbbreviatedDayName(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::MatchAbbreviatedDayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchAbbreviatedDayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), dtfi, byref(result));
}
// Autogenerated method: System.DateTimeParse.MatchDayName
bool System::DateTimeParse::MatchDayName(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::MatchDayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchDayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), dtfi, byref(result));
}
// Autogenerated method: System.DateTimeParse.MatchEraName
bool System::DateTimeParse::MatchEraName(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::MatchEraName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchEraName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), dtfi, byref(result));
}
// Autogenerated method: System.DateTimeParse.MatchTimeMark
bool System::DateTimeParse::MatchTimeMark(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeParse::TM> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::MatchTimeMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchTimeMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), dtfi, byref(result));
}
// Autogenerated method: System.DateTimeParse.MatchAbbreviatedTimeMark
bool System::DateTimeParse::MatchAbbreviatedTimeMark(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeParse::TM> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::MatchAbbreviatedTimeMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchAbbreviatedTimeMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), dtfi, byref(result));
}
// Autogenerated method: System.DateTimeParse.CheckNewValue
bool System::DateTimeParse::CheckNewValue(ByRef<int> currentValue, int newValue, ::Il2CppChar patternChar, ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::CheckNewValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "CheckNewValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(patternChar), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(currentValue), newValue, patternChar, byref(result));
}
// Autogenerated method: System.DateTimeParse.GetDateTimeNow
::System::DateTime System::DateTimeParse::GetDateTimeNow(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDateTimeNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateTimeNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(styles));
}
// Autogenerated method: System.DateTimeParse.CheckDefaultDateTime
bool System::DateTimeParse::CheckDefaultDateTime(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::Calendar*> cal, ::System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::CheckDefaultDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "CheckDefaultDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(cal), ::il2cpp_utils::ExtractType(styles)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(cal), styles);
}
// Autogenerated method: System.DateTimeParse.ExpandPredefinedFormat
::StringW System::DateTimeParse::ExpandPredefinedFormat(::System::ReadOnlySpan_1<::Il2CppChar> format, ByRef<::System::Globalization::DateTimeFormatInfo*> dtfi, ByRef<::System::ParsingInfo> parseInfo, ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ExpandPredefinedFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ExpandPredefinedFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(parseInfo), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(dtfi), byref(parseInfo), byref(result));
}
// Autogenerated method: System.DateTimeParse.ParseJapaneseEraStart
bool System::DateTimeParse::ParseJapaneseEraStart(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseJapaneseEraStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseJapaneseEraStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), dtfi);
}
// Autogenerated method: System.DateTimeParse.ParseByFormat
bool System::DateTimeParse::ParseByFormat(ByRef<::System::__DTString> str, ByRef<::System::__DTString> format, ByRef<::System::ParsingInfo> parseInfo, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::ParseByFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseByFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(parseInfo), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), byref(format), byref(parseInfo), dtfi, byref(result));
}
// Autogenerated method: System.DateTimeParse.TryParseQuoteString
bool System::DateTimeParse::TryParseQuoteString(::System::ReadOnlySpan_1<::Il2CppChar> format, int pos, ::System::Text::StringBuilder* result, ByRef<int> returnValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TryParseQuoteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseQuoteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, pos, result, byref(returnValue));
}
// Autogenerated method: System.DateTimeParse.DoStrictParse
bool System::DateTimeParse::DoStrictParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::ReadOnlySpan_1<::Il2CppChar> formatParam, ::System::Globalization::DateTimeStyles styles, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DoStrictParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "DoStrictParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(formatParam), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, formatParam, styles, dtfi, byref(result));
}
// Autogenerated method: System.DateTimeParse.GetDateTimeParseException
::System::Exception* System::DateTimeParse::GetDateTimeParseException(ByRef<::System::DateTimeResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::GetDateTimeParseException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateTimeParseException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result));
}
// Autogenerated method: System.DateTimeParse..cctor
void System::DateTimeParse::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTimeParse/MatchNumberDelegate
#include "System/DateTimeParse_MatchNumberDelegate.hpp"
// Including type: System.__DTString
#include "System/__DTString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DateTimeParse/MatchNumberDelegate.Invoke
bool System::DateTimeParse::MatchNumberDelegate::Invoke(ByRef<::System::__DTString> str, int digitLen, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::MatchNumberDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::DateTimeParse::MatchNumberDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(str), digitLen, byref(result));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DateTimeParse/DTT
#include "System/DateTimeParse_DTT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT End
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT End
void System::DateTimeParse::DTT::_set_End(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumEnd
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_NumEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumEnd
void System::DateTimeParse::DTT::_set_NumEnd(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_NumEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumAmpm
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumAmpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_NumAmpm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumAmpm"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumAmpm
void System::DateTimeParse::DTT::_set_NumAmpm(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_NumAmpm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumAmpm", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumSpace
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_NumSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumSpace
void System::DateTimeParse::DTT::_set_NumSpace(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_NumSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumDatesep
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumDatesep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_NumDatesep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumDatesep"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumDatesep
void System::DateTimeParse::DTT::_set_NumDatesep(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_NumDatesep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumDatesep", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumTimesep
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumTimesep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_NumTimesep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumTimesep"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumTimesep
void System::DateTimeParse::DTT::_set_NumTimesep(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_NumTimesep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumTimesep", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT MonthEnd
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_MonthEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_MonthEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "MonthEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT MonthEnd
void System::DateTimeParse::DTT::_set_MonthEnd(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_MonthEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "MonthEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT MonthSpace
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_MonthSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_MonthSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "MonthSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT MonthSpace
void System::DateTimeParse::DTT::_set_MonthSpace(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_MonthSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "MonthSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT MonthDatesep
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_MonthDatesep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_MonthDatesep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "MonthDatesep"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT MonthDatesep
void System::DateTimeParse::DTT::_set_MonthDatesep(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_MonthDatesep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "MonthDatesep", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumDatesuff
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumDatesuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_NumDatesuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumDatesuff"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumDatesuff
void System::DateTimeParse::DTT::_set_NumDatesuff(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_NumDatesuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumDatesuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumTimesuff
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumTimesuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_NumTimesuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumTimesuff"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumTimesuff
void System::DateTimeParse::DTT::_set_NumTimesuff(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_NumTimesuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumTimesuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT DayOfWeek
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_DayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_DayOfWeek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "DayOfWeek"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT DayOfWeek
void System::DateTimeParse::DTT::_set_DayOfWeek(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_DayOfWeek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "DayOfWeek", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT YearSpace
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_YearSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_YearSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "YearSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT YearSpace
void System::DateTimeParse::DTT::_set_YearSpace(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_YearSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "YearSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT YearDateSep
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_YearDateSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_YearDateSep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "YearDateSep"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT YearDateSep
void System::DateTimeParse::DTT::_set_YearDateSep(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_YearDateSep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "YearDateSep", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT YearEnd
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_YearEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_YearEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "YearEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT YearEnd
void System::DateTimeParse::DTT::_set_YearEnd(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_YearEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "YearEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT TimeZone
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_TimeZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_TimeZone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "TimeZone"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT TimeZone
void System::DateTimeParse::DTT::_set_TimeZone(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_TimeZone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "TimeZone", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT Era
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_Era() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_Era");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "Era"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT Era
void System::DateTimeParse::DTT::_set_Era(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_Era");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "Era", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumUTCTimeMark
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumUTCTimeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_NumUTCTimeMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumUTCTimeMark"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumUTCTimeMark
void System::DateTimeParse::DTT::_set_NumUTCTimeMark(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_NumUTCTimeMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumUTCTimeMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT Unk
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_Unk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_Unk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "Unk"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT Unk
void System::DateTimeParse::DTT::_set_Unk(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_Unk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "Unk", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT NumLocalTimeMark
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_NumLocalTimeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_NumLocalTimeMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "NumLocalTimeMark"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT NumLocalTimeMark
void System::DateTimeParse::DTT::_set_NumLocalTimeMark(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_NumLocalTimeMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "NumLocalTimeMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DTT Max
::System::DateTimeParse::DTT System::DateTimeParse::DTT::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DTT>("System", "DateTimeParse/DTT", "Max"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DTT Max
void System::DateTimeParse::DTT::_set_Max(::System::DateTimeParse::DTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DTT", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::DateTimeParse::DTT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DTT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DateTimeParse/TM
#include "System/DateTimeParse_TM.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/TM NotSet
::System::DateTimeParse::TM System::DateTimeParse::TM::_get_NotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TM::_get_NotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::TM>("System", "DateTimeParse/TM", "NotSet"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/TM NotSet
void System::DateTimeParse::TM::_set_NotSet(::System::DateTimeParse::TM value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TM::_set_NotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/TM", "NotSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/TM AM
::System::DateTimeParse::TM System::DateTimeParse::TM::_get_AM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TM::_get_AM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::TM>("System", "DateTimeParse/TM", "AM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/TM AM
void System::DateTimeParse::TM::_set_AM(::System::DateTimeParse::TM value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TM::_set_AM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/TM", "AM", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/TM PM
::System::DateTimeParse::TM System::DateTimeParse::TM::_get_PM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TM::_get_PM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::TM>("System", "DateTimeParse/TM", "PM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/TM PM
void System::DateTimeParse::TM::_set_PM(::System::DateTimeParse::TM value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TM::_set_PM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/TM", "PM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::DateTimeParse::TM::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::TM::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DateTimeParse/DS
#include "System/DateTimeParse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS BEGIN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_BEGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_BEGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "BEGIN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS BEGIN
void System::DateTimeParse::DS::_set_BEGIN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_BEGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "BEGIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS N
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_N() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_N");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "N"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS N
void System::DateTimeParse::DS::_set_N(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_N");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "N", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS NN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_NN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_NN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "NN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS NN
void System::DateTimeParse::DS::_set_NN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_NN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "NN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_Nd
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_Nd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_Nd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_Nd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_Nd
void System::DateTimeParse::DS::_set_D_Nd(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_Nd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_Nd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_NN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_NN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_NN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_NN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_NN
void System::DateTimeParse::DS::_set_D_NN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_NN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_NN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_NNd
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_NNd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_NNd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_NNd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_NNd
void System::DateTimeParse::DS::_set_D_NNd(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_NNd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_NNd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_M
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_M() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_M");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_M"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_M
void System::DateTimeParse::DS::_set_D_M(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_M");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_M", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_MN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_MN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_MN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_MN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_MN
void System::DateTimeParse::DS::_set_D_MN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_MN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_MN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_NM
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_NM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_NM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_NM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_NM
void System::DateTimeParse::DS::_set_D_NM(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_NM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_NM", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_MNd
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_MNd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_MNd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_MNd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_MNd
void System::DateTimeParse::DS::_set_D_MNd(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_MNd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_MNd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_NDS
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_NDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_NDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_NDS"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_NDS
void System::DateTimeParse::DS::_set_D_NDS(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_NDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_NDS", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_Y
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_Y"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_Y
void System::DateTimeParse::DS::_set_D_Y(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_Y", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_YN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_YN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_YN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_YN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_YN
void System::DateTimeParse::DS::_set_D_YN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_YN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_YN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_YNd
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_YNd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_YNd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_YNd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_YNd
void System::DateTimeParse::DS::_set_D_YNd(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_YNd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_YNd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_YM
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_YM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_YM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_YM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_YM
void System::DateTimeParse::DS::_set_D_YM(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_YM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_YM", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_YMd
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_YMd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_YMd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_YMd"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_YMd
void System::DateTimeParse::DS::_set_D_YMd(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_YMd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_YMd", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS D_S
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_D_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_D_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "D_S"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS D_S
void System::DateTimeParse::DS::_set_D_S(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_D_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "D_S", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS T_S
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_T_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_T_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "T_S"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS T_S
void System::DateTimeParse::DS::_set_T_S(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_T_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "T_S", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS T_Nt
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_T_Nt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_T_Nt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "T_Nt"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS T_Nt
void System::DateTimeParse::DS::_set_T_Nt(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_T_Nt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "T_Nt", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS T_NNt
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_T_NNt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_T_NNt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "T_NNt"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS T_NNt
void System::DateTimeParse::DS::_set_T_NNt(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_T_NNt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "T_NNt", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS ERROR
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "ERROR"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS ERROR
void System::DateTimeParse::DS::_set_ERROR(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_NN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NN
void System::DateTimeParse::DS::_set_DX_NN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_NN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NNN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NNN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_NNN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NNN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NNN
void System::DateTimeParse::DS::_set_DX_NNN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_NNN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NNN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_MN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_MN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_MN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_MN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_MN
void System::DateTimeParse::DS::_set_DX_MN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_MN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_MN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NM
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_NM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NM
void System::DateTimeParse::DS::_set_DX_NM(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_NM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NM", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_MNN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_MNN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_MNN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_MNN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_MNN
void System::DateTimeParse::DS::_set_DX_MNN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_MNN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_MNN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_DS
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_DS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_DS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_DS"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_DS
void System::DateTimeParse::DS::_set_DX_DS(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_DS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_DS", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_DSN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_DSN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_DSN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_DSN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_DSN
void System::DateTimeParse::DS::_set_DX_DSN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_DSN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_DSN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NDS
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_NDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NDS"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NDS
void System::DateTimeParse::DS::_set_DX_NDS(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_NDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NDS", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NNDS
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NNDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_NNDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NNDS"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NNDS
void System::DateTimeParse::DS::_set_DX_NNDS(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_NNDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NNDS", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_YNN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_YNN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_YNN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_YNN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_YNN
void System::DateTimeParse::DS::_set_DX_YNN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_YNN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_YNN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_YMN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_YMN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_YMN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_YMN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_YMN
void System::DateTimeParse::DS::_set_DX_YMN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_YMN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_YMN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_YN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_YN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_YN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_YN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_YN
void System::DateTimeParse::DS::_set_DX_YN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_YN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_YN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_YM
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_YM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_YM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_YM"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_YM
void System::DateTimeParse::DS::_set_DX_YM(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_YM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_YM", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS TX_N
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_TX_N() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_TX_N");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "TX_N"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS TX_N
void System::DateTimeParse::DS::_set_TX_N(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_TX_N");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "TX_N", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS TX_NN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_TX_NN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_TX_NN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "TX_NN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS TX_NN
void System::DateTimeParse::DS::_set_TX_NN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_TX_NN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "TX_NN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS TX_NNN
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_TX_NNN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_TX_NNN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "TX_NNN"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS TX_NNN
void System::DateTimeParse::DS::_set_TX_NNN(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_TX_NNN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "TX_NNN", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS TX_TS
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_TX_TS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_TX_TS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "TX_TS"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS TX_TS
void System::DateTimeParse::DS::_set_TX_TS(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_TX_TS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "TX_TS", value));
}
// Autogenerated static field getter
// Get static field: static public System.DateTimeParse/DS DX_NNY
::System::DateTimeParse::DS System::DateTimeParse::DS::_get_DX_NNY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_get_DX_NNY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeParse::DS>("System", "DateTimeParse/DS", "DX_NNY"));
}
// Autogenerated static field setter
// Set static field: static public System.DateTimeParse/DS DX_NNY
void System::DateTimeParse::DS::_set_DX_NNY(::System::DateTimeParse::DS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::_set_DX_NNY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse/DS", "DX_NNY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::DateTimeParse::DS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::DS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DateTimeParse/<>c
#include "System/DateTimeParse_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.DateTimeParse/MatchNumberDelegate
#include "System/DateTimeParse_MatchNumberDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.DateTimeParse/<>c <>9
::System::DateTimeParse::$$c* System::DateTimeParse::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::DateTimeParse::$$c*>("System", "DateTimeParse/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTimeParse/<>c <>9
void System::DateTimeParse::$$c::_set_$$9(::System::DateTimeParse::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "DateTimeParse/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.DateTimeParse/MatchNumberDelegate> <>9__98_0
::System::Func_1<::System::DateTimeParse::MatchNumberDelegate*>* System::DateTimeParse::$$c::_get_$$9__98_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::$$c::_get_$$9__98_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::System::DateTimeParse::MatchNumberDelegate*>*>("System", "DateTimeParse/<>c", "<>9__98_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.DateTimeParse/MatchNumberDelegate> <>9__98_0
void System::DateTimeParse::$$c::_set_$$9__98_0(::System::Func_1<::System::DateTimeParse::MatchNumberDelegate*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::$$c::_set_$$9__98_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "DateTimeParse/<>c", "<>9__98_0", value)));
}
// Autogenerated method: System.DateTimeParse/<>c..cctor
void System::DateTimeParse::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DateTimeParse/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DateTimeParse/<>c.<DoStrictParse>b__98_0
::System::DateTimeParse::MatchNumberDelegate* System::DateTimeParse::$$c::$DoStrictParse$b__98_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeParse::$$c::<DoStrictParse>b__98_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DoStrictParse>b__98_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeParse::MatchNumberDelegate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.__DTString
#include "System/__DTString.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.TokenType
#include "System/TokenType.hpp"
// Including type: System.DTSubString
#include "System/DTSubString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] WhiteSpaceChecks
::ArrayW<::Il2CppChar> System::__DTString::_get_WhiteSpaceChecks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::_get_WhiteSpaceChecks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "__DTString", "WhiteSpaceChecks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] WhiteSpaceChecks
void System::__DTString::_set_WhiteSpaceChecks(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::_set_WhiteSpaceChecks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "__DTString", "WhiteSpaceChecks", value));
}
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> Value
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::__DTString::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Index
[[deprecated("Use field access instead!")]] int& System::__DTString::dyn_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::dyn_Index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char m_current
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::__DTString::dyn_m_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::dyn_m_current");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_current"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo m_info
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::__DTString::dyn_m_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::dyn_m_info");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_info"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_checkDigitToken
[[deprecated("Use field access instead!")]] bool& System::__DTString::dyn_m_checkDigitToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::dyn_m_checkDigitToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_checkDigitToken"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.__DTString.get_Length
int System::__DTString::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString..ctor
System::__DTString::__DTString(::System::ReadOnlySpan_1<::Il2CppChar> str, ::System::Globalization::DateTimeFormatInfo* dtfi, bool checkDigitToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(checkDigitToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, dtfi, checkDigitToken);
}
// Autogenerated method: System.__DTString..ctor
System::__DTString::__DTString(::System::ReadOnlySpan_1<::Il2CppChar> str, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(dtfi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, dtfi);
}
// Autogenerated method: System.__DTString.get_CompareInfo
::System::Globalization::CompareInfo* System::__DTString::get_CompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::get_CompareInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CompareInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.GetNext
bool System::__DTString::GetNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::GetNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.AtEnd
bool System::__DTString::AtEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::AtEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AtEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.Advance
bool System::__DTString::Advance(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, count);
}
// Autogenerated method: System.__DTString.GetRegularToken
void System::__DTString::GetRegularToken(ByRef<::System::TokenType> tokenType, ByRef<int> tokenValue, ::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::GetRegularToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRegularToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::TokenType&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(dtfi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(tokenType), byref(tokenValue), dtfi);
}
// Autogenerated method: System.__DTString.GetSeparatorToken
::System::TokenType System::__DTString::GetSeparatorToken(::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> indexBeforeSeparator, ByRef<::Il2CppChar> charBeforeSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::GetSeparatorToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSeparatorToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TokenType, false>(this, ___internal__method, dtfi, byref(indexBeforeSeparator), byref(charBeforeSeparator));
}
// Autogenerated method: System.__DTString.MatchSpecifiedWord
bool System::__DTString::MatchSpecifiedWord(::StringW target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::MatchSpecifiedWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchSpecifiedWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated method: System.__DTString.MatchSpecifiedWords
bool System::__DTString::MatchSpecifiedWords(::StringW target, bool checkWordBoundary, ByRef<int> matchLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::MatchSpecifiedWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchSpecifiedWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(checkWordBoundary), ::il2cpp_utils::ExtractType(matchLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target, checkWordBoundary, byref(matchLength));
}
// Autogenerated method: System.__DTString.Match
bool System::__DTString::Match(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, str);
}
// Autogenerated method: System.__DTString.Match
bool System::__DTString::Match(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.__DTString.MatchLongestWords
int System::__DTString::MatchLongestWords(::ArrayW<::StringW> words, ByRef<int> maxMatchStrLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::MatchLongestWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchLongestWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(words), ::il2cpp_utils::ExtractType(maxMatchStrLen)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, words, byref(maxMatchStrLen));
}
// Autogenerated method: System.__DTString.GetRepeatCount
int System::__DTString::GetRepeatCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::GetRepeatCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRepeatCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.GetNextDigit
bool System::__DTString::GetNextDigit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::GetNextDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNextDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.GetChar
::Il2CppChar System::__DTString::GetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::GetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.GetDigit
int System::__DTString::GetDigit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::GetDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.SkipWhiteSpaces
void System::__DTString::SkipWhiteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::SkipWhiteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SkipWhiteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.SkipWhiteSpaceCurrent
bool System::__DTString::SkipWhiteSpaceCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::SkipWhiteSpaceCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SkipWhiteSpaceCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.TrimTail
void System::__DTString::TrimTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::TrimTail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrimTail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.RemoveTrailingInQuoteSpaces
void System::__DTString::RemoveTrailingInQuoteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::RemoveTrailingInQuoteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveTrailingInQuoteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.RemoveLeadingInQuoteSpaces
void System::__DTString::RemoveLeadingInQuoteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::RemoveLeadingInQuoteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveLeadingInQuoteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.GetSubString
::System::DTSubString System::__DTString::GetSubString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::GetSubString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSubString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DTSubString, false>(this, ___internal__method);
}
// Autogenerated method: System.__DTString.ConsumeSubString
void System::__DTString::ConsumeSubString(::System::DTSubString sub) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::ConsumeSubString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeSubString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sub)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sub);
}
// Autogenerated method: System.__DTString..cctor
void System::__DTString::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__DTString::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "__DTString", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DTSubStringType
#include "System/DTSubStringType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.DTSubStringType Unknown
::System::DTSubStringType System::DTSubStringType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DTSubStringType>("System", "DTSubStringType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.DTSubStringType Unknown
void System::DTSubStringType::_set_Unknown(::System::DTSubStringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DTSubStringType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.DTSubStringType Invalid
::System::DTSubStringType System::DTSubStringType::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DTSubStringType>("System", "DTSubStringType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.DTSubStringType Invalid
void System::DTSubStringType::_set_Invalid(::System::DTSubStringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DTSubStringType", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.DTSubStringType Number
::System::DTSubStringType System::DTSubStringType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DTSubStringType>("System", "DTSubStringType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public System.DTSubStringType Number
void System::DTSubStringType::_set_Number(::System::DTSubStringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DTSubStringType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public System.DTSubStringType End
::System::DTSubStringType System::DTSubStringType::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DTSubStringType>("System", "DTSubStringType", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.DTSubStringType End
void System::DTSubStringType::_set_End(::System::DTSubStringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DTSubStringType", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.DTSubStringType Other
::System::DTSubStringType System::DTSubStringType::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DTSubStringType>("System", "DTSubStringType", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.DTSubStringType Other
void System::DTSubStringType::_set_Other(::System::DTSubStringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DTSubStringType", "Other", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::DTSubStringType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubStringType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DTSubString
#include "System/DTSubString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> s
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::DTSubString::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubString::dyn_s");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 index
[[deprecated("Use field access instead!")]] int& System::DTSubString::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubString::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 length
[[deprecated("Use field access instead!")]] int& System::DTSubString::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubString::dyn_length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.DTSubStringType type
[[deprecated("Use field access instead!")]] ::System::DTSubStringType& System::DTSubString::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubString::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::DTSubStringType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 value
[[deprecated("Use field access instead!")]] int& System::DTSubString::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubString::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.DTSubString.get_Item
::Il2CppChar System::DTSubString::get_Item(int relativeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DTSubString::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, relativeIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.DateTimeRawInfo
#include "System/DateTimeRawInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32* num
[[deprecated("Use field access instead!")]] int*& System::DateTimeRawInfo::dyn_num() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::dyn_num");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "num"))->offset;
  return *reinterpret_cast<int**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 numCount
[[deprecated("Use field access instead!")]] int& System::DateTimeRawInfo::dyn_numCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::dyn_numCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 month
[[deprecated("Use field access instead!")]] int& System::DateTimeRawInfo::dyn_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::dyn_month");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 year
[[deprecated("Use field access instead!")]] int& System::DateTimeRawInfo::dyn_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::dyn_year");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "year"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 dayOfWeek
[[deprecated("Use field access instead!")]] int& System::DateTimeRawInfo::dyn_dayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::dyn_dayOfWeek");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayOfWeek"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 era
[[deprecated("Use field access instead!")]] int& System::DateTimeRawInfo::dyn_era() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::dyn_era");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "era"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.DateTimeParse/TM timeMark
[[deprecated("Use field access instead!")]] ::System::DateTimeParse::TM& System::DateTimeRawInfo::dyn_timeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::dyn_timeMark");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeMark"))->offset;
  return *reinterpret_cast<::System::DateTimeParse::TM*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double fraction
[[deprecated("Use field access instead!")]] double& System::DateTimeRawInfo::dyn_fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::dyn_fraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fraction"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean hasSameDateAndTimeSeparators
[[deprecated("Use field access instead!")]] bool& System::DateTimeRawInfo::dyn_hasSameDateAndTimeSeparators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::dyn_hasSameDateAndTimeSeparators");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSameDateAndTimeSeparators"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.DateTimeRawInfo.Init
void System::DateTimeRawInfo::Init(int* numberBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numberBuffer);
}
// Autogenerated method: System.DateTimeRawInfo.AddNumber
void System::DateTimeRawInfo::AddNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::AddNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.DateTimeRawInfo.GetNumber
int System::DateTimeRawInfo::GetNumber(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeRawInfo::GetNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ParseFailureKind
#include "System/ParseFailureKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind None
::System::ParseFailureKind System::ParseFailureKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFailureKind>("System", "ParseFailureKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind None
void System::ParseFailureKind::_set_None(::System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind ArgumentNull
::System::ParseFailureKind System::ParseFailureKind::_get_ArgumentNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_get_ArgumentNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFailureKind>("System", "ParseFailureKind", "ArgumentNull"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind ArgumentNull
void System::ParseFailureKind::_set_ArgumentNull(::System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_set_ArgumentNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "ArgumentNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind Format
::System::ParseFailureKind System::ParseFailureKind::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFailureKind>("System", "ParseFailureKind", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind Format
void System::ParseFailureKind::_set_Format(::System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind FormatWithParameter
::System::ParseFailureKind System::ParseFailureKind::_get_FormatWithParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_get_FormatWithParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFailureKind>("System", "ParseFailureKind", "FormatWithParameter"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind FormatWithParameter
void System::ParseFailureKind::_set_FormatWithParameter(::System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_set_FormatWithParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "FormatWithParameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind FormatWithOriginalDateTime
::System::ParseFailureKind System::ParseFailureKind::_get_FormatWithOriginalDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_get_FormatWithOriginalDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFailureKind>("System", "ParseFailureKind", "FormatWithOriginalDateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind FormatWithOriginalDateTime
void System::ParseFailureKind::_set_FormatWithOriginalDateTime(::System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_set_FormatWithOriginalDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "FormatWithOriginalDateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind FormatWithFormatSpecifier
::System::ParseFailureKind System::ParseFailureKind::_get_FormatWithFormatSpecifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_get_FormatWithFormatSpecifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFailureKind>("System", "ParseFailureKind", "FormatWithFormatSpecifier"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind FormatWithFormatSpecifier
void System::ParseFailureKind::_set_FormatWithFormatSpecifier(::System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_set_FormatWithFormatSpecifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "FormatWithFormatSpecifier", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind FormatWithOriginalDateTimeAndParameter
::System::ParseFailureKind System::ParseFailureKind::_get_FormatWithOriginalDateTimeAndParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_get_FormatWithOriginalDateTimeAndParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFailureKind>("System", "ParseFailureKind", "FormatWithOriginalDateTimeAndParameter"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind FormatWithOriginalDateTimeAndParameter
void System::ParseFailureKind::_set_FormatWithOriginalDateTimeAndParameter(::System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_set_FormatWithOriginalDateTimeAndParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "FormatWithOriginalDateTimeAndParameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFailureKind FormatBadDateTimeCalendar
::System::ParseFailureKind System::ParseFailureKind::_get_FormatBadDateTimeCalendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_get_FormatBadDateTimeCalendar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFailureKind>("System", "ParseFailureKind", "FormatBadDateTimeCalendar"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFailureKind FormatBadDateTimeCalendar
void System::ParseFailureKind::_set_FormatBadDateTimeCalendar(::System::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::_set_FormatBadDateTimeCalendar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFailureKind", "FormatBadDateTimeCalendar", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ParseFailureKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFailureKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ParseFlags
#include "System/ParseFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveYear
::System::ParseFlags System::ParseFlags::_get_HaveYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_HaveYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "HaveYear"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveYear
void System::ParseFlags::_set_HaveYear(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_HaveYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveMonth
::System::ParseFlags System::ParseFlags::_get_HaveMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_HaveMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "HaveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveMonth
void System::ParseFlags::_set_HaveMonth(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_HaveMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveDay
::System::ParseFlags System::ParseFlags::_get_HaveDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_HaveDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "HaveDay"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveDay
void System::ParseFlags::_set_HaveDay(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_HaveDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveHour
::System::ParseFlags System::ParseFlags::_get_HaveHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_HaveHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "HaveHour"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveHour
void System::ParseFlags::_set_HaveHour(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_HaveHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveHour", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveMinute
::System::ParseFlags System::ParseFlags::_get_HaveMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_HaveMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "HaveMinute"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveMinute
void System::ParseFlags::_set_HaveMinute(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_HaveMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveMinute", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveSecond
::System::ParseFlags System::ParseFlags::_get_HaveSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_HaveSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "HaveSecond"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveSecond
void System::ParseFlags::_set_HaveSecond(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_HaveSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveSecond", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveTime
::System::ParseFlags System::ParseFlags::_get_HaveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_HaveTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "HaveTime"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveTime
void System::ParseFlags::_set_HaveTime(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_HaveTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags HaveDate
::System::ParseFlags System::ParseFlags::_get_HaveDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_HaveDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "HaveDate"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags HaveDate
void System::ParseFlags::_set_HaveDate(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_HaveDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "HaveDate", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags TimeZoneUsed
::System::ParseFlags System::ParseFlags::_get_TimeZoneUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_TimeZoneUsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "TimeZoneUsed"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags TimeZoneUsed
void System::ParseFlags::_set_TimeZoneUsed(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_TimeZoneUsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "TimeZoneUsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags TimeZoneUtc
::System::ParseFlags System::ParseFlags::_get_TimeZoneUtc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_TimeZoneUtc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "TimeZoneUtc"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags TimeZoneUtc
void System::ParseFlags::_set_TimeZoneUtc(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_TimeZoneUtc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "TimeZoneUtc", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags ParsedMonthName
::System::ParseFlags System::ParseFlags::_get_ParsedMonthName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_ParsedMonthName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "ParsedMonthName"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags ParsedMonthName
void System::ParseFlags::_set_ParsedMonthName(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_ParsedMonthName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "ParsedMonthName", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags CaptureOffset
::System::ParseFlags System::ParseFlags::_get_CaptureOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_CaptureOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "CaptureOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags CaptureOffset
void System::ParseFlags::_set_CaptureOffset(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_CaptureOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "CaptureOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags YearDefault
::System::ParseFlags System::ParseFlags::_get_YearDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_YearDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "YearDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags YearDefault
void System::ParseFlags::_set_YearDefault(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_YearDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "YearDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags Rfc1123Pattern
::System::ParseFlags System::ParseFlags::_get_Rfc1123Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_Rfc1123Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "Rfc1123Pattern"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags Rfc1123Pattern
void System::ParseFlags::_set_Rfc1123Pattern(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_Rfc1123Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "Rfc1123Pattern", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParseFlags UtcSortPattern
::System::ParseFlags System::ParseFlags::_get_UtcSortPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_get_UtcSortPattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParseFlags>("System", "ParseFlags", "UtcSortPattern"));
}
// Autogenerated static field setter
// Set static field: static public System.ParseFlags UtcSortPattern
void System::ParseFlags::_set_UtcSortPattern(::System::ParseFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::_set_UtcSortPattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParseFlags", "UtcSortPattern", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ParseFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTimeResult
#include "System/DateTimeResult.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 Year
[[deprecated("Use field access instead!")]] int& System::DateTimeResult::dyn_Year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_Year");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Year"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Month
[[deprecated("Use field access instead!")]] int& System::DateTimeResult::dyn_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_Month");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Day
[[deprecated("Use field access instead!")]] int& System::DateTimeResult::dyn_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_Day");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Hour
[[deprecated("Use field access instead!")]] int& System::DateTimeResult::dyn_Hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_Hour");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Minute
[[deprecated("Use field access instead!")]] int& System::DateTimeResult::dyn_Minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_Minute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Minute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Second
[[deprecated("Use field access instead!")]] int& System::DateTimeResult::dyn_Second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_Second");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Second"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double fraction
[[deprecated("Use field access instead!")]] double& System::DateTimeResult::dyn_fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_fraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fraction"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 era
[[deprecated("Use field access instead!")]] int& System::DateTimeResult::dyn_era() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_era");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "era"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ParseFlags flags
[[deprecated("Use field access instead!")]] ::System::ParseFlags& System::DateTimeResult::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::System::ParseFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.TimeSpan timeZoneOffset
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::DateTimeResult::dyn_timeZoneOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_timeZoneOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeZoneOffset"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.Calendar calendar
[[deprecated("Use field access instead!")]] ::System::Globalization::Calendar*& System::DateTimeResult::dyn_calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_calendar");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendar"))->offset;
  return *reinterpret_cast<::System::Globalization::Calendar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.DateTime parsedDate
[[deprecated("Use field access instead!")]] ::System::DateTime& System::DateTimeResult::dyn_parsedDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_parsedDate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsedDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ParseFailureKind failure
[[deprecated("Use field access instead!")]] ::System::ParseFailureKind& System::DateTimeResult::dyn_failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_failure");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failure"))->offset;
  return *reinterpret_cast<::System::ParseFailureKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String failureMessageID
[[deprecated("Use field access instead!")]] ::StringW& System::DateTimeResult::dyn_failureMessageID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_failureMessageID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failureMessageID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object failureMessageFormatArgument
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::DateTimeResult::dyn_failureMessageFormatArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_failureMessageFormatArgument");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failureMessageFormatArgument"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String failureArgumentName
[[deprecated("Use field access instead!")]] ::StringW& System::DateTimeResult::dyn_failureArgumentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_failureArgumentName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failureArgumentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> originalDateTimeString
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::DateTimeResult::dyn_originalDateTimeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_originalDateTimeString");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalDateTimeString"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> failedFormatSpecifier
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::DateTimeResult::dyn_failedFormatSpecifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::dyn_failedFormatSpecifier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failedFormatSpecifier"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.DateTimeResult.Init
void System::DateTimeResult::Init(::System::ReadOnlySpan_1<::Il2CppChar> originalDateTimeString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalDateTimeString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, originalDateTimeString);
}
// Autogenerated method: System.DateTimeResult.SetDate
void System::DateTimeResult::SetDate(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::SetDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, year, month, day);
}
// Autogenerated method: System.DateTimeResult.SetBadFormatSpecifierFailure
void System::DateTimeResult::SetBadFormatSpecifierFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::SetBadFormatSpecifierFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetBadFormatSpecifierFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeResult.SetBadFormatSpecifierFailure
void System::DateTimeResult::SetBadFormatSpecifierFailure(::System::ReadOnlySpan_1<::Il2CppChar> failedFormatSpecifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::SetBadFormatSpecifierFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetBadFormatSpecifierFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failedFormatSpecifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failedFormatSpecifier);
}
// Autogenerated method: System.DateTimeResult.SetBadDateTimeFailure
void System::DateTimeResult::SetBadDateTimeFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::SetBadDateTimeFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetBadDateTimeFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.DateTimeResult.SetFailure
void System::DateTimeResult::SetFailure(::System::ParseFailureKind failure, ::StringW failureMessageID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure, failureMessageID);
}
// Autogenerated method: System.DateTimeResult.SetFailure
void System::DateTimeResult::SetFailure(::System::ParseFailureKind failure, ::StringW failureMessageID, ::Il2CppObject* failureMessageFormatArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument);
}
// Autogenerated method: System.DateTimeResult.SetFailure
void System::DateTimeResult::SetFailure(::System::ParseFailureKind failure, ::StringW failureMessageID, ::Il2CppObject* failureMessageFormatArgument, ::StringW failureArgumentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DateTimeResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument), ::il2cpp_utils::ExtractType(failureArgumentName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument, failureArgumentName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ParsingInfo
#include "System/ParsingInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.DateTimeParse/MatchNumberDelegate
#include "System/DateTimeParse_MatchNumberDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Globalization.Calendar calendar
[[deprecated("Use field access instead!")]] ::System::Globalization::Calendar*& System::ParsingInfo::dyn_calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingInfo::dyn_calendar");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendar"))->offset;
  return *reinterpret_cast<::System::Globalization::Calendar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 dayOfWeek
[[deprecated("Use field access instead!")]] int& System::ParsingInfo::dyn_dayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingInfo::dyn_dayOfWeek");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayOfWeek"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.DateTimeParse/TM timeMark
[[deprecated("Use field access instead!")]] ::System::DateTimeParse::TM& System::ParsingInfo::dyn_timeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingInfo::dyn_timeMark");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeMark"))->offset;
  return *reinterpret_cast<::System::DateTimeParse::TM*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean fUseHour12
[[deprecated("Use field access instead!")]] bool& System::ParsingInfo::dyn_fUseHour12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingInfo::dyn_fUseHour12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fUseHour12"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean fUseTwoDigitYear
[[deprecated("Use field access instead!")]] bool& System::ParsingInfo::dyn_fUseTwoDigitYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingInfo::dyn_fUseTwoDigitYear");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fUseTwoDigitYear"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean fAllowInnerWhite
[[deprecated("Use field access instead!")]] bool& System::ParsingInfo::dyn_fAllowInnerWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingInfo::dyn_fAllowInnerWhite");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fAllowInnerWhite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean fAllowTrailingWhite
[[deprecated("Use field access instead!")]] bool& System::ParsingInfo::dyn_fAllowTrailingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingInfo::dyn_fAllowTrailingWhite");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fAllowTrailingWhite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean fCustomNumberParser
[[deprecated("Use field access instead!")]] bool& System::ParsingInfo::dyn_fCustomNumberParser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingInfo::dyn_fCustomNumberParser");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fCustomNumberParser"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.DateTimeParse/MatchNumberDelegate parseNumberDelegate
[[deprecated("Use field access instead!")]] ::System::DateTimeParse::MatchNumberDelegate*& System::ParsingInfo::dyn_parseNumberDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingInfo::dyn_parseNumberDelegate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parseNumberDelegate"))->offset;
  return *reinterpret_cast<::System::DateTimeParse::MatchNumberDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ParsingInfo.Init
void System::ParsingInfo::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingInfo::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.TokenType
#include "System/TokenType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TokenType NumberToken
::System::TokenType System::TokenType::_get_NumberToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_NumberToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "NumberToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType NumberToken
void System::TokenType::_set_NumberToken(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_NumberToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "NumberToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType YearNumberToken
::System::TokenType System::TokenType::_get_YearNumberToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_YearNumberToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "YearNumberToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType YearNumberToken
void System::TokenType::_set_YearNumberToken(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_YearNumberToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "YearNumberToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType Am
::System::TokenType System::TokenType::_get_Am() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_Am");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "Am"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType Am
void System::TokenType::_set_Am(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_Am");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "Am", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType Pm
::System::TokenType System::TokenType::_get_Pm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_Pm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "Pm"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType Pm
void System::TokenType::_set_Pm(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_Pm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "Pm", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType MonthToken
::System::TokenType System::TokenType::_get_MonthToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_MonthToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "MonthToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType MonthToken
void System::TokenType::_set_MonthToken(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_MonthToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "MonthToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType EndOfString
::System::TokenType System::TokenType::_get_EndOfString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_EndOfString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "EndOfString"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType EndOfString
void System::TokenType::_set_EndOfString(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_EndOfString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "EndOfString", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType DayOfWeekToken
::System::TokenType System::TokenType::_get_DayOfWeekToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_DayOfWeekToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "DayOfWeekToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType DayOfWeekToken
void System::TokenType::_set_DayOfWeekToken(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_DayOfWeekToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "DayOfWeekToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType TimeZoneToken
::System::TokenType System::TokenType::_get_TimeZoneToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_TimeZoneToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "TimeZoneToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType TimeZoneToken
void System::TokenType::_set_TimeZoneToken(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_TimeZoneToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "TimeZoneToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType EraToken
::System::TokenType System::TokenType::_get_EraToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_EraToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "EraToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType EraToken
void System::TokenType::_set_EraToken(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_EraToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "EraToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType DateWordToken
::System::TokenType System::TokenType::_get_DateWordToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_DateWordToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "DateWordToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType DateWordToken
void System::TokenType::_set_DateWordToken(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_DateWordToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "DateWordToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType UnknownToken
::System::TokenType System::TokenType::_get_UnknownToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_UnknownToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "UnknownToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType UnknownToken
void System::TokenType::_set_UnknownToken(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_UnknownToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "UnknownToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType HebrewNumber
::System::TokenType System::TokenType::_get_HebrewNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_HebrewNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "HebrewNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType HebrewNumber
void System::TokenType::_set_HebrewNumber(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_HebrewNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "HebrewNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType JapaneseEraToken
::System::TokenType System::TokenType::_get_JapaneseEraToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_JapaneseEraToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "JapaneseEraToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType JapaneseEraToken
void System::TokenType::_set_JapaneseEraToken(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_JapaneseEraToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "JapaneseEraToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType TEraToken
::System::TokenType System::TokenType::_get_TEraToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_TEraToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "TEraToken"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType TEraToken
void System::TokenType::_set_TEraToken(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_TEraToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "TEraToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType IgnorableSymbol
::System::TokenType System::TokenType::_get_IgnorableSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_IgnorableSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "IgnorableSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType IgnorableSymbol
void System::TokenType::_set_IgnorableSymbol(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_IgnorableSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "IgnorableSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Unk
::System::TokenType System::TokenType::_get_SEP_Unk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_Unk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_Unk"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Unk
void System::TokenType::_set_SEP_Unk(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_Unk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Unk", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_End
::System::TokenType System::TokenType::_get_SEP_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_End"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_End
void System::TokenType::_set_SEP_End(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_End", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Space
::System::TokenType System::TokenType::_get_SEP_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_Space");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_Space"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Space
void System::TokenType::_set_SEP_Space(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_Space");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Space", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Am
::System::TokenType System::TokenType::_get_SEP_Am() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_Am");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_Am"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Am
void System::TokenType::_set_SEP_Am(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_Am");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Am", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Pm
::System::TokenType System::TokenType::_get_SEP_Pm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_Pm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_Pm"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Pm
void System::TokenType::_set_SEP_Pm(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_Pm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Pm", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Date
::System::TokenType System::TokenType::_get_SEP_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_Date"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Date
void System::TokenType::_set_SEP_Date(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_Time
::System::TokenType System::TokenType::_get_SEP_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_Time"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_Time
void System::TokenType::_set_SEP_Time(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_YearSuff
::System::TokenType System::TokenType::_get_SEP_YearSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_YearSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_YearSuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_YearSuff
void System::TokenType::_set_SEP_YearSuff(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_YearSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_YearSuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_MonthSuff
::System::TokenType System::TokenType::_get_SEP_MonthSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_MonthSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_MonthSuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_MonthSuff
void System::TokenType::_set_SEP_MonthSuff(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_MonthSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_MonthSuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_DaySuff
::System::TokenType System::TokenType::_get_SEP_DaySuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_DaySuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_DaySuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_DaySuff
void System::TokenType::_set_SEP_DaySuff(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_DaySuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_DaySuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_HourSuff
::System::TokenType System::TokenType::_get_SEP_HourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_HourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_HourSuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_HourSuff
void System::TokenType::_set_SEP_HourSuff(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_HourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_HourSuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_MinuteSuff
::System::TokenType System::TokenType::_get_SEP_MinuteSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_MinuteSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_MinuteSuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_MinuteSuff
void System::TokenType::_set_SEP_MinuteSuff(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_MinuteSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_MinuteSuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_SecondSuff
::System::TokenType System::TokenType::_get_SEP_SecondSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_SecondSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_SecondSuff"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_SecondSuff
void System::TokenType::_set_SEP_SecondSuff(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_SecondSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_SecondSuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_LocalTimeMark
::System::TokenType System::TokenType::_get_SEP_LocalTimeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_LocalTimeMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_LocalTimeMark"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_LocalTimeMark
void System::TokenType::_set_SEP_LocalTimeMark(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_LocalTimeMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_LocalTimeMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SEP_DateOrOffset
::System::TokenType System::TokenType::_get_SEP_DateOrOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SEP_DateOrOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SEP_DateOrOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SEP_DateOrOffset
void System::TokenType::_set_SEP_DateOrOffset(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SEP_DateOrOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SEP_DateOrOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType RegularTokenMask
::System::TokenType System::TokenType::_get_RegularTokenMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_RegularTokenMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "RegularTokenMask"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType RegularTokenMask
void System::TokenType::_set_RegularTokenMask(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_RegularTokenMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "RegularTokenMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.TokenType SeparatorTokenMask
::System::TokenType System::TokenType::_get_SeparatorTokenMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_get_SeparatorTokenMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TokenType>("System", "TokenType", "SeparatorTokenMask"));
}
// Autogenerated static field setter
// Set static field: static public System.TokenType SeparatorTokenMask
void System::TokenType::_set_SeparatorTokenMask(::System::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::_set_SeparatorTokenMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TokenType", "SeparatorTokenMask", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::TokenType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TokenType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Guid/GuidStyles
#include "System/Guid_GuidStyles.hpp"
// Including type: System.Guid/GuidParseThrowStyle
#include "System/Guid_GuidParseThrowStyle.hpp"
// Including type: System.Guid/ParseFailureKind
#include "System/Guid_ParseFailureKind.hpp"
// Including type: System.Guid/GuidResult
#include "System/Guid_GuidResult.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Empty
::System::Guid System::Guid::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System", "Guid", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Empty
void System::Guid::_set_Empty(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _a
[[deprecated("Use field access instead!")]] int& System::Guid::dyn__a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__a");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_a"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 _b
[[deprecated("Use field access instead!")]] int16_t& System::Guid::dyn__b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__b");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 _c
[[deprecated("Use field access instead!")]] int16_t& System::Guid::dyn__c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__c");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_c"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _d
[[deprecated("Use field access instead!")]] uint8_t& System::Guid::dyn__d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__d");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_d"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _e
[[deprecated("Use field access instead!")]] uint8_t& System::Guid::dyn__e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__e");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_e"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _f
[[deprecated("Use field access instead!")]] uint8_t& System::Guid::dyn__f() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__f");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_f"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _g
[[deprecated("Use field access instead!")]] uint8_t& System::Guid::dyn__g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__g");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_g"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _h
[[deprecated("Use field access instead!")]] uint8_t& System::Guid::dyn__h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__h");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_h"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _i
[[deprecated("Use field access instead!")]] uint8_t& System::Guid::dyn__i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__i");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_i"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _j
[[deprecated("Use field access instead!")]] uint8_t& System::Guid::dyn__j() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__j");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_j"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _k
[[deprecated("Use field access instead!")]] uint8_t& System::Guid::dyn__k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::dyn__k");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_k"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Guid.NewGuid
::System::Guid System::Guid::NewGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::NewGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "NewGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Guid..ctor
System::Guid::Guid(::ArrayW<uint8_t> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Guid..ctor
System::Guid::Guid(::System::ReadOnlySpan_1<uint8_t> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Guid..ctor
System::Guid::Guid(int a, int16_t b, int16_t c, ::ArrayW<uint8_t> d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: System.Guid..ctor
// ABORTED elsewhere.  System::Guid::Guid(int a, int16_t b, int16_t c, uint8_t d, uint8_t e, uint8_t f, uint8_t g, uint8_t h, uint8_t i, uint8_t j, uint8_t k)
// Autogenerated method: System.Guid..ctor
System::Guid::Guid(::StringW g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, g);
}
// Autogenerated method: System.Guid.Parse
::System::Guid System::Guid::Parse(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Guid.Parse
::System::Guid System::Guid::Parse(::System::ReadOnlySpan_1<::Il2CppChar> input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Guid.TryParse
bool System::Guid::TryParse(::StringW input, ByRef<::System::Guid> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated method: System.Guid.TryParse
bool System::Guid::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> input, ByRef<::System::Guid> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated method: System.Guid.TryParseExact
bool System::Guid::TryParseExact(::StringW input, ::StringW format, ByRef<::System::Guid> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, format, byref(result));
}
// Autogenerated method: System.Guid.TryParseExact
bool System::Guid::TryParseExact(::System::ReadOnlySpan_1<::Il2CppChar> input, ::System::ReadOnlySpan_1<::Il2CppChar> format, ByRef<::System::Guid> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, format, byref(result));
}
// Autogenerated method: System.Guid.TryParseGuid
bool System::Guid::TryParseGuid(::System::ReadOnlySpan_1<::Il2CppChar> guidString, ::System::Guid::GuidStyles flags, ByRef<::System::Guid::GuidResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::TryParseGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParseGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidString), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guidString, flags, byref(result));
}
// Autogenerated method: System.Guid.TryParseGuidWithHexPrefix
bool System::Guid::TryParseGuidWithHexPrefix(::System::ReadOnlySpan_1<::Il2CppChar> guidString, ByRef<::System::Guid::GuidResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::TryParseGuidWithHexPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParseGuidWithHexPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidString), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guidString, byref(result));
}
// Autogenerated method: System.Guid.TryParseGuidWithNoStyle
bool System::Guid::TryParseGuidWithNoStyle(::System::ReadOnlySpan_1<::Il2CppChar> guidString, ByRef<::System::Guid::GuidResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::TryParseGuidWithNoStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParseGuidWithNoStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidString), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guidString, byref(result));
}
// Autogenerated method: System.Guid.TryParseGuidWithDashes
bool System::Guid::TryParseGuidWithDashes(::System::ReadOnlySpan_1<::Il2CppChar> guidString, ByRef<::System::Guid::GuidResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::TryParseGuidWithDashes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "TryParseGuidWithDashes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidString), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guidString, byref(result));
}
// Autogenerated method: System.Guid.StringToShort
bool System::Guid::StringToShort(::System::ReadOnlySpan_1<::Il2CppChar> str, int requiredLength, int flags, ByRef<int16_t> result, ByRef<::System::Guid::GuidResult> parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::StringToShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(requiredLength), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int16_t&>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, requiredLength, flags, byref(result), byref(parseResult));
}
// Autogenerated method: System.Guid.StringToShort
bool System::Guid::StringToShort(::System::ReadOnlySpan_1<::Il2CppChar> str, ByRef<int> parsePos, int requiredLength, int flags, ByRef<int16_t> result, ByRef<::System::Guid::GuidResult> parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::StringToShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(parsePos), ::il2cpp_utils::ExtractType(requiredLength), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int16_t&>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, byref(parsePos), requiredLength, flags, byref(result), byref(parseResult));
}
// Autogenerated method: System.Guid.StringToInt
bool System::Guid::StringToInt(::System::ReadOnlySpan_1<::Il2CppChar> str, int requiredLength, int flags, ByRef<int> result, ByRef<::System::Guid::GuidResult> parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::StringToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(requiredLength), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, requiredLength, flags, byref(result), byref(parseResult));
}
// Autogenerated method: System.Guid.StringToInt
bool System::Guid::StringToInt(::System::ReadOnlySpan_1<::Il2CppChar> str, ByRef<int> parsePos, int requiredLength, int flags, ByRef<int> result, ByRef<::System::Guid::GuidResult> parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::StringToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(parsePos), ::il2cpp_utils::ExtractType(requiredLength), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, byref(parsePos), requiredLength, flags, byref(result), byref(parseResult));
}
// Autogenerated method: System.Guid.StringToLong
bool System::Guid::StringToLong(::System::ReadOnlySpan_1<::Il2CppChar> str, ByRef<int> parsePos, int flags, ByRef<int64_t> result, ByRef<::System::Guid::GuidResult> parseResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::StringToLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "StringToLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(parsePos), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractType(parseResult)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, byref(parsePos), flags, byref(result), byref(parseResult));
}
// Autogenerated method: System.Guid.EatAllWhitespace
::System::ReadOnlySpan_1<::Il2CppChar> System::Guid::EatAllWhitespace(::System::ReadOnlySpan_1<::Il2CppChar> str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::EatAllWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "EatAllWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Guid.IsHexPrefix
bool System::Guid::IsHexPrefix(::System::ReadOnlySpan_1<::Il2CppChar> str, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::IsHexPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "IsHexPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, i);
}
// Autogenerated method: System.Guid.WriteByteHelper
void System::Guid::WriteByteHelper(::System::Span_1<uint8_t> destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::WriteByteHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteByteHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Guid.ToByteArray
::ArrayW<uint8_t> System::Guid::ToByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Guid.Equals
bool System::Guid::Equals(::System::Guid g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Guid), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, g);
}
// Autogenerated method: System.Guid.GetResult
int System::Guid::GetResult(uint me, uint them) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(me), ::il2cpp_utils::ExtractType(them)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, me, them);
}
// Autogenerated method: System.Guid.CompareTo
int System::Guid::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Guid), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Guid.CompareTo
int System::Guid::CompareTo(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Guid), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Guid.ToString
::StringW System::Guid::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Guid.HexToChar
::Il2CppChar System::Guid::HexToChar(int a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::HexToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "HexToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Guid.HexsToChars
int System::Guid::HexsToChars(::Il2CppChar* guidChars, int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::HexsToChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "HexsToChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidChars), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guidChars, a, b);
}
// Autogenerated method: System.Guid.HexsToCharsHexOutput
int System::Guid::HexsToCharsHexOutput(::Il2CppChar* guidChars, int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::HexsToCharsHexOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "HexsToCharsHexOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guidChars), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guidChars, a, b);
}
// Autogenerated method: System.Guid.ToString
::StringW System::Guid::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Guid), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Guid.TryFormat
bool System::Guid::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format);
}
// Autogenerated method: System.Guid.System.ISpanFormattable.TryFormat
bool System::Guid::System_ISpanFormattable_TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::System.ISpanFormattable.TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Guid), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, provider);
}
// Autogenerated method: System.Guid.ToString
::StringW System::Guid::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Guid.GetHashCode
int System::Guid::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Guid.Equals
bool System::Guid::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Guid.op_Equality
bool System::operator ==(const ::System::Guid& a, const ::System::Guid& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.Guid.op_Inequality
bool System::operator !=(const ::System::Guid& a, const ::System::Guid& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Guid", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Guid/GuidStyles
#include "System/Guid_GuidStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles None
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles None
void System::Guid::GuidStyles::_set_None(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles AllowParenthesis
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_AllowParenthesis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_AllowParenthesis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "AllowParenthesis"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles AllowParenthesis
void System::Guid::GuidStyles::_set_AllowParenthesis(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_AllowParenthesis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "AllowParenthesis", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles AllowBraces
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_AllowBraces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_AllowBraces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "AllowBraces"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles AllowBraces
void System::Guid::GuidStyles::_set_AllowBraces(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_AllowBraces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "AllowBraces", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles AllowDashes
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_AllowDashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_AllowDashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "AllowDashes"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles AllowDashes
void System::Guid::GuidStyles::_set_AllowDashes(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_AllowDashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "AllowDashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles AllowHexPrefix
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_AllowHexPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_AllowHexPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "AllowHexPrefix"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles AllowHexPrefix
void System::Guid::GuidStyles::_set_AllowHexPrefix(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_AllowHexPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "AllowHexPrefix", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles RequireParenthesis
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_RequireParenthesis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_RequireParenthesis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "RequireParenthesis"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles RequireParenthesis
void System::Guid::GuidStyles::_set_RequireParenthesis(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_RequireParenthesis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "RequireParenthesis", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles RequireBraces
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_RequireBraces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_RequireBraces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "RequireBraces"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles RequireBraces
void System::Guid::GuidStyles::_set_RequireBraces(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_RequireBraces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "RequireBraces", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles RequireDashes
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_RequireDashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_RequireDashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "RequireDashes"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles RequireDashes
void System::Guid::GuidStyles::_set_RequireDashes(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_RequireDashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "RequireDashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles RequireHexPrefix
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_RequireHexPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_RequireHexPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "RequireHexPrefix"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles RequireHexPrefix
void System::Guid::GuidStyles::_set_RequireHexPrefix(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_RequireHexPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "RequireHexPrefix", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles HexFormat
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_HexFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_HexFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "HexFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles HexFormat
void System::Guid::GuidStyles::_set_HexFormat(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_HexFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "HexFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles NumberFormat
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_NumberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_NumberFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "NumberFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles NumberFormat
void System::Guid::GuidStyles::_set_NumberFormat(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_NumberFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "NumberFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles DigitFormat
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_DigitFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_DigitFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "DigitFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles DigitFormat
void System::Guid::GuidStyles::_set_DigitFormat(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_DigitFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "DigitFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles BraceFormat
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_BraceFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_BraceFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "BraceFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles BraceFormat
void System::Guid::GuidStyles::_set_BraceFormat(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_BraceFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "BraceFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles ParenthesisFormat
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_ParenthesisFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_ParenthesisFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "ParenthesisFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles ParenthesisFormat
void System::Guid::GuidStyles::_set_ParenthesisFormat(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_ParenthesisFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "ParenthesisFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidStyles Any
::System::Guid::GuidStyles System::Guid::GuidStyles::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidStyles>("System", "Guid/GuidStyles", "Any"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidStyles Any
void System::Guid::GuidStyles::_set_Any(::System::Guid::GuidStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidStyles", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Guid::GuidStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Guid/GuidParseThrowStyle
#include "System/Guid_GuidParseThrowStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidParseThrowStyle None
::System::Guid::GuidParseThrowStyle System::Guid::GuidParseThrowStyle::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidParseThrowStyle::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidParseThrowStyle>("System", "Guid/GuidParseThrowStyle", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidParseThrowStyle None
void System::Guid::GuidParseThrowStyle::_set_None(::System::Guid::GuidParseThrowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidParseThrowStyle::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidParseThrowStyle", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidParseThrowStyle All
::System::Guid::GuidParseThrowStyle System::Guid::GuidParseThrowStyle::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidParseThrowStyle::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidParseThrowStyle>("System", "Guid/GuidParseThrowStyle", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidParseThrowStyle All
void System::Guid::GuidParseThrowStyle::_set_All(::System::Guid::GuidParseThrowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidParseThrowStyle::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidParseThrowStyle", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/GuidParseThrowStyle AllButOverflow
::System::Guid::GuidParseThrowStyle System::Guid::GuidParseThrowStyle::_get_AllButOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidParseThrowStyle::_get_AllButOverflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::GuidParseThrowStyle>("System", "Guid/GuidParseThrowStyle", "AllButOverflow"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/GuidParseThrowStyle AllButOverflow
void System::Guid::GuidParseThrowStyle::_set_AllButOverflow(::System::Guid::GuidParseThrowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidParseThrowStyle::_set_AllButOverflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/GuidParseThrowStyle", "AllButOverflow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Guid::GuidParseThrowStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidParseThrowStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Guid/ParseFailureKind
#include "System/Guid_ParseFailureKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind None
::System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind None
void System::Guid::ParseFailureKind::_set_None(::System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind ArgumentNull
::System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_ArgumentNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_get_ArgumentNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "ArgumentNull"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind ArgumentNull
void System::Guid::ParseFailureKind::_set_ArgumentNull(::System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_set_ArgumentNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "ArgumentNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind Format
::System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind Format
void System::Guid::ParseFailureKind::_set_Format(::System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind FormatWithParameter
::System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_FormatWithParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_get_FormatWithParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "FormatWithParameter"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind FormatWithParameter
void System::Guid::ParseFailureKind::_set_FormatWithParameter(::System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_set_FormatWithParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "FormatWithParameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind NativeException
::System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_NativeException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_get_NativeException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "NativeException"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind NativeException
void System::Guid::ParseFailureKind::_set_NativeException(::System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_set_NativeException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "NativeException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Guid/ParseFailureKind FormatWithInnerException
::System::Guid::ParseFailureKind System::Guid::ParseFailureKind::_get_FormatWithInnerException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_get_FormatWithInnerException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid::ParseFailureKind>("System", "Guid/ParseFailureKind", "FormatWithInnerException"));
}
// Autogenerated static field setter
// Set static field: static public System.Guid/ParseFailureKind FormatWithInnerException
void System::Guid::ParseFailureKind::_set_FormatWithInnerException(::System::Guid::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::_set_FormatWithInnerException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Guid/ParseFailureKind", "FormatWithInnerException", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Guid::ParseFailureKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::ParseFailureKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Guid/GuidResult
#include "System/Guid_GuidResult.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Guid _parsedGuid
[[deprecated("Use field access instead!")]] ::System::Guid& System::Guid::GuidResult::dyn__parsedGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::dyn__parsedGuid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parsedGuid"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Guid/GuidParseThrowStyle _throwStyle
[[deprecated("Use field access instead!")]] ::System::Guid::GuidParseThrowStyle& System::Guid::GuidResult::dyn__throwStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::dyn__throwStyle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_throwStyle"))->offset;
  return *reinterpret_cast<::System::Guid::GuidParseThrowStyle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid/ParseFailureKind _failure
[[deprecated("Use field access instead!")]] ::System::Guid::ParseFailureKind& System::Guid::GuidResult::dyn__failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::dyn__failure");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failure"))->offset;
  return *reinterpret_cast<::System::Guid::ParseFailureKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _failureMessageID
[[deprecated("Use field access instead!")]] ::StringW& System::Guid::GuidResult::dyn__failureMessageID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::dyn__failureMessageID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failureMessageID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _failureMessageFormatArgument
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Guid::GuidResult::dyn__failureMessageFormatArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::dyn__failureMessageFormatArgument");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failureMessageFormatArgument"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _failureArgumentName
[[deprecated("Use field access instead!")]] ::StringW& System::Guid::GuidResult::dyn__failureArgumentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::dyn__failureArgumentName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failureArgumentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception _innerException
[[deprecated("Use field access instead!")]] ::System::Exception*& System::Guid::GuidResult::dyn__innerException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::dyn__innerException");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Guid/GuidResult.Init
void System::Guid::GuidResult::Init(::System::Guid::GuidParseThrowStyle canThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canThrow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canThrow);
}
// Autogenerated method: System.Guid/GuidResult.SetFailure
void System::Guid::GuidResult::SetFailure(::System::Exception* nativeException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nativeException);
}
// Autogenerated method: System.Guid/GuidResult.SetFailure
void System::Guid::GuidResult::SetFailure(::System::Guid::ParseFailureKind failure, ::StringW failureMessageID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure, failureMessageID);
}
// Autogenerated method: System.Guid/GuidResult.SetFailure
void System::Guid::GuidResult::SetFailure(::System::Guid::ParseFailureKind failure, ::StringW failureMessageID, ::Il2CppObject* failureMessageFormatArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument);
}
// Autogenerated method: System.Guid/GuidResult.SetFailure
void System::Guid::GuidResult::SetFailure(::System::Guid::ParseFailureKind failure, ::StringW failureMessageID, ::Il2CppObject* failureMessageFormatArgument, ::StringW failureArgumentName, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(failureMessageID), ::il2cpp_utils::ExtractType(failureMessageFormatArgument), ::il2cpp_utils::ExtractType(failureArgumentName), ::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure, failureMessageID, failureMessageFormatArgument, failureArgumentName, innerException);
}
// Autogenerated method: System.Guid/GuidResult.GetGuidParseException
::System::Exception* System::Guid::GuidResult::GetGuidParseException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Guid::GuidResult::GetGuidParseException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGuidParseException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.HashCode
#include "System/HashCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_seed
uint System::HashCode::_get_s_seed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::_get_s_seed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System", "HashCode", "s_seed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_seed
void System::HashCode::_set_s_seed(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::_set_s_seed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "HashCode", "s_seed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _v1
[[deprecated("Use field access instead!")]] uint& System::HashCode::dyn__v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::dyn__v1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_v1"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _v2
[[deprecated("Use field access instead!")]] uint& System::HashCode::dyn__v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::dyn__v2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_v2"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _v3
[[deprecated("Use field access instead!")]] uint& System::HashCode::dyn__v3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::dyn__v3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_v3"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _v4
[[deprecated("Use field access instead!")]] uint& System::HashCode::dyn__v4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::dyn__v4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_v4"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _queue1
[[deprecated("Use field access instead!")]] uint& System::HashCode::dyn__queue1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::dyn__queue1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_queue1"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _queue2
[[deprecated("Use field access instead!")]] uint& System::HashCode::dyn__queue2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::dyn__queue2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_queue2"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _queue3
[[deprecated("Use field access instead!")]] uint& System::HashCode::dyn__queue3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::dyn__queue3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_queue3"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _length
[[deprecated("Use field access instead!")]] uint& System::HashCode::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::dyn__length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.HashCode.GenerateGlobalSeed
uint System::HashCode::GenerateGlobalSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::GenerateGlobalSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HashCode", "GenerateGlobalSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.HashCode.Rol
uint System::HashCode::Rol(uint value, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::Rol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HashCode", "Rol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, count);
}
// Autogenerated method: System.HashCode.Initialize
void System::HashCode::Initialize(ByRef<uint> v1, ByRef<uint> v2, ByRef<uint> v3, ByRef<uint> v4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HashCode", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(v1), byref(v2), byref(v3), byref(v4));
}
// Autogenerated method: System.HashCode.Round
uint System::HashCode::Round(uint hash, uint input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::Round");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HashCode", "Round", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, input);
}
// Autogenerated method: System.HashCode.QueueRound
uint System::HashCode::QueueRound(uint hash, uint queuedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::QueueRound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HashCode", "QueueRound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(queuedValue)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, queuedValue);
}
// Autogenerated method: System.HashCode.MixState
uint System::HashCode::MixState(uint v1, uint v2, uint v3, uint v4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::MixState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HashCode", "MixState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(v4)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, v2, v3, v4);
}
// Autogenerated method: System.HashCode.MixEmptyState
uint System::HashCode::MixEmptyState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::MixEmptyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HashCode", "MixEmptyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.HashCode.MixFinal
uint System::HashCode::MixFinal(uint hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::MixFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HashCode", "MixFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash);
}
// Autogenerated method: System.HashCode.Add
void System::HashCode::Add(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.HashCode.ToHashCode
int System::HashCode::ToHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::ToHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.HashCode..cctor
void System::HashCode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "HashCode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.HashCode.GetHashCode
int System::HashCode::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.HashCode.Equals
bool System::HashCode::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::HashCode::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IAsyncResult.get_IsCompleted
bool System::IAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IAsyncResult*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::IAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IAsyncResult*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IAsyncResult.get_AsyncState
::Il2CppObject* System::IAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IAsyncResult*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.IAsyncResult.get_CompletedSynchronously
bool System::IAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IAsyncResult*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ICloneable.Clone
::Il2CppObject* System::ICloneable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ICloneable::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ICloneable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IComparable
#include "System/IComparable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IComparable.CompareTo
int System::IComparable::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IComparable::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IComparable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IConvertible
#include "System/IConvertible.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IConvertible.GetTypeCode
::System::TypeCode System::IConvertible::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.IConvertible.ToBoolean
bool System::IConvertible::ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToChar
::Il2CppChar System::IConvertible::ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToSByte
int8_t System::IConvertible::ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToByte
uint8_t System::IConvertible::ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToInt16
int16_t System::IConvertible::ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToUInt16
uint16_t System::IConvertible::ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToInt32
int System::IConvertible::ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToUInt32
uint System::IConvertible::ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToInt64
int64_t System::IConvertible::ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToUInt64
uint64_t System::IConvertible::ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToSingle
float System::IConvertible::ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToDouble
double System::IConvertible::ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToDecimal
::System::Decimal System::IConvertible::ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToDateTime
::System::DateTime System::IConvertible::ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToString
::StringW System::IConvertible::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.IConvertible.ToType
::Il2CppObject* System::IConvertible::ToType(::System::Type* conversionType, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConvertible::ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IConvertible*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, conversionType, provider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ICustomFormatter
#include "System/ICustomFormatter.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ICustomFormatter.Format
::StringW System::ICustomFormatter::Format(::StringW format, ::Il2CppObject* arg, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ICustomFormatter::Format");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ICustomFormatter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, arg, formatProvider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IDisposable.Dispose
void System::IDisposable::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IDisposable::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IDisposable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IFormatProvider.GetFormat
::Il2CppObject* System::IFormatProvider::GetFormat(::System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IFormatProvider::GetFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IFormatProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IFormattable
#include "System/IFormattable.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IFormattable.ToString
::StringW System::IFormattable::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IFormattable::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IFormattable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ISpanFormattable
#include "System/ISpanFormattable.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ISpanFormattable.TryFormat
bool System::ISpanFormattable::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ISpanFormattable::TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ISpanFormattable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, provider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Index
#include "System/Index.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _value
[[deprecated("Use field access instead!")]] int& System::Index::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Index::dyn__value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Index..ctor
// ABORTED elsewhere.  System::Index::Index(int value)
// Autogenerated method: System.Index.get_Start
::System::Index System::Index::get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Index::get_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Index", "get_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Index, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Index.FromStart
::System::Index System::Index::FromStart(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Index::FromStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Index", "FromStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Index, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Index.get_Value
int System::Index::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Index::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Index.get_IsFromEnd
bool System::Index::get_IsFromEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Index::get_IsFromEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsFromEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Index.Equals
bool System::Index::Equals(::System::Index other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Index::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Index), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Index.ToStringFromEnd
::StringW System::Index::ToStringFromEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Index::ToStringFromEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToStringFromEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Index.Equals
bool System::Index::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Index::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Index.GetHashCode
int System::Index::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Index::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Index.ToString
::StringW System::Index::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Index::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IndexOutOfRangeException
#include "System/IndexOutOfRangeException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.InsufficientExecutionStackException
#include "System/InsufficientExecutionStackException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int16
#include "System/Int16.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int16 MaxValue
int16_t System::Int16::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t>("System", "Int16", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int16 MaxValue
void System::Int16::_set_MaxValue(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int16", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int16 MinValue
int16_t System::Int16::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t>("System", "Int16", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int16 MinValue
void System::Int16::_set_MinValue(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int16", "MinValue", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int16 m_value
[[deprecated("Use field access instead!")]] int16_t& System::Int16::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Int16.CompareTo
int System::Int16::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Int16.CompareTo
int System::Int16::CompareTo(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Int16.Equals
bool System::Int16::Equals(int16_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Int16.ToString
::StringW System::Int16::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.ToString
::StringW System::Int16::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Int16.TryFormat
bool System::Int16::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, provider);
}
// Autogenerated method: System.Int16.Parse
int16_t System::Int16::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int16", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Int16.Parse
int16_t System::Int16::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int16", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Int16.Parse
int16_t System::Int16::Parse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int16", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.Int16.TryParse
bool System::Int16::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<int16_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int16", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<int16_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.Int16.TryParse
bool System::Int16::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<int16_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int16", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int16_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info, byref(result));
}
// Autogenerated method: System.Int16.GetTypeCode
::System::TypeCode System::Int16::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Int16.System.IConvertible.ToBoolean
bool System::Int16::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToChar
::Il2CppChar System::Int16::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToSByte
int8_t System::Int16::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 8));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToByte
uint8_t System::Int16::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 9));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToInt16
int16_t System::Int16::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 10));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToUInt16
uint16_t System::Int16::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToInt32
int System::Int16::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToUInt32
uint System::Int16::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToInt64
int64_t System::Int16::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 14));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToUInt64
uint64_t System::Int16::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToSingle
float System::Int16::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 16));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToDouble
double System::Int16::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 17));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToDecimal
::System::Decimal System::Int16::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToDateTime
::System::DateTime System::Int16::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int16.System.IConvertible.ToType
::Il2CppObject* System::Int16::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int16_t), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.Int16.Equals
bool System::Int16::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Int16.GetHashCode
int System::Int16::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Int16.ToString
::StringW System::Int16::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int16::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxValue
int System::Int32::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Int32", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxValue
void System::Int32::_set_MaxValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int32", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MinValue
int System::Int32::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Int32", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MinValue
void System::Int32::_set_MinValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int32", "MinValue", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_value
[[deprecated("Use field access instead!")]] int& System::Int32::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Int32.CompareTo
int System::Int32::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Int32.CompareTo
int System::Int32::CompareTo(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Int32.Equals
bool System::Int32::Equals(int obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Int32.ToString
::StringW System::Int32::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Int32.ToString
::StringW System::Int32::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.ToString
::StringW System::Int32::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Int32.TryFormat
bool System::Int32::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, provider);
}
// Autogenerated method: System.Int32.Parse
int System::Int32::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Int32.Parse
int System::Int32::Parse(::StringW s, ::System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style);
}
// Autogenerated method: System.Int32.Parse
int System::Int32::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Int32.Parse
int System::Int32::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Int32.Parse
int System::Int32::Parse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Int32.TryParse
bool System::Int32::TryParse(::StringW s, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Int32.TryParse
bool System::Int32::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Int32.TryParse
bool System::Int32::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.Int32.TryParse
bool System::Int32::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int32", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.Int32.GetTypeCode
::System::TypeCode System::Int32::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Int32.System.IConvertible.ToBoolean
bool System::Int32::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToChar
::Il2CppChar System::Int32::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToSByte
int8_t System::Int32::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 8));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToByte
uint8_t System::Int32::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 9));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToInt16
int16_t System::Int32::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 10));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToUInt16
uint16_t System::Int32::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToInt32
int System::Int32::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToUInt32
uint System::Int32::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToInt64
int64_t System::Int32::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 14));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToUInt64
uint64_t System::Int32::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToSingle
float System::Int32::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 16));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToDouble
double System::Int32::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 17));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToDecimal
::System::Decimal System::Int32::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToDateTime
::System::DateTime System::Int32::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int32.System.IConvertible.ToType
::Il2CppObject* System::Int32::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.Int32.Equals
bool System::Int32::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Int32.GetHashCode
int System::Int32::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Int32.ToString
::StringW System::Int32::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int32::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Int64
#include "System/Int64.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int64 MaxValue
int64_t System::Int64::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "Int64", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 MaxValue
void System::Int64::_set_MaxValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int64", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 MinValue
int64_t System::Int64::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "Int64", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 MinValue
void System::Int64::_set_MinValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Int64", "MinValue", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 m_value
[[deprecated("Use field access instead!")]] int64_t& System::Int64::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Int64.CompareTo
int System::Int64::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Int64.CompareTo
int System::Int64::CompareTo(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Int64.Equals
bool System::Int64::Equals(int64_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Int64.ToString
::StringW System::Int64::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.ToString
::StringW System::Int64::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Int64.ToString
::StringW System::Int64::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Int64.TryFormat
bool System::Int64::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, provider);
}
// Autogenerated method: System.Int64.Parse
int64_t System::Int64::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int64", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Int64.Parse
int64_t System::Int64::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int64", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Int64.Parse
int64_t System::Int64::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int64", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Int64.TryParse
bool System::Int64::TryParse(::StringW s, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int64", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Int64.TryParse
bool System::Int64::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Int64", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.Int64.GetTypeCode
::System::TypeCode System::Int64::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Int64.System.IConvertible.ToBoolean
bool System::Int64::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToChar
::Il2CppChar System::Int64::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToSByte
int8_t System::Int64::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 8));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToByte
uint8_t System::Int64::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 9));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToInt16
int16_t System::Int64::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 10));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToUInt16
uint16_t System::Int64::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToInt32
int System::Int64::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToUInt32
uint System::Int64::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToInt64
int64_t System::Int64::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 14));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToUInt64
uint64_t System::Int64::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToSingle
float System::Int64::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 16));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToDouble
double System::Int64::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 17));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToDecimal
::System::Decimal System::Int64::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToDateTime
::System::DateTime System::Int64::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Int64.System.IConvertible.ToType
::Il2CppObject* System::Int64::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int64_t), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.Int64.Equals
bool System::Int64::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Int64.GetHashCode
int System::Int64::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Int64.ToString
::StringW System::Int64::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Int64::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.InvalidCastException
#include "System/InvalidCastException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.InvalidOperationException
#include "System/InvalidOperationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.InvalidProgramException
#include "System/InvalidProgramException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.InvalidTimeZoneException
#include "System/InvalidTimeZoneException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.LazyState
#include "System/LazyState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.LazyState NoneViaConstructor
::System::LazyState System::LazyState::_get_NoneViaConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_get_NoneViaConstructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyState>("System", "LazyState", "NoneViaConstructor"));
}
// Autogenerated static field setter
// Set static field: static public System.LazyState NoneViaConstructor
void System::LazyState::_set_NoneViaConstructor(::System::LazyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_set_NoneViaConstructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyState", "NoneViaConstructor", value));
}
// Autogenerated static field getter
// Get static field: static public System.LazyState NoneViaFactory
::System::LazyState System::LazyState::_get_NoneViaFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_get_NoneViaFactory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyState>("System", "LazyState", "NoneViaFactory"));
}
// Autogenerated static field setter
// Set static field: static public System.LazyState NoneViaFactory
void System::LazyState::_set_NoneViaFactory(::System::LazyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_set_NoneViaFactory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyState", "NoneViaFactory", value));
}
// Autogenerated static field getter
// Get static field: static public System.LazyState NoneException
::System::LazyState System::LazyState::_get_NoneException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_get_NoneException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyState>("System", "LazyState", "NoneException"));
}
// Autogenerated static field setter
// Set static field: static public System.LazyState NoneException
void System::LazyState::_set_NoneException(::System::LazyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_set_NoneException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyState", "NoneException", value));
}
// Autogenerated static field getter
// Get static field: static public System.LazyState PublicationOnlyViaConstructor
::System::LazyState System::LazyState::_get_PublicationOnlyViaConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_get_PublicationOnlyViaConstructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyState>("System", "LazyState", "PublicationOnlyViaConstructor"));
}
// Autogenerated static field setter
// Set static field: static public System.LazyState PublicationOnlyViaConstructor
void System::LazyState::_set_PublicationOnlyViaConstructor(::System::LazyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_set_PublicationOnlyViaConstructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyState", "PublicationOnlyViaConstructor", value));
}
// Autogenerated static field getter
// Get static field: static public System.LazyState PublicationOnlyViaFactory
::System::LazyState System::LazyState::_get_PublicationOnlyViaFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_get_PublicationOnlyViaFactory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyState>("System", "LazyState", "PublicationOnlyViaFactory"));
}
// Autogenerated static field setter
// Set static field: static public System.LazyState PublicationOnlyViaFactory
void System::LazyState::_set_PublicationOnlyViaFactory(::System::LazyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_set_PublicationOnlyViaFactory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyState", "PublicationOnlyViaFactory", value));
}
// Autogenerated static field getter
// Get static field: static public System.LazyState PublicationOnlyWait
::System::LazyState System::LazyState::_get_PublicationOnlyWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_get_PublicationOnlyWait");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyState>("System", "LazyState", "PublicationOnlyWait"));
}
// Autogenerated static field setter
// Set static field: static public System.LazyState PublicationOnlyWait
void System::LazyState::_set_PublicationOnlyWait(::System::LazyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_set_PublicationOnlyWait");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyState", "PublicationOnlyWait", value));
}
// Autogenerated static field getter
// Get static field: static public System.LazyState PublicationOnlyException
::System::LazyState System::LazyState::_get_PublicationOnlyException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_get_PublicationOnlyException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyState>("System", "LazyState", "PublicationOnlyException"));
}
// Autogenerated static field setter
// Set static field: static public System.LazyState PublicationOnlyException
void System::LazyState::_set_PublicationOnlyException(::System::LazyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_set_PublicationOnlyException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyState", "PublicationOnlyException", value));
}
// Autogenerated static field getter
// Get static field: static public System.LazyState ExecutionAndPublicationViaConstructor
::System::LazyState System::LazyState::_get_ExecutionAndPublicationViaConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_get_ExecutionAndPublicationViaConstructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyState>("System", "LazyState", "ExecutionAndPublicationViaConstructor"));
}
// Autogenerated static field setter
// Set static field: static public System.LazyState ExecutionAndPublicationViaConstructor
void System::LazyState::_set_ExecutionAndPublicationViaConstructor(::System::LazyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_set_ExecutionAndPublicationViaConstructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyState", "ExecutionAndPublicationViaConstructor", value));
}
// Autogenerated static field getter
// Get static field: static public System.LazyState ExecutionAndPublicationViaFactory
::System::LazyState System::LazyState::_get_ExecutionAndPublicationViaFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_get_ExecutionAndPublicationViaFactory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyState>("System", "LazyState", "ExecutionAndPublicationViaFactory"));
}
// Autogenerated static field setter
// Set static field: static public System.LazyState ExecutionAndPublicationViaFactory
void System::LazyState::_set_ExecutionAndPublicationViaFactory(::System::LazyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_set_ExecutionAndPublicationViaFactory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyState", "ExecutionAndPublicationViaFactory", value));
}
// Autogenerated static field getter
// Get static field: static public System.LazyState ExecutionAndPublicationException
::System::LazyState System::LazyState::_get_ExecutionAndPublicationException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_get_ExecutionAndPublicationException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyState>("System", "LazyState", "ExecutionAndPublicationException"));
}
// Autogenerated static field setter
// Set static field: static public System.LazyState ExecutionAndPublicationException
void System::LazyState::_set_ExecutionAndPublicationException(::System::LazyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::_set_ExecutionAndPublicationException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyState", "ExecutionAndPublicationException", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::LazyState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.LazyHelper
#include "System/LazyHelper.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.LazyHelper NoneViaConstructor
::System::LazyHelper* System::LazyHelper::_get_NoneViaConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::_get_NoneViaConstructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyHelper*>("System", "LazyHelper", "NoneViaConstructor"));
}
// Autogenerated static field setter
// Set static field: static readonly System.LazyHelper NoneViaConstructor
void System::LazyHelper::_set_NoneViaConstructor(::System::LazyHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::_set_NoneViaConstructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyHelper", "NoneViaConstructor", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.LazyHelper NoneViaFactory
::System::LazyHelper* System::LazyHelper::_get_NoneViaFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::_get_NoneViaFactory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyHelper*>("System", "LazyHelper", "NoneViaFactory"));
}
// Autogenerated static field setter
// Set static field: static readonly System.LazyHelper NoneViaFactory
void System::LazyHelper::_set_NoneViaFactory(::System::LazyHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::_set_NoneViaFactory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyHelper", "NoneViaFactory", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.LazyHelper PublicationOnlyViaConstructor
::System::LazyHelper* System::LazyHelper::_get_PublicationOnlyViaConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::_get_PublicationOnlyViaConstructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyHelper*>("System", "LazyHelper", "PublicationOnlyViaConstructor"));
}
// Autogenerated static field setter
// Set static field: static readonly System.LazyHelper PublicationOnlyViaConstructor
void System::LazyHelper::_set_PublicationOnlyViaConstructor(::System::LazyHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::_set_PublicationOnlyViaConstructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyHelper", "PublicationOnlyViaConstructor", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.LazyHelper PublicationOnlyViaFactory
::System::LazyHelper* System::LazyHelper::_get_PublicationOnlyViaFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::_get_PublicationOnlyViaFactory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyHelper*>("System", "LazyHelper", "PublicationOnlyViaFactory"));
}
// Autogenerated static field setter
// Set static field: static readonly System.LazyHelper PublicationOnlyViaFactory
void System::LazyHelper::_set_PublicationOnlyViaFactory(::System::LazyHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::_set_PublicationOnlyViaFactory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyHelper", "PublicationOnlyViaFactory", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.LazyHelper PublicationOnlyWaitForOtherThreadToPublish
::System::LazyHelper* System::LazyHelper::_get_PublicationOnlyWaitForOtherThreadToPublish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::_get_PublicationOnlyWaitForOtherThreadToPublish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::LazyHelper*>("System", "LazyHelper", "PublicationOnlyWaitForOtherThreadToPublish"));
}
// Autogenerated static field setter
// Set static field: static readonly System.LazyHelper PublicationOnlyWaitForOtherThreadToPublish
void System::LazyHelper::_set_PublicationOnlyWaitForOtherThreadToPublish(::System::LazyHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::_set_PublicationOnlyWaitForOtherThreadToPublish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyHelper", "PublicationOnlyWaitForOtherThreadToPublish", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.LazyState <State>k__BackingField
[[deprecated("Use field access instead!")]] ::System::LazyState& System::LazyHelper::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::dyn_$State$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::System::LazyState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Runtime.ExceptionServices.ExceptionDispatchInfo _exceptionDispatch
[[deprecated("Use field access instead!")]] ::System::Runtime::ExceptionServices::ExceptionDispatchInfo*& System::LazyHelper::dyn__exceptionDispatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::dyn__exceptionDispatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exceptionDispatch"))->offset;
  return *reinterpret_cast<::System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LazyHelper.get_State
::System::LazyState System::LazyHelper::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::LazyState, false>(this, ___internal__method);
}
// Autogenerated method: System.LazyHelper.ThrowException
void System::LazyHelper::ThrowException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::ThrowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.LazyHelper.Create
::System::LazyHelper* System::LazyHelper::Create(::System::Threading::LazyThreadSafetyMode mode, bool useDefaultConstructor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "LazyHelper", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(useDefaultConstructor)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::LazyHelper*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode, useDefaultConstructor);
}
// Autogenerated method: System.LazyHelper.CreateViaDefaultConstructor
::Il2CppObject* System::LazyHelper::CreateViaDefaultConstructor(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::CreateViaDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "LazyHelper", "CreateViaDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.LazyHelper.GetModeFromIsThreadSafe
::System::Threading::LazyThreadSafetyMode System::LazyHelper::GetModeFromIsThreadSafe(bool isThreadSafe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::GetModeFromIsThreadSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "LazyHelper", "GetModeFromIsThreadSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isThreadSafe)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::LazyThreadSafetyMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isThreadSafe);
}
// Autogenerated method: System.LazyHelper..cctor
void System::LazyHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "LazyHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Marvin
#include "System/Marvin.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 <DefaultSeed>k__BackingField
uint64_t System::Marvin::_get_$DefaultSeed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Marvin::_get_$DefaultSeed$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<uint64_t>("System", "Marvin", "<DefaultSeed>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 <DefaultSeed>k__BackingField
void System::Marvin::_set_$DefaultSeed$k__BackingField(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Marvin::_set_$DefaultSeed$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Marvin", "<DefaultSeed>k__BackingField", value));
}
// Autogenerated method: System.Marvin.ComputeHash32
int System::Marvin::ComputeHash32(::System::ReadOnlySpan_1<uint8_t> data, uint64_t seed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Marvin::ComputeHash32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Marvin", "ComputeHash32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(seed)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, seed);
}
// Autogenerated method: System.Marvin.ComputeHash32
int System::Marvin::ComputeHash32(ByRef<uint8_t> data, int count, uint64_t seed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Marvin::ComputeHash32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Marvin", "ComputeHash32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(seed)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(data), count, seed);
}
// Autogenerated method: System.Marvin.Block
void System::Marvin::Block(ByRef<uint> rp0, ByRef<uint> rp1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Marvin::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Marvin", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rp0), ::il2cpp_utils::ExtractType(rp1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(rp0), byref(rp1));
}
// Autogenerated method: System.Marvin._rotl
uint System::Marvin::_rotl(uint value, int shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Marvin::_rotl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Marvin", "_rotl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(shift)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, shift);
}
// Autogenerated method: System.Marvin.get_DefaultSeed
uint64_t System::Marvin::get_DefaultSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Marvin::get_DefaultSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Marvin", "get_DefaultSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Marvin.GenerateSeed
uint64_t System::Marvin::GenerateSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Marvin::GenerateSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Marvin", "GenerateSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Marvin..cctor
void System::Marvin::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Marvin::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Marvin", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Math
#include "System/Math.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.MidpointRounding
#include "System/MidpointRounding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double doubleRoundLimit
double System::Math::_get_doubleRoundLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::_get_doubleRoundLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Math", "doubleRoundLimit"));
}
// Autogenerated static field setter
// Set static field: static private System.Double doubleRoundLimit
void System::Math::_set_doubleRoundLimit(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::_set_doubleRoundLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "doubleRoundLimit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double[] roundPower10Double
::ArrayW<double> System::Math::_get_roundPower10Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::_get_roundPower10Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<double>>("System", "Math", "roundPower10Double"));
}
// Autogenerated static field setter
// Set static field: static private System.Double[] roundPower10Double
void System::Math::_set_roundPower10Double(::ArrayW<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::_set_roundPower10Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "roundPower10Double", value));
}
// Autogenerated method: System.Math.Abs
int16_t System::Math::Abs(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Abs
int System::Math::Abs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Abs
int64_t System::Math::Abs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Abs
::System::Decimal System::Math::Abs(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.ThrowAbsOverflow
void System::Math::ThrowAbsOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::ThrowAbsOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "ThrowAbsOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Math.DivRem
int System::Math::DivRem(int a, int b, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::DivRem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "DivRem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, byref(result));
}
// Autogenerated method: System.Math.DivRem
uint System::Math::DivRem(uint a, uint b, ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::DivRem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "DivRem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, byref(result));
}
// Autogenerated method: System.Math.Clamp
int System::Math::Clamp(int value, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.Math.Clamp
float System::Math::Clamp(float value, float min, float max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: System.Math.Log
double System::Math::Log(double a, double newBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(newBase)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, newBase);
}
// Autogenerated method: System.Math.Max
uint8_t System::Math::Max(uint8_t val1, uint8_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
::System::Decimal System::Math::Max(::System::Decimal val1, ::System::Decimal val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
double System::Math::Max(double val1, double val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
int16_t System::Math::Max(int16_t val1, int16_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
int System::Math::Max(int val1, int val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
int64_t System::Math::Max(int64_t val1, int64_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
int8_t System::Math::Max(int8_t val1, int8_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
float System::Math::Max(float val1, float val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
uint16_t System::Math::Max(uint16_t val1, uint16_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
uint System::Math::Max(uint val1, uint val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Max
uint64_t System::Math::Max(uint64_t val1, uint64_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
uint8_t System::Math::Min(uint8_t val1, uint8_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
::System::Decimal System::Math::Min(::System::Decimal val1, ::System::Decimal val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
double System::Math::Min(double val1, double val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
int16_t System::Math::Min(int16_t val1, int16_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
int System::Math::Min(int val1, int val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
int64_t System::Math::Min(int64_t val1, int64_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
int8_t System::Math::Min(int8_t val1, int8_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
float System::Math::Min(float val1, float val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
uint16_t System::Math::Min(uint16_t val1, uint16_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
uint System::Math::Min(uint val1, uint val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Min
uint64_t System::Math::Min(uint64_t val1, uint64_t val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: System.Math.Round
::System::Decimal System::Math::Round(::System::Decimal d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Round");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Round", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Round
double System::Math::Round(double a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Round");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Round", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Math.Round
double System::Math::Round(double value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Round");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Round", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits);
}
// Autogenerated method: System.Math.Round
double System::Math::Round(double value, int digits, ::System::MidpointRounding mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Round");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Round", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits, mode);
}
// Autogenerated method: System.Math.Sign
int System::Math::Sign(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Sign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Sign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Sign
int System::Math::Sign(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Sign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Sign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Sign
int System::Math::Sign(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Sign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Sign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Sign
int System::Math::Sign(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Sign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Sign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Truncate
::System::Decimal System::Math::Truncate(::System::Decimal d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Truncate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Truncate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Truncate
double System::Math::Truncate(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Truncate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Truncate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Abs
double System::Math::Abs(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Abs
float System::Math::Abs(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Math.Acos
double System::Math::Acos(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Acos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Acos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Asin
double System::Math::Asin(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Asin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Asin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Atan
double System::Math::Atan(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Atan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Atan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Atan2
double System::Math::Atan2(double y, double x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Atan2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Atan2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, y, x);
}
// Autogenerated method: System.Math.Ceiling
double System::Math::Ceiling(double a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Ceiling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Ceiling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Math.Cos
double System::Math::Cos(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Cos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Cos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Exp
double System::Math::Exp(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Exp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Exp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Floor
double System::Math::Floor(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Floor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Floor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Log
double System::Math::Log(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Log10
double System::Math::Log10(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Log10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Log10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Pow
double System::Math::Pow(double x, double y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Math.Sin
double System::Math::Sin(double a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Sin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Sin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Math.Sqrt
double System::Math::Sqrt(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Sqrt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Sqrt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Math.Tan
double System::Math::Tan(double a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::Tan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "Tan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Math.ModF
double System::Math::ModF(double x, double* intptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::ModF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", "ModF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(intptr)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, intptr);
}
// Autogenerated method: System.Math..cctor
void System::Math::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Math::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Math", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.MathF
#include "System/MathF.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single[] roundPower10Single
::ArrayW<float> System::MathF::_get_roundPower10Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathF::_get_roundPower10Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("System", "MathF", "roundPower10Single"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] roundPower10Single
void System::MathF::_set_roundPower10Single(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathF::_set_roundPower10Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "MathF", "roundPower10Single", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single singleRoundLimit
float System::MathF::_get_singleRoundLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathF::_get_singleRoundLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "MathF", "singleRoundLimit"));
}
// Autogenerated static field setter
// Set static field: static private System.Single singleRoundLimit
void System::MathF::_set_singleRoundLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathF::_set_singleRoundLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "MathF", "singleRoundLimit", value));
}
// Autogenerated method: System.MathF.Abs
float System::MathF::Abs(float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathF::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathF", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.MathF.Sin
float System::MathF::Sin(float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathF::Sin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathF", "Sin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.MathF..cctor
void System::MathF::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MathF::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MathF", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.MemberAccessException
#include "System/MemberAccessException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.MemoryExtensions
#include "System/MemoryExtensions.hpp"
// Including type: System.StringComparison
#include "System/StringComparison.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.MemoryExtensions.EqualsOrdinal
bool System::MemoryExtensions::EqualsOrdinal(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::EqualsOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "EqualsOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value);
}
// Autogenerated method: System.MemoryExtensions.EqualsOrdinalIgnoreCase
bool System::MemoryExtensions::EqualsOrdinalIgnoreCase(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::EqualsOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "EqualsOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value);
}
// Autogenerated method: System.MemoryExtensions.Contains
bool System::MemoryExtensions::Contains(::System::ReadOnlySpan_1<::Il2CppChar> source, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value);
}
// Autogenerated method: System.MemoryExtensions.IndexOf
int System::MemoryExtensions::IndexOf(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value, comparisonType);
}
// Autogenerated method: System.MemoryExtensions.ToUpperInvariant
int System::MemoryExtensions::ToUpperInvariant(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::Span_1<::Il2CppChar> destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::ToUpperInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "ToUpperInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destination);
}
// Autogenerated method: System.MemoryExtensions.EndsWith
bool System::MemoryExtensions::EndsWith(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value, comparisonType);
}
// Autogenerated method: System.MemoryExtensions.StartsWith
bool System::MemoryExtensions::StartsWith(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value, comparisonType);
}
// Autogenerated method: System.MemoryExtensions.AsSpan
::System::ReadOnlySpan_1<::Il2CppChar> System::MemoryExtensions::AsSpan(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: System.MemoryExtensions.AsSpan
::System::ReadOnlySpan_1<::Il2CppChar> System::MemoryExtensions::AsSpan(::StringW text, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, start);
}
// Autogenerated method: System.MemoryExtensions.AsSpan
::System::ReadOnlySpan_1<::Il2CppChar> System::MemoryExtensions::AsSpan(::StringW text, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, start, length);
}
// Autogenerated method: System.MemoryExtensions.AsMemory
::System::ReadOnlyMemory_1<::Il2CppChar> System::MemoryExtensions::AsMemory(::StringW text, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::AsMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "AsMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlyMemory_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, start, length);
}
// Autogenerated method: System.MemoryExtensions.Trim
::System::ReadOnlySpan_1<::Il2CppChar> System::MemoryExtensions::Trim(::System::ReadOnlySpan_1<::Il2CppChar> span) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span);
}
// Autogenerated method: System.MemoryExtensions.TrimStart
::System::ReadOnlySpan_1<::Il2CppChar> System::MemoryExtensions::TrimStart(::System::ReadOnlySpan_1<::Il2CppChar> span) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::TrimStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "TrimStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span);
}
// Autogenerated method: System.MemoryExtensions.TrimEnd
::System::ReadOnlySpan_1<::Il2CppChar> System::MemoryExtensions::TrimEnd(::System::ReadOnlySpan_1<::Il2CppChar> span) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MemoryExtensions::TrimEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MemoryExtensions", "TrimEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.MethodAccessException
#include "System/MethodAccessException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.MidpointRounding
#include "System/MidpointRounding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.MidpointRounding ToEven
::System::MidpointRounding System::MidpointRounding::_get_ToEven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MidpointRounding::_get_ToEven");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::MidpointRounding>("System", "MidpointRounding", "ToEven"));
}
// Autogenerated static field setter
// Set static field: static public System.MidpointRounding ToEven
void System::MidpointRounding::_set_ToEven(::System::MidpointRounding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MidpointRounding::_set_ToEven");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "MidpointRounding", "ToEven", value));
}
// Autogenerated static field getter
// Get static field: static public System.MidpointRounding AwayFromZero
::System::MidpointRounding System::MidpointRounding::_get_AwayFromZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MidpointRounding::_get_AwayFromZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::MidpointRounding>("System", "MidpointRounding", "AwayFromZero"));
}
// Autogenerated static field setter
// Set static field: static public System.MidpointRounding AwayFromZero
void System::MidpointRounding::_set_AwayFromZero(::System::MidpointRounding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MidpointRounding::_set_AwayFromZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "MidpointRounding", "AwayFromZero", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::MidpointRounding::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MidpointRounding::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.MissingMethodException
#include "System/MissingMethodException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.MissingMethodException.get_Message
::StringW System::MissingMethodException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MissingMethodException::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::MissingMemberException*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.MulticastNotSupportedException
#include "System/MulticastNotSupportedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.NonSerializedAttribute
#include "System/NonSerializedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.NotImplementedException
#include "System/NotImplementedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.NotSupportedException
#include "System/NotSupportedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.NullReferenceException
#include "System/NullReferenceException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Nullable
#include "System/Nullable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Nullable.GetUnderlyingType
::System::Type* System::Nullable::GetUnderlyingType(::System::Type* nullableType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Nullable::GetUnderlyingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Nullable", "GetUnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nullableType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nullableType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Number
#include "System/Number.hpp"
// Including type: System.Number/NumberBuffer
#include "System/Number_NumberBuffer.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.Text.ValueStringBuilder
#include "System/Text/ValueStringBuilder.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_posCurrencyFormats
::ArrayW<::StringW> System::Number::_get_s_posCurrencyFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_get_s_posCurrencyFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_posCurrencyFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_posCurrencyFormats
void System::Number::_set_s_posCurrencyFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_set_s_posCurrencyFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_posCurrencyFormats", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_negCurrencyFormats
::ArrayW<::StringW> System::Number::_get_s_negCurrencyFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_get_s_negCurrencyFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_negCurrencyFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_negCurrencyFormats
void System::Number::_set_s_negCurrencyFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_set_s_negCurrencyFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_negCurrencyFormats", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_posPercentFormats
::ArrayW<::StringW> System::Number::_get_s_posPercentFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_get_s_posPercentFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_posPercentFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_posPercentFormats
void System::Number::_set_s_posPercentFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_set_s_posPercentFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_posPercentFormats", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_negPercentFormats
::ArrayW<::StringW> System::Number::_get_s_negPercentFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_get_s_negPercentFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_negPercentFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_negPercentFormats
void System::Number::_set_s_negPercentFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_set_s_negPercentFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_negPercentFormats", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_negNumberFormats
::ArrayW<::StringW> System::Number::_get_s_negNumberFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_get_s_negNumberFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System", "Number", "s_negNumberFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_negNumberFormats
void System::Number::_set_s_negNumberFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_set_s_negNumberFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_negNumberFormats", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_charToHexLookup
::ArrayW<int> System::Number::_get_s_charToHexLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_get_s_charToHexLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System", "Number", "s_charToHexLookup"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_charToHexLookup
void System::Number::_set_s_charToHexLookup(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_set_s_charToHexLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_charToHexLookup", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64[] s_rgval64Power10
::ArrayW<uint64_t> System::Number::_get_s_rgval64Power10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_get_s_rgval64Power10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint64_t>>("System", "Number", "s_rgval64Power10"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64[] s_rgval64Power10
void System::Number::_set_s_rgval64Power10(::ArrayW<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_set_s_rgval64Power10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_rgval64Power10", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.SByte[] s_rgexp64Power10
::ArrayW<int8_t> System::Number::_get_s_rgexp64Power10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_get_s_rgexp64Power10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int8_t>>("System", "Number", "s_rgexp64Power10"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.SByte[] s_rgexp64Power10
void System::Number::_set_s_rgexp64Power10(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_set_s_rgexp64Power10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_rgexp64Power10", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64[] s_rgval64Power10By16
::ArrayW<uint64_t> System::Number::_get_s_rgval64Power10By16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_get_s_rgval64Power10By16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint64_t>>("System", "Number", "s_rgval64Power10By16"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64[] s_rgval64Power10By16
void System::Number::_set_s_rgval64Power10By16(::ArrayW<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_set_s_rgval64Power10By16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_rgval64Power10By16", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int16[] s_rgexp64Power10By16
::ArrayW<int16_t> System::Number::_get_s_rgexp64Power10By16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_get_s_rgexp64Power10By16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int16_t>>("System", "Number", "s_rgexp64Power10By16"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int16[] s_rgexp64Power10By16
void System::Number::_set_s_rgexp64Power10By16(::ArrayW<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::_set_s_rgexp64Power10By16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number", "s_rgexp64Power10By16", value));
}
// Autogenerated method: System.Number.FormatDecimal
::StringW System::Number::FormatDecimal(::System::Decimal value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.TryFormatDecimal
bool System::Number::TryFormatDecimal(::System::Decimal value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryFormatDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.DecimalToNumber
void System::Number::DecimalToNumber(::System::Decimal value, ByRef<::System::Number::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::DecimalToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "DecimalToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(number));
}
// Autogenerated method: System.Number.FormatDouble
::StringW System::Number::FormatDouble(double value, ::StringW format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.TryFormatDouble
bool System::Number::TryFormatDouble(double value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryFormatDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatDouble
::StringW System::Number::FormatDouble(ByRef<::System::Text::ValueStringBuilder> sb, double value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), value, format, info);
}
// Autogenerated method: System.Number.FormatSingle
::StringW System::Number::FormatSingle(float value, ::StringW format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.TryFormatSingle
bool System::Number::TryFormatSingle(float value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryFormatSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatSingle
::StringW System::Number::FormatSingle(ByRef<::System::Text::ValueStringBuilder> sb, float value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), value, format, info);
}
// Autogenerated method: System.Number.TryCopyTo
bool System::Number::TryCopyTo(::StringW source, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryCopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryCopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatInt32
::StringW System::Number::FormatInt32(int value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider);
}
// Autogenerated method: System.Number.TryFormatInt32
bool System::Number::TryFormatInt32(int value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryFormatInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatUInt32
::StringW System::Number::FormatUInt32(uint value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider);
}
// Autogenerated method: System.Number.TryFormatUInt32
bool System::Number::TryFormatUInt32(uint value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryFormatUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatInt64
::StringW System::Number::FormatInt64(int64_t value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider);
}
// Autogenerated method: System.Number.TryFormatInt64
bool System::Number::TryFormatInt64(int64_t value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryFormatInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.FormatUInt64
::StringW System::Number::FormatUInt64(uint64_t value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider);
}
// Autogenerated method: System.Number.TryFormatUInt64
bool System::Number::TryFormatUInt64(uint64_t value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryFormatUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryFormatUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, provider, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.Int32ToNumber
void System::Number::Int32ToNumber(int value, ByRef<::System::Number::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::Int32ToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int32ToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(number));
}
// Autogenerated method: System.Number.NegativeInt32ToDecStr
::StringW System::Number::NegativeInt32ToDecStr(int value, int digits, ::StringW sNegative) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NegativeInt32ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NegativeInt32ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(sNegative)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits, sNegative);
}
// Autogenerated method: System.Number.TryNegativeInt32ToDecStr
bool System::Number::TryNegativeInt32ToDecStr(int value, int digits, ::StringW sNegative, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryNegativeInt32ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryNegativeInt32ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(sNegative), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits, sNegative, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.Int32ToHexStr
::StringW System::Number::Int32ToHexStr(int value, ::Il2CppChar hexBase, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::Int32ToHexStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int32ToHexStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(hexBase), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, hexBase, digits);
}
// Autogenerated method: System.Number.TryInt32ToHexStr
bool System::Number::TryInt32ToHexStr(int value, ::Il2CppChar hexBase, int digits, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryInt32ToHexStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryInt32ToHexStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(hexBase), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, hexBase, digits, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.Int32ToHexChars
::Il2CppChar* System::Number::Int32ToHexChars(::Il2CppChar* buffer, uint value, int hexBase, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::Int32ToHexChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int32ToHexChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(hexBase), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, value, hexBase, digits);
}
// Autogenerated method: System.Number.UInt32ToNumber
void System::Number::UInt32ToNumber(uint value, ByRef<::System::Number::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::UInt32ToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt32ToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(number));
}
// Autogenerated method: System.Number.UInt32ToDecChars
::Il2CppChar* System::Number::UInt32ToDecChars(::Il2CppChar* bufferEnd, uint value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::UInt32ToDecChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt32ToDecChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferEnd), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferEnd, value, digits);
}
// Autogenerated method: System.Number.UInt32ToDecStr
::StringW System::Number::UInt32ToDecStr(uint value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::UInt32ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt32ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits);
}
// Autogenerated method: System.Number.TryUInt32ToDecStr
bool System::Number::TryUInt32ToDecStr(uint value, int digits, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryUInt32ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryUInt32ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.Int64ToNumber
void System::Number::Int64ToNumber(int64_t input, ByRef<::System::Number::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::Int64ToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int64ToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(number));
}
// Autogenerated method: System.Number.NegativeInt64ToDecStr
::StringW System::Number::NegativeInt64ToDecStr(int64_t input, int digits, ::StringW sNegative) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NegativeInt64ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NegativeInt64ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(sNegative)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, digits, sNegative);
}
// Autogenerated method: System.Number.TryNegativeInt64ToDecStr
bool System::Number::TryNegativeInt64ToDecStr(int64_t input, int digits, ::StringW sNegative, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryNegativeInt64ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryNegativeInt64ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(sNegative), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, digits, sNegative, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.Int64ToHexStr
::StringW System::Number::Int64ToHexStr(int64_t value, ::Il2CppChar hexBase, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::Int64ToHexStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int64ToHexStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(hexBase), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, hexBase, digits);
}
// Autogenerated method: System.Number.TryInt64ToHexStr
bool System::Number::TryInt64ToHexStr(int64_t value, ::Il2CppChar hexBase, int digits, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryInt64ToHexStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryInt64ToHexStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(hexBase), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, hexBase, digits, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.UInt64ToNumber
void System::Number::UInt64ToNumber(uint64_t value, ByRef<::System::Number::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::UInt64ToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt64ToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(number));
}
// Autogenerated method: System.Number.UInt64ToDecStr
::StringW System::Number::UInt64ToDecStr(uint64_t value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::UInt64ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "UInt64ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits);
}
// Autogenerated method: System.Number.TryUInt64ToDecStr
bool System::Number::TryUInt64ToDecStr(uint64_t value, int digits, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryUInt64ToDecStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryUInt64ToDecStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, digits, destination, byref(charsWritten));
}
// Autogenerated method: System.Number.ParseFormatSpecifier
::Il2CppChar System::Number::ParseFormatSpecifier(::System::ReadOnlySpan_1<::Il2CppChar> format, ByRef<int> digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::ParseFormatSpecifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseFormatSpecifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(digits));
}
// Autogenerated method: System.Number.NumberToString
void System::Number::NumberToString(ByRef<::System::Text::ValueStringBuilder> sb, ByRef<::System::Number::NumberBuffer> number, ::Il2CppChar format, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, bool isDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(isDecimal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), format, nMaxDigits, info, isDecimal);
}
// Autogenerated method: System.Number.NumberToStringFormat
void System::Number::NumberToStringFormat(ByRef<::System::Text::ValueStringBuilder> sb, ByRef<::System::Number::NumberBuffer> number, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberToStringFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToStringFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), format, info);
}
// Autogenerated method: System.Number.FormatCurrency
void System::Number::FormatCurrency(ByRef<::System::Text::ValueStringBuilder> sb, ByRef<::System::Number::NumberBuffer> number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Number.FormatFixed
void System::Number::FormatFixed(ByRef<::System::Text::ValueStringBuilder> sb, ByRef<::System::Number::NumberBuffer> number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::ArrayW<int> groupDigits, ::StringW sDecimal, ::StringW sGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(groupDigits), ::il2cpp_utils::ExtractType(sDecimal), ::il2cpp_utils::ExtractType(sGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMinDigits, nMaxDigits, info, groupDigits, sDecimal, sGroup);
}
// Autogenerated method: System.Number.FormatNumber
void System::Number::FormatNumber(ByRef<::System::Text::ValueStringBuilder> sb, ByRef<::System::Number::NumberBuffer> number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Number.FormatScientific
void System::Number::FormatScientific(ByRef<::System::Text::ValueStringBuilder> sb, ByRef<::System::Number::NumberBuffer> number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatScientific");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatScientific", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(expChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMinDigits, nMaxDigits, info, expChar);
}
// Autogenerated method: System.Number.FormatExponent
void System::Number::FormatExponent(ByRef<::System::Text::ValueStringBuilder> sb, ::System::Globalization::NumberFormatInfo* info, int value, ::Il2CppChar expChar, int minDigits, bool positiveSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatExponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatExponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(expChar), ::il2cpp_utils::ExtractType(minDigits), ::il2cpp_utils::ExtractType(positiveSign)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), info, value, expChar, minDigits, positiveSign);
}
// Autogenerated method: System.Number.FormatGeneral
void System::Number::FormatGeneral(ByRef<::System::Text::ValueStringBuilder> sb, ByRef<::System::Number::NumberBuffer> number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar, bool bSuppressScientific) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatGeneral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatGeneral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(expChar), ::il2cpp_utils::ExtractType(bSuppressScientific)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMinDigits, nMaxDigits, info, expChar, bSuppressScientific);
}
// Autogenerated method: System.Number.FormatPercent
void System::Number::FormatPercent(ByRef<::System::Text::ValueStringBuilder> sb, ByRef<::System::Number::NumberBuffer> number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FormatPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FormatPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sb), byref(number), nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Number.RoundNumber
void System::Number::RoundNumber(ByRef<::System::Number::NumberBuffer> number, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::RoundNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "RoundNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), pos);
}
// Autogenerated method: System.Number.FindSection
int System::Number::FindSection(::System::ReadOnlySpan_1<::Il2CppChar> format, int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::FindSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "FindSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, section);
}
// Autogenerated method: System.Number.Low32
uint System::Number::Low32(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::Low32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Low32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Number.High32
uint System::Number::High32(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::High32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "High32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Number.Int64DivMod1E9
uint System::Number::Int64DivMod1E9(ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::Int64DivMod1E9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Int64DivMod1E9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated method: System.Number.NumberToInt32
bool System::Number::NumberToInt32(ByRef<::System::Number::NumberBuffer> number, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.NumberToInt64
bool System::Number::NumberToInt64(ByRef<::System::Number::NumberBuffer> number, ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.NumberToUInt32
bool System::Number::NumberToUInt32(ByRef<::System::Number::NumberBuffer> number, ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.NumberToUInt64
bool System::Number::NumberToUInt64(ByRef<::System::Number::NumberBuffer> number, ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.ParseInt32
int System::Number::ParseInt32(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::ParseInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.ParseInt64
int64_t System::Number::ParseInt64(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::ParseInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.ParseUInt32
uint System::Number::ParseUInt32(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::ParseUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.ParseUInt64
uint64_t System::Number::ParseUInt64(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::ParseUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.ParseNumber
bool System::Number::ParseNumber(ByRef<::Il2CppChar*> str, ::Il2CppChar* strEnd, ::System::Globalization::NumberStyles styles, ByRef<::System::Number::NumberBuffer> number, ::System::Globalization::NumberFormatInfo* info, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::ParseNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(strEnd), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), strEnd, styles, byref(number), info, parseDecimal);
}
// Autogenerated method: System.Number.TryParseInt32
bool System::Number::TryParseInt32(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseInt32IntegerStyle
bool System::Number::TryParseInt32IntegerStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<int> result, ByRef<bool> failureIsOverflow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseInt32IntegerStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt32IntegerStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(failureIsOverflow)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result), byref(failureIsOverflow));
}
// Autogenerated method: System.Number.TryParseInt64IntegerStyle
bool System::Number::TryParseInt64IntegerStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<int64_t> result, ByRef<bool> failureIsOverflow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseInt64IntegerStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt64IntegerStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractType(failureIsOverflow)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result), byref(failureIsOverflow));
}
// Autogenerated method: System.Number.TryParseInt64
bool System::Number::TryParseInt64(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt32
bool System::Number::TryParseUInt32(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt32IntegerStyle
bool System::Number::TryParseUInt32IntegerStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint> result, ByRef<bool> failureIsOverflow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseUInt32IntegerStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt32IntegerStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(failureIsOverflow)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result), byref(failureIsOverflow));
}
// Autogenerated method: System.Number.TryParseUInt32HexNumberStyle
bool System::Number::TryParseUInt32HexNumberStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint> result, ByRef<bool> failureIsOverflow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseUInt32HexNumberStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt32HexNumberStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(failureIsOverflow)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result), byref(failureIsOverflow));
}
// Autogenerated method: System.Number.TryParseUInt64
bool System::Number::TryParseUInt64(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseUInt64IntegerStyle
bool System::Number::TryParseUInt64IntegerStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint64_t> result, ByRef<bool> failureIsOverflow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseUInt64IntegerStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt64IntegerStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractType(failureIsOverflow)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result), byref(failureIsOverflow));
}
// Autogenerated method: System.Number.TryParseUInt64HexNumberStyle
bool System::Number::TryParseUInt64HexNumberStyle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<uint64_t> result, ByRef<bool> failureIsOverflow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseUInt64HexNumberStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt64HexNumberStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractType(failureIsOverflow)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result), byref(failureIsOverflow));
}
// Autogenerated method: System.Number.ParseDecimal
::System::Decimal System::Number::ParseDecimal(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::ParseDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.NumberBufferToDecimal
bool System::Number::NumberBufferToDecimal(ByRef<::System::Number::NumberBuffer> number, ByRef<::System::Decimal> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberBufferToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberBufferToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.ParseDouble
double System::Number::ParseDouble(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::ParseDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.ParseSingle
float System::Number::ParseSingle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::ParseSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ParseSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info);
}
// Autogenerated method: System.Number.TryParseDecimal
bool System::Number::TryParseDecimal(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<::System::Decimal> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseDouble
bool System::Number::TryParseDouble(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.TryParseSingle
bool System::Number::TryParseSingle(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* info, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryParseSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryParseSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, info, byref(result));
}
// Autogenerated method: System.Number.StringToNumber
void System::Number::StringToNumber(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ByRef<::System::Number::NumberBuffer> number, ::System::Globalization::NumberFormatInfo* info, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::StringToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "StringToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(parseDecimal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, byref(number), info, parseDecimal);
}
// Autogenerated method: System.Number.TryStringToNumber
bool System::Number::TryStringToNumber(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles styles, ByRef<::System::Number::NumberBuffer> number, ::System::Globalization::NumberFormatInfo* info, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TryStringToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TryStringToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, styles, byref(number), info, parseDecimal);
}
// Autogenerated method: System.Number.TrailingZeros
bool System::Number::TrailingZeros(::System::ReadOnlySpan_1<::Il2CppChar> value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::TrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "TrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, index);
}
// Autogenerated method: System.Number.MatchChars
::Il2CppChar* System::Number::MatchChars(::Il2CppChar* p, ::Il2CppChar* pEnd, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "MatchChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(pEnd), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, pEnd, value);
}
// Autogenerated method: System.Number.IsWhite
bool System::Number::IsWhite(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::IsWhite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "IsWhite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Number.IsDigit
bool System::Number::IsDigit(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Number.ThrowOverflowOrFormatException
void System::Number::ThrowOverflowOrFormatException(bool overflow, ::StringW overflowResourceKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::ThrowOverflowOrFormatException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "ThrowOverflowOrFormatException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overflow), ::il2cpp_utils::ExtractType(overflowResourceKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, overflow, overflowResourceKey);
}
// Autogenerated method: System.Number.NumberBufferToDouble
bool System::Number::NumberBufferToDouble(ByRef<::System::Number::NumberBuffer> number, ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberBufferToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberBufferToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Number.DigitsToInt
uint System::Number::DigitsToInt(::Il2CppChar* p, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::DigitsToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "DigitsToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, count);
}
// Autogenerated method: System.Number.Mul32x32To64
uint64_t System::Number::Mul32x32To64(uint a, uint b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::Mul32x32To64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Mul32x32To64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.Number.Mul64Lossy
uint64_t System::Number::Mul64Lossy(uint64_t a, uint64_t b, ByRef<int> pexp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::Mul64Lossy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "Mul64Lossy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(pexp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, byref(pexp));
}
// Autogenerated method: System.Number.abs
int System::Number::abs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Number.NumberToDouble
double System::Number::NumberToDouble(ByRef<::System::Number::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "NumberToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number));
}
// Autogenerated method: System.Number.DoubleToNumber
void System::Number::DoubleToNumber(double value, int precision, ByRef<::System::Number::NumberBuffer> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::DoubleToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", "DoubleToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, precision, byref(number));
}
// Autogenerated method: System.Number..cctor
void System::Number::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Number", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Number/NumberBuffer
#include "System/Number_NumberBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 precision
[[deprecated("Use field access instead!")]] int& System::Number::NumberBuffer::dyn_precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberBuffer::dyn_precision");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "precision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scale
[[deprecated("Use field access instead!")]] int& System::Number::NumberBuffer::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberBuffer::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sign
[[deprecated("Use field access instead!")]] int& System::Number::NumberBuffer::dyn__sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberBuffer::dyn__sign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sign"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Number/NumberBuffer/DigitsAndNullTerminator _digits
[[deprecated("Use field access instead!")]] ::System::Number::NumberBuffer::DigitsAndNullTerminator& System::Number::NumberBuffer::dyn__digits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberBuffer::dyn__digits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_digits"))->offset;
  return *reinterpret_cast<::System::Number::NumberBuffer::DigitsAndNullTerminator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char* _allDigits
[[deprecated("Use field access instead!")]] ::Il2CppChar*& System::Number::NumberBuffer::dyn__allDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberBuffer::dyn__allDigits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allDigits"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Number/NumberBuffer.get_sign
bool System::Number::NumberBuffer::get_sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberBuffer::get_sign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Number/NumberBuffer.set_sign
void System::Number::NumberBuffer::set_sign(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberBuffer::set_sign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Number/NumberBuffer.get_digits
::Il2CppChar* System::Number::NumberBuffer::get_digits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Number::NumberBuffer::get_digits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_digits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ObjectDisposedException
#include "System/ObjectDisposedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _objectName
[[deprecated("Use field access instead!")]] ::StringW& System::ObjectDisposedException::dyn__objectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObjectDisposedException::dyn__objectName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ObjectDisposedException.get_ObjectName
::StringW System::ObjectDisposedException::get_ObjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObjectDisposedException::get_ObjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ObjectDisposedException.GetObjectData
void System::ObjectDisposedException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObjectDisposedException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.ObjectDisposedException.get_Message
::StringW System::ObjectDisposedException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObjectDisposedException::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ObsoleteAttribute
#include "System/ObsoleteAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _message
[[deprecated("Use field access instead!")]] ::StringW& System::ObsoleteAttribute::dyn__message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObsoleteAttribute::dyn__message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _error
[[deprecated("Use field access instead!")]] bool& System::ObsoleteAttribute::dyn__error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObsoleteAttribute::dyn__error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_error"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ObsoleteAttribute.get_Message
::StringW System::ObsoleteAttribute::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObsoleteAttribute::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ObsoleteAttribute.get_IsError
bool System::ObsoleteAttribute::get_IsError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObsoleteAttribute::get_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.OperationCanceledException
#include "System/OperationCanceledException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken _cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::OperationCanceledException::dyn__cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OperationCanceledException::dyn__cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.OperationCanceledException.get_CancellationToken
::System::Threading::CancellationToken System::OperationCanceledException::get_CancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OperationCanceledException::get_CancellationToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CancellationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationToken, false>(this, ___internal__method);
}
// Autogenerated method: System.OperationCanceledException.set_CancellationToken
void System::OperationCanceledException::set_CancellationToken(::System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OperationCanceledException::set_CancellationToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CancellationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.OverflowException
#include "System/OverflowException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ParamArrayAttribute
#include "System/ParamArrayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ParamsArray
#include "System/ParamsArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] s_oneArgArray
::ArrayW<::Il2CppObject*> System::ParamsArray::_get_s_oneArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_get_s_oneArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System", "ParamsArray", "s_oneArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] s_oneArgArray
void System::ParamsArray::_set_s_oneArgArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_set_s_oneArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "s_oneArgArray", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] s_twoArgArray
::ArrayW<::Il2CppObject*> System::ParamsArray::_get_s_twoArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_get_s_twoArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System", "ParamsArray", "s_twoArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] s_twoArgArray
void System::ParamsArray::_set_s_twoArgArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_set_s_twoArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "s_twoArgArray", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] s_threeArgArray
::ArrayW<::Il2CppObject*> System::ParamsArray::_get_s_threeArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_get_s_threeArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System", "ParamsArray", "s_threeArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] s_threeArgArray
void System::ParamsArray::_set_s_threeArgArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_set_s_threeArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "s_threeArgArray", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _arg0
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ParamsArray::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::dyn__arg0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _arg1
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ParamsArray::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::dyn__arg1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _arg2
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ParamsArray::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::dyn__arg2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object[] _args
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::ParamsArray::dyn__args() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::dyn__args");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_args"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ParamsArray..ctor
System::ParamsArray::ParamsArray(::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg0);
}
// Autogenerated method: System.ParamsArray..ctor
System::ParamsArray::ParamsArray(::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg0, arg1);
}
// Autogenerated method: System.ParamsArray..ctor
System::ParamsArray::ParamsArray(::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg0, arg1, arg2);
}
// Autogenerated method: System.ParamsArray..ctor
System::ParamsArray::ParamsArray(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: System.ParamsArray.get_Length
int System::ParamsArray::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ParamsArray.get_Item
::Il2CppObject* System::ParamsArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ParamsArray.GetAtSlow
::Il2CppObject* System::ParamsArray::GetAtSlow(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::GetAtSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAtSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ParamsArray..cctor
void System::ParamsArray::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParamsArray", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ParseNumbers
#include "System/ParseNumbers.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ParseNumbers.StringToLong
int64_t System::ParseNumbers::StringToLong(::System::ReadOnlySpan_1<::Il2CppChar> s, int radix, int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::StringToLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, radix, flags);
}
// Autogenerated method: System.ParseNumbers.StringToLong
int64_t System::ParseNumbers::StringToLong(::System::ReadOnlySpan_1<::Il2CppChar> s, int radix, int flags, ByRef<int> currPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::StringToLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(currPos)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, radix, flags, byref(currPos));
}
// Autogenerated method: System.ParseNumbers.StringToInt
int System::ParseNumbers::StringToInt(::System::ReadOnlySpan_1<::Il2CppChar> s, int radix, int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::StringToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, radix, flags);
}
// Autogenerated method: System.ParseNumbers.StringToInt
int System::ParseNumbers::StringToInt(::System::ReadOnlySpan_1<::Il2CppChar> s, int radix, int flags, ByRef<int> currPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::StringToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(currPos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, radix, flags, byref(currPos));
}
// Autogenerated method: System.ParseNumbers.IntToString
::StringW System::ParseNumbers::IntToString(int n, int radix, int width, ::Il2CppChar paddingChar, int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::IntToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "IntToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(paddingChar), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, radix, width, paddingChar, flags);
}
// Autogenerated method: System.ParseNumbers.EatWhiteSpace
void System::ParseNumbers::EatWhiteSpace(::System::ReadOnlySpan_1<::Il2CppChar> s, ByRef<int> i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::EatWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "EatWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(i));
}
// Autogenerated method: System.ParseNumbers.GrabLongs
int64_t System::ParseNumbers::GrabLongs(int radix, ::System::ReadOnlySpan_1<::Il2CppChar> s, ByRef<int> i, bool isUnsigned) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::GrabLongs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "GrabLongs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(isUnsigned)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, radix, s, byref(i), isUnsigned);
}
// Autogenerated method: System.ParseNumbers.GrabInts
int System::ParseNumbers::GrabInts(int radix, ::System::ReadOnlySpan_1<::Il2CppChar> s, ByRef<int> i, bool isUnsigned) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::GrabInts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "GrabInts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(isUnsigned)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, radix, s, byref(i), isUnsigned);
}
// Autogenerated method: System.ParseNumbers.ThrowOverflowInt32Exception
void System::ParseNumbers::ThrowOverflowInt32Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::ThrowOverflowInt32Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "ThrowOverflowInt32Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ParseNumbers.ThrowOverflowInt64Exception
void System::ParseNumbers::ThrowOverflowInt64Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::ThrowOverflowInt64Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "ThrowOverflowInt64Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ParseNumbers.ThrowOverflowUInt32Exception
void System::ParseNumbers::ThrowOverflowUInt32Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::ThrowOverflowUInt32Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "ThrowOverflowUInt32Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ParseNumbers.ThrowOverflowUInt64Exception
void System::ParseNumbers::ThrowOverflowUInt64Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::ThrowOverflowUInt64Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "ThrowOverflowUInt64Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ParseNumbers.IsDigit
bool System::ParseNumbers::IsDigit(::Il2CppChar c, int radix, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, radix, byref(result));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.PlatformNotSupportedException
#include "System/PlatformNotSupportedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Random
#include "System/Random.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MBIG
int System::Random::_get_MBIG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_get_MBIG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MBIG"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MBIG
void System::Random::_set_MBIG(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_set_MBIG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MBIG", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MSEED
int System::Random::_get_MSEED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_get_MSEED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MSEED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MSEED
void System::Random::_set_MSEED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_set_MSEED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MSEED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MZ
int System::Random::_get_MZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_get_MZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MZ"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MZ
void System::Random::_set_MZ(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_set_MZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MZ", value));
}
// Autogenerated static field getter
// Get static field: static private System.Random t_threadRandom
::System::Random* System::Random::_get_t_threadRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_get_t_threadRandom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("System", "Random", "t_threadRandom"));
}
// Autogenerated static field setter
// Set static field: static private System.Random t_threadRandom
void System::Random::_set_t_threadRandom(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_set_t_threadRandom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "t_threadRandom", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Random s_globalRandom
::System::Random* System::Random::_get_s_globalRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_get_s_globalRandom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("System", "Random", "s_globalRandom"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Random s_globalRandom
void System::Random::_set_s_globalRandom(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_set_s_globalRandom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "s_globalRandom", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inext
[[deprecated("Use field access instead!")]] int& System::Random::dyn__inext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::dyn__inext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inext"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inextp
[[deprecated("Use field access instead!")]] int& System::Random::dyn__inextp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::dyn__inextp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inextp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _seedArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Random::dyn__seedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::dyn__seedArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_seedArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Random.Sample
double System::Random::Sample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::Sample");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Random*), 4));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.InternalSample
int System::Random::InternalSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::InternalSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.GenerateSeed
int System::Random::GenerateSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::GenerateSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Random", "GenerateSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Random.GenerateGlobalSeed
int System::Random::GenerateGlobalSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::GenerateGlobalSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Random", "GenerateGlobalSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Random.Next
int System::Random::Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::Next");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Random*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.GetSampleForLargeRange
double System::Random::GetSampleForLargeRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::GetSampleForLargeRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleForLargeRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.Next
int System::Random::Next(int minValue, int maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::Next");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Random*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, minValue, maxValue);
}
// Autogenerated method: System.Random.Next
int System::Random::Next(int maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::Next");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Random*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, maxValue);
}
// Autogenerated method: System.Random.NextDouble
double System::Random::NextDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::NextDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Random*), 8));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.NextBytes
void System::Random::NextBytes(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::NextBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Random*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.Random..cctor
void System::Random::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Random", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Range
#include "System/Range.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Index <Start>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Index& System::Range::dyn_$Start$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Range::dyn_$Start$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Start>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Index*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Index <End>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Index& System::Range::dyn_$End$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Range::dyn_$End$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<End>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Index*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Range.get_Start
::System::Index System::Range::get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Range::get_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Index, false>(this, ___internal__method);
}
// Autogenerated method: System.Range.get_End
::System::Index System::Range::get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Range::get_End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Index, false>(this, ___internal__method);
}
// Autogenerated method: System.Range..ctor
// ABORTED elsewhere.  System::Range::Range(::System::Index start, ::System::Index end)
// Autogenerated method: System.Range.Equals
bool System::Range::Equals(::System::Range other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Range::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Range), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Range.EndAt
::System::Range System::Range::EndAt(::System::Index end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Range::EndAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Range", "EndAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Range, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, end);
}
// Autogenerated method: System.Range.GetOffsetAndLength
::System::ValueTuple_2<int, int> System::Range::GetOffsetAndLength(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Range::GetOffsetAndLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetOffsetAndLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, int>, false>(this, ___internal__method, length);
}
// Autogenerated method: System.Range.Equals
bool System::Range::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Range::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Range.GetHashCode
int System::Range::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Range::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Range.ToString
::StringW System::Range::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Range::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.RankException
#include "System/RankException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.ResolveEventArgs
#include "System/ResolveEventArgs.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ResolveEventArgs::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ResolveEventArgs::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.Assembly <RequestingAssembly>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::Assembly*& System::ResolveEventArgs::dyn_$RequestingAssembly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ResolveEventArgs::dyn_$RequestingAssembly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestingAssembly>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::Assembly**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ResolveEventArgs.get_Name
::StringW System::ResolveEventArgs::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ResolveEventArgs::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ResolveEventHandler
#include "System/ResolveEventHandler.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.ResolveEventArgs
#include "System/ResolveEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ResolveEventHandler.Invoke
::System::Reflection::Assembly* System::ResolveEventHandler::Invoke(::Il2CppObject* sender, ::System::ResolveEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ResolveEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ResolveEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method, sender, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.SByte
#include "System/SByte.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.SByte MaxValue
int8_t System::SByte::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int8_t>("System", "SByte", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.SByte MaxValue
void System::SByte::_set_MaxValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SByte", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.SByte MinValue
int8_t System::SByte::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int8_t>("System", "SByte", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.SByte MinValue
void System::SByte::_set_MinValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SByte", "MinValue", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.SByte m_value
[[deprecated("Use field access instead!")]] int8_t& System::SByte::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.SByte.CompareTo
int System::SByte::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.CompareTo
int System::SByte::CompareTo(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.SByte.Equals
bool System::SByte::Equals(int8_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.ToString
::StringW System::SByte::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.ToString
::StringW System::SByte::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.SByte.TryFormat
bool System::SByte::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, provider);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.SByte.TryParse
bool System::SByte::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<int8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<int8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.SByte.TryParse
bool System::SByte::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<int8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info, byref(result));
}
// Autogenerated method: System.SByte.GetTypeCode
::System::TypeCode System::SByte::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.SByte.System.IConvertible.ToBoolean
bool System::SByte::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToChar
::Il2CppChar System::SByte::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToSByte
int8_t System::SByte::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 8));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToByte
uint8_t System::SByte::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 9));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt16
int16_t System::SByte::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 10));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt16
uint16_t System::SByte::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt32
int System::SByte::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt32
uint System::SByte::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt64
int64_t System::SByte::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 14));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt64
uint64_t System::SByte::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToSingle
float System::SByte::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 16));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDouble
double System::SByte::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 17));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDecimal
::System::Decimal System::SByte::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDateTime
::System::DateTime System::SByte::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToType
::Il2CppObject* System::SByte::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(int8_t), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.SByte.Equals
bool System::SByte::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.GetHashCode
int System::SByte::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.SByte.ToString
::StringW System::SByte::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.SerializableAttribute
#include "System/SerializableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single MinValue
float System::Single::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MinValue
void System::Single::_set_MinValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single Epsilon
float System::Single::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Epsilon
void System::Single::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "Epsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MaxValue
float System::Single::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MaxValue
void System::Single::_set_MaxValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PositiveInfinity
float System::Single::_get_PositiveInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_PositiveInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "PositiveInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PositiveInfinity
void System::Single::_set_PositiveInfinity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_PositiveInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "PositiveInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NegativeInfinity
float System::Single::_get_NegativeInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_NegativeInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NegativeInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NegativeInfinity
void System::Single::_set_NegativeInfinity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_NegativeInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NegativeInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NaN
float System::Single::_get_NaN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_NaN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NaN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NaN
void System::Single::_set_NaN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_NaN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NaN", value));
}
// Autogenerated static field getter
// Get static field: static System.Single NegativeZero
float System::Single::_get_NegativeZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_NegativeZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NegativeZero"));
}
// Autogenerated static field setter
// Set static field: static System.Single NegativeZero
void System::Single::_set_NegativeZero(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_NegativeZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NegativeZero", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single m_value
[[deprecated("Use field access instead!")]] float& System::Single::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Single.IsFinite
bool System::Single::IsFinite(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::IsFinite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsFinite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsInfinity
bool System::Single::IsInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::IsInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsNaN
bool System::Single::IsNaN(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::IsNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsNegativeInfinity
bool System::Single::IsNegativeInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::IsNegativeInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsNegativeInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsPositiveInfinity
bool System::Single::IsPositiveInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::IsPositiveInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsPositiveInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.CompareTo
int System::Single::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Single.CompareTo
int System::Single::CompareTo(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Single.Equals
bool System::Single::Equals(float obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Single.ToString
::StringW System::Single::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.ToString
::StringW System::Single::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Single.ToString
::StringW System::Single::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Single.TryFormat
bool System::Single::TryFormat(::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::TryFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(charsWritten), format, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::StringW s, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info, byref(result));
}
// Autogenerated method: System.Single.GetTypeCode
::System::TypeCode System::Single::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Single.System.IConvertible.ToBoolean
bool System::Single::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToChar
::Il2CppChar System::Single::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToSByte
int8_t System::Single::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 8));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToByte
uint8_t System::Single::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 9));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt16
int16_t System::Single::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 10));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt16
uint16_t System::Single::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt32
int System::Single::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt32
uint System::Single::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt64
int64_t System::Single::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 14));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt64
uint64_t System::Single::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToSingle
float System::Single::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 16));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDouble
double System::Single::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 17));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDecimal
::System::Decimal System::Single::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDateTime
::System::DateTime System::Single::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToType
::Il2CppObject* System::Single::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(float), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.Single.Equals
bool System::Single::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Single.GetHashCode
int System::Single::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Single.ToString
::StringW System::Single::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.SpanHelpers
#include "System/SpanHelpers.hpp"
// Including type: System.Numerics.Vector`1
#include "System/Numerics/Vector_1.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.SpanHelpers.IndexOfAny
int System::SpanHelpers::IndexOfAny(ByRef<uint8_t> searchSpace, int searchSpaceLength, ByRef<uint8_t> value, int valueLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchSpace), ::il2cpp_utils::ExtractType(searchSpaceLength), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(valueLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(searchSpace), searchSpaceLength, byref(value), valueLength);
}
// Autogenerated method: System.SpanHelpers.IndexOf
int System::SpanHelpers::IndexOf(ByRef<uint8_t> searchSpace, uint8_t value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchSpace), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(searchSpace), value, length);
}
// Autogenerated method: System.SpanHelpers.SequenceEqual
bool System::SpanHelpers::SequenceEqual(ByRef<uint8_t> first, ByRef<uint8_t> second, uint64_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::SequenceEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "SequenceEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(first), byref(second), length);
}
// Autogenerated method: System.SpanHelpers.SequenceCompareTo
int System::SpanHelpers::SequenceCompareTo(ByRef<::Il2CppChar> first, int firstLength, ByRef<::Il2CppChar> second, int secondLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::SequenceCompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "SequenceCompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(firstLength), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(secondLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(first), firstLength, byref(second), secondLength);
}
// Autogenerated method: System.SpanHelpers.IndexOf
int System::SpanHelpers::IndexOf(ByRef<::Il2CppChar> searchSpace, ::Il2CppChar value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchSpace), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(searchSpace), value, length);
}
// Autogenerated method: System.SpanHelpers.LastIndexOf
int System::SpanHelpers::LastIndexOf(ByRef<::Il2CppChar> searchSpace, ::Il2CppChar value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchSpace), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(searchSpace), value, length);
}
// Autogenerated method: System.SpanHelpers.LocateFirstFoundChar
int System::SpanHelpers::LocateFirstFoundChar(::System::Numerics::Vector_1<uint16_t> match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::LocateFirstFoundChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "LocateFirstFoundChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(match)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, match);
}
// Autogenerated method: System.SpanHelpers.LocateFirstFoundChar
int System::SpanHelpers::LocateFirstFoundChar(uint64_t match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::LocateFirstFoundChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "LocateFirstFoundChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(match)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, match);
}
// Autogenerated method: System.SpanHelpers.LocateLastFoundChar
int System::SpanHelpers::LocateLastFoundChar(::System::Numerics::Vector_1<uint16_t> match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::LocateLastFoundChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "LocateLastFoundChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(match)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, match);
}
// Autogenerated method: System.SpanHelpers.LocateLastFoundChar
int System::SpanHelpers::LocateLastFoundChar(uint64_t match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::LocateLastFoundChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "LocateLastFoundChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(match)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, match);
}
// Autogenerated method: System.SpanHelpers.IndexOfCultureHelper
int System::SpanHelpers::IndexOfCultureHelper(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::CompareInfo* compareInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::IndexOfCultureHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "IndexOfCultureHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(compareInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value, compareInfo);
}
// Autogenerated method: System.SpanHelpers.IndexOfCultureIgnoreCaseHelper
int System::SpanHelpers::IndexOfCultureIgnoreCaseHelper(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::CompareInfo* compareInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::IndexOfCultureIgnoreCaseHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "IndexOfCultureIgnoreCaseHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(compareInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value, compareInfo);
}
// Autogenerated method: System.SpanHelpers.IndexOfOrdinalHelper
int System::SpanHelpers::IndexOfOrdinalHelper(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::IndexOfOrdinalHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "IndexOfOrdinalHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value, ignoreCase);
}
// Autogenerated method: System.SpanHelpers.StartsWithCultureHelper
bool System::SpanHelpers::StartsWithCultureHelper(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::CompareInfo* compareInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::StartsWithCultureHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "StartsWithCultureHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(compareInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value, compareInfo);
}
// Autogenerated method: System.SpanHelpers.StartsWithCultureIgnoreCaseHelper
bool System::SpanHelpers::StartsWithCultureIgnoreCaseHelper(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::CompareInfo* compareInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::StartsWithCultureIgnoreCaseHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "StartsWithCultureIgnoreCaseHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(compareInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value, compareInfo);
}
// Autogenerated method: System.SpanHelpers.StartsWithOrdinalIgnoreCaseHelper
bool System::SpanHelpers::StartsWithOrdinalIgnoreCaseHelper(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::StartsWithOrdinalIgnoreCaseHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "StartsWithOrdinalIgnoreCaseHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value);
}
// Autogenerated method: System.SpanHelpers.EndsWithCultureHelper
bool System::SpanHelpers::EndsWithCultureHelper(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::CompareInfo* compareInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::EndsWithCultureHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "EndsWithCultureHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(compareInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value, compareInfo);
}
// Autogenerated method: System.SpanHelpers.EndsWithCultureIgnoreCaseHelper
bool System::SpanHelpers::EndsWithCultureIgnoreCaseHelper(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::CompareInfo* compareInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::EndsWithCultureIgnoreCaseHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "EndsWithCultureIgnoreCaseHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(compareInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value, compareInfo);
}
// Autogenerated method: System.SpanHelpers.EndsWithOrdinalIgnoreCaseHelper
bool System::SpanHelpers::EndsWithOrdinalIgnoreCaseHelper(::System::ReadOnlySpan_1<::Il2CppChar> span, ::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::EndsWithOrdinalIgnoreCaseHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "EndsWithOrdinalIgnoreCaseHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, value);
}
// Autogenerated method: System.SpanHelpers.ClearWithoutReferences
void System::SpanHelpers::ClearWithoutReferences(ByRef<uint8_t> b, uint64_t byteLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::ClearWithoutReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "ClearWithoutReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(byteLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(b), byteLength);
}
// Autogenerated method: System.SpanHelpers.ClearWithReferences
void System::SpanHelpers::ClearWithReferences(ByRef<::System::IntPtr> ip, uint64_t pointerSizeLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::ClearWithReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SpanHelpers", "ClearWithReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(pointerSizeLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ip), pointerSizeLength);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.StackOverflowException
#include "System/StackOverflowException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.StringComparer
#include "System/StringComparer.hpp"
// Including type: System.CultureAwareComparer
#include "System/CultureAwareComparer.hpp"
// Including type: System.OrdinalCaseSensitiveComparer
#include "System/OrdinalCaseSensitiveComparer.hpp"
// Including type: System.OrdinalIgnoreCaseComparer
#include "System/OrdinalIgnoreCaseComparer.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.CultureAwareComparer s_invariantCulture
::System::CultureAwareComparer* System::StringComparer::_get_s_invariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_get_s_invariantCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::CultureAwareComparer*>("System", "StringComparer", "s_invariantCulture"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.CultureAwareComparer s_invariantCulture
void System::StringComparer::_set_s_invariantCulture(::System::CultureAwareComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_set_s_invariantCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "s_invariantCulture", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.CultureAwareComparer s_invariantCultureIgnoreCase
::System::CultureAwareComparer* System::StringComparer::_get_s_invariantCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_get_s_invariantCultureIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::CultureAwareComparer*>("System", "StringComparer", "s_invariantCultureIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.CultureAwareComparer s_invariantCultureIgnoreCase
void System::StringComparer::_set_s_invariantCultureIgnoreCase(::System::CultureAwareComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_set_s_invariantCultureIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "s_invariantCultureIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.OrdinalCaseSensitiveComparer s_ordinal
::System::OrdinalCaseSensitiveComparer* System::StringComparer::_get_s_ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_get_s_ordinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::OrdinalCaseSensitiveComparer*>("System", "StringComparer", "s_ordinal"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.OrdinalCaseSensitiveComparer s_ordinal
void System::StringComparer::_set_s_ordinal(::System::OrdinalCaseSensitiveComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_set_s_ordinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "s_ordinal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.OrdinalIgnoreCaseComparer s_ordinalIgnoreCase
::System::OrdinalIgnoreCaseComparer* System::StringComparer::_get_s_ordinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_get_s_ordinalIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::OrdinalIgnoreCaseComparer*>("System", "StringComparer", "s_ordinalIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.OrdinalIgnoreCaseComparer s_ordinalIgnoreCase
void System::StringComparer::_set_s_ordinalIgnoreCase(::System::OrdinalIgnoreCaseComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_set_s_ordinalIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "s_ordinalIgnoreCase", value));
}
// Autogenerated method: System.StringComparer.get_InvariantCultureIgnoreCase
::System::StringComparer* System::StringComparer::get_InvariantCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::get_InvariantCultureIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_InvariantCultureIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::StringComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_Ordinal
::System::StringComparer* System::StringComparer::get_Ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::get_Ordinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_Ordinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::StringComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_OrdinalIgnoreCase
::System::StringComparer* System::StringComparer::get_OrdinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::get_OrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_OrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::StringComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.Create
::System::StringComparer* System::StringComparer::Create(::System::Globalization::CultureInfo* culture, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::StringComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, ignoreCase);
}
// Autogenerated method: System.StringComparer.Compare
int System::StringComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.Equals
bool System::StringComparer::Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.GetHashCode
int System::StringComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.StringComparer.Compare
int System::StringComparer::Compare(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.Equals
bool System::StringComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.GetHashCode
int System::StringComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.StringComparer..cctor
void System::StringComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.CultureAwareComparer
#include "System/CultureAwareComparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
::System::Globalization::CompareOptions System::CultureAwareComparer::_get_ValidCompareMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::_get_ValidCompareMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System", "CultureAwareComparer", "ValidCompareMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
void System::CultureAwareComparer::_set_ValidCompareMaskOffFlags(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::_set_ValidCompareMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "CultureAwareComparer", "ValidCompareMaskOffFlags", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Globalization.CompareInfo _compareInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::CultureAwareComparer::dyn__compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::dyn__compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareOptions _options
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareOptions& System::CultureAwareComparer::dyn__options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::dyn__options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_options"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.CultureAwareComparer.GetObjectData
void System::CultureAwareComparer::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::CultureAwareComparer*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.CultureAwareComparer.Compare
int System::CultureAwareComparer::Compare(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.CultureAwareComparer.Equals
bool System::CultureAwareComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.CultureAwareComparer.GetHashCode
int System::CultureAwareComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.CultureAwareComparer.Equals
bool System::CultureAwareComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.CultureAwareComparer.GetHashCode
int System::CultureAwareComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.OrdinalComparer
#include "System/OrdinalComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _ignoreCase
[[deprecated("Use field access instead!")]] bool& System::OrdinalComparer::dyn__ignoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::dyn__ignoreCase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreCase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.OrdinalComparer.Compare
int System::OrdinalComparer::Compare(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.OrdinalComparer.Equals
bool System::OrdinalComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.OrdinalComparer.GetHashCode
int System::OrdinalComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::StringComparer*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.OrdinalComparer.Equals
bool System::OrdinalComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.OrdinalComparer.GetHashCode
int System::OrdinalComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.OrdinalCaseSensitiveComparer
#include "System/OrdinalCaseSensitiveComparer.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.OrdinalCaseSensitiveComparer.GetObjectData
void System::OrdinalCaseSensitiveComparer::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalCaseSensitiveComparer::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::OrdinalCaseSensitiveComparer*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.OrdinalCaseSensitiveComparer.Compare
int System::OrdinalCaseSensitiveComparer::Compare(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalCaseSensitiveComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::OrdinalComparer*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.OrdinalCaseSensitiveComparer.Equals
bool System::OrdinalCaseSensitiveComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalCaseSensitiveComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::OrdinalComparer*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.OrdinalCaseSensitiveComparer.GetHashCode
int System::OrdinalCaseSensitiveComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalCaseSensitiveComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::OrdinalComparer*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
