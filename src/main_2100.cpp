// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BoingKit.BoingManager/ReactorUnregisterDelegate
#include "BoingKit/BoingManager_ReactorUnregisterDelegate.hpp"
// Including type: BoingKit.BoingReactor
#include "BoingKit/BoingReactor.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingManager/ReactorUnregisterDelegate.Invoke
void BoingKit::BoingManager::ReactorUnregisterDelegate::Invoke(::BoingKit::BoingReactor* reactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorUnregisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorUnregisterDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reactor);
}
// Autogenerated method: BoingKit.BoingManager/ReactorUnregisterDelegate.BeginInvoke
::System::IAsyncResult* BoingKit::BoingManager::ReactorUnregisterDelegate::BeginInvoke(::BoingKit::BoingReactor* reactor, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorUnregisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorUnregisterDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, reactor, callback, object);
}
// Autogenerated method: BoingKit.BoingManager/ReactorUnregisterDelegate.EndInvoke
void BoingKit::BoingManager::ReactorUnregisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorUnregisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorUnregisterDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BoingKit.BoingManager/ReactorFieldRegisterDelegate
#include "BoingKit/BoingManager_ReactorFieldRegisterDelegate.hpp"
// Including type: BoingKit.BoingReactorField
#include "BoingKit/BoingReactorField.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingManager/ReactorFieldRegisterDelegate.Invoke
void BoingKit::BoingManager::ReactorFieldRegisterDelegate::Invoke(::BoingKit::BoingReactorField* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldRegisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldRegisterDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldRegisterDelegate.BeginInvoke
::System::IAsyncResult* BoingKit::BoingManager::ReactorFieldRegisterDelegate::BeginInvoke(::BoingKit::BoingReactorField* field, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldRegisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldRegisterDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, field, callback, object);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldRegisterDelegate.EndInvoke
void BoingKit::BoingManager::ReactorFieldRegisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldRegisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldRegisterDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BoingKit.BoingManager/ReactorFieldUnregisterDelegate
#include "BoingKit/BoingManager_ReactorFieldUnregisterDelegate.hpp"
// Including type: BoingKit.BoingReactorField
#include "BoingKit/BoingReactorField.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingManager/ReactorFieldUnregisterDelegate.Invoke
void BoingKit::BoingManager::ReactorFieldUnregisterDelegate::Invoke(::BoingKit::BoingReactorField* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldUnregisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldUnregisterDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldUnregisterDelegate.BeginInvoke
::System::IAsyncResult* BoingKit::BoingManager::ReactorFieldUnregisterDelegate::BeginInvoke(::BoingKit::BoingReactorField* field, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldUnregisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldUnregisterDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, field, callback, object);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldUnregisterDelegate.EndInvoke
void BoingKit::BoingManager::ReactorFieldUnregisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldUnregisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldUnregisterDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BoingKit.BoingManager/ReactorFieldCPUSamplerRegisterDelegate
#include "BoingKit/BoingManager_ReactorFieldCPUSamplerRegisterDelegate.hpp"
// Including type: BoingKit.BoingReactorFieldCPUSampler
#include "BoingKit/BoingReactorFieldCPUSampler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingManager/ReactorFieldCPUSamplerRegisterDelegate.Invoke
void BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate::Invoke(::BoingKit::BoingReactorFieldCPUSampler* sampler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampler);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldCPUSamplerRegisterDelegate.BeginInvoke
::System::IAsyncResult* BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate::BeginInvoke(::BoingKit::BoingReactorFieldCPUSampler* sampler, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sampler, callback, object);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldCPUSamplerRegisterDelegate.EndInvoke
void BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldCPUSamplerRegisterDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BoingKit.BoingManager/ReactorFieldCPUSamplerUnregisterDelegate
#include "BoingKit/BoingManager_ReactorFieldCPUSamplerUnregisterDelegate.hpp"
// Including type: BoingKit.BoingReactorFieldCPUSampler
#include "BoingKit/BoingReactorFieldCPUSampler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingManager/ReactorFieldCPUSamplerUnregisterDelegate.Invoke
void BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate::Invoke(::BoingKit::BoingReactorFieldCPUSampler* sampler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampler);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldCPUSamplerUnregisterDelegate.BeginInvoke
::System::IAsyncResult* BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate::BeginInvoke(::BoingKit::BoingReactorFieldCPUSampler* sampler, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sampler, callback, object);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldCPUSamplerUnregisterDelegate.EndInvoke
void BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldCPUSamplerUnregisterDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BoingKit.BoingManager/ReactorFieldGPUSamplerRegisterDelegate
#include "BoingKit/BoingManager_ReactorFieldGPUSamplerRegisterDelegate.hpp"
// Including type: BoingKit.BoingReactorFieldGPUSampler
#include "BoingKit/BoingReactorFieldGPUSampler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingManager/ReactorFieldGPUSamplerRegisterDelegate.Invoke
void BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate::Invoke(::BoingKit::BoingReactorFieldGPUSampler* sampler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampler);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldGPUSamplerRegisterDelegate.BeginInvoke
::System::IAsyncResult* BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate::BeginInvoke(::BoingKit::BoingReactorFieldGPUSampler* sampler, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sampler, callback, object);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldGPUSamplerRegisterDelegate.EndInvoke
void BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldGPUSamplerRegisterDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BoingKit.BoingManager/ReactorFieldGPUSamplerUnregisterDelegate
#include "BoingKit/BoingManager_ReactorFieldGPUSamplerUnregisterDelegate.hpp"
// Including type: BoingKit.BoingReactorFieldGPUSampler
#include "BoingKit/BoingReactorFieldGPUSampler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingManager/ReactorFieldGPUSamplerUnregisterDelegate.Invoke
void BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate::Invoke(::BoingKit::BoingReactorFieldGPUSampler* sampler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampler);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldGPUSamplerUnregisterDelegate.BeginInvoke
::System::IAsyncResult* BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate::BeginInvoke(::BoingKit::BoingReactorFieldGPUSampler* sampler, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sampler, callback, object);
}
// Autogenerated method: BoingKit.BoingManager/ReactorFieldGPUSamplerUnregisterDelegate.EndInvoke
void BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::ReactorFieldGPUSamplerUnregisterDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BoingKit.BoingManager/BonesRegisterDelegate
#include "BoingKit/BoingManager_BonesRegisterDelegate.hpp"
// Including type: BoingKit.BoingBones
#include "BoingKit/BoingBones.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingManager/BonesRegisterDelegate.Invoke
void BoingKit::BoingManager::BonesRegisterDelegate::Invoke(::BoingKit::BoingBones* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::BonesRegisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::BonesRegisterDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bones);
}
// Autogenerated method: BoingKit.BoingManager/BonesRegisterDelegate.BeginInvoke
::System::IAsyncResult* BoingKit::BoingManager::BonesRegisterDelegate::BeginInvoke(::BoingKit::BoingBones* bones, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::BonesRegisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::BonesRegisterDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bones, callback, object);
}
// Autogenerated method: BoingKit.BoingManager/BonesRegisterDelegate.EndInvoke
void BoingKit::BoingManager::BonesRegisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::BonesRegisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::BonesRegisterDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BoingKit.BoingManager/BonesUnregisterDelegate
#include "BoingKit/BoingManager_BonesUnregisterDelegate.hpp"
// Including type: BoingKit.BoingBones
#include "BoingKit/BoingBones.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingManager/BonesUnregisterDelegate.Invoke
void BoingKit::BoingManager::BonesUnregisterDelegate::Invoke(::BoingKit::BoingBones* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::BonesUnregisterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::BonesUnregisterDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bones);
}
// Autogenerated method: BoingKit.BoingManager/BonesUnregisterDelegate.BeginInvoke
::System::IAsyncResult* BoingKit::BoingManager::BonesUnregisterDelegate::BeginInvoke(::BoingKit::BoingBones* bones, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::BonesUnregisterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::BonesUnregisterDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bones, callback, object);
}
// Autogenerated method: BoingKit.BoingManager/BonesUnregisterDelegate.EndInvoke
void BoingKit::BoingManager::BonesUnregisterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManager::BonesUnregisterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingManager::BonesUnregisterDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingManagerPostUpdatePump
#include "BoingKit/BoingManagerPostUpdatePump.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingManagerPostUpdatePump.Start
void BoingKit::BoingManagerPostUpdatePump::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManagerPostUpdatePump::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingManagerPostUpdatePump.TryDestroyDuplicate
bool BoingKit::BoingManagerPostUpdatePump::TryDestroyDuplicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManagerPostUpdatePump::TryDestroyDuplicate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDestroyDuplicate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingManagerPostUpdatePump.FixedUpdate
void BoingKit::BoingManagerPostUpdatePump::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManagerPostUpdatePump::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingManagerPostUpdatePump.Update
void BoingKit::BoingManagerPostUpdatePump::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManagerPostUpdatePump::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingManagerPostUpdatePump.LateUpdate
void BoingKit::BoingManagerPostUpdatePump::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManagerPostUpdatePump::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingManagerPreUpdatePump
#include "BoingKit/BoingManagerPreUpdatePump.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_lastPumpedFrame
[[deprecated("Use field access instead!")]] int& BoingKit::BoingManagerPreUpdatePump::dyn_m_lastPumpedFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManagerPreUpdatePump::dyn_m_lastPumpedFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastPumpedFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BoingManagerPreUpdatePump.FixedUpdate
void BoingKit::BoingManagerPreUpdatePump::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManagerPreUpdatePump::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingManagerPreUpdatePump.Update
void BoingKit::BoingManagerPreUpdatePump::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManagerPreUpdatePump::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingManagerPreUpdatePump.TryPump
void BoingKit::BoingManagerPreUpdatePump::TryPump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManagerPreUpdatePump::TryPump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryPump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingManagerPreUpdatePump.DoPump
void BoingKit::BoingManagerPreUpdatePump::DoPump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingManagerPreUpdatePump::DoPump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoPump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactor
#include "BoingKit/BoingReactor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingReactor.Register
void BoingKit::BoingReactor::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactor::Register");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingBehavior*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactor.Unregister
void BoingKit::BoingReactor::Unregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactor::Unregister");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingBehavior*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactor.PrepareExecute
void BoingKit::BoingReactor::PrepareExecute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactor::PrepareExecute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BoingKit::BoingBehavior*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactorField
#include "BoingKit/BoingReactorField.hpp"
// Including type: UnityEngine.ComputeBuffer
#include "UnityEngine/ComputeBuffer.hpp"
// Including type: UnityEngine.ComputeShader
#include "UnityEngine/ComputeShader.hpp"
// Including type: BoingKit.SharedBoingParams
#include "BoingKit/SharedBoingParams.hpp"
// Including type: BoingKit.BoingEffector
#include "BoingKit/BoingEffector.hpp"
// Including type: BoingKit.BoingReactorField/ShaderPropertyIdSet
#include "BoingKit/BoingReactorField_ShaderPropertyIdSet.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: BoingKit.BoingReactorField/ComputeKernelId
#include "BoingKit/BoingReactorField_ComputeKernelId.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private BoingKit.BoingReactorField/ShaderPropertyIdSet s_shaderPropertyId
::BoingKit::BoingReactorField::ShaderPropertyIdSet* BoingKit::BoingReactorField::_get_s_shaderPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::_get_s_shaderPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::ShaderPropertyIdSet*>("BoingKit", "BoingReactorField", "s_shaderPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private BoingKit.BoingReactorField/ShaderPropertyIdSet s_shaderPropertyId
void BoingKit::BoingReactorField::_set_s_shaderPropertyId(::BoingKit::BoingReactorField::ShaderPropertyIdSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::_set_s_shaderPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField", "s_shaderPropertyId", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single kPropagationFactor
float BoingKit::BoingReactorField::_get_kPropagationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::_get_kPropagationFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "BoingReactorField", "kPropagationFactor"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single kPropagationFactor
void BoingKit::BoingReactorField::_set_kPropagationFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::_set_kPropagationFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField", "kPropagationFactor", value));
}
// Autogenerated static field getter
// Get static field: static private BoingKit.BoingReactorField/ComputeKernelId s_computeKernelId
::BoingKit::BoingReactorField::ComputeKernelId* BoingKit::BoingReactorField::_get_s_computeKernelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::_get_s_computeKernelId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::ComputeKernelId*>("BoingKit", "BoingReactorField", "s_computeKernelId"));
}
// Autogenerated static field setter
// Set static field: static private BoingKit.BoingReactorField/ComputeKernelId s_computeKernelId
void BoingKit::BoingReactorField::_set_s_computeKernelId(::BoingKit::BoingReactorField::ComputeKernelId* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::_set_s_computeKernelId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField", "s_computeKernelId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] s_aCellOffset
::ArrayW<::UnityEngine::Vector3> BoingKit::BoingReactorField::_get_s_aCellOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::_get_s_aCellOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("BoingKit", "BoingReactorField", "s_aCellOffset"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] s_aCellOffset
void BoingKit::BoingReactorField::_set_s_aCellOffset(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::_set_s_aCellOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField", "s_aCellOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] s_aSqrtInv
::ArrayW<float> BoingKit::BoingReactorField::_get_s_aSqrtInv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::_get_s_aSqrtInv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("BoingKit", "BoingReactorField", "s_aSqrtInv"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] s_aSqrtInv
void BoingKit::BoingReactorField::_set_s_aSqrtInv(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::_set_s_aSqrtInv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField", "s_aSqrtInv", value));
}
// Autogenerated instance field getter
// Get instance field: private BoingKit.BoingReactorField/FieldParams m_fieldParams
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField::FieldParams& BoingKit::BoingReactorField::dyn_m_fieldParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_fieldParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fieldParams"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField::FieldParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingReactorField/HardwareModeEnum HardwareMode
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField::HardwareModeEnum& BoingKit::BoingReactorField::dyn_HardwareMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_HardwareMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HardwareMode"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField::HardwareModeEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoingKit.BoingReactorField/HardwareModeEnum m_hardwareMode
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField::HardwareModeEnum& BoingKit::BoingReactorField::dyn_m_hardwareMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_hardwareMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hardwareMode"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField::HardwareModeEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingReactorField/CellMoveModeEnum CellMoveMode
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField::CellMoveModeEnum& BoingKit::BoingReactorField::dyn_CellMoveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_CellMoveMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CellMoveMode"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField::CellMoveModeEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoingKit.BoingReactorField/CellMoveModeEnum m_cellMoveMode
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField::CellMoveModeEnum& BoingKit::BoingReactorField::dyn_m_cellMoveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_cellMoveMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cellMoveMode"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField::CellMoveModeEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CellSize
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::dyn_CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_CellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CellsX
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_CellsX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_CellsX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CellsX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CellsY
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_CellsY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_CellsY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CellsY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CellsZ
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_CellsZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_CellsZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CellsZ"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_cellsX
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_m_cellsX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_cellsX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cellsX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_cellsY
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_m_cellsY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_cellsY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cellsY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_cellsZ
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_m_cellsZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_cellsZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cellsZ"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_iCellBaseX
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_m_iCellBaseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_iCellBaseX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_iCellBaseX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_iCellBaseY
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_m_iCellBaseY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_iCellBaseY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_iCellBaseY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_iCellBaseZ
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_m_iCellBaseZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_iCellBaseZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_iCellBaseZ"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingReactorField/FalloffModeEnum FalloffMode
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField::FalloffModeEnum& BoingKit::BoingReactorField::dyn_FalloffMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_FalloffMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FalloffMode"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField::FalloffModeEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FalloffRatio
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::dyn_FalloffRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_FalloffRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FalloffRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingReactorField/FalloffDimensionsEnum FalloffDimensions
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField::FalloffDimensionsEnum& BoingKit::BoingReactorField::dyn_FalloffDimensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_FalloffDimensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FalloffDimensions"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField::FalloffDimensionsEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingEffector[] Effectors
[[deprecated("Use field access instead!")]] ::ArrayW<::BoingKit::BoingEffector*>& BoingKit::BoingReactorField::dyn_Effectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_Effectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Effectors"))->offset;
  return *reinterpret_cast<::ArrayW<::BoingKit::BoingEffector*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numEffectors
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_m_numEffectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_numEffectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numEffectors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoingKit.Aabb m_bounds
[[deprecated("Use field access instead!")]] ::BoingKit::Aabb& BoingKit::BoingReactorField::dyn_m_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bounds"))->offset;
  return *reinterpret_cast<::BoingKit::Aabb*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TwoDDistanceCheck
[[deprecated("Use field access instead!")]] bool& BoingKit::BoingReactorField::dyn_TwoDDistanceCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_TwoDDistanceCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TwoDDistanceCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TwoDPositionInfluence
[[deprecated("Use field access instead!")]] bool& BoingKit::BoingReactorField::dyn_TwoDPositionInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_TwoDPositionInfluence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TwoDPositionInfluence"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TwoDRotationInfluence
[[deprecated("Use field access instead!")]] bool& BoingKit::BoingReactorField::dyn_TwoDRotationInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_TwoDRotationInfluence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TwoDRotationInfluence"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnablePositionEffect
[[deprecated("Use field access instead!")]] bool& BoingKit::BoingReactorField::dyn_EnablePositionEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_EnablePositionEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnablePositionEffect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationEffect
[[deprecated("Use field access instead!")]] bool& BoingKit::BoingReactorField::dyn_EnableRotationEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_EnableRotationEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationEffect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean GlobalReactionUpVector
[[deprecated("Use field access instead!")]] bool& BoingKit::BoingReactorField::dyn_GlobalReactionUpVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_GlobalReactionUpVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GlobalReactionUpVector"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingWork/Params Params
[[deprecated("Use field access instead!")]] ::BoingKit::BoingWork::Params& BoingKit::BoingReactorField::dyn_Params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_Params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Params"))->offset;
  return *reinterpret_cast<::BoingKit::BoingWork::Params*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.SharedBoingParams SharedParams
[[deprecated("Use field access instead!")]] ::BoingKit::SharedBoingParams*& BoingKit::BoingReactorField::dyn_SharedParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_SharedParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SharedParams"))->offset;
  return *reinterpret_cast<::BoingKit::SharedBoingParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnablePropagation
[[deprecated("Use field access instead!")]] bool& BoingKit::BoingReactorField::dyn_EnablePropagation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_EnablePropagation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnablePropagation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PositionPropagation
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::dyn_PositionPropagation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_PositionPropagation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionPropagation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationPropagation
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::dyn_RotationPropagation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_RotationPropagation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationPropagation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PropagationDepth
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_PropagationDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_PropagationDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropagationDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AnchorPropagationAtBorder
[[deprecated("Use field access instead!")]] bool& BoingKit::BoingReactorField::dyn_AnchorPropagationAtBorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_AnchorPropagationAtBorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AnchorPropagationAtBorder"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoingKit.BoingWork/Params/InstanceData[,,] m_aCpuCell
[[deprecated("Use field access instead!")]] ::ArrayW<::BoingKit::BoingWork::Params::InstanceData>& BoingKit::BoingReactorField::dyn_m_aCpuCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_aCpuCell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aCpuCell"))->offset;
  return *reinterpret_cast<::ArrayW<::BoingKit::BoingWork::Params::InstanceData>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ComputeShader m_shader
[[deprecated("Use field access instead!")]] ::UnityEngine::ComputeShader*& BoingKit::BoingReactorField::dyn_m_shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_shader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_shader"))->offset;
  return *reinterpret_cast<::UnityEngine::ComputeShader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ComputeBuffer m_effectorIndexBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::ComputeBuffer*& BoingKit::BoingReactorField::dyn_m_effectorIndexBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_effectorIndexBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_effectorIndexBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::ComputeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ComputeBuffer m_reactorParamsBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::ComputeBuffer*& BoingKit::BoingReactorField::dyn_m_reactorParamsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_reactorParamsBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_reactorParamsBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::ComputeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ComputeBuffer m_fieldParamsBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::ComputeBuffer*& BoingKit::BoingReactorField::dyn_m_fieldParamsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_fieldParamsBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fieldParamsBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::ComputeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ComputeBuffer m_cellsBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::ComputeBuffer*& BoingKit::BoingReactorField::dyn_m_cellsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_cellsBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cellsBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::ComputeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_gpuResourceSetId
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::dyn_m_gpuResourceSetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_gpuResourceSetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gpuResourceSetId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_init
[[deprecated("Use field access instead!")]] bool& BoingKit::BoingReactorField::dyn_m_init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_init");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_init"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_gridCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingReactorField::dyn_m_gridCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_gridCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gridCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_qPrevGridCenterNorm
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingReactorField::dyn_m_qPrevGridCenterNorm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_qPrevGridCenterNorm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_qPrevGridCenterNorm"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_cellBufferNeedsReset
[[deprecated("Use field access instead!")]] bool& BoingKit::BoingReactorField::dyn_m_cellBufferNeedsReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_m_cellBufferNeedsReset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cellBufferNeedsReset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoingKit.BoingWork/Params[] s_aReactorParams
[[deprecated("Use field access instead!")]] ::ArrayW<::BoingKit::BoingWork::Params>& BoingKit::BoingReactorField::dyn_s_aReactorParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::dyn_s_aReactorParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s_aReactorParams"))->offset;
  return *reinterpret_cast<::ArrayW<::BoingKit::BoingWork::Params>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BoingReactorField.get_ShaderPropertyId
::BoingKit::BoingReactorField::ShaderPropertyIdSet* BoingKit::BoingReactorField::get_ShaderPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::get_ShaderPropertyId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingReactorField", "get_ShaderPropertyId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BoingKit::BoingReactorField::ShaderPropertyIdSet*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.UpdateShaderConstants
bool BoingKit::BoingReactorField::UpdateShaderConstants(::UnityEngine::MaterialPropertyBlock* props, float positionSampleMultiplier, float rotationSampleMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::UpdateShaderConstants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateShaderConstants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(props), ::il2cpp_utils::ExtractType(positionSampleMultiplier), ::il2cpp_utils::ExtractType(rotationSampleMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, props, positionSampleMultiplier, rotationSampleMultiplier);
}
// Autogenerated method: BoingKit.BoingReactorField.UpdateShaderConstants
bool BoingKit::BoingReactorField::UpdateShaderConstants(::UnityEngine::Material* material, float positionSampleMultiplier, float rotationSampleMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::UpdateShaderConstants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateShaderConstants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(positionSampleMultiplier), ::il2cpp_utils::ExtractType(rotationSampleMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, material, positionSampleMultiplier, rotationSampleMultiplier);
}
// Autogenerated method: BoingKit.BoingReactorField.get_GpuResourceSetId
int BoingKit::BoingReactorField::get_GpuResourceSetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::get_GpuResourceSetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GpuResourceSetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.Reboot
void BoingKit::BoingReactorField::Reboot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::Reboot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reboot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.OnEnable
void BoingKit::BoingReactorField::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.Start
void BoingKit::BoingReactorField::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.OnDisable
void BoingKit::BoingReactorField::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.DisposeCpuResources
void BoingKit::BoingReactorField::DisposeCpuResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::DisposeCpuResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeCpuResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.DisposeGpuResources
void BoingKit::BoingReactorField::DisposeGpuResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::DisposeGpuResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeGpuResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.SampleCpuGrid
bool BoingKit::BoingReactorField::SampleCpuGrid(::UnityEngine::Vector3 p, ByRef<::UnityEngine::Vector3> positionOffset, ByRef<::UnityEngine::Vector4> rotationOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::SampleCpuGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleCpuGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector4&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p, byref(positionOffset), byref(rotationOffset));
}
// Autogenerated method: BoingKit.BoingReactorField.UpdateFieldParamsGpu
void BoingKit::BoingReactorField::UpdateFieldParamsGpu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::UpdateFieldParamsGpu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFieldParamsGpu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.UpdateFlags
void BoingKit::BoingReactorField::UpdateFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::UpdateFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.UpdateBounds
void BoingKit::BoingReactorField::UpdateBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::UpdateBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.PrepareExecute
void BoingKit::BoingReactorField::PrepareExecute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::PrepareExecute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareExecute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.ValidateCpuResources
void BoingKit::BoingReactorField::ValidateCpuResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ValidateCpuResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCpuResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.ValidateGpuResources
void BoingKit::BoingReactorField::ValidateGpuResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ValidateGpuResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateGpuResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.FinishPrepareExecuteCpu
void BoingKit::BoingReactorField::FinishPrepareExecuteCpu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FinishPrepareExecuteCpu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishPrepareExecuteCpu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.FinishPrepareExecuteGpu
void BoingKit::BoingReactorField::FinishPrepareExecuteGpu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FinishPrepareExecuteGpu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishPrepareExecuteGpu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.Init
void BoingKit::BoingReactorField::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.Sanitize
void BoingKit::BoingReactorField::Sanitize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::Sanitize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sanitize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.HandleCellMove
void BoingKit::BoingReactorField::HandleCellMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::HandleCellMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.InitPropagationCpu
void BoingKit::BoingReactorField::InitPropagationCpu(ByRef<::BoingKit::BoingWork::Params::InstanceData> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::InitPropagationCpu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitPropagationCpu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(data));
}
// Autogenerated method: BoingKit.BoingReactorField.PropagateSpringCpu
void BoingKit::BoingReactorField::PropagateSpringCpu(ByRef<::BoingKit::BoingWork::Params::InstanceData> data, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::PropagateSpringCpu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PropagateSpringCpu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(data), dt);
}
// Autogenerated method: BoingKit.BoingReactorField.ExtendPropagationBorder
void BoingKit::BoingReactorField::ExtendPropagationBorder(ByRef<::BoingKit::BoingWork::Params::InstanceData> data, float weight, int adjDeltaX, int adjDeltaY, int adjDeltaZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ExtendPropagationBorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtendPropagationBorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(adjDeltaX), ::il2cpp_utils::ExtractType(adjDeltaY), ::il2cpp_utils::ExtractType(adjDeltaZ)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(data), weight, adjDeltaX, adjDeltaY, adjDeltaZ);
}
// Autogenerated method: BoingKit.BoingReactorField.AccumulatePropagationWeightedNeighbor
void BoingKit::BoingReactorField::AccumulatePropagationWeightedNeighbor(ByRef<::BoingKit::BoingWork::Params::InstanceData> data, ByRef<::BoingKit::BoingWork::Params::InstanceData> neighbor, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::AccumulatePropagationWeightedNeighbor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AccumulatePropagationWeightedNeighbor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(neighbor), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(data), byref(neighbor), weight);
}
// Autogenerated method: BoingKit.BoingReactorField.GatherPropagation
void BoingKit::BoingReactorField::GatherPropagation(ByRef<::BoingKit::BoingWork::Params::InstanceData> data, float weightSum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::GatherPropagation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherPropagation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(weightSum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(data), weightSum);
}
// Autogenerated method: BoingKit.BoingReactorField.AnchorPropagationBorder
void BoingKit::BoingReactorField::AnchorPropagationBorder(ByRef<::BoingKit::BoingWork::Params::InstanceData> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::AnchorPropagationBorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnchorPropagationBorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(data));
}
// Autogenerated method: BoingKit.BoingReactorField.PropagateCpu
void BoingKit::BoingReactorField::PropagateCpu(float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::PropagateCpu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PropagateCpu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt);
}
// Autogenerated method: BoingKit.BoingReactorField.WrapCpu
void BoingKit::BoingReactorField::WrapCpu(int deltaX, int deltaY, int deltaZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::WrapCpu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WrapCpu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaX), ::il2cpp_utils::ExtractType(deltaY), ::il2cpp_utils::ExtractType(deltaZ)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaX, deltaY, deltaZ);
}
// Autogenerated method: BoingKit.BoingReactorField.WrapGpu
void BoingKit::BoingReactorField::WrapGpu(int deltaX, int deltaY, int deltaZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::WrapGpu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WrapGpu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaX), ::il2cpp_utils::ExtractType(deltaY), ::il2cpp_utils::ExtractType(deltaZ)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaX, deltaY, deltaZ);
}
// Autogenerated method: BoingKit.BoingReactorField.ExecuteCpu
void BoingKit::BoingReactorField::ExecuteCpu(float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ExecuteCpu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteCpu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt);
}
// Autogenerated method: BoingKit.BoingReactorField.ExecuteGpu
void BoingKit::BoingReactorField::ExecuteGpu(float dt, ::UnityEngine::ComputeBuffer* effectorParamsBuffer, ::System::Collections::Generic::Dictionary_2<int, int>* effectorParamsIndexMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ExecuteGpu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteGpu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(effectorParamsBuffer), ::il2cpp_utils::ExtractType(effectorParamsIndexMap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt, effectorParamsBuffer, effectorParamsIndexMap);
}
// Autogenerated method: BoingKit.BoingReactorField.OnDrawGizmosSelected
void BoingKit::BoingReactorField::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.DrawGizmos
void BoingKit::BoingReactorField::DrawGizmos(bool drawEffectors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::DrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(drawEffectors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, drawEffectors);
}
// Autogenerated method: BoingKit.BoingReactorField.GetGridCenter
::UnityEngine::Vector3 BoingKit::BoingReactorField::GetGridCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::GetGridCenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGridCenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField.QuantizeNorm
::UnityEngine::Vector3 BoingKit::BoingReactorField::QuantizeNorm(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::QuantizeNorm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuantizeNorm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: BoingKit.BoingReactorField.GetCellCenterOffset
::UnityEngine::Vector3 BoingKit::BoingReactorField::GetCellCenterOffset(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::GetCellCenterOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCellCenterOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: BoingKit.BoingReactorField.ResolveCellIndex
void BoingKit::BoingReactorField::ResolveCellIndex(int x, int y, int z, int baseMult, ByRef<int> resX, ByRef<int> resY, ByRef<int> resZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ResolveCellIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveCellIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(baseMult), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z, baseMult, byref(resX), byref(resY), byref(resZ));
}
// Autogenerated method: BoingKit.BoingReactorField..cctor
void BoingKit::BoingReactorField::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingReactorField", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactorField/HardwareModeEnum
#include "BoingKit/BoingReactorField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/HardwareModeEnum CPU
::BoingKit::BoingReactorField::HardwareModeEnum BoingKit::BoingReactorField::HardwareModeEnum::_get_CPU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::HardwareModeEnum::_get_CPU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::HardwareModeEnum>("BoingKit", "BoingReactorField/HardwareModeEnum", "CPU"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/HardwareModeEnum CPU
void BoingKit::BoingReactorField::HardwareModeEnum::_set_CPU(::BoingKit::BoingReactorField::HardwareModeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::HardwareModeEnum::_set_CPU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/HardwareModeEnum", "CPU", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/HardwareModeEnum GPU
::BoingKit::BoingReactorField::HardwareModeEnum BoingKit::BoingReactorField::HardwareModeEnum::_get_GPU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::HardwareModeEnum::_get_GPU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::HardwareModeEnum>("BoingKit", "BoingReactorField/HardwareModeEnum", "GPU"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/HardwareModeEnum GPU
void BoingKit::BoingReactorField::HardwareModeEnum::_set_GPU(::BoingKit::BoingReactorField::HardwareModeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::HardwareModeEnum::_set_GPU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/HardwareModeEnum", "GPU", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::HardwareModeEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::HardwareModeEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactorField/CellMoveModeEnum
#include "BoingKit/BoingReactorField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/CellMoveModeEnum Follow
::BoingKit::BoingReactorField::CellMoveModeEnum BoingKit::BoingReactorField::CellMoveModeEnum::_get_Follow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::CellMoveModeEnum::_get_Follow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::CellMoveModeEnum>("BoingKit", "BoingReactorField/CellMoveModeEnum", "Follow"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/CellMoveModeEnum Follow
void BoingKit::BoingReactorField::CellMoveModeEnum::_set_Follow(::BoingKit::BoingReactorField::CellMoveModeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::CellMoveModeEnum::_set_Follow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/CellMoveModeEnum", "Follow", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/CellMoveModeEnum WrapAround
::BoingKit::BoingReactorField::CellMoveModeEnum BoingKit::BoingReactorField::CellMoveModeEnum::_get_WrapAround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::CellMoveModeEnum::_get_WrapAround");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::CellMoveModeEnum>("BoingKit", "BoingReactorField/CellMoveModeEnum", "WrapAround"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/CellMoveModeEnum WrapAround
void BoingKit::BoingReactorField::CellMoveModeEnum::_set_WrapAround(::BoingKit::BoingReactorField::CellMoveModeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::CellMoveModeEnum::_set_WrapAround");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/CellMoveModeEnum", "WrapAround", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::CellMoveModeEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::CellMoveModeEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactorField/FalloffModeEnum
#include "BoingKit/BoingReactorField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/FalloffModeEnum None
::BoingKit::BoingReactorField::FalloffModeEnum BoingKit::BoingReactorField::FalloffModeEnum::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffModeEnum::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::FalloffModeEnum>("BoingKit", "BoingReactorField/FalloffModeEnum", "None"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/FalloffModeEnum None
void BoingKit::BoingReactorField::FalloffModeEnum::_set_None(::BoingKit::BoingReactorField::FalloffModeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffModeEnum::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/FalloffModeEnum", "None", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/FalloffModeEnum Circle
::BoingKit::BoingReactorField::FalloffModeEnum BoingKit::BoingReactorField::FalloffModeEnum::_get_Circle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffModeEnum::_get_Circle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::FalloffModeEnum>("BoingKit", "BoingReactorField/FalloffModeEnum", "Circle"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/FalloffModeEnum Circle
void BoingKit::BoingReactorField::FalloffModeEnum::_set_Circle(::BoingKit::BoingReactorField::FalloffModeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffModeEnum::_set_Circle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/FalloffModeEnum", "Circle", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/FalloffModeEnum Square
::BoingKit::BoingReactorField::FalloffModeEnum BoingKit::BoingReactorField::FalloffModeEnum::_get_Square() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffModeEnum::_get_Square");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::FalloffModeEnum>("BoingKit", "BoingReactorField/FalloffModeEnum", "Square"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/FalloffModeEnum Square
void BoingKit::BoingReactorField::FalloffModeEnum::_set_Square(::BoingKit::BoingReactorField::FalloffModeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffModeEnum::_set_Square");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/FalloffModeEnum", "Square", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FalloffModeEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffModeEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactorField/FalloffDimensionsEnum
#include "BoingKit/BoingReactorField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/FalloffDimensionsEnum XYZ
::BoingKit::BoingReactorField::FalloffDimensionsEnum BoingKit::BoingReactorField::FalloffDimensionsEnum::_get_XYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffDimensionsEnum::_get_XYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::FalloffDimensionsEnum>("BoingKit", "BoingReactorField/FalloffDimensionsEnum", "XYZ"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/FalloffDimensionsEnum XYZ
void BoingKit::BoingReactorField::FalloffDimensionsEnum::_set_XYZ(::BoingKit::BoingReactorField::FalloffDimensionsEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffDimensionsEnum::_set_XYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/FalloffDimensionsEnum", "XYZ", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/FalloffDimensionsEnum XY
::BoingKit::BoingReactorField::FalloffDimensionsEnum BoingKit::BoingReactorField::FalloffDimensionsEnum::_get_XY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffDimensionsEnum::_get_XY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::FalloffDimensionsEnum>("BoingKit", "BoingReactorField/FalloffDimensionsEnum", "XY"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/FalloffDimensionsEnum XY
void BoingKit::BoingReactorField::FalloffDimensionsEnum::_set_XY(::BoingKit::BoingReactorField::FalloffDimensionsEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffDimensionsEnum::_set_XY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/FalloffDimensionsEnum", "XY", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/FalloffDimensionsEnum XZ
::BoingKit::BoingReactorField::FalloffDimensionsEnum BoingKit::BoingReactorField::FalloffDimensionsEnum::_get_XZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffDimensionsEnum::_get_XZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::FalloffDimensionsEnum>("BoingKit", "BoingReactorField/FalloffDimensionsEnum", "XZ"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/FalloffDimensionsEnum XZ
void BoingKit::BoingReactorField::FalloffDimensionsEnum::_set_XZ(::BoingKit::BoingReactorField::FalloffDimensionsEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffDimensionsEnum::_set_XZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/FalloffDimensionsEnum", "XZ", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingReactorField/FalloffDimensionsEnum YZ
::BoingKit::BoingReactorField::FalloffDimensionsEnum BoingKit::BoingReactorField::FalloffDimensionsEnum::_get_YZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffDimensionsEnum::_get_YZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingReactorField::FalloffDimensionsEnum>("BoingKit", "BoingReactorField/FalloffDimensionsEnum", "YZ"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingReactorField/FalloffDimensionsEnum YZ
void BoingKit::BoingReactorField::FalloffDimensionsEnum::_set_YZ(::BoingKit::BoingReactorField::FalloffDimensionsEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffDimensionsEnum::_set_YZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/FalloffDimensionsEnum", "YZ", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FalloffDimensionsEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FalloffDimensionsEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactorField/ShaderPropertyIdSet
#include "BoingKit/BoingReactorField_ShaderPropertyIdSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 MoveParams
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_MoveParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_MoveParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MoveParams"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WrapParams
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_WrapParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_WrapParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WrapParams"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Effectors
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_Effectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_Effectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Effectors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 EffectorIndices
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_EffectorIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_EffectorIndices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EffectorIndices"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ReactorParams
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_ReactorParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_ReactorParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReactorParams"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ComputeFieldParams
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_ComputeFieldParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_ComputeFieldParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ComputeFieldParams"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ComputeCells
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_ComputeCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_ComputeCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ComputeCells"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RenderFieldParams
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_RenderFieldParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_RenderFieldParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RenderFieldParams"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RenderCells
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_RenderCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_RenderCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RenderCells"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PositionSampleMultiplier
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_PositionSampleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_PositionSampleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionSampleMultiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RotationSampleMultiplier
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_RotationSampleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_RotationSampleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationSampleMultiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PropagationParams
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_PropagationParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ShaderPropertyIdSet::dyn_PropagationParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropagationParams"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactorField/FieldParams
#include "BoingKit/BoingReactorField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 Stride
int BoingKit::BoingReactorField::FieldParams::_get_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::_get_Stride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "BoingReactorField/FieldParams", "Stride"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 Stride
void BoingKit::BoingReactorField::FieldParams::_set_Stride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::_set_Stride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingReactorField/FieldParams", "Stride", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CellsX
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_CellsX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_CellsX");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CellsX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CellsY
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_CellsY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_CellsY");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CellsY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CellsZ
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_CellsZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_CellsZ");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CellsZ"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumEffectors
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_NumEffectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_NumEffectors");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumEffectors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 iCellBaseX
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_iCellBaseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_iCellBaseX");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iCellBaseX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 iCellBaseY
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_iCellBaseY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_iCellBaseY");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iCellBaseY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 iCellBaseZ
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_iCellBaseZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_iCellBaseZ");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iCellBaseZ"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_padding0
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_m_padding0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_m_padding0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding0"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FalloffMode
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_FalloffMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_FalloffMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FalloffMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FalloffDimensions
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_FalloffDimensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_FalloffDimensions");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FalloffDimensions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PropagationDepth
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_PropagationDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_PropagationDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropagationDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_padding1
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::FieldParams::dyn_m_padding1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_m_padding1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 GridCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingReactorField::FieldParams::dyn_GridCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_GridCenter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GridCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding3
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::FieldParams::dyn_m_padding3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_m_padding3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 UpWs
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingReactorField::FieldParams::dyn_UpWs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_UpWs");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpWs"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding2
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::FieldParams::dyn_m_padding2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_m_padding2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 FieldPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingReactorField::FieldParams::dyn_FieldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_FieldPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FieldPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_padding4
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::FieldParams::dyn_m_padding4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_m_padding4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FalloffRatio
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::FieldParams::dyn_FalloffRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_FalloffRatio");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FalloffRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CellSize
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::FieldParams::dyn_CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_CellSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DeltaTime
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::FieldParams::dyn_DeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_DeltaTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding5
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorField::FieldParams::dyn_m_padding5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::dyn_m_padding5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BoingReactorField/FieldParams.SuppressWarnings
void BoingKit::BoingReactorField::FieldParams::SuppressWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::SuppressWarnings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SuppressWarnings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorField/FieldParams..cctor
void BoingKit::BoingReactorField::FieldParams::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::FieldParams::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingReactorField/FieldParams", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactorField/ComputeKernelId
#include "BoingKit/BoingReactorField_ComputeKernelId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 InitKernel
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ComputeKernelId::dyn_InitKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ComputeKernelId::dyn_InitKernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitKernel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MoveKernel
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ComputeKernelId::dyn_MoveKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ComputeKernelId::dyn_MoveKernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MoveKernel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WrapXKernel
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ComputeKernelId::dyn_WrapXKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ComputeKernelId::dyn_WrapXKernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WrapXKernel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WrapYKernel
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ComputeKernelId::dyn_WrapYKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ComputeKernelId::dyn_WrapYKernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WrapYKernel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WrapZKernel
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ComputeKernelId::dyn_WrapZKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ComputeKernelId::dyn_WrapZKernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WrapZKernel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ExecuteKernel
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorField::ComputeKernelId::dyn_ExecuteKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorField::ComputeKernelId::dyn_ExecuteKernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExecuteKernel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactorFieldCPUSampler
#include "BoingKit/BoingReactorFieldCPUSampler.hpp"
// Including type: BoingKit.BoingReactorField
#include "BoingKit/BoingReactorField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingReactorField ReactorField
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField*& BoingKit::BoingReactorFieldCPUSampler::dyn_ReactorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldCPUSampler::dyn_ReactorField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReactorField"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingManager/UpdateMode UpdateMode
[[deprecated("Use field access instead!")]] ::BoingKit::BoingManager::UpdateMode& BoingKit::BoingReactorFieldCPUSampler::dyn_UpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldCPUSampler::dyn_UpdateMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateMode"))->offset;
  return *reinterpret_cast<::BoingKit::BoingManager::UpdateMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PositionSampleMultiplier
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorFieldCPUSampler::dyn_PositionSampleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldCPUSampler::dyn_PositionSampleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionSampleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationSampleMultiplier
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorFieldCPUSampler::dyn_RotationSampleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldCPUSampler::dyn_RotationSampleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationSampleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_objPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingReactorFieldCPUSampler::dyn_m_objPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldCPUSampler::dyn_m_objPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_objRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& BoingKit::BoingReactorFieldCPUSampler::dyn_m_objRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldCPUSampler::dyn_m_objRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BoingReactorFieldCPUSampler.OnEnable
void BoingKit::BoingReactorFieldCPUSampler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldCPUSampler::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorFieldCPUSampler.OnDisable
void BoingKit::BoingReactorFieldCPUSampler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldCPUSampler::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorFieldCPUSampler.SampleFromField
void BoingKit::BoingReactorFieldCPUSampler::SampleFromField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldCPUSampler::SampleFromField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleFromField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorFieldCPUSampler.Restore
void BoingKit::BoingReactorFieldCPUSampler::Restore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldCPUSampler::Restore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Restore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingReactorFieldGPUSampler
#include "BoingKit/BoingReactorFieldGPUSampler.hpp"
// Including type: BoingKit.BoingReactorField
#include "BoingKit/BoingReactorField.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingReactorField ReactorField
[[deprecated("Use field access instead!")]] ::BoingKit::BoingReactorField*& BoingKit::BoingReactorFieldGPUSampler::dyn_ReactorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldGPUSampler::dyn_ReactorField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReactorField"))->offset;
  return *reinterpret_cast<::BoingKit::BoingReactorField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PositionSampleMultiplier
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorFieldGPUSampler::dyn_PositionSampleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldGPUSampler::dyn_PositionSampleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionSampleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationSampleMultiplier
[[deprecated("Use field access instead!")]] float& BoingKit::BoingReactorFieldGPUSampler::dyn_RotationSampleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldGPUSampler::dyn_RotationSampleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationSampleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock m_matProps
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& BoingKit::BoingReactorFieldGPUSampler::dyn_m_matProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldGPUSampler::dyn_m_matProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matProps"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_fieldResourceSetId
[[deprecated("Use field access instead!")]] int& BoingKit::BoingReactorFieldGPUSampler::dyn_m_fieldResourceSetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldGPUSampler::dyn_m_fieldResourceSetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fieldResourceSetId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BoingReactorFieldGPUSampler.OnEnable
void BoingKit::BoingReactorFieldGPUSampler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldGPUSampler::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorFieldGPUSampler.OnDisable
void BoingKit::BoingReactorFieldGPUSampler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldGPUSampler::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingReactorFieldGPUSampler.Update
void BoingKit::BoingReactorFieldGPUSampler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingReactorFieldGPUSampler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingWork
#include "BoingKit/BoingWork.hpp"
// Including type: BoingKit.BoingWork/EffectorFlags
#include "BoingKit/BoingWork_EffectorFlags.hpp"
// Including type: BoingKit.BoingWork/ReactorFlags
#include "BoingKit/BoingWork_ReactorFlags.hpp"
// Including type: BoingKit.BoingWork/Params
#include "BoingKit/BoingWork_Params.hpp"
// Including type: BoingKit.BoingWork/Output
#include "BoingKit/BoingWork_Output.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BoingKit.BoingBehavior
#include "BoingKit/BoingBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingWork.ComputeTranslationalResults
::UnityEngine::Vector3 BoingKit::BoingWork::ComputeTranslationalResults(::UnityEngine::Transform* t, ::UnityEngine::Vector3 src, ::UnityEngine::Vector3 dst, ::BoingKit::BoingBehavior* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ComputeTranslationalResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWork", "ComputeTranslationalResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, src, dst, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingWork/EffectorFlags
#include "BoingKit/BoingWork_EffectorFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/EffectorFlags ContinuousMotion
::BoingKit::BoingWork::EffectorFlags BoingKit::BoingWork::EffectorFlags::_get_ContinuousMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::EffectorFlags::_get_ContinuousMotion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::EffectorFlags>("BoingKit", "BoingWork/EffectorFlags", "ContinuousMotion"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/EffectorFlags ContinuousMotion
void BoingKit::BoingWork::EffectorFlags::_set_ContinuousMotion(::BoingKit::BoingWork::EffectorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::EffectorFlags::_set_ContinuousMotion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/EffectorFlags", "ContinuousMotion", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::EffectorFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::EffectorFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingWork/ReactorFlags
#include "BoingKit/BoingWork_ReactorFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags TwoDDistanceCheck
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_TwoDDistanceCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_TwoDDistanceCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "TwoDDistanceCheck"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags TwoDDistanceCheck
void BoingKit::BoingWork::ReactorFlags::_set_TwoDDistanceCheck(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_TwoDDistanceCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "TwoDDistanceCheck", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags TwoDPositionInfluence
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_TwoDPositionInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_TwoDPositionInfluence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "TwoDPositionInfluence"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags TwoDPositionInfluence
void BoingKit::BoingWork::ReactorFlags::_set_TwoDPositionInfluence(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_TwoDPositionInfluence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "TwoDPositionInfluence", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags TwoDRotationInfluence
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_TwoDRotationInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_TwoDRotationInfluence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "TwoDRotationInfluence"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags TwoDRotationInfluence
void BoingKit::BoingWork::ReactorFlags::_set_TwoDRotationInfluence(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_TwoDRotationInfluence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "TwoDRotationInfluence", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags EnablePositionEffect
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_EnablePositionEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_EnablePositionEffect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "EnablePositionEffect"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags EnablePositionEffect
void BoingKit::BoingWork::ReactorFlags::_set_EnablePositionEffect(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_EnablePositionEffect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "EnablePositionEffect", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags EnableRotationEffect
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_EnableRotationEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_EnableRotationEffect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "EnableRotationEffect"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags EnableRotationEffect
void BoingKit::BoingWork::ReactorFlags::_set_EnableRotationEffect(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_EnableRotationEffect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "EnableRotationEffect", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags EnableScaleEffect
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_EnableScaleEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_EnableScaleEffect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "EnableScaleEffect"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags EnableScaleEffect
void BoingKit::BoingWork::ReactorFlags::_set_EnableScaleEffect(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_EnableScaleEffect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "EnableScaleEffect", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags GlobalReactionUpVector
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_GlobalReactionUpVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_GlobalReactionUpVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "GlobalReactionUpVector"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags GlobalReactionUpVector
void BoingKit::BoingWork::ReactorFlags::_set_GlobalReactionUpVector(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_GlobalReactionUpVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "GlobalReactionUpVector", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags EnablePropagation
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_EnablePropagation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_EnablePropagation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "EnablePropagation"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags EnablePropagation
void BoingKit::BoingWork::ReactorFlags::_set_EnablePropagation(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_EnablePropagation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "EnablePropagation", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags AnchorPropagationAtBorder
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_AnchorPropagationAtBorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_AnchorPropagationAtBorder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "AnchorPropagationAtBorder"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags AnchorPropagationAtBorder
void BoingKit::BoingWork::ReactorFlags::_set_AnchorPropagationAtBorder(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_AnchorPropagationAtBorder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "AnchorPropagationAtBorder", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags FixedUpdate
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_FixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "FixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags FixedUpdate
void BoingKit::BoingWork::ReactorFlags::_set_FixedUpdate(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_FixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "FixedUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags EarlyUpdate
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_EarlyUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_EarlyUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "EarlyUpdate"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags EarlyUpdate
void BoingKit::BoingWork::ReactorFlags::_set_EarlyUpdate(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_EarlyUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "EarlyUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.BoingWork/ReactorFlags LateUpdate
::BoingKit::BoingWork::ReactorFlags BoingKit::BoingWork::ReactorFlags::_get_LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_get_LateUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::BoingWork::ReactorFlags>("BoingKit", "BoingWork/ReactorFlags", "LateUpdate"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.BoingWork/ReactorFlags LateUpdate
void BoingKit::BoingWork::ReactorFlags::_set_LateUpdate(::BoingKit::BoingWork::ReactorFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::_set_LateUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/ReactorFlags", "LateUpdate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::ReactorFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::ReactorFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingWork/Params
#include "BoingKit/BoingWork_Params.hpp"
// Including type: BoingKit.BoingBones
#include "BoingKit/BoingBones.hpp"
// Including type: BoingKit.BoingEffector/Params
#include "BoingKit/BoingEffector_Params.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 Stride
int BoingKit::BoingWork::Params::_get_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::_get_Stride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "BoingWork/Params", "Stride"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 Stride
void BoingKit::BoingWork::Params::_set_Stride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::_set_Stride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/Params", "Stride", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InstanceID
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Params::dyn_InstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_InstanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.Bits32 Bits
[[deprecated("Use field access instead!")]] ::BoingKit::Bits32& BoingKit::BoingWork::Params::dyn_Bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_Bits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bits"))->offset;
  return *reinterpret_cast<::BoingKit::Bits32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.TwoDPlaneEnum TwoDPlane
[[deprecated("Use field access instead!")]] ::BoingKit::TwoDPlaneEnum& BoingKit::BoingWork::Params::dyn_TwoDPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_TwoDPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TwoDPlane"))->offset;
  return *reinterpret_cast<::BoingKit::TwoDPlaneEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_padding0
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Params::dyn_m_padding0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_m_padding0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding0"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.ParameterMode PositionParameterMode
[[deprecated("Use field access instead!")]] ::BoingKit::ParameterMode& BoingKit::BoingWork::Params::dyn_PositionParameterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_PositionParameterMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionParameterMode"))->offset;
  return *reinterpret_cast<::BoingKit::ParameterMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.ParameterMode RotationParameterMode
[[deprecated("Use field access instead!")]] ::BoingKit::ParameterMode& BoingKit::BoingWork::Params::dyn_RotationParameterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_RotationParameterMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationParameterMode"))->offset;
  return *reinterpret_cast<::BoingKit::ParameterMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.ParameterMode ScaleParameterMode
[[deprecated("Use field access instead!")]] ::BoingKit::ParameterMode& BoingKit::BoingWork::Params::dyn_ScaleParameterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_ScaleParameterMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleParameterMode"))->offset;
  return *reinterpret_cast<::BoingKit::ParameterMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_padding1
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Params::dyn_m_padding1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_m_padding1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PositionExponentialHalfLife
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_PositionExponentialHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_PositionExponentialHalfLife");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionExponentialHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PositionOscillationHalfLife
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_PositionOscillationHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_PositionOscillationHalfLife");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionOscillationHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PositionOscillationFrequency
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_PositionOscillationFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_PositionOscillationFrequency");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionOscillationFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PositionOscillationDampingRatio
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_PositionOscillationDampingRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_PositionOscillationDampingRatio");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionOscillationDampingRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MoveReactionMultiplier
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_MoveReactionMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_MoveReactionMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MoveReactionMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LinearImpulseMultiplier
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_LinearImpulseMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_LinearImpulseMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LinearImpulseMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationExponentialHalfLife
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_RotationExponentialHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_RotationExponentialHalfLife");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationExponentialHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationOscillationHalfLife
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_RotationOscillationHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_RotationOscillationHalfLife");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationOscillationHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationOscillationFrequency
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_RotationOscillationFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_RotationOscillationFrequency");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationOscillationFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationOscillationDampingRatio
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_RotationOscillationDampingRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_RotationOscillationDampingRatio");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationOscillationDampingRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationReactionMultiplier
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_RotationReactionMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_RotationReactionMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationReactionMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AngularImpulseMultiplier
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_AngularImpulseMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_AngularImpulseMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AngularImpulseMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ScaleExponentialHalfLife
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_ScaleExponentialHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_ScaleExponentialHalfLife");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleExponentialHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ScaleOscillationHalfLife
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_ScaleOscillationHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_ScaleOscillationHalfLife");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleOscillationHalfLife"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ScaleOscillationFrequency
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_ScaleOscillationFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_ScaleOscillationFrequency");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleOscillationFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ScaleOscillationDampingRatio
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_ScaleOscillationDampingRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_ScaleOscillationDampingRatio");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleOscillationDampingRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 RotationReactionUp
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingWork::Params::dyn_RotationReactionUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_RotationReactionUp");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationReactionUp"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding2
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::dyn_m_padding2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_m_padding2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingWork/Params/InstanceData Instance
[[deprecated("Use field access instead!")]] ::BoingKit::BoingWork::Params::InstanceData& BoingKit::BoingWork::Params::dyn_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::dyn_Instance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Instance"))->offset;
  return *reinterpret_cast<::BoingKit::BoingWork::Params::InstanceData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BoingWork/Params.Copy
void BoingKit::BoingWork::Params::Copy(ByRef<::BoingKit::BoingWork::Params> from, ByRef<::BoingKit::BoingWork::Params> to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWork/Params", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(from), byref(to));
}
// Autogenerated method: BoingKit.BoingWork/Params.Init
void BoingKit::BoingWork::Params::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingWork/Params.AccumulateTarget
void BoingKit::BoingWork::Params::AccumulateTarget(ByRef<::BoingKit::BoingEffector::Params> effector, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::AccumulateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AccumulateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effector), ::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(effector), dt);
}
// Autogenerated method: BoingKit.BoingWork/Params.EndAccumulateTargets
void BoingKit::BoingWork::Params::EndAccumulateTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::EndAccumulateTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EndAccumulateTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingWork/Params.Execute
void BoingKit::BoingWork::Params::Execute(float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt);
}
// Autogenerated method: BoingKit.BoingWork/Params.Execute
void BoingKit::BoingWork::Params::Execute(::BoingKit::BoingBones* bones, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bones, dt);
}
// Autogenerated method: BoingKit.BoingWork/Params.PullResults
void BoingKit::BoingWork::Params::PullResults(::BoingKit::BoingBones* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::PullResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PullResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bones);
}
// Autogenerated method: BoingKit.BoingWork/Params.SuppressWarnings
void BoingKit::BoingWork::Params::SuppressWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::SuppressWarnings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SuppressWarnings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingWork/Params..cctor
void BoingKit::BoingWork::Params::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWork/Params", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingWork/Params/InstanceData
#include "BoingKit/BoingWork_Params.hpp"
// Including type: BoingKit.BoingBones
#include "BoingKit/BoingBones.hpp"
// Including type: BoingKit.BoingEffector/Params
#include "BoingKit/BoingEffector_Params.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 Stride
int BoingKit::BoingWork::Params::InstanceData::_get_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::_get_Stride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "BoingWork/Params/InstanceData", "Stride"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 Stride
void BoingKit::BoingWork::Params::InstanceData::_set_Stride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::_set_Stride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/Params/InstanceData", "Stride", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 PositionTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingWork::Params::InstanceData::dyn_PositionTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_PositionTarget");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding0
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::InstanceData::dyn_m_padding0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_m_padding0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding0"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 PositionOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingWork::Params::InstanceData::dyn_PositionOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_PositionOrigin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding1
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::InstanceData::dyn_m_padding1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_m_padding1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 RotationTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& BoingKit::BoingWork::Params::InstanceData::dyn_RotationTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_RotationTarget");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 RotationOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& BoingKit::BoingWork::Params::InstanceData::dyn_RotationOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_RotationOrigin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 ScaleTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingWork::Params::InstanceData::dyn_ScaleTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_ScaleTarget");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding2
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::InstanceData::dyn_m_padding2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_m_padding2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numEffectors
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Params::InstanceData::dyn_m_numEffectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_m_numEffectors");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numEffectors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_instantAccumulation
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Params::InstanceData::dyn_m_instantAccumulation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_m_instantAccumulation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_instantAccumulation"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_padding3
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Params::InstanceData::dyn_m_padding3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_m_padding3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_padding4
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Params::InstanceData::dyn_m_padding4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_m_padding4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_upWs
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingWork::Params::InstanceData::dyn_m_upWs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_m_upWs");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_upWs"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_minScale
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::InstanceData::dyn_m_minScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_m_minScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.Vector3Spring PositionSpring
[[deprecated("Use field access instead!")]] ::BoingKit::Vector3Spring& BoingKit::BoingWork::Params::InstanceData::dyn_PositionSpring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_PositionSpring");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionSpring"))->offset;
  return *reinterpret_cast<::BoingKit::Vector3Spring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.QuaternionSpring RotationSpring
[[deprecated("Use field access instead!")]] ::BoingKit::QuaternionSpring& BoingKit::BoingWork::Params::InstanceData::dyn_RotationSpring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_RotationSpring");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationSpring"))->offset;
  return *reinterpret_cast<::BoingKit::QuaternionSpring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.Vector3Spring ScaleSpring
[[deprecated("Use field access instead!")]] ::BoingKit::Vector3Spring& BoingKit::BoingWork::Params::InstanceData::dyn_ScaleSpring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_ScaleSpring");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleSpring"))->offset;
  return *reinterpret_cast<::BoingKit::Vector3Spring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 PositionPropagationWorkData
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::BoingWork::Params::InstanceData::dyn_PositionPropagationWorkData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_PositionPropagationWorkData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionPropagationWorkData"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding5
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWork::Params::InstanceData::dyn_m_padding5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_m_padding5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 RotationPropagationWorkData
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& BoingKit::BoingWork::Params::InstanceData::dyn_RotationPropagationWorkData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::dyn_RotationPropagationWorkData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationPropagationWorkData"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BoingWork/Params/InstanceData.Reset
void BoingKit::BoingWork::Params::InstanceData::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingWork/Params/InstanceData.Reset
void BoingKit::BoingWork::Params::InstanceData::Reset(::UnityEngine::Vector3 position, bool instantAccumulation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(instantAccumulation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, instantAccumulation);
}
// Autogenerated method: BoingKit.BoingWork/Params/InstanceData.PrepareExecute
void BoingKit::BoingWork::Params::InstanceData::PrepareExecute(ByRef<::BoingKit::BoingWork::Params> p, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, bool accumulateEffectors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::PrepareExecute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrepareExecute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(accumulateEffectors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(p), position, rotation, scale, accumulateEffectors);
}
// Autogenerated method: BoingKit.BoingWork/Params/InstanceData.PrepareExecute
void BoingKit::BoingWork::Params::InstanceData::PrepareExecute(ByRef<::BoingKit::BoingWork::Params> p, ::UnityEngine::Vector3 gridCenter, ::UnityEngine::Quaternion gridRotation, ::UnityEngine::Vector3 cellOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::PrepareExecute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrepareExecute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(gridCenter), ::il2cpp_utils::ExtractType(gridRotation), ::il2cpp_utils::ExtractType(cellOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(p), gridCenter, gridRotation, cellOffset);
}
// Autogenerated method: BoingKit.BoingWork/Params/InstanceData.AccumulateTarget
void BoingKit::BoingWork::Params::InstanceData::AccumulateTarget(ByRef<::BoingKit::BoingWork::Params> p, ByRef<::BoingKit::BoingEffector::Params> effector, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::AccumulateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AccumulateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(effector), ::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(p), byref(effector), dt);
}
// Autogenerated method: BoingKit.BoingWork/Params/InstanceData.EndAccumulateTargets
void BoingKit::BoingWork::Params::InstanceData::EndAccumulateTargets(ByRef<::BoingKit::BoingWork::Params> p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::EndAccumulateTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EndAccumulateTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(p));
}
// Autogenerated method: BoingKit.BoingWork/Params/InstanceData.Execute
void BoingKit::BoingWork::Params::InstanceData::Execute(ByRef<::BoingKit::BoingWork::Params> p, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(p), dt);
}
// Autogenerated method: BoingKit.BoingWork/Params/InstanceData.PullResults
void BoingKit::BoingWork::Params::InstanceData::PullResults(::BoingKit::BoingBones* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::PullResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PullResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bones);
}
// Autogenerated method: BoingKit.BoingWork/Params/InstanceData.SuppressWarnings
void BoingKit::BoingWork::Params::InstanceData::SuppressWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::SuppressWarnings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SuppressWarnings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingWork/Params/InstanceData..cctor
void BoingKit::BoingWork::Params::InstanceData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Params::InstanceData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWork/Params/InstanceData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingWork/Output
#include "BoingKit/BoingWork_Output.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BoingKit.BoingBehavior
#include "BoingKit/BoingBehavior.hpp"
// Including type: BoingKit.BoingReactor
#include "BoingKit/BoingReactor.hpp"
// Including type: BoingKit.BoingManager/UpdateMode
#include "BoingKit/BoingManager_UpdateMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 Stride
int BoingKit::BoingWork::Output::_get_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::_get_Stride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "BoingWork/Output", "Stride"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 Stride
void BoingKit::BoingWork::Output::_set_Stride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::_set_Stride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWork/Output", "Stride", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InstanceID
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Output::dyn_InstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::dyn_InstanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_padding0
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Output::dyn_m_padding0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::dyn_m_padding0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding0"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_padding1
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Output::dyn_m_padding1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::dyn_m_padding1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_padding2
[[deprecated("Use field access instead!")]] int& BoingKit::BoingWork::Output::dyn_m_padding2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::dyn_m_padding2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.Vector3Spring PositionSpring
[[deprecated("Use field access instead!")]] ::BoingKit::Vector3Spring& BoingKit::BoingWork::Output::dyn_PositionSpring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::dyn_PositionSpring");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionSpring"))->offset;
  return *reinterpret_cast<::BoingKit::Vector3Spring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.QuaternionSpring RotationSpring
[[deprecated("Use field access instead!")]] ::BoingKit::QuaternionSpring& BoingKit::BoingWork::Output::dyn_RotationSpring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::dyn_RotationSpring");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationSpring"))->offset;
  return *reinterpret_cast<::BoingKit::QuaternionSpring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoingKit.Vector3Spring ScaleSpring
[[deprecated("Use field access instead!")]] ::BoingKit::Vector3Spring& BoingKit::BoingWork::Output::dyn_ScaleSpring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::dyn_ScaleSpring");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleSpring"))->offset;
  return *reinterpret_cast<::BoingKit::Vector3Spring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BoingWork/Output..ctor
BoingKit::BoingWork::Output::Output(int instanceID, ByRef<::BoingKit::Vector3Spring> positionSpring, ByRef<::BoingKit::QuaternionSpring> rotationSpring, ByRef<::BoingKit::Vector3Spring> scaleSpring) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceID), ::il2cpp_utils::ExtractType(positionSpring), ::il2cpp_utils::ExtractType(rotationSpring), ::il2cpp_utils::ExtractType(scaleSpring)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instanceID, byref(positionSpring), byref(rotationSpring), byref(scaleSpring));
}
// Autogenerated method: BoingKit.BoingWork/Output.GatherOutput
void BoingKit::BoingWork::Output::GatherOutput(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBehavior*>* behaviorMap, ::BoingKit::BoingManager::UpdateMode updateMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::GatherOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GatherOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviorMap), ::il2cpp_utils::ExtractType(updateMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, behaviorMap, updateMode);
}
// Autogenerated method: BoingKit.BoingWork/Output.GatherOutput
void BoingKit::BoingWork::Output::GatherOutput(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactor*>* reactorMap, ::BoingKit::BoingManager::UpdateMode updateMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::GatherOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GatherOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reactorMap), ::il2cpp_utils::ExtractType(updateMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reactorMap, updateMode);
}
// Autogenerated method: BoingKit.BoingWork/Output.SuppressWarnings
void BoingKit::BoingWork::Output::SuppressWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::SuppressWarnings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SuppressWarnings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BoingWork/Output..cctor
void BoingKit::BoingWork::Output::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWork::Output::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWork/Output", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingWorkAsynchronous
#include "BoingKit/BoingWorkAsynchronous.hpp"
// Including type: BoingKit.BoingWorkAsynchronous/BehaviorJob
#include "BoingKit/BoingWorkAsynchronous_BehaviorJob.hpp"
// Including type: BoingKit.BoingWorkAsynchronous/ReactorJob
#include "BoingKit/BoingWorkAsynchronous_ReactorJob.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BoingKit.BoingBehavior
#include "BoingKit/BoingBehavior.hpp"
// Including type: BoingKit.BoingReactor
#include "BoingKit/BoingReactor.hpp"
// Including type: BoingKit.BoingReactorField
#include "BoingKit/BoingReactorField.hpp"
// Including type: BoingKit.BoingReactorFieldCPUSampler
#include "BoingKit/BoingReactorFieldCPUSampler.hpp"
// Including type: BoingKit.BoingBones
#include "BoingKit/BoingBones.hpp"
// Including type: BoingKit.BoingManager/UpdateMode
#include "BoingKit/BoingManager_UpdateMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean s_behaviorJobNeedsGather
bool BoingKit::BoingWorkAsynchronous::_get_s_behaviorJobNeedsGather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_get_s_behaviorJobNeedsGather");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("BoingKit", "BoingWorkAsynchronous", "s_behaviorJobNeedsGather"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_behaviorJobNeedsGather
void BoingKit::BoingWorkAsynchronous::_set_s_behaviorJobNeedsGather(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_set_s_behaviorJobNeedsGather");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWorkAsynchronous", "s_behaviorJobNeedsGather", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Jobs.JobHandle s_hBehaviorJob
::Unity::Jobs::JobHandle BoingKit::BoingWorkAsynchronous::_get_s_hBehaviorJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_get_s_hBehaviorJob");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Jobs::JobHandle>("BoingKit", "BoingWorkAsynchronous", "s_hBehaviorJob"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Jobs.JobHandle s_hBehaviorJob
void BoingKit::BoingWorkAsynchronous::_set_s_hBehaviorJob(::Unity::Jobs::JobHandle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_set_s_hBehaviorJob");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWorkAsynchronous", "s_hBehaviorJob", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Collections.NativeArray`1<BoingKit.BoingWork/Params> s_aBehaviorParams
::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Params> BoingKit::BoingWorkAsynchronous::_get_s_aBehaviorParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_get_s_aBehaviorParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Params>>("BoingKit", "BoingWorkAsynchronous", "s_aBehaviorParams"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Collections.NativeArray`1<BoingKit.BoingWork/Params> s_aBehaviorParams
void BoingKit::BoingWorkAsynchronous::_set_s_aBehaviorParams(::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Params> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_set_s_aBehaviorParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWorkAsynchronous", "s_aBehaviorParams", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Collections.NativeArray`1<BoingKit.BoingWork/Output> s_aBehaviorOutput
::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Output> BoingKit::BoingWorkAsynchronous::_get_s_aBehaviorOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_get_s_aBehaviorOutput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Output>>("BoingKit", "BoingWorkAsynchronous", "s_aBehaviorOutput"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Collections.NativeArray`1<BoingKit.BoingWork/Output> s_aBehaviorOutput
void BoingKit::BoingWorkAsynchronous::_set_s_aBehaviorOutput(::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Output> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_set_s_aBehaviorOutput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWorkAsynchronous", "s_aBehaviorOutput", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_reactorJobNeedsGather
bool BoingKit::BoingWorkAsynchronous::_get_s_reactorJobNeedsGather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_get_s_reactorJobNeedsGather");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("BoingKit", "BoingWorkAsynchronous", "s_reactorJobNeedsGather"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_reactorJobNeedsGather
void BoingKit::BoingWorkAsynchronous::_set_s_reactorJobNeedsGather(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_set_s_reactorJobNeedsGather");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWorkAsynchronous", "s_reactorJobNeedsGather", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Jobs.JobHandle s_hReactorJob
::Unity::Jobs::JobHandle BoingKit::BoingWorkAsynchronous::_get_s_hReactorJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_get_s_hReactorJob");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Jobs::JobHandle>("BoingKit", "BoingWorkAsynchronous", "s_hReactorJob"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Jobs.JobHandle s_hReactorJob
void BoingKit::BoingWorkAsynchronous::_set_s_hReactorJob(::Unity::Jobs::JobHandle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_set_s_hReactorJob");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWorkAsynchronous", "s_hReactorJob", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Collections.NativeArray`1<BoingKit.BoingEffector/Params> s_aEffectors
::Unity::Collections::NativeArray_1<::BoingKit::BoingEffector::Params> BoingKit::BoingWorkAsynchronous::_get_s_aEffectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_get_s_aEffectors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::NativeArray_1<::BoingKit::BoingEffector::Params>>("BoingKit", "BoingWorkAsynchronous", "s_aEffectors"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Collections.NativeArray`1<BoingKit.BoingEffector/Params> s_aEffectors
void BoingKit::BoingWorkAsynchronous::_set_s_aEffectors(::Unity::Collections::NativeArray_1<::BoingKit::BoingEffector::Params> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_set_s_aEffectors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWorkAsynchronous", "s_aEffectors", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Collections.NativeArray`1<BoingKit.BoingWork/Params> s_aReactorExecParams
::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Params> BoingKit::BoingWorkAsynchronous::_get_s_aReactorExecParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_get_s_aReactorExecParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Params>>("BoingKit", "BoingWorkAsynchronous", "s_aReactorExecParams"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Collections.NativeArray`1<BoingKit.BoingWork/Params> s_aReactorExecParams
void BoingKit::BoingWorkAsynchronous::_set_s_aReactorExecParams(::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Params> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_set_s_aReactorExecParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWorkAsynchronous", "s_aReactorExecParams", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Collections.NativeArray`1<BoingKit.BoingWork/Output> s_aReactorExecOutput
::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Output> BoingKit::BoingWorkAsynchronous::_get_s_aReactorExecOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_get_s_aReactorExecOutput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Output>>("BoingKit", "BoingWorkAsynchronous", "s_aReactorExecOutput"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Collections.NativeArray`1<BoingKit.BoingWork/Output> s_aReactorExecOutput
void BoingKit::BoingWorkAsynchronous::_set_s_aReactorExecOutput(::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Output> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::_set_s_aReactorExecOutput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "BoingWorkAsynchronous", "s_aReactorExecOutput", value));
}
// Autogenerated method: BoingKit.BoingWorkAsynchronous.PostUnregisterBehaviorCleanUp
void BoingKit::BoingWorkAsynchronous::PostUnregisterBehaviorCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::PostUnregisterBehaviorCleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWorkAsynchronous", "PostUnregisterBehaviorCleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BoingKit.BoingWorkAsynchronous.PostUnregisterEffectorReactorCleanUp
void BoingKit::BoingWorkAsynchronous::PostUnregisterEffectorReactorCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::PostUnregisterEffectorReactorCleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWorkAsynchronous", "PostUnregisterEffectorReactorCleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BoingKit.BoingWorkAsynchronous.ExecuteBehaviors
void BoingKit::BoingWorkAsynchronous::ExecuteBehaviors(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBehavior*>* behaviorMap, ::BoingKit::BoingManager::UpdateMode updateMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::ExecuteBehaviors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWorkAsynchronous", "ExecuteBehaviors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviorMap), ::il2cpp_utils::ExtractType(updateMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, behaviorMap, updateMode);
}
// Autogenerated method: BoingKit.BoingWorkAsynchronous.ExecuteReactors
void BoingKit::BoingWorkAsynchronous::ExecuteReactors(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingEffector*>* effectorMap, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactor*>* reactorMap, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorField*>* fieldMap, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorFieldCPUSampler*>* cpuSamplerMap, ::BoingKit::BoingManager::UpdateMode updateMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::ExecuteReactors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWorkAsynchronous", "ExecuteReactors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effectorMap), ::il2cpp_utils::ExtractType(reactorMap), ::il2cpp_utils::ExtractType(fieldMap), ::il2cpp_utils::ExtractType(cpuSamplerMap), ::il2cpp_utils::ExtractType(updateMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, effectorMap, reactorMap, fieldMap, cpuSamplerMap, updateMode);
}
// Autogenerated method: BoingKit.BoingWorkAsynchronous.ExecuteBones
void BoingKit::BoingWorkAsynchronous::ExecuteBones(::ArrayW<::BoingKit::BoingEffector::Params> aEffectorParams, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBones*>* bonesMap, ::BoingKit::BoingManager::UpdateMode updateMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::ExecuteBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWorkAsynchronous", "ExecuteBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aEffectorParams), ::il2cpp_utils::ExtractType(bonesMap), ::il2cpp_utils::ExtractType(updateMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aEffectorParams, bonesMap, updateMode);
}
// Autogenerated method: BoingKit.BoingWorkAsynchronous.PullBonesResults
void BoingKit::BoingWorkAsynchronous::PullBonesResults(::ArrayW<::BoingKit::BoingEffector::Params> aEffectorParams, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBones*>* bonesMap, ::BoingKit::BoingManager::UpdateMode updateMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::PullBonesResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWorkAsynchronous", "PullBonesResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aEffectorParams), ::il2cpp_utils::ExtractType(bonesMap), ::il2cpp_utils::ExtractType(updateMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aEffectorParams, bonesMap, updateMode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingWorkAsynchronous/BehaviorJob
#include "BoingKit/BoingWorkAsynchronous_BehaviorJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<BoingKit.BoingWork/Params> Params
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Params>& BoingKit::BoingWorkAsynchronous::BehaviorJob::dyn_Params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::BehaviorJob::dyn_Params");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Params"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Params>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<BoingKit.BoingWork/Output> Output
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Output>& BoingKit::BoingWorkAsynchronous::BehaviorJob::dyn_Output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::BehaviorJob::dyn_Output");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Output"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Output>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DeltaTime
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWorkAsynchronous::BehaviorJob::dyn_DeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::BehaviorJob::dyn_DeltaTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FixedDeltaTime
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWorkAsynchronous::BehaviorJob::dyn_FixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::BehaviorJob::dyn_FixedDeltaTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FixedDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BoingWorkAsynchronous/BehaviorJob.Execute
void BoingKit::BoingWorkAsynchronous::BehaviorJob::Execute(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::BehaviorJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::BoingKit::BoingWorkAsynchronous::BehaviorJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingWorkAsynchronous/ReactorJob
#include "BoingKit/BoingWorkAsynchronous_ReactorJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<BoingKit.BoingEffector/Params> Effectors
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::BoingKit::BoingEffector::Params>& BoingKit::BoingWorkAsynchronous::ReactorJob::dyn_Effectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::ReactorJob::dyn_Effectors");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Effectors"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::BoingKit::BoingEffector::Params>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<BoingKit.BoingWork/Params> Params
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Params>& BoingKit::BoingWorkAsynchronous::ReactorJob::dyn_Params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::ReactorJob::dyn_Params");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Params"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Params>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<BoingKit.BoingWork/Output> Output
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Output>& BoingKit::BoingWorkAsynchronous::ReactorJob::dyn_Output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::ReactorJob::dyn_Output");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Output"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::BoingKit::BoingWork::Output>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DeltaTime
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWorkAsynchronous::ReactorJob::dyn_DeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::ReactorJob::dyn_DeltaTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FixedDeltaTime
[[deprecated("Use field access instead!")]] float& BoingKit::BoingWorkAsynchronous::ReactorJob::dyn_FixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::ReactorJob::dyn_FixedDeltaTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FixedDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BoingWorkAsynchronous/ReactorJob.Execute
void BoingKit::BoingWorkAsynchronous::ReactorJob::Execute(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkAsynchronous::ReactorJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::BoingKit::BoingWorkAsynchronous::ReactorJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BoingWorkSynchronous
#include "BoingKit/BoingWorkSynchronous.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BoingKit.BoingBehavior
#include "BoingKit/BoingBehavior.hpp"
// Including type: BoingKit.BoingReactor
#include "BoingKit/BoingReactor.hpp"
// Including type: BoingKit.BoingReactorField
#include "BoingKit/BoingReactorField.hpp"
// Including type: BoingKit.BoingReactorFieldCPUSampler
#include "BoingKit/BoingReactorFieldCPUSampler.hpp"
// Including type: BoingKit.BoingBones
#include "BoingKit/BoingBones.hpp"
// Including type: BoingKit.BoingManager/UpdateMode
#include "BoingKit/BoingManager_UpdateMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.BoingWorkSynchronous.ExecuteBehaviors
void BoingKit::BoingWorkSynchronous::ExecuteBehaviors(::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBehavior*>* behaviorMap, ::BoingKit::BoingManager::UpdateMode updateMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkSynchronous::ExecuteBehaviors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWorkSynchronous", "ExecuteBehaviors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviorMap), ::il2cpp_utils::ExtractType(updateMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, behaviorMap, updateMode);
}
// Autogenerated method: BoingKit.BoingWorkSynchronous.ExecuteReactors
void BoingKit::BoingWorkSynchronous::ExecuteReactors(::ArrayW<::BoingKit::BoingEffector::Params> aEffectorParams, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactor*>* reactorMap, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorField*>* fieldMap, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingReactorFieldCPUSampler*>* cpuSamplerMap, ::BoingKit::BoingManager::UpdateMode updateMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkSynchronous::ExecuteReactors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWorkSynchronous", "ExecuteReactors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aEffectorParams), ::il2cpp_utils::ExtractType(reactorMap), ::il2cpp_utils::ExtractType(fieldMap), ::il2cpp_utils::ExtractType(cpuSamplerMap), ::il2cpp_utils::ExtractType(updateMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aEffectorParams, reactorMap, fieldMap, cpuSamplerMap, updateMode);
}
// Autogenerated method: BoingKit.BoingWorkSynchronous.ExecuteBones
void BoingKit::BoingWorkSynchronous::ExecuteBones(::ArrayW<::BoingKit::BoingEffector::Params> aEffectorParams, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBones*>* bonesMap, ::BoingKit::BoingManager::UpdateMode updateMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkSynchronous::ExecuteBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWorkSynchronous", "ExecuteBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aEffectorParams), ::il2cpp_utils::ExtractType(bonesMap), ::il2cpp_utils::ExtractType(updateMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aEffectorParams, bonesMap, updateMode);
}
// Autogenerated method: BoingKit.BoingWorkSynchronous.PullBonesResults
void BoingKit::BoingWorkSynchronous::PullBonesResults(::ArrayW<::BoingKit::BoingEffector::Params> aEffectorParams, ::System::Collections::Generic::Dictionary_2<int, ::BoingKit::BoingBones*>* bonesMap, ::BoingKit::BoingManager::UpdateMode updateMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BoingWorkSynchronous::PullBonesResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BoingWorkSynchronous", "PullBonesResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aEffectorParams), ::il2cpp_utils::ExtractType(bonesMap), ::il2cpp_utils::ExtractType(updateMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aEffectorParams, bonesMap, updateMode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.Codec
#include "BoingKit/Codec.hpp"
// Including type: BoingKit.Codec/IntFloat
#include "BoingKit/Codec_IntFloat.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 FnvDefaultBasis
int BoingKit::Codec::_get_FnvDefaultBasis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::_get_FnvDefaultBasis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "Codec", "FnvDefaultBasis"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 FnvDefaultBasis
void BoingKit::Codec::_set_FnvDefaultBasis(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::_set_FnvDefaultBasis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "Codec", "FnvDefaultBasis", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 FnvPrime
int BoingKit::Codec::_get_FnvPrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::_get_FnvPrime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "Codec", "FnvPrime"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 FnvPrime
void BoingKit::Codec::_set_FnvPrime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::_set_FnvPrime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "Codec", "FnvPrime", value));
}
// Autogenerated method: BoingKit.Codec.PackSaturated
float BoingKit::Codec::PackSaturated(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::PackSaturated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "PackSaturated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: BoingKit.Codec.PackSaturated
float BoingKit::Codec::PackSaturated(::UnityEngine::Vector2 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::PackSaturated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "PackSaturated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: BoingKit.Codec.UnpackSaturated
::UnityEngine::Vector2 BoingKit::Codec::UnpackSaturated(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::UnpackSaturated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "UnpackSaturated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: BoingKit.Codec.OctWrap
::UnityEngine::Vector2 BoingKit::Codec::OctWrap(::UnityEngine::Vector2 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::OctWrap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "OctWrap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: BoingKit.Codec.PackNormal
float BoingKit::Codec::PackNormal(::UnityEngine::Vector3 n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::PackNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "PackNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: BoingKit.Codec.UnpackNormal
::UnityEngine::Vector3 BoingKit::Codec::UnpackNormal(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::UnpackNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "UnpackNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: BoingKit.Codec.PackRgb
uint BoingKit::Codec::PackRgb(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::PackRgb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "PackRgb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, color);
}
// Autogenerated method: BoingKit.Codec.UnpackRgb
::UnityEngine::Color BoingKit::Codec::UnpackRgb(uint i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::UnpackRgb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "UnpackRgb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: BoingKit.Codec.PackRgba
uint BoingKit::Codec::PackRgba(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::PackRgba");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "PackRgba", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, color);
}
// Autogenerated method: BoingKit.Codec.UnpackRgba
::UnityEngine::Color BoingKit::Codec::UnpackRgba(uint i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::UnpackRgba");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "UnpackRgba", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: BoingKit.Codec.Pack8888
uint BoingKit::Codec::Pack8888(uint x, uint y, uint z, uint w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Pack8888");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Pack8888", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z, w);
}
// Autogenerated method: BoingKit.Codec.Unpack8888
void BoingKit::Codec::Unpack8888(uint i, ByRef<uint> x, ByRef<uint> y, ByRef<uint> z, ByRef<uint> w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Unpack8888");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Unpack8888", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, byref(x), byref(y), byref(z), byref(w));
}
// Autogenerated method: BoingKit.Codec.IntReinterpret
int BoingKit::Codec::IntReinterpret(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::IntReinterpret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "IntReinterpret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, i);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, int64_t i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, i);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, f);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, bool b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, b);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, ::ArrayW<int> ints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(ints)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, ints);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, ::ArrayW<float> floats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(floats)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, floats);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, ::UnityEngine::Vector2 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, v);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, ::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, v);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, ::UnityEngine::Vector4 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, v);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, ::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, q);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, ::UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, c);
}
// Autogenerated method: BoingKit.Codec.HashConcat
int BoingKit::Codec::HashConcat(int hash, ::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashConcat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashConcat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, t);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(int64_t i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(bool b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(::ArrayW<int> ints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ints)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ints);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(::ArrayW<float> floats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floats)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, floats);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(::UnityEngine::Vector2 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(::UnityEngine::Vector4 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: BoingKit.Codec.Hash
int BoingKit::Codec::Hash(::UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: BoingKit.Codec.HashTransformHierarchyRecurvsive
int BoingKit::Codec::HashTransformHierarchyRecurvsive(int hash, ::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashTransformHierarchyRecurvsive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashTransformHierarchyRecurvsive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, t);
}
// Autogenerated method: BoingKit.Codec.HashTransformHierarchy
int BoingKit::Codec::HashTransformHierarchy(::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::HashTransformHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", "HashTransformHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: BoingKit.Codec..cctor
void BoingKit::Codec::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Codec::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Codec", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.SharedBoingParams
#include "BoingKit/SharedBoingParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BoingKit.BoingWork/Params Params
[[deprecated("Use field access instead!")]] ::BoingKit::BoingWork::Params& BoingKit::SharedBoingParams::dyn_Params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::SharedBoingParams::dyn_Params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Params"))->offset;
  return *reinterpret_cast<::BoingKit::BoingWork::Params*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.ParameterMode
#include "BoingKit/ParameterMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BoingKit.ParameterMode Exponential
::BoingKit::ParameterMode BoingKit::ParameterMode::_get_Exponential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ParameterMode::_get_Exponential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::ParameterMode>("BoingKit", "ParameterMode", "Exponential"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.ParameterMode Exponential
void BoingKit::ParameterMode::_set_Exponential(::BoingKit::ParameterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ParameterMode::_set_Exponential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "ParameterMode", "Exponential", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.ParameterMode OscillationByHalfLife
::BoingKit::ParameterMode BoingKit::ParameterMode::_get_OscillationByHalfLife() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ParameterMode::_get_OscillationByHalfLife");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::ParameterMode>("BoingKit", "ParameterMode", "OscillationByHalfLife"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.ParameterMode OscillationByHalfLife
void BoingKit::ParameterMode::_set_OscillationByHalfLife(::BoingKit::ParameterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ParameterMode::_set_OscillationByHalfLife");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "ParameterMode", "OscillationByHalfLife", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.ParameterMode OscillationByDampingRatio
::BoingKit::ParameterMode BoingKit::ParameterMode::_get_OscillationByDampingRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ParameterMode::_get_OscillationByDampingRatio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::ParameterMode>("BoingKit", "ParameterMode", "OscillationByDampingRatio"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.ParameterMode OscillationByDampingRatio
void BoingKit::ParameterMode::_set_OscillationByDampingRatio(::BoingKit::ParameterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ParameterMode::_set_OscillationByDampingRatio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "ParameterMode", "OscillationByDampingRatio", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BoingKit::ParameterMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ParameterMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.TwoDPlaneEnum
#include "BoingKit/TwoDPlaneEnum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BoingKit.TwoDPlaneEnum XY
::BoingKit::TwoDPlaneEnum BoingKit::TwoDPlaneEnum::_get_XY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::TwoDPlaneEnum::_get_XY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::TwoDPlaneEnum>("BoingKit", "TwoDPlaneEnum", "XY"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.TwoDPlaneEnum XY
void BoingKit::TwoDPlaneEnum::_set_XY(::BoingKit::TwoDPlaneEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::TwoDPlaneEnum::_set_XY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "TwoDPlaneEnum", "XY", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.TwoDPlaneEnum XZ
::BoingKit::TwoDPlaneEnum BoingKit::TwoDPlaneEnum::_get_XZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::TwoDPlaneEnum::_get_XZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::TwoDPlaneEnum>("BoingKit", "TwoDPlaneEnum", "XZ"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.TwoDPlaneEnum XZ
void BoingKit::TwoDPlaneEnum::_set_XZ(::BoingKit::TwoDPlaneEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::TwoDPlaneEnum::_set_XZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "TwoDPlaneEnum", "XZ", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.TwoDPlaneEnum YZ
::BoingKit::TwoDPlaneEnum BoingKit::TwoDPlaneEnum::_get_YZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::TwoDPlaneEnum::_get_YZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::TwoDPlaneEnum>("BoingKit", "TwoDPlaneEnum", "YZ"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.TwoDPlaneEnum YZ
void BoingKit::TwoDPlaneEnum::_set_YZ(::BoingKit::TwoDPlaneEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::TwoDPlaneEnum::_set_YZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "TwoDPlaneEnum", "YZ", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BoingKit::TwoDPlaneEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::TwoDPlaneEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.Aabb
#include "BoingKit/Aabb.hpp"
// Including type: BoingKit.BoingEffector/Params
#include "BoingKit/BoingEffector_Params.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Min
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::Aabb::dyn_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::dyn_Min");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Min"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Max
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::Aabb::dyn_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::dyn_Max");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Max"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.Aabb.get_MinX
float BoingKit::Aabb::get_MinX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::get_MinX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MinX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Aabb.set_MinX
void BoingKit::Aabb::set_MinX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::set_MinX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_MinX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BoingKit.Aabb.get_MinY
float BoingKit::Aabb::get_MinY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::get_MinY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MinY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Aabb.set_MinY
void BoingKit::Aabb::set_MinY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::set_MinY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_MinY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BoingKit.Aabb.get_MinZ
float BoingKit::Aabb::get_MinZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::get_MinZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MinZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Aabb.set_MinZ
void BoingKit::Aabb::set_MinZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::set_MinZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_MinZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BoingKit.Aabb.get_MaxX
float BoingKit::Aabb::get_MaxX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::get_MaxX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MaxX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Aabb.set_MaxX
void BoingKit::Aabb::set_MaxX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::set_MaxX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_MaxX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BoingKit.Aabb.get_MaxY
float BoingKit::Aabb::get_MaxY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::get_MaxY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MaxY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Aabb.set_MaxY
void BoingKit::Aabb::set_MaxY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::set_MaxY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_MaxY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BoingKit.Aabb.get_MaxZ
float BoingKit::Aabb::get_MaxZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::get_MaxZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MaxZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Aabb.set_MaxZ
void BoingKit::Aabb::set_MaxZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::set_MaxZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_MaxZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BoingKit.Aabb.get_Center
::UnityEngine::Vector3 BoingKit::Aabb::get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::get_Center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Aabb.get_Size
::UnityEngine::Vector3 BoingKit::Aabb::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Aabb.get_Empty
::BoingKit::Aabb BoingKit::Aabb::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::get_Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Aabb", "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BoingKit::Aabb, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BoingKit.Aabb.FromPoint
::BoingKit::Aabb BoingKit::Aabb::FromPoint(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::FromPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Aabb", "FromPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::BoingKit::Aabb, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: BoingKit.Aabb.FromPoints
::BoingKit::Aabb BoingKit::Aabb::FromPoints(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::FromPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Aabb", "FromPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::BoingKit::Aabb, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: BoingKit.Aabb..ctor
// ABORTED elsewhere.  BoingKit::Aabb::Aabb(::UnityEngine::Vector3 min, ::UnityEngine::Vector3 max)
// Autogenerated method: BoingKit.Aabb.Include
void BoingKit::Aabb::Include(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::Include");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Include", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: BoingKit.Aabb.Contains
bool BoingKit::Aabb::Contains(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: BoingKit.Aabb.ContainsX
bool BoingKit::Aabb::ContainsX(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::ContainsX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ContainsX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: BoingKit.Aabb.ContainsY
bool BoingKit::Aabb::ContainsY(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::ContainsY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ContainsY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: BoingKit.Aabb.ContainsZ
bool BoingKit::Aabb::ContainsZ(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::ContainsZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ContainsZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: BoingKit.Aabb.Intersects
bool BoingKit::Aabb::Intersects(::BoingKit::Aabb rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::Intersects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Intersects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rhs);
}
// Autogenerated method: BoingKit.Aabb.Intersects
bool BoingKit::Aabb::Intersects(ByRef<::BoingKit::BoingEffector::Params> effector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::Intersects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Intersects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effector)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(effector));
}
// Autogenerated method: BoingKit.Aabb.Expand
::BoingKit::Aabb BoingKit::Aabb::Expand(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Aabb::Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  return ::il2cpp_utils::RunMethodRethrow<::BoingKit::Aabb, false>(this, ___internal__method, amount);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.Bits32
#include "BoingKit/Bits32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_bits
[[deprecated("Use field access instead!")]] int& BoingKit::Bits32::dyn_m_bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Bits32::dyn_m_bits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.Bits32.get_IntValue
int BoingKit::Bits32::get_IntValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Bits32::get_IntValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IntValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Bits32..ctor
// ABORTED elsewhere.  BoingKit::Bits32::Bits32(int bits)
// Autogenerated method: BoingKit.Bits32.Clear
void BoingKit::Bits32::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Bits32::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Bits32.SetBit
void BoingKit::Bits32::SetBit(int index, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Bits32::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: BoingKit.Bits32.IsBitSet
bool BoingKit::Bits32::IsBitSet(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Bits32::IsBitSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsBitSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.BitArray
#include "BoingKit/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_aBlock
[[deprecated("Use field access instead!")]] ::ArrayW<int>& BoingKit::BitArray::dyn_m_aBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::dyn_m_aBlock");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aBlock"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.BitArray.get_Blocks
::ArrayW<int> BoingKit::BitArray::get_Blocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::get_Blocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Blocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BitArray.GetBlockIndex
int BoingKit::BitArray::GetBlockIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::GetBlockIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BitArray", "GetBlockIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: BoingKit.BitArray.GetSubIndex
int BoingKit::BitArray::GetSubIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::GetSubIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BitArray", "GetSubIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: BoingKit.BitArray.SetBit
void BoingKit::BitArray::SetBit(int index, bool value, ::ArrayW<int> blocks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BitArray", "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(blocks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index, value, blocks);
}
// Autogenerated method: BoingKit.BitArray.IsBitSet
bool BoingKit::BitArray::IsBitSet(int index, ::ArrayW<int> blocks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::IsBitSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "BitArray", "IsBitSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(blocks)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index, blocks);
}
// Autogenerated method: BoingKit.BitArray..ctor
BoingKit::BitArray::BitArray(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: BoingKit.BitArray.Resize
void BoingKit::BitArray::Resize(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::Resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: BoingKit.BitArray.Clear
void BoingKit::BitArray::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.BitArray.SetAllBits
void BoingKit::BitArray::SetAllBits(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::SetAllBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetAllBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BoingKit.BitArray.SetBit
void BoingKit::BitArray::SetBit(int index, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: BoingKit.BitArray.IsBitSet
bool BoingKit::BitArray::IsBitSet(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::BitArray::IsBitSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsBitSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.Collision
#include "BoingKit/Collision.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.Collision.SphereSphere
bool BoingKit::Collision::SphereSphere(::UnityEngine::Vector3 centerA, float radiusA, ::UnityEngine::Vector3 centerB, float radiusB, ByRef<::UnityEngine::Vector3> push) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Collision::SphereSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Collision", "SphereSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(centerA), ::il2cpp_utils::ExtractType(radiusA), ::il2cpp_utils::ExtractType(centerB), ::il2cpp_utils::ExtractType(radiusB), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, centerA, radiusA, centerB, radiusB, byref(push));
}
// Autogenerated method: BoingKit.Collision.SphereSphereInverse
bool BoingKit::Collision::SphereSphereInverse(::UnityEngine::Vector3 centerA, float radiusA, ::UnityEngine::Vector3 centerB, float radiusB, ByRef<::UnityEngine::Vector3> push) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Collision::SphereSphereInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Collision", "SphereSphereInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(centerA), ::il2cpp_utils::ExtractType(radiusA), ::il2cpp_utils::ExtractType(centerB), ::il2cpp_utils::ExtractType(radiusB), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, centerA, radiusA, centerB, radiusB, byref(push));
}
// Autogenerated method: BoingKit.Collision.SphereCapsule
bool BoingKit::Collision::SphereCapsule(::UnityEngine::Vector3 centerA, float radiusA, ::UnityEngine::Vector3 headB, ::UnityEngine::Vector3 tailB, float radiusB, ByRef<::UnityEngine::Vector3> push) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Collision::SphereCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Collision", "SphereCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(centerA), ::il2cpp_utils::ExtractType(radiusA), ::il2cpp_utils::ExtractType(headB), ::il2cpp_utils::ExtractType(tailB), ::il2cpp_utils::ExtractType(radiusB), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, centerA, radiusA, headB, tailB, radiusB, byref(push));
}
// Autogenerated method: BoingKit.Collision.SphereCapsuleInverse
bool BoingKit::Collision::SphereCapsuleInverse(::UnityEngine::Vector3 centerA, float radiusA, ::UnityEngine::Vector3 headB, ::UnityEngine::Vector3 tailB, float radiusB, ByRef<::UnityEngine::Vector3> push) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Collision::SphereCapsuleInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Collision", "SphereCapsuleInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(centerA), ::il2cpp_utils::ExtractType(radiusA), ::il2cpp_utils::ExtractType(headB), ::il2cpp_utils::ExtractType(tailB), ::il2cpp_utils::ExtractType(radiusB), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, centerA, radiusA, headB, tailB, radiusB, byref(push));
}
// Autogenerated method: BoingKit.Collision.SphereBox
bool BoingKit::Collision::SphereBox(::UnityEngine::Vector3 centerOffsetA, float radiusA, ::UnityEngine::Vector3 halfExtentB, ByRef<::UnityEngine::Vector3> push) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Collision::SphereBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Collision", "SphereBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(centerOffsetA), ::il2cpp_utils::ExtractType(radiusA), ::il2cpp_utils::ExtractType(halfExtentB), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, centerOffsetA, radiusA, halfExtentB, byref(push));
}
// Autogenerated method: BoingKit.Collision.SphereBoxInverse
bool BoingKit::Collision::SphereBoxInverse(::UnityEngine::Vector3 centerOffsetA, float radiusA, ::UnityEngine::Vector3 halfExtentB, ByRef<::UnityEngine::Vector3> push) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Collision::SphereBoxInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Collision", "SphereBoxInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(centerOffsetA), ::il2cpp_utils::ExtractType(radiusA), ::il2cpp_utils::ExtractType(halfExtentB), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, centerOffsetA, radiusA, halfExtentB, byref(push));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BoingKit.ConditionalFieldAttribute
#include "BoingKit/ConditionalFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String PropertyToCheck
[[deprecated("Use field access instead!")]] ::StringW& BoingKit::ConditionalFieldAttribute::dyn_PropertyToCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_PropertyToCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyToCheck"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object CompareValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& BoingKit::ConditionalFieldAttribute::dyn_CompareValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_CompareValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompareValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object CompareValue2
[[deprecated("Use field access instead!")]] ::Il2CppObject*& BoingKit::ConditionalFieldAttribute::dyn_CompareValue2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_CompareValue2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompareValue2"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object CompareValue3
[[deprecated("Use field access instead!")]] ::Il2CppObject*& BoingKit::ConditionalFieldAttribute::dyn_CompareValue3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_CompareValue3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompareValue3"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object CompareValue4
[[deprecated("Use field access instead!")]] ::Il2CppObject*& BoingKit::ConditionalFieldAttribute::dyn_CompareValue4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_CompareValue4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompareValue4"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object CompareValue5
[[deprecated("Use field access instead!")]] ::Il2CppObject*& BoingKit::ConditionalFieldAttribute::dyn_CompareValue5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_CompareValue5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompareValue5"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object CompareValue6
[[deprecated("Use field access instead!")]] ::Il2CppObject*& BoingKit::ConditionalFieldAttribute::dyn_CompareValue6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_CompareValue6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompareValue6"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Label
[[deprecated("Use field access instead!")]] ::StringW& BoingKit::ConditionalFieldAttribute::dyn_Label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_Label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Label"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Tooltip
[[deprecated("Use field access instead!")]] ::StringW& BoingKit::ConditionalFieldAttribute::dyn_Tooltip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_Tooltip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tooltip"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Min
[[deprecated("Use field access instead!")]] float& BoingKit::ConditionalFieldAttribute::dyn_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_Min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Max
[[deprecated("Use field access instead!")]] float& BoingKit::ConditionalFieldAttribute::dyn_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::dyn_Max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.ConditionalFieldAttribute.get_ShowRange
bool BoingKit::ConditionalFieldAttribute::get_ShowRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::ConditionalFieldAttribute::get_ShowRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShowRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.MathUtil
#include "BoingKit/MathUtil.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Single Pi
float BoingKit::MathUtil::_get_Pi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_Pi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "Pi"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Pi
void BoingKit::MathUtil::_set_Pi(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_Pi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "Pi", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single TwoPi
float BoingKit::MathUtil::_get_TwoPi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_TwoPi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "TwoPi"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single TwoPi
void BoingKit::MathUtil::_set_TwoPi(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_TwoPi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "TwoPi", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single HalfPi
float BoingKit::MathUtil::_get_HalfPi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_HalfPi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "HalfPi"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single HalfPi
void BoingKit::MathUtil::_set_HalfPi(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_HalfPi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "HalfPi", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single QuaterPi
float BoingKit::MathUtil::_get_QuaterPi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_QuaterPi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "QuaterPi"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single QuaterPi
void BoingKit::MathUtil::_set_QuaterPi(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_QuaterPi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "QuaterPi", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single SixthPi
float BoingKit::MathUtil::_get_SixthPi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_SixthPi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "SixthPi"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single SixthPi
void BoingKit::MathUtil::_set_SixthPi(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_SixthPi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "SixthPi", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single Sqrt2
float BoingKit::MathUtil::_get_Sqrt2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_Sqrt2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "Sqrt2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Sqrt2
void BoingKit::MathUtil::_set_Sqrt2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_Sqrt2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "Sqrt2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single Sqrt2Inv
float BoingKit::MathUtil::_get_Sqrt2Inv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_Sqrt2Inv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "Sqrt2Inv"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Sqrt2Inv
void BoingKit::MathUtil::_set_Sqrt2Inv(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_Sqrt2Inv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "Sqrt2Inv", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single Sqrt3
float BoingKit::MathUtil::_get_Sqrt3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_Sqrt3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "Sqrt3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Sqrt3
void BoingKit::MathUtil::_set_Sqrt3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_Sqrt3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "Sqrt3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single Sqrt3Inv
float BoingKit::MathUtil::_get_Sqrt3Inv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_Sqrt3Inv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "Sqrt3Inv"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Sqrt3Inv
void BoingKit::MathUtil::_set_Sqrt3Inv(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_Sqrt3Inv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "Sqrt3Inv", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single Epsilon
float BoingKit::MathUtil::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Epsilon
void BoingKit::MathUtil::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "Epsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single Rad2Deg
float BoingKit::MathUtil::_get_Rad2Deg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_Rad2Deg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "Rad2Deg"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Rad2Deg
void BoingKit::MathUtil::_set_Rad2Deg(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_Rad2Deg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "Rad2Deg", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single Deg2Rad
float BoingKit::MathUtil::_get_Deg2Rad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_get_Deg2Rad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("BoingKit", "MathUtil", "Deg2Rad"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Deg2Rad
void BoingKit::MathUtil::_set_Deg2Rad(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::_set_Deg2Rad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "MathUtil", "Deg2Rad", value));
}
// Autogenerated method: BoingKit.MathUtil.AsinSafe
float BoingKit::MathUtil::AsinSafe(float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::AsinSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "AsinSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: BoingKit.MathUtil.AcosSafe
float BoingKit::MathUtil::AcosSafe(float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::AcosSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "AcosSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: BoingKit.MathUtil.InvSafe
float BoingKit::MathUtil::InvSafe(float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::InvSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "InvSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: BoingKit.MathUtil.PointLineDist
float BoingKit::MathUtil::PointLineDist(::UnityEngine::Vector2 point, ::UnityEngine::Vector2 linePos, ::UnityEngine::Vector2 lineDir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::PointLineDist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "PointLineDist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(linePos), ::il2cpp_utils::ExtractType(lineDir)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, linePos, lineDir);
}
// Autogenerated method: BoingKit.MathUtil.PointSegmentDist
float BoingKit::MathUtil::PointSegmentDist(::UnityEngine::Vector2 point, ::UnityEngine::Vector2 segmentPosA, ::UnityEngine::Vector2 segmentPosB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::PointSegmentDist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "PointSegmentDist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(segmentPosA), ::il2cpp_utils::ExtractType(segmentPosB)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, segmentPosA, segmentPosB);
}
// Autogenerated method: BoingKit.MathUtil.Seek
float BoingKit::MathUtil::Seek(float current, float target, float maxDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(maxDelta)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, maxDelta);
}
// Autogenerated method: BoingKit.MathUtil.Seek
::UnityEngine::Vector2 BoingKit::MathUtil::Seek(::UnityEngine::Vector2 current, ::UnityEngine::Vector2 target, float maxDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(maxDelta)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, maxDelta);
}
// Autogenerated method: BoingKit.MathUtil.Remainder
float BoingKit::MathUtil::Remainder(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::Remainder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "Remainder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: BoingKit.MathUtil.Remainder
int BoingKit::MathUtil::Remainder(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::Remainder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "Remainder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: BoingKit.MathUtil.Modulo
float BoingKit::MathUtil::Modulo(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::Modulo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "Modulo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: BoingKit.MathUtil.Modulo
int BoingKit::MathUtil::Modulo(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::Modulo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", "Modulo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: BoingKit.MathUtil..cctor
void BoingKit::MathUtil::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::MathUtil::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "MathUtil", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.QuaternionUtil
#include "BoingKit/QuaternionUtil.hpp"
// Including type: BoingKit.QuaternionUtil/SterpMode
#include "BoingKit/QuaternionUtil_SterpMode.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoingKit.QuaternionUtil.Magnitude
float BoingKit::QuaternionUtil::Magnitude(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::Magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "Magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: BoingKit.QuaternionUtil.MagnitudeSqr
float BoingKit::QuaternionUtil::MagnitudeSqr(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::MagnitudeSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "MagnitudeSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: BoingKit.QuaternionUtil.Normalize
::UnityEngine::Quaternion BoingKit::QuaternionUtil::Normalize(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: BoingKit.QuaternionUtil.AxisAngle
::UnityEngine::Quaternion BoingKit::QuaternionUtil::AxisAngle(::UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::AxisAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "AxisAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis, angle);
}
// Autogenerated method: BoingKit.QuaternionUtil.GetAxis
::UnityEngine::Vector3 BoingKit::QuaternionUtil::GetAxis(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::GetAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "GetAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: BoingKit.QuaternionUtil.GetAngle
float BoingKit::QuaternionUtil::GetAngle(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::GetAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "GetAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: BoingKit.QuaternionUtil.FromAngularVector
::UnityEngine::Quaternion BoingKit::QuaternionUtil::FromAngularVector(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::FromAngularVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "FromAngularVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: BoingKit.QuaternionUtil.ToAngularVector
::UnityEngine::Vector3 BoingKit::QuaternionUtil::ToAngularVector(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::ToAngularVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "ToAngularVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: BoingKit.QuaternionUtil.Pow
::UnityEngine::Quaternion BoingKit::QuaternionUtil::Pow(::UnityEngine::Quaternion q, float exp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(exp)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, exp);
}
// Autogenerated method: BoingKit.QuaternionUtil.Integrate
::UnityEngine::Quaternion BoingKit::QuaternionUtil::Integrate(::UnityEngine::Quaternion q, ::UnityEngine::Quaternion v, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::Integrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "Integrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, v, dt);
}
// Autogenerated method: BoingKit.QuaternionUtil.Integrate
::UnityEngine::Quaternion BoingKit::QuaternionUtil::Integrate(::UnityEngine::Quaternion q, ::UnityEngine::Vector3 omega, float dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::Integrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "Integrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(omega), ::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, omega, dt);
}
// Autogenerated method: BoingKit.QuaternionUtil.ToVector4
::UnityEngine::Vector4 BoingKit::QuaternionUtil::ToVector4(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::ToVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "ToVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: BoingKit.QuaternionUtil.FromVector4
::UnityEngine::Quaternion BoingKit::QuaternionUtil::FromVector4(::UnityEngine::Vector4 v, bool normalize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::FromVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "FromVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(normalize)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, normalize);
}
// Autogenerated method: BoingKit.QuaternionUtil.DecomposeSwingTwist
void BoingKit::QuaternionUtil::DecomposeSwingTwist(::UnityEngine::Quaternion q, ::UnityEngine::Vector3 twistAxis, ByRef<::UnityEngine::Quaternion> swing, ByRef<::UnityEngine::Quaternion> twist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::DecomposeSwingTwist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "DecomposeSwingTwist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(twistAxis), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, twistAxis, byref(swing), byref(twist));
}
// Autogenerated method: BoingKit.QuaternionUtil.Sterp
::UnityEngine::Quaternion BoingKit::QuaternionUtil::Sterp(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, ::UnityEngine::Vector3 twistAxis, float t, ::BoingKit::QuaternionUtil::SterpMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::Sterp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "Sterp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(twistAxis), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, twistAxis, t, mode);
}
// Autogenerated method: BoingKit.QuaternionUtil.Sterp
::UnityEngine::Quaternion BoingKit::QuaternionUtil::Sterp(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, ::UnityEngine::Vector3 twistAxis, float t, ByRef<::UnityEngine::Quaternion> swing, ByRef<::UnityEngine::Quaternion> twist, ::BoingKit::QuaternionUtil::SterpMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::Sterp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "Sterp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(twistAxis), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, twistAxis, t, byref(swing), byref(twist), mode);
}
// Autogenerated method: BoingKit.QuaternionUtil.Sterp
::UnityEngine::Quaternion BoingKit::QuaternionUtil::Sterp(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, ::UnityEngine::Vector3 twistAxis, float tSwing, float tTwist, ::BoingKit::QuaternionUtil::SterpMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::Sterp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "Sterp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(twistAxis), ::il2cpp_utils::ExtractType(tSwing), ::il2cpp_utils::ExtractType(tTwist), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, twistAxis, tSwing, tTwist, mode);
}
// Autogenerated method: BoingKit.QuaternionUtil.Sterp
::UnityEngine::Quaternion BoingKit::QuaternionUtil::Sterp(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, ::UnityEngine::Vector3 twistAxis, float tSwing, float tTwist, ByRef<::UnityEngine::Quaternion> swing, ByRef<::UnityEngine::Quaternion> twist, ::BoingKit::QuaternionUtil::SterpMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::Sterp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionUtil", "Sterp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(twistAxis), ::il2cpp_utils::ExtractType(tSwing), ::il2cpp_utils::ExtractType(tTwist), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, twistAxis, tSwing, tTwist, byref(swing), byref(twist), mode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.QuaternionUtil/SterpMode
#include "BoingKit/QuaternionUtil_SterpMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BoingKit.QuaternionUtil/SterpMode Nlerp
::BoingKit::QuaternionUtil::SterpMode BoingKit::QuaternionUtil::SterpMode::_get_Nlerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::SterpMode::_get_Nlerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::QuaternionUtil::SterpMode>("BoingKit", "QuaternionUtil/SterpMode", "Nlerp"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.QuaternionUtil/SterpMode Nlerp
void BoingKit::QuaternionUtil::SterpMode::_set_Nlerp(::BoingKit::QuaternionUtil::SterpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::SterpMode::_set_Nlerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "QuaternionUtil/SterpMode", "Nlerp", value));
}
// Autogenerated static field getter
// Get static field: static public BoingKit.QuaternionUtil/SterpMode Slerp
::BoingKit::QuaternionUtil::SterpMode BoingKit::QuaternionUtil::SterpMode::_get_Slerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::SterpMode::_get_Slerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BoingKit::QuaternionUtil::SterpMode>("BoingKit", "QuaternionUtil/SterpMode", "Slerp"));
}
// Autogenerated static field setter
// Set static field: static public BoingKit.QuaternionUtil/SterpMode Slerp
void BoingKit::QuaternionUtil::SterpMode::_set_Slerp(::BoingKit::QuaternionUtil::SterpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::SterpMode::_set_Slerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "QuaternionUtil/SterpMode", "Slerp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BoingKit::QuaternionUtil::SterpMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionUtil::SterpMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.FloatSpring
#include "BoingKit/FloatSpring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 Stride
int BoingKit::FloatSpring::_get_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::_get_Stride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "FloatSpring", "Stride"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 Stride
void BoingKit::FloatSpring::_set_Stride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::_set_Stride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "FloatSpring", "Stride", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single Value
[[deprecated("Use field access instead!")]] float& BoingKit::FloatSpring::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Velocity
[[deprecated("Use field access instead!")]] float& BoingKit::FloatSpring::dyn_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::dyn_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Velocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.FloatSpring.Reset
void BoingKit::FloatSpring::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.FloatSpring.Reset
void BoingKit::FloatSpring::Reset(float initValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue);
}
// Autogenerated method: BoingKit.FloatSpring.Reset
void BoingKit::FloatSpring::Reset(float initValue, float initVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue), ::il2cpp_utils::ExtractType(initVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue, initVelocity);
}
// Autogenerated method: BoingKit.FloatSpring.TrackDampingRatio
float BoingKit::FloatSpring::TrackDampingRatio(float targetValue, float angularFrequency, float dampingRatio, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::TrackDampingRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackDampingRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(angularFrequency), ::il2cpp_utils::ExtractType(dampingRatio), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, targetValue, angularFrequency, dampingRatio, deltaTime);
}
// Autogenerated method: BoingKit.FloatSpring.TrackHalfLife
float BoingKit::FloatSpring::TrackHalfLife(float targetValue, float frequencyHz, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::TrackHalfLife");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackHalfLife", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(frequencyHz), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, targetValue, frequencyHz, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.FloatSpring.TrackExponential
float BoingKit::FloatSpring::TrackExponential(float targetValue, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::TrackExponential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackExponential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, targetValue, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.FloatSpring..cctor
void BoingKit::FloatSpring::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::FloatSpring::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "FloatSpring", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.Vector2Spring
#include "BoingKit/Vector2Spring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 Stride
int BoingKit::Vector2Spring::_get_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::_get_Stride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "Vector2Spring", "Stride"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 Stride
void BoingKit::Vector2Spring::_set_Stride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::_set_Stride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "Vector2Spring", "Stride", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 Value
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& BoingKit::Vector2Spring::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& BoingKit::Vector2Spring::dyn_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::dyn_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.Vector2Spring.Reset
void BoingKit::Vector2Spring::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Vector2Spring.Reset
void BoingKit::Vector2Spring::Reset(::UnityEngine::Vector2 initValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue);
}
// Autogenerated method: BoingKit.Vector2Spring.Reset
void BoingKit::Vector2Spring::Reset(::UnityEngine::Vector2 initValue, ::UnityEngine::Vector2 initVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue), ::il2cpp_utils::ExtractType(initVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue, initVelocity);
}
// Autogenerated method: BoingKit.Vector2Spring.TrackDampingRatio
::UnityEngine::Vector2 BoingKit::Vector2Spring::TrackDampingRatio(::UnityEngine::Vector2 targetValue, float angularFrequency, float dampingRatio, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::TrackDampingRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackDampingRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(angularFrequency), ::il2cpp_utils::ExtractType(dampingRatio), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, targetValue, angularFrequency, dampingRatio, deltaTime);
}
// Autogenerated method: BoingKit.Vector2Spring.TrackHalfLife
::UnityEngine::Vector2 BoingKit::Vector2Spring::TrackHalfLife(::UnityEngine::Vector2 targetValue, float frequencyHz, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::TrackHalfLife");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackHalfLife", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(frequencyHz), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, targetValue, frequencyHz, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.Vector2Spring.TrackExponential
::UnityEngine::Vector2 BoingKit::Vector2Spring::TrackExponential(::UnityEngine::Vector2 targetValue, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::TrackExponential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackExponential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, targetValue, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.Vector2Spring..cctor
void BoingKit::Vector2Spring::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector2Spring::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Vector2Spring", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.Vector3Spring
#include "BoingKit/Vector3Spring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 Stride
int BoingKit::Vector3Spring::_get_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::_get_Stride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "Vector3Spring", "Stride"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 Stride
void BoingKit::Vector3Spring::_set_Stride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::_set_Stride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "Vector3Spring", "Stride", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Value
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::Vector3Spring::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding0
[[deprecated("Use field access instead!")]] float& BoingKit::Vector3Spring::dyn_m_padding0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::dyn_m_padding0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding0"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& BoingKit::Vector3Spring::dyn_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::dyn_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding1
[[deprecated("Use field access instead!")]] float& BoingKit::Vector3Spring::dyn_m_padding1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::dyn_m_padding1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.Vector3Spring.Reset
void BoingKit::Vector3Spring::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Vector3Spring.Reset
void BoingKit::Vector3Spring::Reset(::UnityEngine::Vector3 initValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue);
}
// Autogenerated method: BoingKit.Vector3Spring.Reset
void BoingKit::Vector3Spring::Reset(::UnityEngine::Vector3 initValue, ::UnityEngine::Vector3 initVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue), ::il2cpp_utils::ExtractType(initVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue, initVelocity);
}
// Autogenerated method: BoingKit.Vector3Spring.TrackDampingRatio
::UnityEngine::Vector3 BoingKit::Vector3Spring::TrackDampingRatio(::UnityEngine::Vector3 targetValue, float angularFrequency, float dampingRatio, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::TrackDampingRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackDampingRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(angularFrequency), ::il2cpp_utils::ExtractType(dampingRatio), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, targetValue, angularFrequency, dampingRatio, deltaTime);
}
// Autogenerated method: BoingKit.Vector3Spring.TrackHalfLife
::UnityEngine::Vector3 BoingKit::Vector3Spring::TrackHalfLife(::UnityEngine::Vector3 targetValue, float frequencyHz, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::TrackHalfLife");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackHalfLife", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(frequencyHz), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, targetValue, frequencyHz, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.Vector3Spring.TrackExponential
::UnityEngine::Vector3 BoingKit::Vector3Spring::TrackExponential(::UnityEngine::Vector3 targetValue, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::TrackExponential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackExponential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, targetValue, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.Vector3Spring..cctor
void BoingKit::Vector3Spring::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector3Spring::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Vector3Spring", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.Vector4Spring
#include "BoingKit/Vector4Spring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 Stride
int BoingKit::Vector4Spring::_get_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::_get_Stride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "Vector4Spring", "Stride"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 Stride
void BoingKit::Vector4Spring::_set_Stride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::_set_Stride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "Vector4Spring", "Stride", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 Value
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& BoingKit::Vector4Spring::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& BoingKit::Vector4Spring::dyn_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::dyn_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.Vector4Spring.Reset
void BoingKit::Vector4Spring::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.Vector4Spring.Reset
void BoingKit::Vector4Spring::Reset(::UnityEngine::Vector4 initValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue);
}
// Autogenerated method: BoingKit.Vector4Spring.Reset
void BoingKit::Vector4Spring::Reset(::UnityEngine::Vector4 initValue, ::UnityEngine::Vector4 initVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue), ::il2cpp_utils::ExtractType(initVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue, initVelocity);
}
// Autogenerated method: BoingKit.Vector4Spring.TrackDampingRatio
::UnityEngine::Vector4 BoingKit::Vector4Spring::TrackDampingRatio(::UnityEngine::Vector4 targetValue, float angularFrequency, float dampingRatio, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::TrackDampingRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackDampingRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(angularFrequency), ::il2cpp_utils::ExtractType(dampingRatio), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, targetValue, angularFrequency, dampingRatio, deltaTime);
}
// Autogenerated method: BoingKit.Vector4Spring.TrackHalfLife
::UnityEngine::Vector4 BoingKit::Vector4Spring::TrackHalfLife(::UnityEngine::Vector4 targetValue, float frequencyHz, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::TrackHalfLife");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackHalfLife", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(frequencyHz), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, targetValue, frequencyHz, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.Vector4Spring.TrackExponential
::UnityEngine::Vector4 BoingKit::Vector4Spring::TrackExponential(::UnityEngine::Vector4 targetValue, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::TrackExponential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackExponential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, targetValue, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.Vector4Spring..cctor
void BoingKit::Vector4Spring::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::Vector4Spring::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "Vector4Spring", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.QuaternionSpring
#include "BoingKit/QuaternionSpring.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 Stride
int BoingKit::QuaternionSpring::_get_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::_get_Stride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BoingKit", "QuaternionSpring", "Stride"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 Stride
void BoingKit::QuaternionSpring::_set_Stride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::_set_Stride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "QuaternionSpring", "Stride", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 ValueVec
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& BoingKit::QuaternionSpring::dyn_ValueVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::dyn_ValueVec");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ValueVec"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 VelocityVec
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& BoingKit::QuaternionSpring::dyn_VelocityVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::dyn_VelocityVec");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VelocityVec"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoingKit.QuaternionSpring.get_ValueQuat
::UnityEngine::Quaternion BoingKit::QuaternionSpring::get_ValueQuat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::get_ValueQuat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ValueQuat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.QuaternionSpring.set_ValueQuat
void BoingKit::QuaternionSpring::set_ValueQuat(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::set_ValueQuat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ValueQuat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BoingKit.QuaternionSpring.Reset
void BoingKit::QuaternionSpring::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoingKit.QuaternionSpring.Reset
void BoingKit::QuaternionSpring::Reset(::UnityEngine::Vector4 initValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue);
}
// Autogenerated method: BoingKit.QuaternionSpring.Reset
void BoingKit::QuaternionSpring::Reset(::UnityEngine::Vector4 initValue, ::UnityEngine::Vector4 initVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue), ::il2cpp_utils::ExtractType(initVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue, initVelocity);
}
// Autogenerated method: BoingKit.QuaternionSpring.Reset
void BoingKit::QuaternionSpring::Reset(::UnityEngine::Quaternion initValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue);
}
// Autogenerated method: BoingKit.QuaternionSpring.Reset
void BoingKit::QuaternionSpring::Reset(::UnityEngine::Quaternion initValue, ::UnityEngine::Quaternion initVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initValue), ::il2cpp_utils::ExtractType(initVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initValue, initVelocity);
}
// Autogenerated method: BoingKit.QuaternionSpring.TrackDampingRatio
::UnityEngine::Quaternion BoingKit::QuaternionSpring::TrackDampingRatio(::UnityEngine::Vector4 targetValueVec, float angularFrequency, float dampingRatio, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::TrackDampingRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackDampingRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValueVec), ::il2cpp_utils::ExtractType(angularFrequency), ::il2cpp_utils::ExtractType(dampingRatio), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, targetValueVec, angularFrequency, dampingRatio, deltaTime);
}
// Autogenerated method: BoingKit.QuaternionSpring.TrackDampingRatio
::UnityEngine::Quaternion BoingKit::QuaternionSpring::TrackDampingRatio(::UnityEngine::Quaternion targetValue, float angularFrequency, float dampingRatio, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::TrackDampingRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackDampingRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(angularFrequency), ::il2cpp_utils::ExtractType(dampingRatio), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, targetValue, angularFrequency, dampingRatio, deltaTime);
}
// Autogenerated method: BoingKit.QuaternionSpring.TrackHalfLife
::UnityEngine::Quaternion BoingKit::QuaternionSpring::TrackHalfLife(::UnityEngine::Vector4 targetValueVec, float frequencyHz, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::TrackHalfLife");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackHalfLife", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValueVec), ::il2cpp_utils::ExtractType(frequencyHz), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, targetValueVec, frequencyHz, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.QuaternionSpring.TrackHalfLife
::UnityEngine::Quaternion BoingKit::QuaternionSpring::TrackHalfLife(::UnityEngine::Quaternion targetValue, float frequencyHz, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::TrackHalfLife");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackHalfLife", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(frequencyHz), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, targetValue, frequencyHz, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.QuaternionSpring.TrackExponential
::UnityEngine::Quaternion BoingKit::QuaternionSpring::TrackExponential(::UnityEngine::Vector4 targetValueVec, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::TrackExponential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackExponential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValueVec), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, targetValueVec, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.QuaternionSpring.TrackExponential
::UnityEngine::Quaternion BoingKit::QuaternionSpring::TrackExponential(::UnityEngine::Quaternion targetValue, float halfLife, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::TrackExponential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrackExponential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(halfLife), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, targetValue, halfLife, deltaTime);
}
// Autogenerated method: BoingKit.QuaternionSpring..cctor
void BoingKit::QuaternionSpring::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::QuaternionSpring::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "QuaternionSpring", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BoingKit.VectorUtil
#include "BoingKit/VectorUtil.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Vector3 Min
::UnityEngine::Vector3 BoingKit::VectorUtil::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("BoingKit", "VectorUtil", "Min"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Vector3 Min
void BoingKit::VectorUtil::_set_Min(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "VectorUtil", "Min", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Vector3 Max
::UnityEngine::Vector3 BoingKit::VectorUtil::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("BoingKit", "VectorUtil", "Max"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Vector3 Max
void BoingKit::VectorUtil::_set_Max(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BoingKit", "VectorUtil", "Max", value));
}
// Autogenerated method: BoingKit.VectorUtil.Rotate2D
::UnityEngine::Vector3 BoingKit::VectorUtil::Rotate2D(::UnityEngine::Vector3 v, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::Rotate2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "Rotate2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, angle);
}
// Autogenerated method: BoingKit.VectorUtil.NormalizeSafe
::UnityEngine::Vector4 BoingKit::VectorUtil::NormalizeSafe(::UnityEngine::Vector4 v, ::UnityEngine::Vector4 fallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::NormalizeSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "NormalizeSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(fallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, fallback);
}
// Autogenerated method: BoingKit.VectorUtil.FindOrthogonal
::UnityEngine::Vector3 BoingKit::VectorUtil::FindOrthogonal(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::FindOrthogonal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "FindOrthogonal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: BoingKit.VectorUtil.FormOrthogonalBasis
void BoingKit::VectorUtil::FormOrthogonalBasis(::UnityEngine::Vector3 v, ByRef<::UnityEngine::Vector3> a, ByRef<::UnityEngine::Vector3> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::FormOrthogonalBasis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "FormOrthogonalBasis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, byref(a), byref(b));
}
// Autogenerated method: BoingKit.VectorUtil.Slerp
::UnityEngine::Vector3 BoingKit::VectorUtil::Slerp(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::Slerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "Slerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: BoingKit.VectorUtil.GetClosestPointOnSegment
::UnityEngine::Vector3 BoingKit::VectorUtil::GetClosestPointOnSegment(::UnityEngine::Vector3 p, ::UnityEngine::Vector3 segA, ::UnityEngine::Vector3 segB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::GetClosestPointOnSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "GetClosestPointOnSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(segA), ::il2cpp_utils::ExtractType(segB)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, segA, segB);
}
// Autogenerated method: BoingKit.VectorUtil.TriLerp
::UnityEngine::Vector3 BoingKit::VectorUtil::TriLerp(ByRef<::UnityEngine::Vector3> v000, ByRef<::UnityEngine::Vector3> v001, ByRef<::UnityEngine::Vector3> v010, ByRef<::UnityEngine::Vector3> v011, ByRef<::UnityEngine::Vector3> v100, ByRef<::UnityEngine::Vector3> v101, ByRef<::UnityEngine::Vector3> v110, ByRef<::UnityEngine::Vector3> v111, float tx, float ty, float tz) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::TriLerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "TriLerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v000), ::il2cpp_utils::ExtractType(v001), ::il2cpp_utils::ExtractType(v010), ::il2cpp_utils::ExtractType(v011), ::il2cpp_utils::ExtractType(v100), ::il2cpp_utils::ExtractType(v101), ::il2cpp_utils::ExtractType(v110), ::il2cpp_utils::ExtractType(v111), ::il2cpp_utils::ExtractType(tx), ::il2cpp_utils::ExtractType(ty), ::il2cpp_utils::ExtractType(tz)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(v000), byref(v001), byref(v010), byref(v011), byref(v100), byref(v101), byref(v110), byref(v111), tx, ty, tz);
}
// Autogenerated method: BoingKit.VectorUtil.TriLerp
::UnityEngine::Vector3 BoingKit::VectorUtil::TriLerp(ByRef<::UnityEngine::Vector3> v000, ByRef<::UnityEngine::Vector3> v001, ByRef<::UnityEngine::Vector3> v010, ByRef<::UnityEngine::Vector3> v011, ByRef<::UnityEngine::Vector3> v100, ByRef<::UnityEngine::Vector3> v101, ByRef<::UnityEngine::Vector3> v110, ByRef<::UnityEngine::Vector3> v111, bool lerpX, bool lerpY, bool lerpZ, float tx, float ty, float tz) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::TriLerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "TriLerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v000), ::il2cpp_utils::ExtractType(v001), ::il2cpp_utils::ExtractType(v010), ::il2cpp_utils::ExtractType(v011), ::il2cpp_utils::ExtractType(v100), ::il2cpp_utils::ExtractType(v101), ::il2cpp_utils::ExtractType(v110), ::il2cpp_utils::ExtractType(v111), ::il2cpp_utils::ExtractType(lerpX), ::il2cpp_utils::ExtractType(lerpY), ::il2cpp_utils::ExtractType(lerpZ), ::il2cpp_utils::ExtractType(tx), ::il2cpp_utils::ExtractType(ty), ::il2cpp_utils::ExtractType(tz)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(v000), byref(v001), byref(v010), byref(v011), byref(v100), byref(v101), byref(v110), byref(v111), lerpX, lerpY, lerpZ, tx, ty, tz);
}
// Autogenerated method: BoingKit.VectorUtil.TriLerp
::UnityEngine::Vector3 BoingKit::VectorUtil::TriLerp(ByRef<::UnityEngine::Vector3> min, ByRef<::UnityEngine::Vector3> max, bool lerpX, bool lerpY, bool lerpZ, float tx, float ty, float tz) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::TriLerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "TriLerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(lerpX), ::il2cpp_utils::ExtractType(lerpY), ::il2cpp_utils::ExtractType(lerpZ), ::il2cpp_utils::ExtractType(tx), ::il2cpp_utils::ExtractType(ty), ::il2cpp_utils::ExtractType(tz)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(min), byref(max), lerpX, lerpY, lerpZ, tx, ty, tz);
}
// Autogenerated method: BoingKit.VectorUtil.TriLerp
::UnityEngine::Vector4 BoingKit::VectorUtil::TriLerp(ByRef<::UnityEngine::Vector4> v000, ByRef<::UnityEngine::Vector4> v001, ByRef<::UnityEngine::Vector4> v010, ByRef<::UnityEngine::Vector4> v011, ByRef<::UnityEngine::Vector4> v100, ByRef<::UnityEngine::Vector4> v101, ByRef<::UnityEngine::Vector4> v110, ByRef<::UnityEngine::Vector4> v111, bool lerpX, bool lerpY, bool lerpZ, float tx, float ty, float tz) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::TriLerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "TriLerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v000), ::il2cpp_utils::ExtractType(v001), ::il2cpp_utils::ExtractType(v010), ::il2cpp_utils::ExtractType(v011), ::il2cpp_utils::ExtractType(v100), ::il2cpp_utils::ExtractType(v101), ::il2cpp_utils::ExtractType(v110), ::il2cpp_utils::ExtractType(v111), ::il2cpp_utils::ExtractType(lerpX), ::il2cpp_utils::ExtractType(lerpY), ::il2cpp_utils::ExtractType(lerpZ), ::il2cpp_utils::ExtractType(tx), ::il2cpp_utils::ExtractType(ty), ::il2cpp_utils::ExtractType(tz)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(v000), byref(v001), byref(v010), byref(v011), byref(v100), byref(v101), byref(v110), byref(v111), lerpX, lerpY, lerpZ, tx, ty, tz);
}
// Autogenerated method: BoingKit.VectorUtil.TriLerp
::UnityEngine::Vector4 BoingKit::VectorUtil::TriLerp(ByRef<::UnityEngine::Vector4> min, ByRef<::UnityEngine::Vector4> max, bool lerpX, bool lerpY, bool lerpZ, float tx, float ty, float tz) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::TriLerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "TriLerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(lerpX), ::il2cpp_utils::ExtractType(lerpY), ::il2cpp_utils::ExtractType(lerpZ), ::il2cpp_utils::ExtractType(tx), ::il2cpp_utils::ExtractType(ty), ::il2cpp_utils::ExtractType(tz)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(min), byref(max), lerpX, lerpY, lerpZ, tx, ty, tz);
}
// Autogenerated method: BoingKit.VectorUtil.ClampLength
::UnityEngine::Vector3 BoingKit::VectorUtil::ClampLength(::UnityEngine::Vector3 v, float minLen, float maxLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::ClampLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "ClampLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(minLen), ::il2cpp_utils::ExtractType(maxLen)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, minLen, maxLen);
}
// Autogenerated method: BoingKit.VectorUtil.MinComponent
float BoingKit::VectorUtil::MinComponent(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::MinComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "MinComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: BoingKit.VectorUtil.MaxComponent
float BoingKit::VectorUtil::MaxComponent(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::MaxComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "MaxComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: BoingKit.VectorUtil.ComponentWiseAbs
::UnityEngine::Vector3 BoingKit::VectorUtil::ComponentWiseAbs(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::ComponentWiseAbs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "ComponentWiseAbs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: BoingKit.VectorUtil.ComponentWiseMult
::UnityEngine::Vector3 BoingKit::VectorUtil::ComponentWiseMult(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::ComponentWiseMult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "ComponentWiseMult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: BoingKit.VectorUtil.ComponentWiseDiv
::UnityEngine::Vector3 BoingKit::VectorUtil::ComponentWiseDiv(::UnityEngine::Vector3 num, ::UnityEngine::Vector3 den) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::ComponentWiseDiv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "ComponentWiseDiv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num), ::il2cpp_utils::ExtractType(den)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num, den);
}
// Autogenerated method: BoingKit.VectorUtil.ComponentWiseDivSafe
::UnityEngine::Vector3 BoingKit::VectorUtil::ComponentWiseDivSafe(::UnityEngine::Vector3 num, ::UnityEngine::Vector3 den) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::ComponentWiseDivSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "ComponentWiseDivSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num), ::il2cpp_utils::ExtractType(den)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num, den);
}
// Autogenerated method: BoingKit.VectorUtil.ClampBend
::UnityEngine::Vector3 BoingKit::VectorUtil::ClampBend(::UnityEngine::Vector3 vector, ::UnityEngine::Vector3 reference, float maxBendAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::ClampBend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", "ClampBend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(reference), ::il2cpp_utils::ExtractType(maxBendAngle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector, reference, maxBendAngle);
}
// Autogenerated method: BoingKit.VectorUtil..cctor
void BoingKit::VectorUtil::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BoingKit::VectorUtil::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BoingKit", "VectorUtil", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__16>
#include "Fusion/CodeGen/ReaderWriter@Fusion_NetworkString_1-Fusion__16.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.IElementReaderWriter`1<Fusion.NetworkString`1<Fusion._16>> Instance
::Fusion::IElementReaderWriter_1<::Fusion::NetworkString_1<::Fusion::_16>>* Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::IElementReaderWriter_1<::Fusion::NetworkString_1<::Fusion::_16>>*>("Fusion.CodeGen", "ReaderWriter@Fusion_NetworkString`1<Fusion__16", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.IElementReaderWriter`1<Fusion.NetworkString`1<Fusion._16>> Instance
void Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::_set_Instance(::Fusion::IElementReaderWriter_1<::Fusion::NetworkString_1<::Fusion::_16>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.CodeGen", "ReaderWriter@Fusion_NetworkString`1<Fusion__16", "Instance", value));
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__16>.Read
::Fusion::NetworkString_1<::Fusion::_16> Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::Read(uint8_t* data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkString_1<::Fusion::_16>, false>(this, ___internal__method, data, index);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__16>.ReadRef
::Fusion::NetworkString_1<::Fusion::_16> Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::ReadRef(uint8_t* data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::ReadRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkString_1<::Fusion::_16>, false>(this, ___internal__method, data, index);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__16>.Write
void Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::Write(uint8_t* data, int index, ::Fusion::NetworkString_1<::Fusion::_16> val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, index, val);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__16>.GetElementWordCount
int Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::GetElementWordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::GetElementWordCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__16>.GetInstance
::Fusion::IElementReaderWriter_1<::Fusion::NetworkString_1<::Fusion::_16>>* Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__16::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.CodeGen", "ReaderWriter@Fusion_NetworkString`1<Fusion__16", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::IElementReaderWriter_1<::Fusion::NetworkString_1<::Fusion::_16>>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.CodeGen.UnityValueSurrogate@ReaderWriter@Fusion_NetworkString`1<Fusion__16>
#include "Fusion/CodeGen/UnityValueSurrogate@ReaderWriter@Fusion_NetworkString_1-Fusion__16.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.NetworkString`1<Fusion._16> Data
[[deprecated("Use field access instead!")]] ::Fusion::NetworkString_1<::Fusion::_16>& Fusion::CodeGen::UnityValueSurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__16::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::UnityValueSurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__16::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::Fusion::NetworkString_1<::Fusion::_16>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.CodeGen.UnityValueSurrogate@ReaderWriter@Fusion_NetworkString`1<Fusion__16>.get_DataProperty
::Fusion::NetworkString_1<::Fusion::_16> Fusion::CodeGen::UnityValueSurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__16::get_DataProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::UnityValueSurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__16::get_DataProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::CodeGen::UnityValueSurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__16*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkString_1<::Fusion::_16>, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.CodeGen.UnityValueSurrogate@ReaderWriter@Fusion_NetworkString`1<Fusion__16>.set_DataProperty
void Fusion::CodeGen::UnityValueSurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__16::set_DataProperty(::Fusion::NetworkString_1<::Fusion::_16> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::UnityValueSurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__16::set_DataProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::CodeGen::UnityValueSurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__16*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__32>
#include "Fusion/CodeGen/ReaderWriter@Fusion_NetworkString_1-Fusion__32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.IElementReaderWriter`1<Fusion.NetworkString`1<Fusion._32>> Instance
::Fusion::IElementReaderWriter_1<::Fusion::NetworkString_1<::Fusion::_32>>* Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::IElementReaderWriter_1<::Fusion::NetworkString_1<::Fusion::_32>>*>("Fusion.CodeGen", "ReaderWriter@Fusion_NetworkString`1<Fusion__32", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.IElementReaderWriter`1<Fusion.NetworkString`1<Fusion._32>> Instance
void Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::_set_Instance(::Fusion::IElementReaderWriter_1<::Fusion::NetworkString_1<::Fusion::_32>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.CodeGen", "ReaderWriter@Fusion_NetworkString`1<Fusion__32", "Instance", value));
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__32>.Read
::Fusion::NetworkString_1<::Fusion::_32> Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::Read(uint8_t* data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkString_1<::Fusion::_32>, false>(this, ___internal__method, data, index);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__32>.ReadRef
::Fusion::NetworkString_1<::Fusion::_32> Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::ReadRef(uint8_t* data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::ReadRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkString_1<::Fusion::_32>, false>(this, ___internal__method, data, index);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__32>.Write
void Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::Write(uint8_t* data, int index, ::Fusion::NetworkString_1<::Fusion::_32> val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, index, val);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__32>.GetElementWordCount
int Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::GetElementWordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::GetElementWordCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_NetworkString`1<Fusion__32>.GetInstance
::Fusion::IElementReaderWriter_1<::Fusion::NetworkString_1<::Fusion::_32>>* Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_NetworkString_1$Fusion__32::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.CodeGen", "ReaderWriter@Fusion_NetworkString`1<Fusion__32", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::IElementReaderWriter_1<::Fusion::NetworkString_1<::Fusion::_32>>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.CodeGen.UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString`1<Fusion__32>@ReaderWriter@Fusion_NetworkString`1<Fusion__32>
#include "Fusion/CodeGen/UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString_1-Fusion__32-@ReaderWriter@Fusion_NetworkString_1-Fusion__32.hpp"
// Including type: Fusion.SerializableDictionary`2
#include "Fusion/SerializableDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Fusion.SerializableDictionary`2<Fusion.NetworkString`1<Fusion._32>,Fusion.NetworkString`1<Fusion._32>> Data
[[deprecated("Use field access instead!")]] ::Fusion::SerializableDictionary_2<::Fusion::NetworkString_1<::Fusion::_32>, ::Fusion::NetworkString_1<::Fusion::_32>>*& Fusion::CodeGen::UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__32$@ReaderWriter@Fusion_NetworkString_1$Fusion__32::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__32$@ReaderWriter@Fusion_NetworkString_1$Fusion__32::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::Fusion::SerializableDictionary_2<::Fusion::NetworkString_1<::Fusion::_32>, ::Fusion::NetworkString_1<::Fusion::_32>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Fusion.CodeGen.UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString`1<Fusion__32>@ReaderWriter@Fusion_NetworkString`1<Fusion__32>.get_DataProperty
::Fusion::SerializableDictionary_2<::Fusion::NetworkString_1<::Fusion::_32>, ::Fusion::NetworkString_1<::Fusion::_32>>* Fusion::CodeGen::UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__32$@ReaderWriter@Fusion_NetworkString_1$Fusion__32::get_DataProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__32$@ReaderWriter@Fusion_NetworkString_1$Fusion__32::get_DataProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::CodeGen::UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__32$@ReaderWriter@Fusion_NetworkString_1$Fusion__32*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::SerializableDictionary_2<::Fusion::NetworkString_1<::Fusion::_32>, ::Fusion::NetworkString_1<::Fusion::_32>>*, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.CodeGen.UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString`1<Fusion__32>@ReaderWriter@Fusion_NetworkString`1<Fusion__32>.set_DataProperty
void Fusion::CodeGen::UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__32$@ReaderWriter@Fusion_NetworkString_1$Fusion__32::set_DataProperty(::Fusion::SerializableDictionary_2<::Fusion::NetworkString_1<::Fusion::_32>, ::Fusion::NetworkString_1<::Fusion::_32>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__32$@ReaderWriter@Fusion_NetworkString_1$Fusion__32::set_DataProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::CodeGen::UnityDictionarySurrogate@ReaderWriter@Fusion_NetworkString_1$Fusion__32$@ReaderWriter@Fusion_NetworkString_1$Fusion__32*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.CodeGen.ReaderWriter@Fusion_PlayerRef
#include "Fusion/CodeGen/ReaderWriter@Fusion_PlayerRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.IElementReaderWriter`1<Fusion.PlayerRef> Instance
::Fusion::IElementReaderWriter_1<::Fusion::PlayerRef>* Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::IElementReaderWriter_1<::Fusion::PlayerRef>*>("Fusion.CodeGen", "ReaderWriter@Fusion_PlayerRef", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.IElementReaderWriter`1<Fusion.PlayerRef> Instance
void Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::_set_Instance(::Fusion::IElementReaderWriter_1<::Fusion::PlayerRef>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.CodeGen", "ReaderWriter@Fusion_PlayerRef", "Instance", value));
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_PlayerRef.Read
::Fusion::PlayerRef Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::Read(uint8_t* data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::PlayerRef, false>(this, ___internal__method, data, index);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_PlayerRef.ReadRef
::Fusion::PlayerRef Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::ReadRef(uint8_t* data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::ReadRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::PlayerRef, false>(this, ___internal__method, data, index);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_PlayerRef.Write
void Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::Write(uint8_t* data, int index, ::Fusion::PlayerRef val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, index, val);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_PlayerRef.GetElementWordCount
int Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::GetElementWordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::GetElementWordCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@Fusion_PlayerRef.GetInstance
::Fusion::IElementReaderWriter_1<::Fusion::PlayerRef>* Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@Fusion_PlayerRef::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.CodeGen", "ReaderWriter@Fusion_PlayerRef", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::IElementReaderWriter_1<::Fusion::PlayerRef>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Fusion.CodeGen.ReaderWriter@FusionPlayerProperties__PlayerInfo
#include "Fusion/CodeGen/ReaderWriter@FusionPlayerProperties__PlayerInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Fusion.IElementReaderWriter`1<FusionPlayerProperties/PlayerInfo> Instance
::Fusion::IElementReaderWriter_1<::GlobalNamespace::FusionPlayerProperties::PlayerInfo>* Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::IElementReaderWriter_1<::GlobalNamespace::FusionPlayerProperties::PlayerInfo>*>("Fusion.CodeGen", "ReaderWriter@FusionPlayerProperties__PlayerInfo", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.IElementReaderWriter`1<FusionPlayerProperties/PlayerInfo> Instance
void Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::_set_Instance(::Fusion::IElementReaderWriter_1<::GlobalNamespace::FusionPlayerProperties::PlayerInfo>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Fusion.CodeGen", "ReaderWriter@FusionPlayerProperties__PlayerInfo", "Instance", value));
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@FusionPlayerProperties__PlayerInfo.Read
::GlobalNamespace::FusionPlayerProperties::PlayerInfo Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::Read(uint8_t* data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionPlayerProperties::PlayerInfo, false>(this, ___internal__method, data, index);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@FusionPlayerProperties__PlayerInfo.ReadRef
::GlobalNamespace::FusionPlayerProperties::PlayerInfo Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::ReadRef(uint8_t* data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::ReadRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionPlayerProperties::PlayerInfo, false>(this, ___internal__method, data, index);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@FusionPlayerProperties__PlayerInfo.Write
void Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::Write(uint8_t* data, int index, ::GlobalNamespace::FusionPlayerProperties::PlayerInfo val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, index, val);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@FusionPlayerProperties__PlayerInfo.GetElementWordCount
int Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::GetElementWordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::GetElementWordCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Fusion.CodeGen.ReaderWriter@FusionPlayerProperties__PlayerInfo.GetInstance
::Fusion::IElementReaderWriter_1<::GlobalNamespace::FusionPlayerProperties::PlayerInfo>* Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Fusion::CodeGen::ReaderWriter@FusionPlayerProperties__PlayerInfo::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Fusion.CodeGen", "ReaderWriter@FusionPlayerProperties__PlayerInfo", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::IElementReaderWriter_1<::GlobalNamespace::FusionPlayerProperties::PlayerInfo>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: __JobReflectionRegistrationOutput__1581296634
#include "GlobalNamespace/__JobReflectionRegistrationOutput__1581296634.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: __JobReflectionRegistrationOutput__1581296634.CreateJobReflectionData
void GlobalNamespace::__JobReflectionRegistrationOutput__1581296634::CreateJobReflectionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::__JobReflectionRegistrationOutput__1581296634::CreateJobReflectionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "__JobReflectionRegistrationOutput__1581296634", "CreateJobReflectionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: __JobReflectionRegistrationOutput__1581296634.EarlyInit
void GlobalNamespace::__JobReflectionRegistrationOutput__1581296634::EarlyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::__JobReflectionRegistrationOutput__1581296634::EarlyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "__JobReflectionRegistrationOutput__1581296634", "EarlyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1__.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1___MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1__::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1__::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1__::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1__::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Core.Utilities.ArrayElementTitleAttribute
#include "Oculus/Voice/Core/Utilities/ArrayElementTitleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String varname
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Voice::Core::Utilities::ArrayElementTitleAttribute::dyn_varname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Utilities::ArrayElementTitleAttribute::dyn_varname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "varname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String fallbackName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Voice::Core::Utilities::ArrayElementTitleAttribute::dyn_fallbackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Utilities::ArrayElementTitleAttribute::dyn_fallbackName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Core.Utilities.DateTimeUtility
#include "Oculus/Voice/Core/Utilities/DateTimeUtility.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Core.Utilities.DateTimeUtility.get_UtcNow
::System::DateTime Oculus::Voice::Core::Utilities::DateTimeUtility::get_UtcNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Utilities::DateTimeUtility::get_UtcNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice.Core.Utilities", "DateTimeUtility", "get_UtcNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Utilities.DateTimeUtility.get_ElapsedMilliseconds
int64_t Oculus::Voice::Core::Utilities::DateTimeUtility::get_ElapsedMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Utilities::DateTimeUtility::get_ElapsedMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice.Core.Utilities", "DateTimeUtility", "get_ElapsedMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Core.Bindings.Interfaces.IConnection
#include "Oculus/Voice/Core/Bindings/Interfaces/IConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IConnection.Connect
void Oculus::Voice::Core::Bindings::Interfaces::IConnection::Connect(::StringW version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IConnection::Connect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IConnection*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, version);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IConnection.Disconnect
void Oculus::Voice::Core::Bindings::Interfaces::IConnection::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IConnection::Disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IConnection*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IConnection.get_IsConnected
bool Oculus::Voice::Core::Bindings::Interfaces::IConnection::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IConnection::get_IsConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IConnection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger
#include "Oculus/Voice/Core/Bindings/Interfaces/IVoiceSDKLogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.get_IsUsingPlatformIntegration
bool Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_IsUsingPlatformIntegration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_IsUsingPlatformIntegration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.set_IsUsingPlatformIntegration
void Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_IsUsingPlatformIntegration(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_IsUsingPlatformIntegration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.get_ShouldLogToConsole
bool Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_ShouldLogToConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_ShouldLogToConsole");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.set_ShouldLogToConsole
void Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_ShouldLogToConsole(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_ShouldLogToConsole");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.get_WitApplication
::StringW Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_WitApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::get_WitApplication");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.set_WitApplication
void Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_WitApplication(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::set_WitApplication");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.LogInteractionStart
void Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionStart(::StringW requestId, ::StringW witApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId, witApi);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.LogInteractionEndSuccess
void Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionEndSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionEndSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.LogInteractionEndFailure
void Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionEndFailure(::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionEndFailure");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorMessage);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.LogInteractionPoint
void Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionPoint(::StringW interactionPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogInteractionPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactionPoint);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.LogAnnotation
void Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogAnnotation(::StringW annotationKey, ::StringW annotationValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogAnnotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotationKey, annotationValue);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Interfaces.IVoiceSDKLogger.LogFirstTranscriptionTime
void Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogFirstTranscriptionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger::LogFirstTranscriptionTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Interfaces::IVoiceSDKLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Core.Bindings.Android.AndroidServiceConnection
#include "Oculus/Voice/Core/Bindings/Android/AndroidServiceConnection.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AndroidJavaObject mAssistantServiceConnection
[[deprecated("Use field access instead!")]] ::UnityEngine::AndroidJavaObject*& Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::dyn_mAssistantServiceConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::dyn_mAssistantServiceConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mAssistantServiceConnection"))->offset;
  return *reinterpret_cast<::UnityEngine::AndroidJavaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String serviceFragmentClass
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::dyn_serviceFragmentClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::dyn_serviceFragmentClass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serviceFragmentClass"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String serviceGetter
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::dyn_serviceGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::dyn_serviceGetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serviceGetter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.AndroidServiceConnection.get_IsConnected
bool Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::get_IsConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.AndroidServiceConnection.get_AssistantServiceConnection
::UnityEngine::AndroidJavaObject* Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::get_AssistantServiceConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::get_AssistantServiceConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssistantServiceConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.AndroidServiceConnection.Connect
void Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::Connect(::StringW version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::Connect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, version);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.AndroidServiceConnection.Disconnect
void Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::Disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.AndroidServiceConnection.GetService
::UnityEngine::AndroidJavaObject* Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::GetService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::AndroidServiceConnection::GetService");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Core.Bindings.Android.BaseServiceBinding
#include "Oculus/Voice/Core/Bindings/Android/BaseServiceBinding.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.AndroidJavaObject binding
[[deprecated("Use field access instead!")]] ::UnityEngine::AndroidJavaObject*& Oculus::Voice::Core::Bindings::Android::BaseServiceBinding::dyn_binding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::BaseServiceBinding::dyn_binding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "binding"))->offset;
  return *reinterpret_cast<::UnityEngine::AndroidJavaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.BaseServiceBinding.Shutdown
void Oculus::Voice::Core::Bindings::Android::BaseServiceBinding::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::BaseServiceBinding::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl
#include "Oculus/Voice/Core/Bindings/Android/PlatformLogger/VoiceSDKConsoleLoggerImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String TAG
::StringW Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::_get_TAG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::_get_TAG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice.Core.Bindings.Android.PlatformLogger", "VoiceSDKConsoleLoggerImpl", "TAG"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String TAG
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::_set_TAG(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::_set_TAG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Core.Bindings.Android.PlatformLogger", "VoiceSDKConsoleLoggerImpl", "TAG", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsUsingPlatformIntegration>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::dyn_$IsUsingPlatformIntegration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::dyn_$IsUsingPlatformIntegration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsUsingPlatformIntegration>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <WitApplication>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::dyn_$WitApplication$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::dyn_$WitApplication$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WitApplication>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ShouldLogToConsole>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::dyn_$ShouldLogToConsole$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::dyn_$ShouldLogToConsole$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ShouldLogToConsole>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean loggedFirstTranscriptionTime
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::dyn_loggedFirstTranscriptionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::dyn_loggedFirstTranscriptionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loggedFirstTranscriptionTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.get_IsUsingPlatformIntegration
bool Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::get_IsUsingPlatformIntegration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::get_IsUsingPlatformIntegration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.set_IsUsingPlatformIntegration
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::set_IsUsingPlatformIntegration(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::set_IsUsingPlatformIntegration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.get_WitApplication
::StringW Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::get_WitApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::get_WitApplication");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.set_WitApplication
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::set_WitApplication(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::set_WitApplication");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.get_ShouldLogToConsole
bool Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::get_ShouldLogToConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::get_ShouldLogToConsole");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.set_ShouldLogToConsole
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::set_ShouldLogToConsole(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::set_ShouldLogToConsole");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.LogInteractionStart
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogInteractionStart(::StringW requestId, ::StringW witApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogInteractionStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId, witApi);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.LogInteractionEndSuccess
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogInteractionEndSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogInteractionEndSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.LogInteractionEndFailure
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogInteractionEndFailure(::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogInteractionEndFailure");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorMessage);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.LogInteractionPoint
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogInteractionPoint(::StringW interactionPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogInteractionPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactionPoint);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.LogAnnotation
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogAnnotation(::StringW annotationKey, ::StringW annotationValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogAnnotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotationKey, annotationValue);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl.LogFirstTranscriptionTime
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogFirstTranscriptionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::LogFirstTranscriptionTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl..cctor
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice.Core.Bindings.Android.PlatformLogger", "VoiceSDKConsoleLoggerImpl", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKLoggerBinding
#include "Oculus/Voice/Core/Bindings/Android/PlatformLogger/VoiceSDKLoggerBinding.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKLoggerBinding.Connect
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKLoggerBinding.LogInteractionStart
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::LogInteractionStart(::StringW requestId, ::StringW startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::LogInteractionStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogInteractionStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId, startTime);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKLoggerBinding.LogInteractionEndSuccess
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::LogInteractionEndSuccess(::StringW endTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::LogInteractionEndSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogInteractionEndSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endTime);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKLoggerBinding.LogInteractionEndFailure
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::LogInteractionEndFailure(::StringW endTime, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::LogInteractionEndFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogInteractionEndFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endTime), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endTime, errorMessage);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKLoggerBinding.LogInteractionPoint
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::LogInteractionPoint(::StringW interactionPoint, ::StringW time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::LogInteractionPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogInteractionPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionPoint), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactionPoint, time);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKLoggerBinding.LogAnnotation
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::LogAnnotation(::StringW annotationKey, ::StringW annotationValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKLoggerBinding::LogAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotationKey), ::il2cpp_utils::ExtractType(annotationValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotationKey, annotationValue);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl
#include "Oculus/Voice/Core/Bindings/Android/PlatformLogger/VoiceSDKPlatformLoggerImpl.hpp"
// Including type: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKLoggerBinding
#include "Oculus/Voice/Core/Bindings/Android/PlatformLogger/VoiceSDKLoggerBinding.hpp"
// Including type: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl
#include "Oculus/Voice/Core/Bindings/Android/PlatformLogger/VoiceSDKConsoleLoggerImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsUsingPlatformIntegration>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::dyn_$IsUsingPlatformIntegration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::dyn_$IsUsingPlatformIntegration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsUsingPlatformIntegration>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <WitApplication>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::dyn_$WitApplication$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::dyn_$WitApplication$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WitApplication>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKConsoleLoggerImpl consoleLoggerImpl
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl*& Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::dyn_consoleLoggerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::dyn_consoleLoggerImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "consoleLoggerImpl"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKConsoleLoggerImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean loggedFirstTranscriptionTime
[[deprecated("Use field access instead!")]] bool& Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::dyn_loggedFirstTranscriptionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::dyn_loggedFirstTranscriptionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loggedFirstTranscriptionTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.get_IsUsingPlatformIntegration
bool Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::get_IsUsingPlatformIntegration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::get_IsUsingPlatformIntegration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.set_IsUsingPlatformIntegration
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::set_IsUsingPlatformIntegration(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::set_IsUsingPlatformIntegration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.get_WitApplication
::StringW Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::get_WitApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::get_WitApplication");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.set_WitApplication
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::set_WitApplication(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::set_WitApplication");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.get_ShouldLogToConsole
bool Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::get_ShouldLogToConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::get_ShouldLogToConsole");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.set_ShouldLogToConsole
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::set_ShouldLogToConsole(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::set_ShouldLogToConsole");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.LogInteractionStart
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogInteractionStart(::StringW requestId, ::StringW witApi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogInteractionStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestId, witApi);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.LogInteractionEndSuccess
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogInteractionEndSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogInteractionEndSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.LogInteractionEndFailure
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogInteractionEndFailure(::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogInteractionEndFailure");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorMessage);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.LogInteractionPoint
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogInteractionPoint(::StringW interactionPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogInteractionPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactionPoint);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.LogAnnotation
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogAnnotation(::StringW annotationKey, ::StringW annotationValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogAnnotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotationKey, annotationValue);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.LogFirstTranscriptionTime
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogFirstTranscriptionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::LogFirstTranscriptionTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.Connect
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::Connect(::StringW version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::Connect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::BaseAndroidConnectionImpl_1<T>*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, version);
}
// Autogenerated method: Oculus.Voice.Core.Bindings.Android.PlatformLogger.VoiceSDKPlatformLoggerImpl.Disconnect
void Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Core::Bindings::Android::PlatformLogger::VoiceSDKPlatformLoggerImpl::Disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Core::Bindings::Android::BaseAndroidConnectionImpl_1<T>*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: AstarPath/<>c
#include "GlobalNamespace/AstarPath_--c.hpp"
// Including type: AstarPath/<>c__DisplayClass109_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass109_0.hpp"
// Including type: AstarPath/<>c__DisplayClass144_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass144_0.hpp"
// Including type: AstarPath/<>c__DisplayClass154_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass154_0.hpp"
// Including type: AstarPath/<>c__DisplayClass97_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass97_0.hpp"
// Including type: AstarPath/<DelayedGraphUpdate>d__110
#include "GlobalNamespace/AstarPath_-DelayedGraphUpdate-d__110.hpp"
// Including type: AstarPath/<ScanAsync>d__143
#include "GlobalNamespace/AstarPath_-ScanAsync-d__143.hpp"
// Including type: AstarPath/<ScanGraph>d__144
#include "GlobalNamespace/AstarPath_-ScanGraph-d__144.hpp"
// Including type: AstarPath/<UpdateGraphsInternal>d__113
#include "GlobalNamespace/AstarPath_-UpdateGraphsInternal-d__113.hpp"
// Including type: Pathfinding.AstarData
#include "Pathfinding/AstarData.hpp"
// Including type: Pathfinding.AstarColor
#include "Pathfinding/AstarColor.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Pathfinding.GraphUpdateProcessor
#include "Pathfinding/GraphUpdateProcessor.hpp"
// Including type: Pathfinding.HierarchicalGraph
#include "Pathfinding/HierarchicalGraph.hpp"
// Including type: Pathfinding.NavmeshUpdates
#include "Pathfinding/NavmeshUpdates.hpp"
// Including type: Pathfinding.WorkItemProcessor
#include "Pathfinding/WorkItemProcessor.hpp"
// Including type: Pathfinding.PathProcessor
#include "Pathfinding/PathProcessor.hpp"
// Including type: Pathfinding.PathReturnQueue
#include "Pathfinding/PathReturnQueue.hpp"
// Including type: Pathfinding.EuclideanEmbedding
#include "Pathfinding/EuclideanEmbedding.hpp"
// Including type: Pathfinding.Util.RetainedGizmos
#include "Pathfinding/Util/RetainedGizmos.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Pathfinding.OnGraphDelegate
#include "Pathfinding/OnGraphDelegate.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: Pathfinding.OnScanDelegate
#include "Pathfinding/OnScanDelegate.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.IWorkItemContext
#include "Pathfinding/IWorkItemContext.hpp"
// Including type: Pathfinding.AstarWorkItem
#include "Pathfinding/AstarWorkItem.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Pathfinding.NNInfo
#include "Pathfinding/NNInfo.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version Version
::System::Version* GlobalNamespace::AstarPath::_get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "AstarPath", "Version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version Version
void GlobalNamespace::AstarPath::_set_Version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "Version", value));
}
// Autogenerated static field getter
// Get static field: static public readonly AstarPath/AstarDistribution Distribution
::GlobalNamespace::AstarPath::AstarDistribution GlobalNamespace::AstarPath::_get_Distribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_Distribution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::AstarDistribution>("", "AstarPath", "Distribution"));
}
// Autogenerated static field setter
// Set static field: static public readonly AstarPath/AstarDistribution Distribution
void GlobalNamespace::AstarPath::_set_Distribution(::GlobalNamespace::AstarPath::AstarDistribution value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_Distribution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "Distribution", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Branch
::StringW GlobalNamespace::AstarPath::_get_Branch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_Branch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AstarPath", "Branch"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Branch
void GlobalNamespace::AstarPath::_set_Branch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_Branch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "Branch", value));
}
// Autogenerated static field getter
// Get static field: static public AstarPath active
::GlobalNamespace::AstarPath* GlobalNamespace::AstarPath::_get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath*>("", "AstarPath", "active"));
}
// Autogenerated static field setter
// Set static field: static public AstarPath active
void GlobalNamespace::AstarPath::_set_active(::GlobalNamespace::AstarPath* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "active", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnAwakeSettings
::System::Action* GlobalNamespace::AstarPath::_get_OnAwakeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnAwakeSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "AstarPath", "OnAwakeSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnAwakeSettings
void GlobalNamespace::AstarPath::_set_OnAwakeSettings(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnAwakeSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnAwakeSettings", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnGraphDelegate OnGraphPreScan
::Pathfinding::OnGraphDelegate* GlobalNamespace::AstarPath::_get_OnGraphPreScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnGraphPreScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnGraphDelegate*>("", "AstarPath", "OnGraphPreScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnGraphDelegate OnGraphPreScan
void GlobalNamespace::AstarPath::_set_OnGraphPreScan(::Pathfinding::OnGraphDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnGraphPreScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnGraphPreScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnGraphDelegate OnGraphPostScan
::Pathfinding::OnGraphDelegate* GlobalNamespace::AstarPath::_get_OnGraphPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnGraphPostScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnGraphDelegate*>("", "AstarPath", "OnGraphPostScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnGraphDelegate OnGraphPostScan
void GlobalNamespace::AstarPath::_set_OnGraphPostScan(::Pathfinding::OnGraphDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnGraphPostScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnGraphPostScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnPathDelegate OnPathPreSearch
::Pathfinding::OnPathDelegate* GlobalNamespace::AstarPath::_get_OnPathPreSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnPathPreSearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnPathDelegate*>("", "AstarPath", "OnPathPreSearch"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnPathDelegate OnPathPreSearch
void GlobalNamespace::AstarPath::_set_OnPathPreSearch(::Pathfinding::OnPathDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnPathPreSearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnPathPreSearch", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnPathDelegate OnPathPostSearch
::Pathfinding::OnPathDelegate* GlobalNamespace::AstarPath::_get_OnPathPostSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnPathPostSearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnPathDelegate*>("", "AstarPath", "OnPathPostSearch"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnPathDelegate OnPathPostSearch
void GlobalNamespace::AstarPath::_set_OnPathPostSearch(::Pathfinding::OnPathDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnPathPostSearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnPathPostSearch", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnScanDelegate OnPreScan
::Pathfinding::OnScanDelegate* GlobalNamespace::AstarPath::_get_OnPreScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnPreScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnScanDelegate*>("", "AstarPath", "OnPreScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnScanDelegate OnPreScan
void GlobalNamespace::AstarPath::_set_OnPreScan(::Pathfinding::OnScanDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnPreScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnPreScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnScanDelegate OnPostScan
::Pathfinding::OnScanDelegate* GlobalNamespace::AstarPath::_get_OnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnPostScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnScanDelegate*>("", "AstarPath", "OnPostScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnScanDelegate OnPostScan
void GlobalNamespace::AstarPath::_set_OnPostScan(::Pathfinding::OnScanDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnPostScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnPostScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnScanDelegate OnLatePostScan
::Pathfinding::OnScanDelegate* GlobalNamespace::AstarPath::_get_OnLatePostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnLatePostScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnScanDelegate*>("", "AstarPath", "OnLatePostScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnScanDelegate OnLatePostScan
void GlobalNamespace::AstarPath::_set_OnLatePostScan(::Pathfinding::OnScanDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnLatePostScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnLatePostScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnScanDelegate OnGraphsUpdated
::Pathfinding::OnScanDelegate* GlobalNamespace::AstarPath::_get_OnGraphsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnGraphsUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnScanDelegate*>("", "AstarPath", "OnGraphsUpdated"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnScanDelegate OnGraphsUpdated
void GlobalNamespace::AstarPath::_set_OnGraphsUpdated(::Pathfinding::OnScanDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnGraphsUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnGraphsUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action On65KOverflow
::System::Action* GlobalNamespace::AstarPath::_get_On65KOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_On65KOverflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "AstarPath", "On65KOverflow"));
}
// Autogenerated static field setter
// Set static field: static public System.Action On65KOverflow
void GlobalNamespace::AstarPath::_set_On65KOverflow(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_On65KOverflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "On65KOverflow", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 waitForPathDepth
int GlobalNamespace::AstarPath::_get_waitForPathDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_waitForPathDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AstarPath", "waitForPathDepth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 waitForPathDepth
void GlobalNamespace::AstarPath::_set_waitForPathDepth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_waitForPathDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "waitForPathDepth", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Pathfinding.NNConstraint NNConstraintNone
::Pathfinding::NNConstraint* GlobalNamespace::AstarPath::_get_NNConstraintNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_NNConstraintNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NNConstraint*>("", "AstarPath", "NNConstraintNone"));
}
// Autogenerated static field setter
// Set static field: static private readonly Pathfinding.NNConstraint NNConstraintNone
void GlobalNamespace::AstarPath::_set_NNConstraintNone(::Pathfinding::NNConstraint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_NNConstraintNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "NNConstraintNone", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AstarData data
[[deprecated("Use field access instead!")]] ::Pathfinding::AstarData*& GlobalNamespace::AstarPath::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::Pathfinding::AstarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showNavGraphs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_showNavGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_showNavGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showNavGraphs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showUnwalkableNodes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_showUnwalkableNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_showUnwalkableNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showUnwalkableNodes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphDebugMode debugMode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphDebugMode& GlobalNamespace::AstarPath::dyn_debugMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_debugMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugMode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphDebugMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugFloor
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_debugFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_debugFloor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugFloor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugRoof
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_debugRoof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_debugRoof");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugRoof"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean manualDebugFloorRoof
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_manualDebugFloorRoof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_manualDebugFloorRoof");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manualDebugFloorRoof"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showSearchTree
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_showSearchTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_showSearchTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showSearchTree"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single unwalkableNodeDebugSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_unwalkableNodeDebugSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_unwalkableNodeDebugSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unwalkableNodeDebugSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathLog logPathResults
[[deprecated("Use field access instead!")]] ::Pathfinding::PathLog& GlobalNamespace::AstarPath::dyn_logPathResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_logPathResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logPathResults"))->offset;
  return *reinterpret_cast<::Pathfinding::PathLog*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxNearestNodeDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_maxNearestNodeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_maxNearestNodeDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNearestNodeDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean scanOnStartup
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_scanOnStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_scanOnStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scanOnStartup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fullGetNearestSearch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_fullGetNearestSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_fullGetNearestSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullGetNearestSearch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean prioritizeGraphs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_prioritizeGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_prioritizeGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prioritizeGraphs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single prioritizeGraphsLimit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_prioritizeGraphsLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_prioritizeGraphsLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prioritizeGraphsLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AstarColor colorSettings
[[deprecated("Use field access instead!")]] ::Pathfinding::AstarColor*& GlobalNamespace::AstarPath::dyn_colorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_colorSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSettings"))->offset;
  return *reinterpret_cast<::Pathfinding::AstarColor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String[] tagNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::AstarPath::dyn_tagNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_tagNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Heuristic heuristic
[[deprecated("Use field access instead!")]] ::Pathfinding::Heuristic& GlobalNamespace::AstarPath::dyn_heuristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_heuristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heuristic"))->offset;
  return *reinterpret_cast<::Pathfinding::Heuristic*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single heuristicScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_heuristicScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_heuristicScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heuristicScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ThreadCount threadCount
[[deprecated("Use field access instead!")]] ::Pathfinding::ThreadCount& GlobalNamespace::AstarPath::dyn_threadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_threadCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threadCount"))->offset;
  return *reinterpret_cast<::Pathfinding::ThreadCount*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxFrameTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_maxFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_maxFrameTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFrameTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean batchGraphUpdates
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_batchGraphUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_batchGraphUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "batchGraphUpdates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single graphUpdateBatchingInterval
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_graphUpdateBatchingInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdateBatchingInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateBatchingInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <lastScanTime>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_$lastScanTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_$lastScanTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastScanTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathHandler debugPathData
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& GlobalNamespace::AstarPath::dyn_debugPathData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_debugPathData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPathData"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 debugPathID
[[deprecated("Use field access instead!")]] uint16_t& GlobalNamespace::AstarPath::dyn_debugPathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_debugPathID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPathID"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String inGameDebugPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AstarPath::dyn_inGameDebugPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_inGameDebugPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inGameDebugPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isScanningBacking
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_isScanningBacking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_isScanningBacking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isScanningBacking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnGraphsWillBeUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AstarPath::dyn_OnGraphsWillBeUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_OnGraphsWillBeUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGraphsWillBeUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnGraphsWillBeUpdated2
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AstarPath::dyn_OnGraphsWillBeUpdated2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_OnGraphsWillBeUpdated2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGraphsWillBeUpdated2"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.GraphUpdateProcessor graphUpdates
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphUpdateProcessor*& GlobalNamespace::AstarPath::dyn_graphUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdates"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphUpdateProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Pathfinding.HierarchicalGraph hierarchicalGraph
[[deprecated("Use field access instead!")]] ::Pathfinding::HierarchicalGraph*& GlobalNamespace::AstarPath::dyn_hierarchicalGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_hierarchicalGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hierarchicalGraph"))->offset;
  return *reinterpret_cast<::Pathfinding::HierarchicalGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Pathfinding.NavmeshUpdates navmeshUpdates
[[deprecated("Use field access instead!")]] ::Pathfinding::NavmeshUpdates*& GlobalNamespace::AstarPath::dyn_navmeshUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_navmeshUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "navmeshUpdates"))->offset;
  return *reinterpret_cast<::Pathfinding::NavmeshUpdates**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.WorkItemProcessor workItems
[[deprecated("Use field access instead!")]] ::Pathfinding::WorkItemProcessor*& GlobalNamespace::AstarPath::dyn_workItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_workItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workItems"))->offset;
  return *reinterpret_cast<::Pathfinding::WorkItemProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathProcessor pathProcessor
[[deprecated("Use field access instead!")]] ::Pathfinding::PathProcessor*& GlobalNamespace::AstarPath::dyn_pathProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_pathProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathProcessor"))->offset;
  return *reinterpret_cast<::Pathfinding::PathProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean graphUpdateRoutineRunning
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_graphUpdateRoutineRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdateRoutineRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateRoutineRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean graphUpdatesWorkItemAdded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_graphUpdatesWorkItemAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdatesWorkItemAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdatesWorkItemAdded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastGraphUpdate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_lastGraphUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_lastGraphUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastGraphUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathProcessor/GraphUpdateLock workItemLock
[[deprecated("Use field access instead!")]] ::Pathfinding::PathProcessor::GraphUpdateLock& GlobalNamespace::AstarPath::dyn_workItemLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_workItemLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workItemLock"))->offset;
  return *reinterpret_cast<::Pathfinding::PathProcessor::GraphUpdateLock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly Pathfinding.PathReturnQueue pathReturnQueue
[[deprecated("Use field access instead!")]] ::Pathfinding::PathReturnQueue*& GlobalNamespace::AstarPath::dyn_pathReturnQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_pathReturnQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathReturnQueue"))->offset;
  return *reinterpret_cast<::Pathfinding::PathReturnQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.EuclideanEmbedding euclideanEmbedding
[[deprecated("Use field access instead!")]] ::Pathfinding::EuclideanEmbedding*& GlobalNamespace::AstarPath::dyn_euclideanEmbedding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_euclideanEmbedding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "euclideanEmbedding"))->offset;
  return *reinterpret_cast<::Pathfinding::EuclideanEmbedding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showGraphs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_showGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_showGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showGraphs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 nextFreePathID
[[deprecated("Use field access instead!")]] uint16_t& GlobalNamespace::AstarPath::dyn_nextFreePathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_nextFreePathID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextFreePathID"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Util.RetainedGizmos gizmos
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::RetainedGizmos*& GlobalNamespace::AstarPath::dyn_gizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_gizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gizmos"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::RetainedGizmos**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath.get_graphTypes
::ArrayW<::System::Type*> GlobalNamespace::AstarPath::get_graphTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_graphTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_astarData
::Pathfinding::AstarData* GlobalNamespace::AstarPath::get_astarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_astarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_astarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::AstarData*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_graphs
::ArrayW<::Pathfinding::NavGraph*> GlobalNamespace::AstarPath::get_graphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_graphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::NavGraph*>, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_maxNearestNodeDistanceSqr
float GlobalNamespace::AstarPath::get_maxNearestNodeDistanceSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_maxNearestNodeDistanceSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxNearestNodeDistanceSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_limitGraphUpdates
bool GlobalNamespace::AstarPath::get_limitGraphUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_limitGraphUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_limitGraphUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.set_limitGraphUpdates
void GlobalNamespace::AstarPath::set_limitGraphUpdates(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::set_limitGraphUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_limitGraphUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AstarPath.get_maxGraphUpdateFreq
float GlobalNamespace::AstarPath::get_maxGraphUpdateFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_maxGraphUpdateFreq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxGraphUpdateFreq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.set_maxGraphUpdateFreq
void GlobalNamespace::AstarPath::set_maxGraphUpdateFreq(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::set_maxGraphUpdateFreq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxGraphUpdateFreq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AstarPath.get_lastScanTime
float GlobalNamespace::AstarPath::get_lastScanTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_lastScanTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastScanTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.set_lastScanTime
void GlobalNamespace::AstarPath::set_lastScanTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::set_lastScanTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastScanTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AstarPath.get_isScanning
bool GlobalNamespace::AstarPath::get_isScanning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_isScanning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isScanning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.set_isScanning
void GlobalNamespace::AstarPath::set_isScanning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::set_isScanning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isScanning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AstarPath.get_NumParallelThreads
int GlobalNamespace::AstarPath::get_NumParallelThreads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_NumParallelThreads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumParallelThreads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_IsUsingMultithreading
bool GlobalNamespace::AstarPath::get_IsUsingMultithreading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_IsUsingMultithreading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUsingMultithreading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_IsAnyGraphUpdatesQueued
bool GlobalNamespace::AstarPath::get_IsAnyGraphUpdatesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_IsAnyGraphUpdatesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAnyGraphUpdatesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_IsAnyGraphUpdateQueued
bool GlobalNamespace::AstarPath::get_IsAnyGraphUpdateQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_IsAnyGraphUpdateQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAnyGraphUpdateQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_IsAnyGraphUpdateInProgress
bool GlobalNamespace::AstarPath::get_IsAnyGraphUpdateInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_IsAnyGraphUpdateInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAnyGraphUpdateInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_IsAnyWorkItemInProgress
bool GlobalNamespace::AstarPath::get_IsAnyWorkItemInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_IsAnyWorkItemInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAnyWorkItemInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_IsInsideWorkItem
bool GlobalNamespace::AstarPath::get_IsInsideWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_IsInsideWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInsideWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.GetTagNames
::ArrayW<::StringW> GlobalNamespace::AstarPath::GetTagNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetTagNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.FindAstarPath
void GlobalNamespace::AstarPath::FindAstarPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FindAstarPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "FindAstarPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarPath.FindTagNames
::ArrayW<::StringW> GlobalNamespace::AstarPath::FindTagNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FindTagNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "FindTagNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarPath.GetNextPathID
uint16_t GlobalNamespace::AstarPath::GetNextPathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNextPathID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextPathID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.RecalculateDebugLimits
void GlobalNamespace::AstarPath::RecalculateDebugLimits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::RecalculateDebugLimits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateDebugLimits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.OnDrawGizmos
void GlobalNamespace::AstarPath::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.OnGUI
void GlobalNamespace::AstarPath::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.LogPathResults
void GlobalNamespace::AstarPath::LogPathResults(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::LogPathResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogPathResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: AstarPath.Update
void GlobalNamespace::AstarPath::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.PerformBlockingActions
void GlobalNamespace::AstarPath::PerformBlockingActions(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::PerformBlockingActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformBlockingActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: AstarPath.QueueWorkItemFloodFill
void GlobalNamespace::AstarPath::QueueWorkItemFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::QueueWorkItemFloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueWorkItemFloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.EnsureValidFloodFill
void GlobalNamespace::AstarPath::EnsureValidFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::EnsureValidFloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureValidFloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.AddWorkItem
void GlobalNamespace::AstarPath::AddWorkItem(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AddWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: AstarPath.AddWorkItem
void GlobalNamespace::AstarPath::AddWorkItem(::System::Action_1<::Pathfinding::IWorkItemContext*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AddWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: AstarPath.AddWorkItem
void GlobalNamespace::AstarPath::AddWorkItem(::Pathfinding::AstarWorkItem item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AddWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: AstarPath.QueueGraphUpdates
void GlobalNamespace::AstarPath::QueueGraphUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::QueueGraphUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueGraphUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.DelayedGraphUpdate
::System::Collections::IEnumerator* GlobalNamespace::AstarPath::DelayedGraphUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::DelayedGraphUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedGraphUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.UpdateGraphs
void GlobalNamespace::AstarPath::UpdateGraphs(::UnityEngine::Bounds bounds, float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::UpdateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds, delay);
}
// Autogenerated method: AstarPath.UpdateGraphs
void GlobalNamespace::AstarPath::UpdateGraphs(::Pathfinding::GraphUpdateObject* ob, float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::UpdateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob, delay);
}
// Autogenerated method: AstarPath.UpdateGraphsInternal
::System::Collections::IEnumerator* GlobalNamespace::AstarPath::UpdateGraphsInternal(::Pathfinding::GraphUpdateObject* ob, float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::UpdateGraphsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, ob, delay);
}
// Autogenerated method: AstarPath.UpdateGraphs
void GlobalNamespace::AstarPath::UpdateGraphs(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::UpdateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds);
}
// Autogenerated method: AstarPath.UpdateGraphs
void GlobalNamespace::AstarPath::UpdateGraphs(::Pathfinding::GraphUpdateObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::UpdateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob);
}
// Autogenerated method: AstarPath.FlushGraphUpdates
void GlobalNamespace::AstarPath::FlushGraphUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FlushGraphUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushGraphUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.FlushWorkItems
void GlobalNamespace::AstarPath::FlushWorkItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FlushWorkItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushWorkItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.FlushWorkItems
void GlobalNamespace::AstarPath::FlushWorkItems(bool unblockOnComplete, bool block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FlushWorkItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushWorkItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unblockOnComplete), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unblockOnComplete, block);
}
// Autogenerated method: AstarPath.FlushThreadSafeCallbacks
void GlobalNamespace::AstarPath::FlushThreadSafeCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FlushThreadSafeCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushThreadSafeCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.CalculateThreadCount
int GlobalNamespace::AstarPath::CalculateThreadCount(::Pathfinding::ThreadCount count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::CalculateThreadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "CalculateThreadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: AstarPath.EnsureInitialized
void GlobalNamespace::AstarPath::EnsureInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::EnsureInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.InitializePathProcessor
void GlobalNamespace::AstarPath::InitializePathProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::InitializePathProcessor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializePathProcessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.VerifyIntegrity
void GlobalNamespace::AstarPath::VerifyIntegrity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::VerifyIntegrity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyIntegrity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.ConfigureReferencesInternal
void GlobalNamespace::AstarPath::ConfigureReferencesInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::ConfigureReferencesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureReferencesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.InitializeProfiler
void GlobalNamespace::AstarPath::InitializeProfiler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::InitializeProfiler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeProfiler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.InitializeAstarData
void GlobalNamespace::AstarPath::InitializeAstarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::InitializeAstarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAstarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.OnDisable
void GlobalNamespace::AstarPath::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.OnDestroy
void GlobalNamespace::AstarPath::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.FloodFill
void GlobalNamespace::AstarPath::FloodFill(::Pathfinding::GraphNode* seed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, seed);
}
// Autogenerated method: AstarPath.FloodFill
void GlobalNamespace::AstarPath::FloodFill(::Pathfinding::GraphNode* seed, uint area) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(area)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, seed, area);
}
// Autogenerated method: AstarPath.FloodFill
void GlobalNamespace::AstarPath::FloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.GetNewNodeIndex
int GlobalNamespace::AstarPath::GetNewNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNewNodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNewNodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.InitializeNode
void GlobalNamespace::AstarPath::InitializeNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::InitializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: AstarPath.DestroyNode
void GlobalNamespace::AstarPath::DestroyNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::DestroyNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: AstarPath.BlockUntilPathQueueBlocked
void GlobalNamespace::AstarPath::BlockUntilPathQueueBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::BlockUntilPathQueueBlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUntilPathQueueBlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.PausePathfinding
::Pathfinding::PathProcessor::GraphUpdateLock GlobalNamespace::AstarPath::PausePathfinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::PausePathfinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PausePathfinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathProcessor::GraphUpdateLock, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.PausePathfindingSoon
::Pathfinding::PathProcessor::GraphUpdateLock GlobalNamespace::AstarPath::PausePathfindingSoon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::PausePathfindingSoon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PausePathfindingSoon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathProcessor::GraphUpdateLock, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.Scan
void GlobalNamespace::AstarPath::Scan(::Pathfinding::NavGraph* graphToScan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphToScan)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graphToScan);
}
// Autogenerated method: AstarPath.Scan
void GlobalNamespace::AstarPath::Scan(::ArrayW<::Pathfinding::NavGraph*> graphsToScan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphsToScan)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graphsToScan);
}
// Autogenerated method: AstarPath.ScanAsync
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* GlobalNamespace::AstarPath::ScanAsync(::Pathfinding::NavGraph* graphToScan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::ScanAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphToScan)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method, graphToScan);
}
// Autogenerated method: AstarPath.ScanAsync
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* GlobalNamespace::AstarPath::ScanAsync(::ArrayW<::Pathfinding::NavGraph*> graphsToScan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::ScanAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphsToScan)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method, graphsToScan);
}
// Autogenerated method: AstarPath.ScanGraph
::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>* GlobalNamespace::AstarPath::ScanGraph(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::ScanGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Pathfinding::Progress>*, false>(this, ___internal__method, graph);
}
// Autogenerated method: AstarPath.WaitForPath
void GlobalNamespace::AstarPath::WaitForPath(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::WaitForPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "WaitForPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: AstarPath.BlockUntilCalculated
void GlobalNamespace::AstarPath::BlockUntilCalculated(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::BlockUntilCalculated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "BlockUntilCalculated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: AstarPath.RegisterSafeUpdate
void GlobalNamespace::AstarPath::RegisterSafeUpdate(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::RegisterSafeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "RegisterSafeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: AstarPath.StartPath
void GlobalNamespace::AstarPath::StartPath(::Pathfinding::Path* path, bool pushToFront) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(pushToFront)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, pushToFront);
}
// Autogenerated method: AstarPath.GetNearest
::Pathfinding::NNInfo GlobalNamespace::AstarPath::GetNearest(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position);
}
// Autogenerated method: AstarPath.GetNearest
::Pathfinding::NNInfo GlobalNamespace::AstarPath::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: AstarPath.GetNearest
::Pathfinding::NNInfo GlobalNamespace::AstarPath::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: AstarPath.GetNearest
::Pathfinding::GraphNode* GlobalNamespace::AstarPath::GetNearest(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method, ray);
}
// Autogenerated method: AstarPath..cctor
void GlobalNamespace::AstarPath::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarPath.<.ctor>b__92_0
void GlobalNamespace::AstarPath::$_ctor$b__92_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::<.ctor>b__92_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__92_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.<InitializePathProcessor>b__124_1
void GlobalNamespace::AstarPath::$InitializePathProcessor$b__124_1(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::<InitializePathProcessor>b__124_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitializePathProcessor>b__124_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: AstarPath.<InitializePathProcessor>b__124_2
void GlobalNamespace::AstarPath::$InitializePathProcessor$b__124_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::<InitializePathProcessor>b__124_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitializePathProcessor>b__124_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.Awake
void GlobalNamespace::AstarPath::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AstarPath/AstarDistribution
#include "GlobalNamespace/AstarPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AstarPath/AstarDistribution WebsiteDownload
::GlobalNamespace::AstarPath::AstarDistribution GlobalNamespace::AstarPath::AstarDistribution::_get_WebsiteDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::_get_WebsiteDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::AstarDistribution>("", "AstarPath/AstarDistribution", "WebsiteDownload"));
}
// Autogenerated static field setter
// Set static field: static public AstarPath/AstarDistribution WebsiteDownload
void GlobalNamespace::AstarPath::AstarDistribution::_set_WebsiteDownload(::GlobalNamespace::AstarPath::AstarDistribution value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::_set_WebsiteDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath/AstarDistribution", "WebsiteDownload", value));
}
// Autogenerated static field getter
// Get static field: static public AstarPath/AstarDistribution AssetStore
::GlobalNamespace::AstarPath::AstarDistribution GlobalNamespace::AstarPath::AstarDistribution::_get_AssetStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::_get_AssetStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::AstarDistribution>("", "AstarPath/AstarDistribution", "AssetStore"));
}
// Autogenerated static field setter
// Set static field: static public AstarPath/AstarDistribution AssetStore
void GlobalNamespace::AstarPath::AstarDistribution::_set_AssetStore(::GlobalNamespace::AstarPath::AstarDistribution value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::_set_AssetStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath/AstarDistribution", "AssetStore", value));
}
// Autogenerated static field getter
// Get static field: static public AstarPath/AstarDistribution PackageManager
::GlobalNamespace::AstarPath::AstarDistribution GlobalNamespace::AstarPath::AstarDistribution::_get_PackageManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::_get_PackageManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::AstarDistribution>("", "AstarPath/AstarDistribution", "PackageManager"));
}
// Autogenerated static field setter
// Set static field: static public AstarPath/AstarDistribution PackageManager
void GlobalNamespace::AstarPath::AstarDistribution::_set_PackageManager(::GlobalNamespace::AstarPath::AstarDistribution value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::_set_PackageManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath/AstarDistribution", "PackageManager", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::AstarDistribution::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c
#include "GlobalNamespace/AstarPath_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AstarPath/<>c <>9
::GlobalNamespace::AstarPath::$$c* GlobalNamespace::AstarPath::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::$$c*>("", "AstarPath/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AstarPath/<>c <>9
void GlobalNamespace::AstarPath::$$c::_set_$$9(::GlobalNamespace::AstarPath::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AstarPath/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Pathfinding.Path> <>9__124_0
::System::Action_1<::Pathfinding::Path*>* GlobalNamespace::AstarPath::$$c::_get_$$9__124_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::_get_$$9__124_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Pathfinding::Path*>*>("", "AstarPath/<>c", "<>9__124_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Pathfinding.Path> <>9__124_0
void GlobalNamespace::AstarPath::$$c::_set_$$9__124_0(::System::Action_1<::Pathfinding::Path*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::_set_$$9__124_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AstarPath/<>c", "<>9__124_0", value)));
}
// Autogenerated method: AstarPath/<>c..cctor
void GlobalNamespace::AstarPath::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarPath/<>c.<InitializePathProcessor>b__124_0
void GlobalNamespace::AstarPath::$$c::$InitializePathProcessor$b__124_0(::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::<InitializePathProcessor>b__124_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitializePathProcessor>b__124_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c__DisplayClass109_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass109_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AstarPath <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& GlobalNamespace::AstarPath::$$c__DisplayClass109_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass109_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AstarWorkItem workItem
[[deprecated("Use field access instead!")]] ::Pathfinding::AstarWorkItem& GlobalNamespace::AstarPath::$$c__DisplayClass109_0::dyn_workItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass109_0::dyn_workItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workItem"))->offset;
  return *reinterpret_cast<::Pathfinding::AstarWorkItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<>c__DisplayClass109_0.<QueueGraphUpdates>b__0
void GlobalNamespace::AstarPath::$$c__DisplayClass109_0::$QueueGraphUpdates$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass109_0::<QueueGraphUpdates>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<QueueGraphUpdates>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c__DisplayClass144_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass144_0.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NavGraph graph
[[deprecated("Use field access instead!")]] ::Pathfinding::NavGraph*& GlobalNamespace::AstarPath::$$c__DisplayClass144_0::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass144_0::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::Pathfinding::NavGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<>c__DisplayClass144_0.<ScanGraph>b__0
void GlobalNamespace::AstarPath::$$c__DisplayClass144_0::$ScanGraph$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass144_0::<ScanGraph>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ScanGraph>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c__DisplayClass154_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass154_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lineOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AstarPath::$$c__DisplayClass154_0::dyn_lineOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass154_0::dyn_lineOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lineDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AstarPath::$$c__DisplayClass154_0::dyn_lineDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass154_0::dyn_lineDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDist
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::$$c__DisplayClass154_0::dyn_minDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass154_0::dyn_minDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode nearestNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& GlobalNamespace::AstarPath::$$c__DisplayClass154_0::dyn_nearestNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass154_0::dyn_nearestNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearestNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.GraphNode> <>9__0
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& GlobalNamespace::AstarPath::$$c__DisplayClass154_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass154_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<>c__DisplayClass154_0.<GetNearest>b__0
void GlobalNamespace::AstarPath::$$c__DisplayClass154_0::$GetNearest$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass154_0::<GetNearest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetNearest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c__DisplayClass97_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass97_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean ignoreSearchTree
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::$$c__DisplayClass97_0::dyn_ignoreSearchTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass97_0::dyn_ignoreSearchTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreSearchTree"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AstarPath <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& GlobalNamespace::AstarPath::$$c__DisplayClass97_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass97_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Pathfinding.GraphNode> <>9__0
[[deprecated("Use field access instead!")]] ::System::Action_1<::Pathfinding::GraphNode*>*& GlobalNamespace::AstarPath::$$c__DisplayClass97_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass97_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Action_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<>c__DisplayClass97_0.<RecalculateDebugLimits>b__0
void GlobalNamespace::AstarPath::$$c__DisplayClass97_0::$RecalculateDebugLimits$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass97_0::<RecalculateDebugLimits>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RecalculateDebugLimits>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AstarPath/<DelayedGraphUpdate>d__110
#include "GlobalNamespace/AstarPath_-DelayedGraphUpdate-d__110.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AstarPath <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<DelayedGraphUpdate>d__110.System.IDisposable.Dispose
void GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<DelayedGraphUpdate>d__110.MoveNext
bool GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<DelayedGraphUpdate>d__110.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<DelayedGraphUpdate>d__110.System.Collections.IEnumerator.Reset
void GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<DelayedGraphUpdate>d__110.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__110*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AstarPath/<ScanAsync>d__143
#include "GlobalNamespace/AstarPath_-ScanAsync-d__143.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Progress <>2__current
[[deprecated("Use field access instead!")]] ::Pathfinding::Progress& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Pathfinding::Progress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.NavGraph[] graphsToScan
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::NavGraph*>& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_graphsToScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_graphsToScan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphsToScan"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::NavGraph*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NavGraph[] <>3__graphsToScan
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::NavGraph*>& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$$3__graphsToScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$$3__graphsToScan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__graphsToScan"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::NavGraph*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AstarPath <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathProcessor/GraphUpdateLock <graphUpdateLock>5__2
[[deprecated("Use field access instead!")]] ::Pathfinding::PathProcessor::GraphUpdateLock& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$graphUpdateLock$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$graphUpdateLock$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<graphUpdateLock>5__2"))->offset;
  return *reinterpret_cast<::Pathfinding::PathProcessor::GraphUpdateLock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch <watch>5__3
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$watch$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$watch$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<watch>5__3"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__4
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$i$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$i$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <minp>5__5
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$minp$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$minp$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<minp>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <maxp>5__6
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$maxp$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$maxp$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxp>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <progressDescriptionPrefix>5__7
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$progressDescriptionPrefix$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$progressDescriptionPrefix$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<progressDescriptionPrefix>5__7"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Pathfinding.Progress> <coroutine>5__8
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*& GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$coroutine$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::dyn_$coroutine$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<coroutine>5__8"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<ScanAsync>d__143.System.IDisposable.Dispose
void GlobalNamespace::AstarPath::$ScanAsync$d__143::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanAsync$d__143*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanAsync>d__143.MoveNext
bool GlobalNamespace::AstarPath::$ScanAsync$d__143::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanAsync$d__143*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanAsync>d__143.System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current
::Pathfinding::Progress GlobalNamespace::AstarPath::$ScanAsync$d__143::System_Collections_Generic_IEnumerator$Pathfinding_Progress$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanAsync$d__143*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Progress, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanAsync>d__143.System.Collections.IEnumerator.Reset
void GlobalNamespace::AstarPath::$ScanAsync$d__143::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanAsync$d__143*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanAsync>d__143.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$ScanAsync$d__143::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanAsync$d__143*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanAsync>d__143.System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>* GlobalNamespace::AstarPath::$ScanAsync$d__143::System_Collections_Generic_IEnumerable$Pathfinding_Progress$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanAsync$d__143*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanAsync>d__143.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::AstarPath::$ScanAsync$d__143::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanAsync$d__143::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanAsync$d__143*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AstarPath/<ScanGraph>d__144
#include "GlobalNamespace/AstarPath_-ScanGraph-d__144.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: AstarPath/<>c__DisplayClass144_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass144_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Progress <>2__current
[[deprecated("Use field access instead!")]] ::Pathfinding::Progress& GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Pathfinding::Progress*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.NavGraph graph
[[deprecated("Use field access instead!")]] ::Pathfinding::NavGraph*& GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::Pathfinding::NavGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NavGraph <>3__graph
[[deprecated("Use field access instead!")]] ::Pathfinding::NavGraph*& GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$3__graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$3__graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__graph"))->offset;
  return *reinterpret_cast<::Pathfinding::NavGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AstarPath/<>c__DisplayClass144_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath::$$c__DisplayClass144_0*& GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath::$$c__DisplayClass144_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Pathfinding.Progress> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*& GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<ScanGraph>d__144.System.IDisposable.Dispose
void GlobalNamespace::AstarPath::$ScanGraph$d__144::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanGraph$d__144*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanGraph>d__144.MoveNext
bool GlobalNamespace::AstarPath::$ScanGraph$d__144::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanGraph$d__144*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanGraph>d__144.<>m__Finally1
void GlobalNamespace::AstarPath::$ScanGraph$d__144::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanGraph>d__144.System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current
::Pathfinding::Progress GlobalNamespace::AstarPath::$ScanGraph$d__144::System_Collections_Generic_IEnumerator$Pathfinding_Progress$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::System.Collections.Generic.IEnumerator<Pathfinding.Progress>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanGraph$d__144*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Progress, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanGraph>d__144.System.Collections.IEnumerator.Reset
void GlobalNamespace::AstarPath::$ScanGraph$d__144::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanGraph$d__144*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanGraph>d__144.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$ScanGraph$d__144::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanGraph$d__144*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanGraph>d__144.System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>* GlobalNamespace::AstarPath::$ScanGraph$d__144::System_Collections_Generic_IEnumerable$Pathfinding_Progress$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::System.Collections.Generic.IEnumerable<Pathfinding.Progress>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanGraph$d__144*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Pathfinding::Progress>*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<ScanGraph>d__144.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::AstarPath::$ScanGraph$d__144::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$ScanGraph$d__144::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$ScanGraph$d__144*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AstarPath/<UpdateGraphsInternal>d__113
#include "GlobalNamespace/AstarPath_-UpdateGraphsInternal-d__113.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AstarPath <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphUpdateObject ob
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphUpdateObject*& GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::dyn_ob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::dyn_ob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ob"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphUpdateObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<UpdateGraphsInternal>d__113.System.IDisposable.Dispose
void GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<UpdateGraphsInternal>d__113.MoveNext
bool GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<UpdateGraphsInternal>d__113.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<UpdateGraphsInternal>d__113.System.Collections.IEnumerator.Reset
void GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<UpdateGraphsInternal>d__113.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$UpdateGraphsInternal$d__113*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1___.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1____MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1___::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1___::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1___::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1___::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AIDestinationSetter
#include "Pathfinding/AIDestinationSetter.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.IAstarAI
#include "Pathfinding/IAstarAI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::AIDestinationSetter::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIDestinationSetter::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.IAstarAI ai
[[deprecated("Use field access instead!")]] ::Pathfinding::IAstarAI*& Pathfinding::AIDestinationSetter::dyn_ai() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIDestinationSetter::dyn_ai");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ai"))->offset;
  return *reinterpret_cast<::Pathfinding::IAstarAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AIDestinationSetter.OnEnable
void Pathfinding::AIDestinationSetter::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIDestinationSetter::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIDestinationSetter.OnDisable
void Pathfinding::AIDestinationSetter::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIDestinationSetter::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIDestinationSetter.Update
void Pathfinding::AIDestinationSetter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIDestinationSetter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.Patrol
#include "Pathfinding/Patrol.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.IAstarAI
#include "Pathfinding/IAstarAI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] targets
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& Pathfinding::Patrol::dyn_targets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Patrol::dyn_targets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& Pathfinding::Patrol::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Patrol::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& Pathfinding::Patrol::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Patrol::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.IAstarAI agent
[[deprecated("Use field access instead!")]] ::Pathfinding::IAstarAI*& Pathfinding::Patrol::dyn_agent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Patrol::dyn_agent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agent"))->offset;
  return *reinterpret_cast<::Pathfinding::IAstarAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single switchTime
[[deprecated("Use field access instead!")]] float& Pathfinding::Patrol::dyn_switchTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Patrol::dyn_switchTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "switchTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Patrol.Update
void Pathfinding::Patrol::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Patrol::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Patrol.Awake
void Pathfinding::Patrol::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Patrol::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AIBase
#include "Pathfinding/AIBase.hpp"
// Including type: Pathfinding.Seeker
#include "Pathfinding/Seeker.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: Pathfinding.RVO.RVOController
#include "Pathfinding/RVO/RVOController.hpp"
// Including type: Pathfinding.Util.IMovementPlane
#include "Pathfinding/Util/IMovementPlane.hpp"
// Including type: Pathfinding.AutoRepathPolicy
#include "Pathfinding/AutoRepathPolicy.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color ShapeGizmoColor
::UnityEngine::Color Pathfinding::AIBase::_get_ShapeGizmoColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::_get_ShapeGizmoColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "AIBase", "ShapeGizmoColor"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color ShapeGizmoColor
void Pathfinding::AIBase::_set_ShapeGizmoColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::_set_ShapeGizmoColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AIBase", "ShapeGizmoColor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single radius
[[deprecated("Use field access instead!")]] float& Pathfinding::AIBase::dyn_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
[[deprecated("Use field access instead!")]] float& Pathfinding::AIBase::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canMove
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIBase::dyn_canMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_canMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canMove"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::AIBase::dyn_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_maxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 gravity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AIBase::dyn_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gravity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask groundMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::AIBase::dyn_groundMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_groundMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single centerOffsetCompatibility
[[deprecated("Use field access instead!")]] float& Pathfinding::AIBase::dyn_centerOffsetCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_centerOffsetCompatibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerOffsetCompatibility"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single repathRateCompatibility
[[deprecated("Use field access instead!")]] float& Pathfinding::AIBase::dyn_repathRateCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_repathRateCompatibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repathRateCompatibility"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canSearchCompability
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIBase::dyn_canSearchCompability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_canSearchCompability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canSearchCompability"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OrientationMode orientation
[[deprecated("Use field access instead!")]] ::Pathfinding::OrientationMode& Pathfinding::AIBase::dyn_orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_orientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orientation"))->offset;
  return *reinterpret_cast<::Pathfinding::OrientationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableRotation
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIBase::dyn_enableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_enableRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 simulatedPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AIBase::dyn_simulatedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_simulatedPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simulatedPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Quaternion simulatedRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Pathfinding::AIBase::dyn_simulatedRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_simulatedRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simulatedRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 accumulatedMovementDelta
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AIBase::dyn_accumulatedMovementDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_accumulatedMovementDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accumulatedMovementDelta"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector2 velocity2D
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::AIBase::dyn_velocity2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_velocity2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity2D"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single verticalVelocity
[[deprecated("Use field access instead!")]] float& Pathfinding::AIBase::dyn_verticalVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_verticalVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verticalVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Seeker seeker
[[deprecated("Use field access instead!")]] ::Pathfinding::Seeker*& Pathfinding::AIBase::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::Pathfinding::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::AIBase::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Rigidbody rigid
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Pathfinding::AIBase::dyn_rigid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_rigid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigid"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Rigidbody2D rigid2D
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& Pathfinding::AIBase::dyn_rigid2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_rigid2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigid2D"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.CharacterController controller
[[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& Pathfinding::AIBase::dyn_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controller"))->offset;
  return *reinterpret_cast<::UnityEngine::CharacterController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.RVO.RVOController rvoController
[[deprecated("Use field access instead!")]] ::Pathfinding::RVO::RVOController*& Pathfinding::AIBase::dyn_rvoController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_rvoController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rvoController"))->offset;
  return *reinterpret_cast<::Pathfinding::RVO::RVOController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.IMovementPlane movementPlane
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::IMovementPlane*& Pathfinding::AIBase::dyn_movementPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_movementPlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementPlane"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::IMovementPlane**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updatePosition
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIBase::dyn_updatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_updatePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updatePosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateRotation
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIBase::dyn_updateRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_updateRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AutoRepathPolicy autoRepath
[[deprecated("Use field access instead!")]] ::Pathfinding::AutoRepathPolicy*& Pathfinding::AIBase::dyn_autoRepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_autoRepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRepath"))->offset;
  return *reinterpret_cast<::Pathfinding::AutoRepathPolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <usingGravity>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIBase::dyn_$usingGravity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_$usingGravity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<usingGravity>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single lastDeltaTime
[[deprecated("Use field access instead!")]] float& Pathfinding::AIBase::dyn_lastDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_lastDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 prevFrame
[[deprecated("Use field access instead!")]] int& Pathfinding::AIBase::dyn_prevFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_prevFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 prevPosition1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AIBase::dyn_prevPosition1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_prevPosition1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPosition1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 prevPosition2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AIBase::dyn_prevPosition2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_prevPosition2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPosition2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector2 lastDeltaPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::AIBase::dyn_lastDeltaPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_lastDeltaPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDeltaPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean waitingForPathCalculation
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIBase::dyn_waitingForPathCalculation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_waitingForPathCalculation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitingForPathCalculation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform targetCompatibility
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::AIBase::dyn_targetCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_targetCompatibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetCompatibility"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean startHasRun
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIBase::dyn_startHasRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_startHasRun");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startHasRun"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <destination>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AIBase::dyn_$destination$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_$destination$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<destination>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isStopped>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIBase::dyn_$isStopped$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_$isStopped$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isStopped>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action <onSearchPath>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action*& Pathfinding::AIBase::dyn_$onSearchPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::dyn_$onSearchPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<onSearchPath>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AIBase.get_repathRate
float Pathfinding::AIBase::get_repathRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_repathRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_repathRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.set_repathRate
void Pathfinding::AIBase::set_repathRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::set_repathRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_repathRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIBase.get_canSearch
bool Pathfinding::AIBase::get_canSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_canSearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.set_canSearch
void Pathfinding::AIBase::set_canSearch(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::set_canSearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_canSearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIBase.get_centerOffset
float Pathfinding::AIBase::get_centerOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_centerOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.set_centerOffset
void Pathfinding::AIBase::set_centerOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::set_centerOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIBase.get_rotationIn2D
bool Pathfinding::AIBase::get_rotationIn2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_rotationIn2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationIn2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.set_rotationIn2D
void Pathfinding::AIBase::set_rotationIn2D(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::set_rotationIn2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationIn2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIBase.get_position
::UnityEngine::Vector3 Pathfinding::AIBase::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.get_rotation
::UnityEngine::Quaternion Pathfinding::AIBase::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_rotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.set_rotation
void Pathfinding::AIBase::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::set_rotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIBase.get_usingGravity
bool Pathfinding::AIBase::get_usingGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_usingGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_usingGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.set_usingGravity
void Pathfinding::AIBase::set_usingGravity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::set_usingGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_usingGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIBase.get_target
::UnityEngine::Transform* Pathfinding::AIBase::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.set_target
void Pathfinding::AIBase::set_target(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::set_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIBase.get_destination
::UnityEngine::Vector3 Pathfinding::AIBase::get_destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_destination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.set_destination
void Pathfinding::AIBase::set_destination(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::set_destination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIBase.get_velocity
::UnityEngine::Vector3 Pathfinding::AIBase::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_velocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.get_desiredVelocity
::UnityEngine::Vector3 Pathfinding::AIBase::get_desiredVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_desiredVelocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.get_isStopped
bool Pathfinding::AIBase::get_isStopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_isStopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.set_isStopped
void Pathfinding::AIBase::set_isStopped(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::set_isStopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIBase.get_onSearchPath
::System::Action* Pathfinding::AIBase::get_onSearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_onSearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.set_onSearchPath
void Pathfinding::AIBase::set_onSearchPath(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::set_onSearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIBase.get_shouldRecalculatePath
bool Pathfinding::AIBase::get_shouldRecalculatePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::get_shouldRecalculatePath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.FindComponents
void Pathfinding::AIBase::FindComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::FindComponents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.OnEnable
void Pathfinding::AIBase::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.Start
void Pathfinding::AIBase::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.Init
void Pathfinding::AIBase::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.Teleport
void Pathfinding::AIBase::Teleport(::UnityEngine::Vector3 newPosition, bool clearPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::Teleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPosition, clearPath);
}
// Autogenerated method: Pathfinding.AIBase.CancelCurrentPathRequest
void Pathfinding::AIBase::CancelCurrentPathRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::CancelCurrentPathRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelCurrentPathRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.OnDisable
void Pathfinding::AIBase::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.Update
void Pathfinding::AIBase::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.FixedUpdate
void Pathfinding::AIBase::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.MovementUpdate
void Pathfinding::AIBase::MovementUpdate(float deltaTime, ByRef<::UnityEngine::Vector3> nextPosition, ByRef<::UnityEngine::Quaternion> nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::MovementUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime, byref(nextPosition), byref(nextRotation));
}
// Autogenerated method: Pathfinding.AIBase.MovementUpdateInternal
void Pathfinding::AIBase::MovementUpdateInternal(float deltaTime, ByRef<::UnityEngine::Vector3> nextPosition, ByRef<::UnityEngine::Quaternion> nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::MovementUpdateInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime, byref(nextPosition), byref(nextRotation));
}
// Autogenerated method: Pathfinding.AIBase.CalculatePathRequestEndpoints
void Pathfinding::AIBase::CalculatePathRequestEndpoints(ByRef<::UnityEngine::Vector3> start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::CalculatePathRequestEndpoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(start), byref(end));
}
// Autogenerated method: Pathfinding.AIBase.SearchPath
void Pathfinding::AIBase::SearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::SearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.GetFeetPosition
::UnityEngine::Vector3 Pathfinding::AIBase::GetFeetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::GetFeetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.OnPathComplete
void Pathfinding::AIBase::OnPathComplete(::Pathfinding::Path* newPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::OnPathComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPath);
}
// Autogenerated method: Pathfinding.AIBase.ClearPath
void Pathfinding::AIBase::ClearPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::ClearPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.SetPath
void Pathfinding::AIBase::SetPath(::Pathfinding::Path* path, bool updateDestinationFromPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::SetPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, updateDestinationFromPath);
}
// Autogenerated method: Pathfinding.AIBase.ApplyGravity
void Pathfinding::AIBase::ApplyGravity(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::ApplyGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Pathfinding.AIBase.CalculateDeltaToMoveThisFrame
::UnityEngine::Vector2 Pathfinding::AIBase::CalculateDeltaToMoveThisFrame(::UnityEngine::Vector2 position, float distanceToEndOfPath, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::CalculateDeltaToMoveThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateDeltaToMoveThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(distanceToEndOfPath), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, position, distanceToEndOfPath, deltaTime);
}
// Autogenerated method: Pathfinding.AIBase.SimulateRotationTowards
::UnityEngine::Quaternion Pathfinding::AIBase::SimulateRotationTowards(::UnityEngine::Vector3 direction, float maxDegrees) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::SimulateRotationTowards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateRotationTowards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDegrees)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, direction, maxDegrees);
}
// Autogenerated method: Pathfinding.AIBase.SimulateRotationTowards
::UnityEngine::Quaternion Pathfinding::AIBase::SimulateRotationTowards(::UnityEngine::Vector2 direction, float maxDegrees) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::SimulateRotationTowards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateRotationTowards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDegrees)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, direction, maxDegrees);
}
// Autogenerated method: Pathfinding.AIBase.Move
void Pathfinding::AIBase::Move(::UnityEngine::Vector3 deltaPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::Move");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaPosition);
}
// Autogenerated method: Pathfinding.AIBase.FinalizeMovement
void Pathfinding::AIBase::FinalizeMovement(::UnityEngine::Vector3 nextPosition, ::UnityEngine::Quaternion nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::FinalizeMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextPosition, nextRotation);
}
// Autogenerated method: Pathfinding.AIBase.FinalizeRotation
void Pathfinding::AIBase::FinalizeRotation(::UnityEngine::Quaternion nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::FinalizeRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextRotation);
}
// Autogenerated method: Pathfinding.AIBase.FinalizePosition
void Pathfinding::AIBase::FinalizePosition(::UnityEngine::Vector3 nextPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::FinalizePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextPosition);
}
// Autogenerated method: Pathfinding.AIBase.UpdateVelocity
void Pathfinding::AIBase::UpdateVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::UpdateVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.ClampToNavmesh
::UnityEngine::Vector3 Pathfinding::AIBase::ClampToNavmesh(::UnityEngine::Vector3 position, ByRef<bool> positionChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::ClampToNavmesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, byref(positionChanged));
}
// Autogenerated method: Pathfinding.AIBase.RaycastPosition
::UnityEngine::Vector3 Pathfinding::AIBase::RaycastPosition(::UnityEngine::Vector3 position, float lastElevation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::RaycastPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaycastPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(lastElevation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, lastElevation);
}
// Autogenerated method: Pathfinding.AIBase.OnDrawGizmosSelected
void Pathfinding::AIBase::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::OnDrawGizmosSelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.OnDrawGizmos
void Pathfinding::AIBase::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::OnDrawGizmos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.ResetShape
void Pathfinding::AIBase::ResetShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::ResetShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase..cctor
void Pathfinding::AIBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AIBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.Reset
void Pathfinding::AIBase::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIBase.OnUpgradeSerializedData
int Pathfinding::AIBase::OnUpgradeSerializedData(int version, bool unityThread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIBase::OnUpgradeSerializedData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, unityThread);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AILerp
#include "Pathfinding/AILerp.hpp"
// Including type: Pathfinding.AutoRepathPolicy
#include "Pathfinding/AutoRepathPolicy.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Pathfinding.Seeker
#include "Pathfinding/Seeker.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
// Including type: Pathfinding.Util.PathInterpolator
#include "Pathfinding/Util/PathInterpolator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AutoRepathPolicy autoRepath
[[deprecated("Use field access instead!")]] ::Pathfinding::AutoRepathPolicy*& Pathfinding::AILerp::dyn_autoRepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_autoRepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRepath"))->offset;
  return *reinterpret_cast<::Pathfinding::AutoRepathPolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canMove
[[deprecated("Use field access instead!")]] bool& Pathfinding::AILerp::dyn_canMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_canMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canMove"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& Pathfinding::AILerp::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OrientationMode orientation
[[deprecated("Use field access instead!")]] ::Pathfinding::OrientationMode& Pathfinding::AILerp::dyn_orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_orientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orientation"))->offset;
  return *reinterpret_cast<::Pathfinding::OrientationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableRotation
[[deprecated("Use field access instead!")]] bool& Pathfinding::AILerp::dyn_enableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_enableRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::AILerp::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean interpolatePathSwitches
[[deprecated("Use field access instead!")]] bool& Pathfinding::AILerp::dyn_interpolatePathSwitches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_interpolatePathSwitches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interpolatePathSwitches"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single switchPathInterpolationSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::AILerp::dyn_switchPathInterpolationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_switchPathInterpolationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "switchPathInterpolationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <reachedEndOfPath>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::AILerp::dyn_$reachedEndOfPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_$reachedEndOfPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<reachedEndOfPath>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <destination>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AILerp::dyn_$destination$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_$destination$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<destination>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updatePosition
[[deprecated("Use field access instead!")]] bool& Pathfinding::AILerp::dyn_updatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_updatePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updatePosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateRotation
[[deprecated("Use field access instead!")]] bool& Pathfinding::AILerp::dyn_updateRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_updateRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isStopped>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::AILerp::dyn_$isStopped$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_$isStopped$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isStopped>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action <onSearchPath>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action*& Pathfinding::AILerp::dyn_$onSearchPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_$onSearchPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<onSearchPath>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Seeker seeker
[[deprecated("Use field access instead!")]] ::Pathfinding::Seeker*& Pathfinding::AILerp::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::Pathfinding::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::AILerp::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.ABPath path
[[deprecated("Use field access instead!")]] ::Pathfinding::ABPath*& Pathfinding::AILerp::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::ABPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean canSearchAgain
[[deprecated("Use field access instead!")]] bool& Pathfinding::AILerp::dyn_canSearchAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_canSearchAgain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canSearchAgain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 previousMovementOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AILerp::dyn_previousMovementOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_previousMovementOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMovementOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 previousMovementDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AILerp::dyn_previousMovementDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_previousMovementDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMovementDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single pathSwitchInterpolationTime
[[deprecated("Use field access instead!")]] float& Pathfinding::AILerp::dyn_pathSwitchInterpolationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_pathSwitchInterpolationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathSwitchInterpolationTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Util.PathInterpolator interpolator
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::PathInterpolator*& Pathfinding::AILerp::dyn_interpolator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_interpolator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interpolator"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::PathInterpolator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean startHasRun
[[deprecated("Use field access instead!")]] bool& Pathfinding::AILerp::dyn_startHasRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_startHasRun");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startHasRun"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 previousPosition1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AILerp::dyn_previousPosition1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_previousPosition1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousPosition1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 previousPosition2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AILerp::dyn_previousPosition2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_previousPosition2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousPosition2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 simulatedPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::AILerp::dyn_simulatedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_simulatedPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simulatedPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion simulatedRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Pathfinding::AILerp::dyn_simulatedRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_simulatedRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simulatedRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform targetCompatibility
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::AILerp::dyn_targetCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_targetCompatibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetCompatibility"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single repathRateCompatibility
[[deprecated("Use field access instead!")]] float& Pathfinding::AILerp::dyn_repathRateCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_repathRateCompatibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repathRateCompatibility"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canSearchCompability
[[deprecated("Use field access instead!")]] bool& Pathfinding::AILerp::dyn_canSearchCompability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::dyn_canSearchCompability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canSearchCompability"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AILerp.get_repathRate
float Pathfinding::AILerp::get_repathRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_repathRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_repathRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.set_repathRate
void Pathfinding::AILerp::set_repathRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::set_repathRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_repathRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.get_canSearch
bool Pathfinding::AILerp::get_canSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_canSearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.set_canSearch
void Pathfinding::AILerp::set_canSearch(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::set_canSearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_canSearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.get_rotationIn2D
bool Pathfinding::AILerp::get_rotationIn2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_rotationIn2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationIn2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.set_rotationIn2D
void Pathfinding::AILerp::set_rotationIn2D(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::set_rotationIn2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationIn2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.get_reachedEndOfPath
bool Pathfinding::AILerp::get_reachedEndOfPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_reachedEndOfPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.set_reachedEndOfPath
void Pathfinding::AILerp::set_reachedEndOfPath(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::set_reachedEndOfPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reachedEndOfPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.get_reachedDestination
bool Pathfinding::AILerp::get_reachedDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_reachedDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.get_destination
::UnityEngine::Vector3 Pathfinding::AILerp::get_destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_destination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.set_destination
void Pathfinding::AILerp::set_destination(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::set_destination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.get_target
::UnityEngine::Transform* Pathfinding::AILerp::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.set_target
void Pathfinding::AILerp::set_target(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::set_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.get_position
::UnityEngine::Vector3 Pathfinding::AILerp::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.get_rotation
::UnityEngine::Quaternion Pathfinding::AILerp::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_rotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.set_rotation
void Pathfinding::AILerp::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::set_rotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.Move
void Pathfinding::AILerp::Pathfinding_IAstarAI_Move(::UnityEngine::Vector3 deltaPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.Move");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaPosition);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.get_radius
float Pathfinding::AILerp::Pathfinding_IAstarAI_get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.get_radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 10));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.set_radius
void Pathfinding::AILerp::Pathfinding_IAstarAI_set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.set_radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.get_height
float Pathfinding::AILerp::Pathfinding_IAstarAI_get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.get_height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.set_height
void Pathfinding::AILerp::Pathfinding_IAstarAI_set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.set_height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.get_maxSpeed
float Pathfinding::AILerp::Pathfinding_IAstarAI_get_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.get_maxSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 17));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.set_maxSpeed
void Pathfinding::AILerp::Pathfinding_IAstarAI_set_maxSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.set_maxSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.get_canSearch
bool Pathfinding::AILerp::Pathfinding_IAstarAI_get_canSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.get_canSearch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.set_canSearch
void Pathfinding::AILerp::Pathfinding_IAstarAI_set_canSearch(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.set_canSearch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.get_canMove
bool Pathfinding::AILerp::Pathfinding_IAstarAI_get_canMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.get_canMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.set_canMove
void Pathfinding::AILerp::Pathfinding_IAstarAI_set_canMove(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.set_canMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.get_velocity
::UnityEngine::Vector3 Pathfinding::AILerp::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_velocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.get_desiredVelocity
::UnityEngine::Vector3 Pathfinding::AILerp::Pathfinding_IAstarAI_get_desiredVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.get_desiredVelocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.Pathfinding.IAstarAI.get_steeringTarget
::UnityEngine::Vector3 Pathfinding::AILerp::Pathfinding_IAstarAI_get_steeringTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Pathfinding.IAstarAI.get_steeringTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.get_remainingDistance
float Pathfinding::AILerp::get_remainingDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_remainingDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 21));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.set_remainingDistance
void Pathfinding::AILerp::set_remainingDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::set_remainingDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_remainingDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.get_hasPath
bool Pathfinding::AILerp::get_hasPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_hasPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.get_pathPending
bool Pathfinding::AILerp::get_pathPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_pathPending");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.get_isStopped
bool Pathfinding::AILerp::get_isStopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_isStopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.set_isStopped
void Pathfinding::AILerp::set_isStopped(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::set_isStopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.get_onSearchPath
::System::Action* Pathfinding::AILerp::get_onSearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_onSearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.set_onSearchPath
void Pathfinding::AILerp::set_onSearchPath(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::set_onSearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AILerp.Start
void Pathfinding::AILerp::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.OnEnable
void Pathfinding::AILerp::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.Init
void Pathfinding::AILerp::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.OnDisable
void Pathfinding::AILerp::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.GetRemainingPath
void Pathfinding::AILerp::GetRemainingPath(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* buffer, ByRef<bool> stale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::GetRemainingPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, byref(stale));
}
// Autogenerated method: Pathfinding.AILerp.Teleport
void Pathfinding::AILerp::Teleport(::UnityEngine::Vector3 position, bool clearPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Teleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, clearPath);
}
// Autogenerated method: Pathfinding.AILerp.get_shouldRecalculatePath
bool Pathfinding::AILerp::get_shouldRecalculatePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::get_shouldRecalculatePath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 46));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.ForceSearchPath
void Pathfinding::AILerp::ForceSearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::ForceSearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.SearchPath
void Pathfinding::AILerp::SearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::SearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.OnTargetReached
void Pathfinding::AILerp::OnTargetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::OnTargetReached");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.OnPathComplete
void Pathfinding::AILerp::OnPathComplete(::Pathfinding::Path* _p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::OnPathComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _p);
}
// Autogenerated method: Pathfinding.AILerp.ClearPath
void Pathfinding::AILerp::ClearPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::ClearPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.SetPath
void Pathfinding::AILerp::SetPath(::Pathfinding::Path* path, bool updateDestinationFromPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::SetPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, updateDestinationFromPath);
}
// Autogenerated method: Pathfinding.AILerp.ConfigurePathSwitchInterpolation
void Pathfinding::AILerp::ConfigurePathSwitchInterpolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::ConfigurePathSwitchInterpolation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.GetFeetPosition
::UnityEngine::Vector3 Pathfinding::AILerp::GetFeetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::GetFeetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.ConfigureNewPath
void Pathfinding::AILerp::ConfigureNewPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::ConfigureNewPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.Update
void Pathfinding::AILerp::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.MovementUpdate
void Pathfinding::AILerp::MovementUpdate(float deltaTime, ByRef<::UnityEngine::Vector3> nextPosition, ByRef<::UnityEngine::Quaternion> nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::MovementUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime, byref(nextPosition), byref(nextRotation));
}
// Autogenerated method: Pathfinding.AILerp.FinalizeMovement
void Pathfinding::AILerp::FinalizeMovement(::UnityEngine::Vector3 nextPosition, ::UnityEngine::Quaternion nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::FinalizeMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextPosition, nextRotation);
}
// Autogenerated method: Pathfinding.AILerp.SimulateRotationTowards
::UnityEngine::Quaternion Pathfinding::AILerp::SimulateRotationTowards(::UnityEngine::Vector3 direction, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::SimulateRotationTowards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateRotationTowards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, direction, deltaTime);
}
// Autogenerated method: Pathfinding.AILerp.CalculateNextPosition
::UnityEngine::Vector3 Pathfinding::AILerp::CalculateNextPosition(ByRef<::UnityEngine::Vector3> direction, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::CalculateNextPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(direction), deltaTime);
}
// Autogenerated method: Pathfinding.AILerp.OnDrawGizmos
void Pathfinding::AILerp::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::OnDrawGizmos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AILerp*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.<Awake>b__91_0
::UnityEngine::Vector3 Pathfinding::AILerp::$Awake$b__91_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::<Awake>b__91_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__91_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.Awake
void Pathfinding::AILerp::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AILerp.OnUpgradeSerializedData
int Pathfinding::AILerp::OnUpgradeSerializedData(int version, bool unityThread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AILerp::OnUpgradeSerializedData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::VersionedMonoBehaviour*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, unityThread);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.AIPath
#include "Pathfinding/AIPath.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.Util.PathInterpolator
#include "Pathfinding/Util/PathInterpolator.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Pathfinding.NNConstraint cachedNNConstraint
::Pathfinding::NNConstraint* Pathfinding::AIPath::_get_cachedNNConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::_get_cachedNNConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NNConstraint*>("Pathfinding", "AIPath", "cachedNNConstraint"));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.NNConstraint cachedNNConstraint
void Pathfinding::AIPath::_set_cachedNNConstraint(::Pathfinding::NNConstraint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::_set_cachedNNConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AIPath", "cachedNNConstraint", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxAcceleration
[[deprecated("Use field access instead!")]] float& Pathfinding::AIPath::dyn_maxAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_maxAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAcceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::AIPath::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowdownDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::AIPath::dyn_slowdownDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_slowdownDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowdownDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pickNextWaypointDist
[[deprecated("Use field access instead!")]] float& Pathfinding::AIPath::dyn_pickNextWaypointDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_pickNextWaypointDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pickNextWaypointDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endReachedDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::AIPath::dyn_endReachedDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_endReachedDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endReachedDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean alwaysDrawGizmos
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIPath::dyn_alwaysDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_alwaysDrawGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alwaysDrawGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean slowWhenNotFacingTarget
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIPath::dyn_slowWhenNotFacingTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_slowWhenNotFacingTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowWhenNotFacingTarget"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.CloseToDestinationMode whenCloseToDestination
[[deprecated("Use field access instead!")]] ::Pathfinding::CloseToDestinationMode& Pathfinding::AIPath::dyn_whenCloseToDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_whenCloseToDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "whenCloseToDestination"))->offset;
  return *reinterpret_cast<::Pathfinding::CloseToDestinationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean constrainInsideGraph
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIPath::dyn_constrainInsideGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_constrainInsideGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constrainInsideGraph"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Path path
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::AIPath::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Util.PathInterpolator interpolator
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::PathInterpolator*& Pathfinding::AIPath::dyn_interpolator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_interpolator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interpolator"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::PathInterpolator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <reachedEndOfPath>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::AIPath::dyn_$reachedEndOfPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::dyn_$reachedEndOfPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<reachedEndOfPath>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AIPath.get_remainingDistance
float Pathfinding::AIPath::get_remainingDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::get_remainingDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 53));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.get_reachedDestination
bool Pathfinding::AIPath::get_reachedDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::get_reachedDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 54));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.get_reachedEndOfPath
bool Pathfinding::AIPath::get_reachedEndOfPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::get_reachedEndOfPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 55));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.set_reachedEndOfPath
void Pathfinding::AIPath::set_reachedEndOfPath(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::set_reachedEndOfPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reachedEndOfPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIPath.get_hasPath
bool Pathfinding::AIPath::get_hasPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::get_hasPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 62));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.get_pathPending
bool Pathfinding::AIPath::get_pathPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::get_pathPending");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 63));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.get_steeringTarget
::UnityEngine::Vector3 Pathfinding::AIPath::get_steeringTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::get_steeringTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 66));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.Pathfinding.IAstarAI.get_radius
float Pathfinding::AIPath::Pathfinding_IAstarAI_get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Pathfinding.IAstarAI.get_radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 42));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.Pathfinding.IAstarAI.set_radius
void Pathfinding::AIPath::Pathfinding_IAstarAI_set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Pathfinding.IAstarAI.set_radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIPath.Pathfinding.IAstarAI.get_height
float Pathfinding::AIPath::Pathfinding_IAstarAI_get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Pathfinding.IAstarAI.get_height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 44));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.Pathfinding.IAstarAI.set_height
void Pathfinding::AIPath::Pathfinding_IAstarAI_set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Pathfinding.IAstarAI.set_height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIPath.Pathfinding.IAstarAI.get_maxSpeed
float Pathfinding::AIPath::Pathfinding_IAstarAI_get_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Pathfinding.IAstarAI.get_maxSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 49));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.Pathfinding.IAstarAI.set_maxSpeed
void Pathfinding::AIPath::Pathfinding_IAstarAI_set_maxSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Pathfinding.IAstarAI.set_maxSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIPath.Pathfinding.IAstarAI.get_canSearch
bool Pathfinding::AIPath::Pathfinding_IAstarAI_get_canSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Pathfinding.IAstarAI.get_canSearch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 58));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.Pathfinding.IAstarAI.set_canSearch
void Pathfinding::AIPath::Pathfinding_IAstarAI_set_canSearch(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Pathfinding.IAstarAI.set_canSearch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIPath.Pathfinding.IAstarAI.get_canMove
bool Pathfinding::AIPath::Pathfinding_IAstarAI_get_canMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Pathfinding.IAstarAI.get_canMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 60));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.Pathfinding.IAstarAI.set_canMove
void Pathfinding::AIPath::Pathfinding_IAstarAI_set_canMove(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Pathfinding.IAstarAI.set_canMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 61));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIPath.GetRemainingPath
void Pathfinding::AIPath::GetRemainingPath(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* buffer, ByRef<bool> stale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::GetRemainingPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 69));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, byref(stale));
}
// Autogenerated method: Pathfinding.AIPath.OnTargetReached
void Pathfinding::AIPath::OnTargetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::OnTargetReached");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 76));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.CalculateNextRotation
void Pathfinding::AIPath::CalculateNextRotation(float slowdown, ByRef<::UnityEngine::Quaternion> nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::CalculateNextRotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIPath*), 77));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slowdown, byref(nextRotation));
}
// Autogenerated method: Pathfinding.AIPath.get_TargetReached
bool Pathfinding::AIPath::get_TargetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::get_TargetReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.get_turningSpeed
float Pathfinding::AIPath::get_turningSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::get_turningSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_turningSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.set_turningSpeed
void Pathfinding::AIPath::set_turningSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::set_turningSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_turningSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIPath.get_speed
float Pathfinding::AIPath::get_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::get_speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.set_speed
void Pathfinding::AIPath::set_speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::set_speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.AIPath.get_targetDirection
::UnityEngine::Vector3 Pathfinding::AIPath::get_targetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::get_targetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.CalculateVelocity
::UnityEngine::Vector3 Pathfinding::AIPath::CalculateVelocity(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::CalculateVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.AIPath.Teleport
void Pathfinding::AIPath::Teleport(::UnityEngine::Vector3 newPosition, bool clearPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::Teleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPosition, clearPath);
}
// Autogenerated method: Pathfinding.AIPath.OnDisable
void Pathfinding::AIPath::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.OnPathComplete
void Pathfinding::AIPath::OnPathComplete(::Pathfinding::Path* newPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::OnPathComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPath);
}
// Autogenerated method: Pathfinding.AIPath.ClearPath
void Pathfinding::AIPath::ClearPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::ClearPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AIPath.MovementUpdateInternal
void Pathfinding::AIPath::MovementUpdateInternal(float deltaTime, ByRef<::UnityEngine::Vector3> nextPosition, ByRef<::UnityEngine::Quaternion> nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::MovementUpdateInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime, byref(nextPosition), byref(nextRotation));
}
// Autogenerated method: Pathfinding.AIPath.ClampToNavmesh
::UnityEngine::Vector3 Pathfinding::AIPath::ClampToNavmesh(::UnityEngine::Vector3 position, ByRef<bool> positionChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::ClampToNavmesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, byref(positionChanged));
}
// Autogenerated method: Pathfinding.AIPath.OnUpgradeSerializedData
int Pathfinding::AIPath::OnUpgradeSerializedData(int version, bool unityThread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::OnUpgradeSerializedData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, unityThread);
}
// Autogenerated method: Pathfinding.AIPath..cctor
void Pathfinding::AIPath::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AIPath::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AIPath", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.IAstarAI
#include "Pathfinding/IAstarAI.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.IAstarAI.get_radius
float Pathfinding::IAstarAI::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.set_radius
void Pathfinding::IAstarAI::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::set_radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IAstarAI.get_height
float Pathfinding::IAstarAI::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.set_height
void Pathfinding::IAstarAI::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::set_height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IAstarAI.get_position
::UnityEngine::Vector3 Pathfinding::IAstarAI::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.get_rotation
::UnityEngine::Quaternion Pathfinding::IAstarAI::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_rotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.set_rotation
void Pathfinding::IAstarAI::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::set_rotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IAstarAI.get_maxSpeed
float Pathfinding::IAstarAI::get_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_maxSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.set_maxSpeed
void Pathfinding::IAstarAI::set_maxSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::set_maxSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IAstarAI.get_velocity
::UnityEngine::Vector3 Pathfinding::IAstarAI::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_velocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.get_desiredVelocity
::UnityEngine::Vector3 Pathfinding::IAstarAI::get_desiredVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_desiredVelocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.get_remainingDistance
float Pathfinding::IAstarAI::get_remainingDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_remainingDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.get_reachedDestination
bool Pathfinding::IAstarAI::get_reachedDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_reachedDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.get_reachedEndOfPath
bool Pathfinding::IAstarAI::get_reachedEndOfPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_reachedEndOfPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.get_destination
::UnityEngine::Vector3 Pathfinding::IAstarAI::get_destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_destination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.set_destination
void Pathfinding::IAstarAI::set_destination(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::set_destination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IAstarAI.get_canSearch
bool Pathfinding::IAstarAI::get_canSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_canSearch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.set_canSearch
void Pathfinding::IAstarAI::set_canSearch(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::set_canSearch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IAstarAI.get_canMove
bool Pathfinding::IAstarAI::get_canMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_canMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.set_canMove
void Pathfinding::IAstarAI::set_canMove(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::set_canMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IAstarAI.get_hasPath
bool Pathfinding::IAstarAI::get_hasPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_hasPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.get_pathPending
bool Pathfinding::IAstarAI::get_pathPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_pathPending");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.get_isStopped
bool Pathfinding::IAstarAI::get_isStopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_isStopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.set_isStopped
void Pathfinding::IAstarAI::set_isStopped(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::set_isStopped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IAstarAI.get_steeringTarget
::UnityEngine::Vector3 Pathfinding::IAstarAI::get_steeringTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_steeringTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.get_onSearchPath
::System::Action* Pathfinding::IAstarAI::get_onSearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::get_onSearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.set_onSearchPath
void Pathfinding::IAstarAI::set_onSearchPath(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::set_onSearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.IAstarAI.GetRemainingPath
void Pathfinding::IAstarAI::GetRemainingPath(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* buffer, ByRef<bool> stale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::GetRemainingPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, byref(stale));
}
// Autogenerated method: Pathfinding.IAstarAI.SearchPath
void Pathfinding::IAstarAI::SearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::SearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IAstarAI.SetPath
void Pathfinding::IAstarAI::SetPath(::Pathfinding::Path* path, bool updateDestinationFromPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::SetPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, updateDestinationFromPath);
}
// Autogenerated method: Pathfinding.IAstarAI.Teleport
void Pathfinding::IAstarAI::Teleport(::UnityEngine::Vector3 newPosition, bool clearPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::Teleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPosition, clearPath);
}
// Autogenerated method: Pathfinding.IAstarAI.Move
void Pathfinding::IAstarAI::Move(::UnityEngine::Vector3 deltaPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::Move");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaPosition);
}
// Autogenerated method: Pathfinding.IAstarAI.MovementUpdate
void Pathfinding::IAstarAI::MovementUpdate(float deltaTime, ByRef<::UnityEngine::Vector3> nextPosition, ByRef<::UnityEngine::Quaternion> nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::MovementUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime, byref(nextPosition), byref(nextRotation));
}
// Autogenerated method: Pathfinding.IAstarAI.FinalizeMovement
void Pathfinding::IAstarAI::FinalizeMovement(::UnityEngine::Vector3 nextPosition, ::UnityEngine::Quaternion nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IAstarAI::FinalizeMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IAstarAI*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextPosition, nextRotation);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RichAI
#include "Pathfinding/RichAI.hpp"
// Including type: Pathfinding.RichAI/<TraverseOffMeshLinkFallback>d__69
#include "Pathfinding/RichAI_-TraverseOffMeshLinkFallback-d__69.hpp"
// Including type: Pathfinding.RichAI/<TraverseSpecial>d__68
#include "Pathfinding/RichAI_-TraverseSpecial-d__68.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Pathfinding.RichSpecial
#include "Pathfinding/RichSpecial.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Pathfinding.RichPath
#include "Pathfinding/RichPath.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: Pathfinding.RichFunnel
#include "Pathfinding/RichFunnel.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected readonly UnityEngine.Color GizmoColorPath
::UnityEngine::Color Pathfinding::RichAI::_get_GizmoColorPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::_get_GizmoColorPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Pathfinding", "RichAI", "GizmoColorPath"));
}
// Autogenerated static field setter
// Set static field: static protected readonly UnityEngine.Color GizmoColorPath
void Pathfinding::RichAI::_set_GizmoColorPath(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::_set_GizmoColorPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RichAI", "GizmoColorPath", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single acceleration
[[deprecated("Use field access instead!")]] float& Pathfinding::RichAI::dyn_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_acceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "acceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::RichAI::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowdownTime
[[deprecated("Use field access instead!")]] float& Pathfinding::RichAI::dyn_slowdownTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_slowdownTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowdownTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endReachedDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::RichAI::dyn_endReachedDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_endReachedDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endReachedDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single wallForce
[[deprecated("Use field access instead!")]] float& Pathfinding::RichAI::dyn_wallForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_wallForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallForce"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single wallDist
[[deprecated("Use field access instead!")]] float& Pathfinding::RichAI::dyn_wallDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_wallDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean funnelSimplification
[[deprecated("Use field access instead!")]] bool& Pathfinding::RichAI::dyn_funnelSimplification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_funnelSimplification");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "funnelSimplification"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean slowWhenNotFacingTarget
[[deprecated("Use field access instead!")]] bool& Pathfinding::RichAI::dyn_slowWhenNotFacingTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_slowWhenNotFacingTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowWhenNotFacingTarget"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Pathfinding.RichSpecial,System.Collections.IEnumerator> onTraverseOffMeshLink
[[deprecated("Use field access instead!")]] ::System::Func_2<::Pathfinding::RichSpecial*, ::System::Collections::IEnumerator*>*& Pathfinding::RichAI::dyn_onTraverseOffMeshLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_onTraverseOffMeshLink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onTraverseOffMeshLink"))->offset;
  return *reinterpret_cast<::System::Func_2<::Pathfinding::RichSpecial*, ::System::Collections::IEnumerator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly Pathfinding.RichPath richPath
[[deprecated("Use field access instead!")]] ::Pathfinding::RichPath*& Pathfinding::RichAI::dyn_richPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_richPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "richPath"))->offset;
  return *reinterpret_cast<::Pathfinding::RichPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean delayUpdatePath
[[deprecated("Use field access instead!")]] bool& Pathfinding::RichAI::dyn_delayUpdatePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_delayUpdatePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayUpdatePath"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean lastCorner
[[deprecated("Use field access instead!")]] bool& Pathfinding::RichAI::dyn_lastCorner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_lastCorner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCorner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single distanceToSteeringTarget
[[deprecated("Use field access instead!")]] float& Pathfinding::RichAI::dyn_distanceToSteeringTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_distanceToSteeringTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceToSteeringTarget"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Collections.Generic.List`1<UnityEngine.Vector3> nextCorners
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::RichAI::dyn_nextCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_nextCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextCorners"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Collections.Generic.List`1<UnityEngine.Vector3> wallBuffer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::RichAI::dyn_wallBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_wallBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallBuffer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <traversingOffMeshLink>k__BackingField
[[deprecated("Use field access instead!")]] bool& Pathfinding::RichAI::dyn_$traversingOffMeshLink$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_$traversingOffMeshLink$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<traversingOffMeshLink>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <steeringTarget>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RichAI::dyn_$steeringTarget$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_$steeringTarget$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<steeringTarget>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation animCompatibility
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& Pathfinding::RichAI::dyn_animCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::dyn_animCompatibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animCompatibility"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RichAI.get_traversingOffMeshLink
bool Pathfinding::RichAI::get_traversingOffMeshLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_traversingOffMeshLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_traversingOffMeshLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.set_traversingOffMeshLink
void Pathfinding::RichAI::set_traversingOffMeshLink(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::set_traversingOffMeshLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_traversingOffMeshLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RichAI.get_remainingDistance
float Pathfinding::RichAI::get_remainingDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_remainingDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 53));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_reachedEndOfPath
bool Pathfinding::RichAI::get_reachedEndOfPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_reachedEndOfPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 55));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_reachedDestination
bool Pathfinding::RichAI::get_reachedDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_reachedDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 54));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_hasPath
bool Pathfinding::RichAI::get_hasPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_hasPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 62));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_pathPending
bool Pathfinding::RichAI::get_pathPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_pathPending");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 63));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_steeringTarget
::UnityEngine::Vector3 Pathfinding::RichAI::get_steeringTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_steeringTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 66));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.set_steeringTarget
void Pathfinding::RichAI::set_steeringTarget(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::set_steeringTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_steeringTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RichAI.Pathfinding.IAstarAI.get_radius
float Pathfinding::RichAI::Pathfinding_IAstarAI_get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Pathfinding.IAstarAI.get_radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 42));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.Pathfinding.IAstarAI.set_radius
void Pathfinding::RichAI::Pathfinding_IAstarAI_set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Pathfinding.IAstarAI.set_radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RichAI.Pathfinding.IAstarAI.get_height
float Pathfinding::RichAI::Pathfinding_IAstarAI_get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Pathfinding.IAstarAI.get_height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 44));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.Pathfinding.IAstarAI.set_height
void Pathfinding::RichAI::Pathfinding_IAstarAI_set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Pathfinding.IAstarAI.set_height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RichAI.Pathfinding.IAstarAI.get_maxSpeed
float Pathfinding::RichAI::Pathfinding_IAstarAI_get_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Pathfinding.IAstarAI.get_maxSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 49));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.Pathfinding.IAstarAI.set_maxSpeed
void Pathfinding::RichAI::Pathfinding_IAstarAI_set_maxSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Pathfinding.IAstarAI.set_maxSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RichAI.Pathfinding.IAstarAI.get_canSearch
bool Pathfinding::RichAI::Pathfinding_IAstarAI_get_canSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Pathfinding.IAstarAI.get_canSearch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 58));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.Pathfinding.IAstarAI.set_canSearch
void Pathfinding::RichAI::Pathfinding_IAstarAI_set_canSearch(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Pathfinding.IAstarAI.set_canSearch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RichAI.Pathfinding.IAstarAI.get_canMove
bool Pathfinding::RichAI::Pathfinding_IAstarAI_get_canMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Pathfinding.IAstarAI.get_canMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 60));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.Pathfinding.IAstarAI.set_canMove
void Pathfinding::RichAI::Pathfinding_IAstarAI_set_canMove(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Pathfinding.IAstarAI.set_canMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 61));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RichAI.get_approachingPartEndpoint
bool Pathfinding::RichAI::get_approachingPartEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_approachingPartEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_approachingPartEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_approachingPathEndpoint
bool Pathfinding::RichAI::get_approachingPathEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_approachingPathEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_approachingPathEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.NextPart
void Pathfinding::RichAI::NextPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::NextPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.GetRemainingPath
void Pathfinding::RichAI::GetRemainingPath(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* buffer, ByRef<bool> stale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::GetRemainingPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 69));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, byref(stale));
}
// Autogenerated method: Pathfinding.RichAI.OnTargetReached
void Pathfinding::RichAI::OnTargetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::OnTargetReached");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 76));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.UpdateTarget
::UnityEngine::Vector3 Pathfinding::RichAI::UpdateTarget(::Pathfinding::RichFunnel* fn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::UpdateTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 77));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, fn);
}
// Autogenerated method: Pathfinding.RichAI.TraverseFunnel
void Pathfinding::RichAI::TraverseFunnel(::Pathfinding::RichFunnel* fn, float deltaTime, ByRef<::UnityEngine::Vector3> nextPosition, ByRef<::UnityEngine::Quaternion> nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::TraverseFunnel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TraverseFunnel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fn), ::il2cpp_utils::ExtractType(deltaTime), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fn, deltaTime, byref(nextPosition), byref(nextRotation));
}
// Autogenerated method: Pathfinding.RichAI.FinalMovement
void Pathfinding::RichAI::FinalMovement(::UnityEngine::Vector3 position3D, float deltaTime, float distanceToEndOfPath, float slowdownFactor, ByRef<::UnityEngine::Vector3> nextPosition, ByRef<::UnityEngine::Quaternion> nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::FinalMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position3D), ::il2cpp_utils::ExtractType(deltaTime), ::il2cpp_utils::ExtractType(distanceToEndOfPath), ::il2cpp_utils::ExtractType(slowdownFactor), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position3D, deltaTime, distanceToEndOfPath, slowdownFactor, byref(nextPosition), byref(nextRotation));
}
// Autogenerated method: Pathfinding.RichAI.CalculateWallForce
::UnityEngine::Vector2 Pathfinding::RichAI::CalculateWallForce(::UnityEngine::Vector2 position, float elevation, ::UnityEngine::Vector2 directionToTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::CalculateWallForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateWallForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(elevation), ::il2cpp_utils::ExtractType(directionToTarget)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, position, elevation, directionToTarget);
}
// Autogenerated method: Pathfinding.RichAI.TraverseSpecial
::System::Collections::IEnumerator* Pathfinding::RichAI::TraverseSpecial(::Pathfinding::RichSpecial* link) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::TraverseSpecial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI*), 78));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, link);
}
// Autogenerated method: Pathfinding.RichAI.TraverseOffMeshLinkFallback
::System::Collections::IEnumerator* Pathfinding::RichAI::TraverseOffMeshLinkFallback(::Pathfinding::RichSpecial* link) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::TraverseOffMeshLinkFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TraverseOffMeshLinkFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(link)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, link);
}
// Autogenerated method: Pathfinding.RichAI.UpdatePath
void Pathfinding::RichAI::UpdatePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::UpdatePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_Velocity
::UnityEngine::Vector3 Pathfinding::RichAI::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_NextWaypoint
::UnityEngine::Vector3 Pathfinding::RichAI::get_NextWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_NextWaypoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextWaypoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_DistanceToNextWaypoint
float Pathfinding::RichAI::get_DistanceToNextWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_DistanceToNextWaypoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DistanceToNextWaypoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_repeatedlySearchPaths
bool Pathfinding::RichAI::get_repeatedlySearchPaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_repeatedlySearchPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_repeatedlySearchPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.set_repeatedlySearchPaths
void Pathfinding::RichAI::set_repeatedlySearchPaths(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::set_repeatedlySearchPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_repeatedlySearchPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RichAI.get_TargetReached
bool Pathfinding::RichAI::get_TargetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_TargetReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_PathPending
bool Pathfinding::RichAI::get_PathPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_PathPending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PathPending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_ApproachingPartEndpoint
bool Pathfinding::RichAI::get_ApproachingPartEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_ApproachingPartEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApproachingPartEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_ApproachingPathEndpoint
bool Pathfinding::RichAI::get_ApproachingPathEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_ApproachingPathEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApproachingPathEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_TraversingSpecial
bool Pathfinding::RichAI::get_TraversingSpecial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_TraversingSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TraversingSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_TargetPoint
::UnityEngine::Vector3 Pathfinding::RichAI::get_TargetPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_TargetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_anim
::UnityEngine::Animation* Pathfinding::RichAI::get_anim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_anim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animation*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.set_anim
void Pathfinding::RichAI::set_anim(::UnityEngine::Animation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::set_anim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RichAI.Teleport
void Pathfinding::RichAI::Teleport(::UnityEngine::Vector3 newPosition, bool clearPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::Teleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPosition, clearPath);
}
// Autogenerated method: Pathfinding.RichAI.OnDisable
void Pathfinding::RichAI::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.get_shouldRecalculatePath
bool Pathfinding::RichAI::get_shouldRecalculatePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::get_shouldRecalculatePath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.SearchPath
void Pathfinding::RichAI::SearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::SearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.OnPathComplete
void Pathfinding::RichAI::OnPathComplete(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::OnPathComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.RichAI.ClearPath
void Pathfinding::RichAI::ClearPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::ClearPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.MovementUpdateInternal
void Pathfinding::RichAI::MovementUpdateInternal(float deltaTime, ByRef<::UnityEngine::Vector3> nextPosition, ByRef<::UnityEngine::Quaternion> nextRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::MovementUpdateInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime, byref(nextPosition), byref(nextRotation));
}
// Autogenerated method: Pathfinding.RichAI.ClampToNavmesh
::UnityEngine::Vector3 Pathfinding::RichAI::ClampToNavmesh(::UnityEngine::Vector3 position, ByRef<bool> positionChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::ClampToNavmesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, byref(positionChanged));
}
// Autogenerated method: Pathfinding.RichAI.OnDrawGizmos
void Pathfinding::RichAI::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::OnDrawGizmos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI.OnUpgradeSerializedData
int Pathfinding::RichAI::OnUpgradeSerializedData(int version, bool unityThread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::OnUpgradeSerializedData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::AIBase*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, unityThread);
}
// Autogenerated method: Pathfinding.RichAI..cctor
void Pathfinding::RichAI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RichAI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.RichAI/<TraverseOffMeshLinkFallback>d__69
#include "Pathfinding/RichAI_-TraverseOffMeshLinkFallback-d__69.hpp"
// Including type: Pathfinding.RichSpecial
#include "Pathfinding/RichSpecial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RichAI <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::RichAI*& Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::RichAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RichSpecial link
[[deprecated("Use field access instead!")]] ::Pathfinding::RichSpecial*& Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_link() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_link");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "link"))->offset;
  return *reinterpret_cast<::Pathfinding::RichSpecial**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <duration>5__2
[[deprecated("Use field access instead!")]] float& Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_$duration$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_$duration$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<duration>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__3
[[deprecated("Use field access instead!")]] float& Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_$startTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::dyn_$startTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RichAI/<TraverseOffMeshLinkFallback>d__69.System.IDisposable.Dispose
void Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI/<TraverseOffMeshLinkFallback>d__69.MoveNext
bool Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI/<TraverseOffMeshLinkFallback>d__69.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI/<TraverseOffMeshLinkFallback>d__69.System.Collections.IEnumerator.Reset
void Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI/<TraverseOffMeshLinkFallback>d__69.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI::$TraverseOffMeshLinkFallback$d__69*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.RichAI/<TraverseSpecial>d__68
#include "Pathfinding/RichAI_-TraverseSpecial-d__68.hpp"
// Including type: Pathfinding.RichSpecial
#include "Pathfinding/RichSpecial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::RichAI::$TraverseSpecial$d__68::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseSpecial$d__68::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::RichAI::$TraverseSpecial$d__68::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseSpecial$d__68::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RichAI <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::RichAI*& Pathfinding::RichAI::$TraverseSpecial$d__68::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseSpecial$d__68::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::RichAI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RichSpecial link
[[deprecated("Use field access instead!")]] ::Pathfinding::RichSpecial*& Pathfinding::RichAI::$TraverseSpecial$d__68::dyn_link() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseSpecial$d__68::dyn_link");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "link"))->offset;
  return *reinterpret_cast<::Pathfinding::RichSpecial**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RichAI/<TraverseSpecial>d__68.System.IDisposable.Dispose
void Pathfinding::RichAI::$TraverseSpecial$d__68::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseSpecial$d__68::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI::$TraverseSpecial$d__68*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI/<TraverseSpecial>d__68.MoveNext
bool Pathfinding::RichAI::$TraverseSpecial$d__68::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseSpecial$d__68::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI::$TraverseSpecial$d__68*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI/<TraverseSpecial>d__68.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::RichAI::$TraverseSpecial$d__68::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseSpecial$d__68::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI::$TraverseSpecial$d__68*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI/<TraverseSpecial>d__68.System.Collections.IEnumerator.Reset
void Pathfinding::RichAI::$TraverseSpecial$d__68::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseSpecial$d__68::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI::$TraverseSpecial$d__68*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichAI/<TraverseSpecial>d__68.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::RichAI::$TraverseSpecial$d__68::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichAI::$TraverseSpecial$d__68::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichAI::$TraverseSpecial$d__68*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RichPath
#include "Pathfinding/RichPath.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.RichPathPart
#include "Pathfinding/RichPathPart.hpp"
// Including type: Pathfinding.Seeker
#include "Pathfinding/Seeker.hpp"
// Including type: Pathfinding.Util.ITransform
#include "Pathfinding/Util/ITransform.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentPart
[[deprecated("Use field access instead!")]] int& Pathfinding::RichPath::dyn_currentPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::dyn_currentPart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Pathfinding.RichPathPart> parts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::RichPathPart*>*& Pathfinding::RichPath::dyn_parts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::dyn_parts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::RichPathPart*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Seeker seeker
[[deprecated("Use field access instead!")]] ::Pathfinding::Seeker*& Pathfinding::RichPath::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::Pathfinding::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.ITransform transform
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::ITransform*& Pathfinding::RichPath::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::ITransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Endpoint>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RichPath::dyn_$Endpoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::dyn_$Endpoint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Endpoint>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RichPath.Clear
void Pathfinding::RichPath::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichPath.Initialize
void Pathfinding::RichPath::Initialize(::Pathfinding::Seeker* seeker, ::Pathfinding::Path* path, bool mergePartEndpoints, bool simplificationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seeker), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mergePartEndpoints), ::il2cpp_utils::ExtractType(simplificationMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, seeker, path, mergePartEndpoints, simplificationMode);
}
// Autogenerated method: Pathfinding.RichPath.get_Endpoint
::UnityEngine::Vector3 Pathfinding::RichPath::get_Endpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::get_Endpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Endpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichPath.set_Endpoint
void Pathfinding::RichPath::set_Endpoint(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::set_Endpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Endpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.RichPath.get_CompletedAllParts
bool Pathfinding::RichPath::get_CompletedAllParts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::get_CompletedAllParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedAllParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichPath.get_IsLastPart
bool Pathfinding::RichPath::get_IsLastPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::get_IsLastPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLastPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichPath.NextPart
void Pathfinding::RichPath::NextPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::NextPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichPath.GetCurrentPart
::Pathfinding::RichPathPart* Pathfinding::RichPath::GetCurrentPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::GetCurrentPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RichPathPart*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichPath.GetRemainingPath
void Pathfinding::RichPath::GetRemainingPath(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* buffer, ::UnityEngine::Vector3 currentPosition, ByRef<bool> requiresRepath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPath::GetRemainingPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(currentPosition), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, currentPosition, byref(requiresRepath));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RichPathPart
#include "Pathfinding/RichPathPart.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.RichPathPart.OnEnterPool
void Pathfinding::RichPathPart::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichPathPart::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichPathPart*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RichFunnel
#include "Pathfinding/RichFunnel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
// Including type: Pathfinding.NavmeshBase
#include "Pathfinding/NavmeshBase.hpp"
// Including type: Pathfinding.RichPath
#include "Pathfinding/RichPath.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.IRaycastableGraph
#include "Pathfinding/IRaycastableGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Queue`1<Pathfinding.TriangleMeshNode> navmeshClampQueue
::System::Collections::Generic::Queue_1<::Pathfinding::TriangleMeshNode*>* Pathfinding::RichFunnel::_get_navmeshClampQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::_get_navmeshClampQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Queue_1<::Pathfinding::TriangleMeshNode*>*>("Pathfinding", "RichFunnel", "navmeshClampQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Queue`1<Pathfinding.TriangleMeshNode> navmeshClampQueue
void Pathfinding::RichFunnel::_set_navmeshClampQueue(::System::Collections::Generic::Queue_1<::Pathfinding::TriangleMeshNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::_set_navmeshClampQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RichFunnel", "navmeshClampQueue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Pathfinding.TriangleMeshNode> navmeshClampList
::System::Collections::Generic::List_1<::Pathfinding::TriangleMeshNode*>* Pathfinding::RichFunnel::_get_navmeshClampList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::_get_navmeshClampList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Pathfinding::TriangleMeshNode*>*>("Pathfinding", "RichFunnel", "navmeshClampList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Pathfinding.TriangleMeshNode> navmeshClampList
void Pathfinding::RichFunnel::_set_navmeshClampList(::System::Collections::Generic::List_1<::Pathfinding::TriangleMeshNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::_set_navmeshClampList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RichFunnel", "navmeshClampList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<Pathfinding.TriangleMeshNode,Pathfinding.TriangleMeshNode> navmeshClampDict
::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::Pathfinding::TriangleMeshNode*>* Pathfinding::RichFunnel::_get_navmeshClampDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::_get_navmeshClampDict");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::Pathfinding::TriangleMeshNode*>*>("Pathfinding", "RichFunnel", "navmeshClampDict")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<Pathfinding.TriangleMeshNode,Pathfinding.TriangleMeshNode> navmeshClampDict
void Pathfinding::RichFunnel::_set_navmeshClampDict(::System::Collections::Generic::Dictionary_2<::Pathfinding::TriangleMeshNode*, ::Pathfinding::TriangleMeshNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::_set_navmeshClampDict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RichFunnel", "navmeshClampDict", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector3> left
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::RichFunnel::dyn_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "left"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector3> right
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::RichFunnel::dyn_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "right"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.TriangleMeshNode> nodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::TriangleMeshNode*>*& Pathfinding::RichFunnel::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::TriangleMeshNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 exactStart
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RichFunnel::dyn_exactStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_exactStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exactStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 exactEnd
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RichFunnel::dyn_exactEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_exactEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exactEnd"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.NavmeshBase graph
[[deprecated("Use field access instead!")]] ::Pathfinding::NavmeshBase*& Pathfinding::RichFunnel::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::Pathfinding::NavmeshBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentNode
[[deprecated("Use field access instead!")]] int& Pathfinding::RichFunnel::dyn_currentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_currentNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentNode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RichFunnel::dyn_currentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_currentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 checkForDestroyedNodesCounter
[[deprecated("Use field access instead!")]] int& Pathfinding::RichFunnel::dyn_checkForDestroyedNodesCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_checkForDestroyedNodesCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkForDestroyedNodesCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RichPath path
[[deprecated("Use field access instead!")]] ::Pathfinding::RichPath*& Pathfinding::RichFunnel::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::RichPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] triBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::RichFunnel::dyn_triBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_triBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean funnelSimplification
[[deprecated("Use field access instead!")]] bool& Pathfinding::RichFunnel::dyn_funnelSimplification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::dyn_funnelSimplification");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "funnelSimplification"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RichFunnel.Initialize
::Pathfinding::RichFunnel* Pathfinding::RichFunnel::Initialize(::Pathfinding::RichPath* path, ::Pathfinding::NavmeshBase* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RichFunnel*, false>(this, ___internal__method, path, graph);
}
// Autogenerated method: Pathfinding.RichFunnel.get_CurrentNode
::Pathfinding::TriangleMeshNode* Pathfinding::RichFunnel::get_CurrentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::get_CurrentNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::TriangleMeshNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichFunnel.BuildFunnelCorridor
void Pathfinding::RichFunnel::BuildFunnelCorridor(::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::BuildFunnelCorridor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFunnelCorridor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodes, start, end);
}
// Autogenerated method: Pathfinding.RichFunnel.SimplifyPath
void Pathfinding::RichFunnel::SimplifyPath(::Pathfinding::IRaycastableGraph* graph, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes, int start, int end, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* result, ::UnityEngine::Vector3 startPoint, ::UnityEngine::Vector3 endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::SimplifyPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimplifyPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(startPoint), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, nodes, start, end, result, startPoint, endPoint);
}
// Autogenerated method: Pathfinding.RichFunnel.UpdateFunnelCorridor
void Pathfinding::RichFunnel::UpdateFunnelCorridor(int splitIndex, ::System::Collections::Generic::List_1<::Pathfinding::TriangleMeshNode*>* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::UpdateFunnelCorridor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFunnelCorridor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(splitIndex), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, splitIndex, prefix);
}
// Autogenerated method: Pathfinding.RichFunnel.CheckForDestroyedNodes
bool Pathfinding::RichFunnel::CheckForDestroyedNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::CheckForDestroyedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForDestroyedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichFunnel.get_DistanceToEndOfPath
float Pathfinding::RichFunnel::get_DistanceToEndOfPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::get_DistanceToEndOfPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DistanceToEndOfPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RichFunnel.ClampToNavmesh
::UnityEngine::Vector3 Pathfinding::RichFunnel::ClampToNavmesh(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::ClampToNavmesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampToNavmesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.RichFunnel.Update
::UnityEngine::Vector3 Pathfinding::RichFunnel::Update(::UnityEngine::Vector3 position, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* buffer, int numCorners, ByRef<bool> lastCorner, ByRef<bool> requiresRepath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(numCorners), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, buffer, numCorners, byref(lastCorner), byref(requiresRepath));
}
// Autogenerated method: Pathfinding.RichFunnel.ClampToNavmeshInternal
bool Pathfinding::RichFunnel::ClampToNavmeshInternal(ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::ClampToNavmeshInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampToNavmeshInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: Pathfinding.RichFunnel.FindWalls
void Pathfinding::RichFunnel::FindWalls(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* wallBuffer, float range) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::FindWalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindWalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wallBuffer), ::il2cpp_utils::ExtractType(range)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wallBuffer, range);
}
// Autogenerated method: Pathfinding.RichFunnel.FindWalls
void Pathfinding::RichFunnel::FindWalls(int nodeIndex, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* wallBuffer, ::UnityEngine::Vector3 position, float range) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::FindWalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindWalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeIndex), ::il2cpp_utils::ExtractType(wallBuffer), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(range)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodeIndex, wallBuffer, position, range);
}
// Autogenerated method: Pathfinding.RichFunnel.FindNextCorners
bool Pathfinding::RichFunnel::FindNextCorners(::UnityEngine::Vector3 origin, int startIndex, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* funnelPath, int numCorners, ByRef<bool> lastCorner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::FindNextCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNextCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(funnelPath), ::il2cpp_utils::ExtractType(numCorners), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, startIndex, funnelPath, numCorners, byref(lastCorner));
}
// Autogenerated method: Pathfinding.RichFunnel..cctor
void Pathfinding::RichFunnel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RichFunnel", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.RichFunnel.OnEnterPool
void Pathfinding::RichFunnel::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichFunnel::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichPathPart*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Pathfinding.RichSpecial
#include "Pathfinding/RichSpecial.hpp"
// Including type: Pathfinding.NodeLink2
#include "Pathfinding/NodeLink2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NodeLink2 nodeLink
[[deprecated("Use field access instead!")]] ::Pathfinding::NodeLink2*& Pathfinding::RichSpecial::dyn_nodeLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichSpecial::dyn_nodeLink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeLink"))->offset;
  return *reinterpret_cast<::Pathfinding::NodeLink2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform first
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::RichSpecial::dyn_first() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichSpecial::dyn_first");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "first"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform second
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::RichSpecial::dyn_second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichSpecial::dyn_second");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "second"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reverse
[[deprecated("Use field access instead!")]] bool& Pathfinding::RichSpecial::dyn_reverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichSpecial::dyn_reverse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RichSpecial.Initialize
::Pathfinding::RichSpecial* Pathfinding::RichSpecial::Initialize(::Pathfinding::NodeLink2* nodeLink, ::Pathfinding::GraphNode* first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichSpecial::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeLink), ::il2cpp_utils::ExtractType(first)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RichSpecial*, false>(this, ___internal__method, nodeLink, first);
}
// Autogenerated method: Pathfinding.RichSpecial.OnEnterPool
void Pathfinding::RichSpecial::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RichSpecial::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::RichPathPart*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
