// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare None
::System::IO::FileShare System::IO::FileShare::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare None
void System::IO::FileShare::_set_None(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Read
::System::IO::FileShare System::IO::FileShare::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Read
void System::IO::FileShare::_set_Read(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Write
::System::IO::FileShare System::IO::FileShare::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Write
void System::IO::FileShare::_set_Write(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare ReadWrite
::System::IO::FileShare System::IO::FileShare::_get_ReadWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_ReadWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "ReadWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare ReadWrite
void System::IO::FileShare::_set_ReadWrite(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_ReadWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "ReadWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Delete
::System::IO::FileShare System::IO::FileShare::_get_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "Delete"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Delete
void System::IO::FileShare::_set_Delete(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Delete", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Inheritable
::System::IO::FileShare System::IO::FileShare::_get_Inheritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_get_Inheritable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileShare>("System.IO", "FileShare", "Inheritable"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Inheritable
void System::IO::FileShare::_set_Inheritable(::System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::_set_Inheritable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Inheritable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::FileShare::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileShare::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.IOException
#include "System/IO/IOException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.Threading.Tasks.ValueTask`1
#include "System/Threading/Tasks/ValueTask_1.hpp"
// Including type: System.Memory`1
#include "System/Memory_1.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Threading.Tasks.ValueTask
#include "System/Threading/Tasks/ValueTask.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MemStreamMaxLength
int System::IO::MemoryStream::_get_MemStreamMaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::_get_MemStreamMaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.IO", "MemoryStream", "MemStreamMaxLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MemStreamMaxLength
void System::IO::MemoryStream::_set_MemStreamMaxLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::_set_MemStreamMaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MemoryStream", "MemStreamMaxLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::MemoryStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _origin
[[deprecated("Use field access instead!")]] int& System::IO::MemoryStream::dyn__origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__origin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_origin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _position
[[deprecated("Use field access instead!")]] int& System::IO::MemoryStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::IO::MemoryStream::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _capacity
[[deprecated("Use field access instead!")]] int& System::IO::MemoryStream::dyn__capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__capacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _expandable
[[deprecated("Use field access instead!")]] bool& System::IO::MemoryStream::dyn__expandable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__expandable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expandable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _writable
[[deprecated("Use field access instead!")]] bool& System::IO::MemoryStream::dyn__writable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__writable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _exposable
[[deprecated("Use field access instead!")]] bool& System::IO::MemoryStream::dyn__exposable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__exposable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exposable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isOpen
[[deprecated("Use field access instead!")]] bool& System::IO::MemoryStream::dyn__isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Int32> _lastReadTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<int>*& System::IO::MemoryStream::dyn__lastReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::dyn__lastReadTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReadTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.MemoryStream.EnsureNotClosed
void System::IO::MemoryStream::EnsureNotClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::EnsureNotClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureNotClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.EnsureWriteable
void System::IO::MemoryStream::EnsureWriteable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::EnsureWriteable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureWriteable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.EnsureCapacity
bool System::IO::MemoryStream::EnsureCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.GetBuffer
::ArrayW<uint8_t> System::IO::MemoryStream::GetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::GetBuffer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::MemoryStream*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.TryGetBuffer
bool System::IO::MemoryStream::TryGetBuffer(ByRef<::System::ArraySegment_1<uint8_t>> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::TryGetBuffer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::MemoryStream*), 40));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(buffer));
}
// Autogenerated method: System.IO.MemoryStream.InternalGetBuffer
::ArrayW<uint8_t> System::IO::MemoryStream::InternalGetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::InternalGetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalGetPosition
int System::IO::MemoryStream::InternalGetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::InternalGetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalReadInt32
int System::IO::MemoryStream::InternalReadInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::InternalReadInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalEmulateRead
int System::IO::MemoryStream::InternalEmulateRead(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::InternalEmulateRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalEmulateRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.MemoryStream.get_Capacity
int System::IO::MemoryStream::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_Capacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::MemoryStream*), 41));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.set_Capacity
void System::IO::MemoryStream::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::set_Capacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::MemoryStream*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.ToArray
::ArrayW<uint8_t> System::IO::MemoryStream::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::ToArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::MemoryStream*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_CanRead
bool System::IO::MemoryStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_CanSeek
bool System::IO::MemoryStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_CanWrite
bool System::IO::MemoryStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.Dispose
void System::IO::MemoryStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.MemoryStream.Flush
void System::IO::MemoryStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.FlushAsync
::System::Threading::Tasks::Task* System::IO::MemoryStream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.IO.MemoryStream.get_Length
int64_t System::IO::MemoryStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_Position
int64_t System::IO::MemoryStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.set_Position
void System::IO::MemoryStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.Read
int System::IO::MemoryStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.MemoryStream.Read
int System::IO::MemoryStream::Read(::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 34));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.MemoryStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::MemoryStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.MemoryStream.ReadAsync
::System::Threading::Tasks::ValueTask_1<int> System::IO::MemoryStream::ReadAsync(::System::Memory_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask_1<int>, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.IO.MemoryStream.ReadByte
int System::IO::MemoryStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 35));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.CopyTo
void System::IO::MemoryStream::CopyTo(::System::IO::Stream* destination, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination, bufferSize);
}
// Autogenerated method: System.IO.MemoryStream.Seek
int64_t System::IO::MemoryStream::Seek(int64_t offset, ::System::IO::SeekOrigin loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, loc);
}
// Autogenerated method: System.IO.MemoryStream.SetLength
void System::IO::MemoryStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.Write
void System::IO::MemoryStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.MemoryStream.Write
void System::IO::MemoryStream::Write(::System::ReadOnlySpan_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.MemoryStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::MemoryStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.MemoryStream.WriteAsync
::System::Threading::Tasks::ValueTask System::IO::MemoryStream::WriteAsync(::System::ReadOnlyMemory_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.IO.MemoryStream.WriteByte
void System::IO::MemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MemoryStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.PathInternal
#include "System/IO/PathInternal.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean s_isCaseSensitive
bool System::IO::PathInternal::_get_s_isCaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::_get_s_isCaseSensitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "PathInternal", "s_isCaseSensitive"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean s_isCaseSensitive
void System::IO::PathInternal::_set_s_isCaseSensitive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::_set_s_isCaseSensitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "PathInternal", "s_isCaseSensitive", value));
}
// Autogenerated method: System.IO.PathInternal.GetRootLength
int System::IO::PathInternal::GetRootLength(::System::ReadOnlySpan_1<::Il2CppChar> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::GetRootLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "GetRootLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.PathInternal.IsDirectorySeparator
bool System::IO::PathInternal::IsDirectorySeparator(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::IsDirectorySeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "IsDirectorySeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.IO.PathInternal.EndsInDirectorySeparator
bool System::IO::PathInternal::EndsInDirectorySeparator(::System::ReadOnlySpan_1<::Il2CppChar> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::EndsInDirectorySeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "EndsInDirectorySeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.PathInternal.StartsWithDirectorySeparator
bool System::IO::PathInternal::StartsWithDirectorySeparator(::System::ReadOnlySpan_1<::Il2CppChar> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::StartsWithDirectorySeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "StartsWithDirectorySeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.PathInternal.TrimEndingDirectorySeparator
::StringW System::IO::PathInternal::TrimEndingDirectorySeparator(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::TrimEndingDirectorySeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "TrimEndingDirectorySeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.PathInternal.TrimEndingDirectorySeparator
::System::ReadOnlySpan_1<::Il2CppChar> System::IO::PathInternal::TrimEndingDirectorySeparator(::System::ReadOnlySpan_1<::Il2CppChar> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::TrimEndingDirectorySeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "TrimEndingDirectorySeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.PathInternal.IsRoot
bool System::IO::PathInternal::IsRoot(::System::ReadOnlySpan_1<::Il2CppChar> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::IsRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "IsRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.PathInternal.get_IsCaseSensitive
bool System::IO::PathInternal::get_IsCaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::get_IsCaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "get_IsCaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.PathInternal.GetIsCaseSensitive
bool System::IO::PathInternal::GetIsCaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::GetIsCaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "GetIsCaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.PathInternal.IsPartiallyQualified
bool System::IO::PathInternal::IsPartiallyQualified(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::IsPartiallyQualified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "IsPartiallyQualified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.PathInternal..cctor
void System::IO::PathInternal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.PathTooLongException
#include "System/IO/PathTooLongException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.PinnedBufferMemoryStream
#include "System/IO/PinnedBufferMemoryStream.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _array
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::PinnedBufferMemoryStream::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PinnedBufferMemoryStream::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle _pinningHandle
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& System::IO::PinnedBufferMemoryStream::dyn__pinningHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PinnedBufferMemoryStream::dyn__pinningHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinningHandle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.PinnedBufferMemoryStream.Read
int System::IO::PinnedBufferMemoryStream::Read(::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PinnedBufferMemoryStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::UnmanagedMemoryStream*), 34));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.PinnedBufferMemoryStream.Write
void System::IO::PinnedBufferMemoryStream::Write(::System::ReadOnlySpan_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PinnedBufferMemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::UnmanagedMemoryStream*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.PinnedBufferMemoryStream.Finalize
void System::IO::PinnedBufferMemoryStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PinnedBufferMemoryStream::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.PinnedBufferMemoryStream.Dispose
void System::IO::PinnedBufferMemoryStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PinnedBufferMemoryStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::UnmanagedMemoryStream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin Begin
::System::IO::SeekOrigin System::IO::SeekOrigin::_get_Begin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_get_Begin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SeekOrigin>("System.IO", "SeekOrigin", "Begin"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin Begin
void System::IO::SeekOrigin::_set_Begin(::System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_set_Begin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "Begin", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin Current
::System::IO::SeekOrigin System::IO::SeekOrigin::_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_get_Current");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SeekOrigin>("System.IO", "SeekOrigin", "Current"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin Current
void System::IO::SeekOrigin::_set_Current(::System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_set_Current");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "Current", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin End
::System::IO::SeekOrigin System::IO::SeekOrigin::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SeekOrigin>("System.IO", "SeekOrigin", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin End
void System::IO::SeekOrigin::_set_End(::System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::SeekOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SeekOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.StreamHelpers
#include "System/IO/StreamHelpers.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.StreamHelpers.ValidateCopyToArgs
void System::IO::StreamHelpers::ValidateCopyToArgs(::System::IO::Stream* source, ::System::IO::Stream* destination, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamHelpers::ValidateCopyToArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamHelpers", "ValidateCopyToArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(bufferSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destination, bufferSize);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.IO.StreamReader/NullStreamReader
#include "System/IO/StreamReader_NullStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.StreamReader Null
::System::IO::StreamReader* System::IO::StreamReader::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::StreamReader*>("System.IO", "StreamReader", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.StreamReader Null
void System::IO::StreamReader::_set_Null(::System::IO::StreamReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StreamReader", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::StreamReader::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding _encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::IO::StreamReader::dyn__encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Decoder _decoder
[[deprecated("Use field access instead!")]] ::System::Text::Decoder*& System::IO::StreamReader::dyn__decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decoder"))->offset;
  return *reinterpret_cast<::System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _byteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::StreamReader::dyn__byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::StreamReader::dyn__charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _charPos
[[deprecated("Use field access instead!")]] int& System::IO::StreamReader::dyn__charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__charPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _charLen
[[deprecated("Use field access instead!")]] int& System::IO::StreamReader::dyn__charLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__charLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _byteLen
[[deprecated("Use field access instead!")]] int& System::IO::StreamReader::dyn__byteLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__byteLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byteLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bytePos
[[deprecated("Use field access instead!")]] int& System::IO::StreamReader::dyn__bytePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__bytePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxCharsPerBuffer
[[deprecated("Use field access instead!")]] int& System::IO::StreamReader::dyn__maxCharsPerBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__maxCharsPerBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCharsPerBuffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _detectEncoding
[[deprecated("Use field access instead!")]] bool& System::IO::StreamReader::dyn__detectEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__detectEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detectEncoding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _checkPreamble
[[deprecated("Use field access instead!")]] bool& System::IO::StreamReader::dyn__checkPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__checkPreamble");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkPreamble"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isBlocked
[[deprecated("Use field access instead!")]] bool& System::IO::StreamReader::dyn__isBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__isBlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isBlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _closable
[[deprecated("Use field access instead!")]] bool& System::IO::StreamReader::dyn__closable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__closable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _asyncReadTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::IO::StreamReader::dyn__asyncReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::dyn__asyncReadTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncReadTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StreamReader.CheckAsyncTaskInProgress
void System::IO::StreamReader::CheckAsyncTaskInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::CheckAsyncTaskInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAsyncTaskInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ThrowAsyncIOInProgress
void System::IO::StreamReader::ThrowAsyncIOInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::ThrowAsyncIOInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamReader", "ThrowAsyncIOInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Init
void System::IO::StreamReader::Init(::System::IO::Stream* stream, ::System::Text::Encoding* encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(detectEncodingFromByteOrderMarks), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(leaveOpen)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, encoding, detectEncodingFromByteOrderMarks, bufferSize, leaveOpen);
}
// Autogenerated method: System.IO.StreamReader.Init
void System::IO::StreamReader::Init(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.IO.StreamReader.get_CurrentEncoding
::System::Text::Encoding* System::IO::StreamReader::get_CurrentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::get_CurrentEncoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.get_BaseStream
::System::IO::Stream* System::IO::StreamReader::get_BaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::get_BaseStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.get_LeaveOpen
bool System::IO::StreamReader::get_LeaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::get_LeaveOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeaveOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.get_EndOfStream
bool System::IO::StreamReader::get_EndOfStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::get_EndOfStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ReadSpan
int System::IO::StreamReader::ReadSpan(::System::Span_1<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::ReadSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.StreamReader.CompressBuffer
void System::IO::StreamReader::CompressBuffer(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::CompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.IO.StreamReader.DetectEncoding
void System::IO::StreamReader::DetectEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::DetectEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.IsPreamble
bool System::IO::StreamReader::IsPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::IsPreamble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ReadBuffer
int System::IO::StreamReader::ReadBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::ReadBuffer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ReadBuffer
int System::IO::StreamReader::ReadBuffer(::System::Span_1<::Il2CppChar> userBuffer, ByRef<bool> readToUserBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::ReadBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userBuffer), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, userBuffer, byref(readToUserBuffer));
}
// Autogenerated method: System.IO.StreamReader.DataAvailable
bool System::IO::StreamReader::DataAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::DataAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Close
void System::IO::StreamReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Dispose
void System::IO::StreamReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StreamReader.Peek
int System::IO::StreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Read
int System::IO::StreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Read
int System::IO::StreamReader::Read(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StreamReader.ReadToEnd
::StringW System::IO::StreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ReadLine
::StringW System::IO::StreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader..cctor
void System::IO::StreamReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.StreamReader/NullStreamReader
#include "System/IO/StreamReader_NullStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.StreamReader/NullStreamReader.get_BaseStream
::System::IO::Stream* System::IO::StreamReader::NullStreamReader::get_BaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::get_BaseStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/NullStreamReader.get_CurrentEncoding
::System::Text::Encoding* System::IO::StreamReader::NullStreamReader::get_CurrentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::get_CurrentEncoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/NullStreamReader.Dispose
void System::IO::StreamReader::NullStreamReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StreamReader/NullStreamReader.Peek
int System::IO::StreamReader::NullStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/NullStreamReader.Read
int System::IO::StreamReader::NullStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/NullStreamReader.Read
int System::IO::StreamReader::NullStreamReader::Read(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StreamReader/NullStreamReader.ReadLine
::StringW System::IO::StreamReader::NullStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/NullStreamReader.ReadToEnd
::StringW System::IO::StreamReader::NullStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/NullStreamReader.ReadBuffer
int System::IO::StreamReader::NullStreamReader::ReadBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamReader::NullStreamReader::ReadBuffer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.IO.StreamWriter/<WriteAsyncInternal>d__57
#include "System/IO/StreamWriter_-WriteAsyncInternal-d__57.hpp"
// Including type: System.IO.StreamWriter/<WriteAsyncInternal>d__59
#include "System/IO/StreamWriter_-WriteAsyncInternal-d__59.hpp"
// Including type: System.IO.StreamWriter/<WriteAsyncInternal>d__62
#include "System/IO/StreamWriter_-WriteAsyncInternal-d__62.hpp"
// Including type: System.IO.StreamWriter/<FlushAsyncInternal>d__74
#include "System/IO/StreamWriter_-FlushAsyncInternal-d__74.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.StreamWriter Null
::System::IO::StreamWriter* System::IO::StreamWriter::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::StreamWriter*>("System.IO", "StreamWriter", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.StreamWriter Null
void System::IO::StreamWriter::_set_Null(::System::IO::StreamWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StreamWriter", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::StreamWriter::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding _encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::IO::StreamWriter::dyn__encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoder _encoder
[[deprecated("Use field access instead!")]] ::System::Text::Encoder*& System::IO::StreamWriter::dyn__encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoder"))->offset;
  return *reinterpret_cast<::System::Text::Encoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _byteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::StreamWriter::dyn__byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::StreamWriter::dyn__charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _charPos
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::dyn__charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__charPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _charLen
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::dyn__charLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__charLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _autoFlush
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::dyn__autoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__autoFlush");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoFlush"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _haveWrittenPreamble
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::dyn__haveWrittenPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__haveWrittenPreamble");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_haveWrittenPreamble"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _closable
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::dyn__closable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__closable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _asyncWriteTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::IO::StreamWriter::dyn__asyncWriteTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::dyn__asyncWriteTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncWriteTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StreamWriter.CheckAsyncTaskInProgress
void System::IO::StreamWriter::CheckAsyncTaskInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::CheckAsyncTaskInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAsyncTaskInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.ThrowAsyncIOInProgress
void System::IO::StreamWriter::ThrowAsyncIOInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::ThrowAsyncIOInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", "ThrowAsyncIOInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.get_UTF8NoBOM
::System::Text::Encoding* System::IO::StreamWriter::get_UTF8NoBOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::get_UTF8NoBOM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", "get_UTF8NoBOM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.Init
void System::IO::StreamWriter::Init(::System::IO::Stream* streamArg, ::System::Text::Encoding* encodingArg, int bufferSize, bool shouldLeaveOpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streamArg), ::il2cpp_utils::ExtractType(encodingArg), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(shouldLeaveOpen)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, streamArg, encodingArg, bufferSize, shouldLeaveOpen);
}
// Autogenerated method: System.IO.StreamWriter.Flush
void System::IO::StreamWriter::Flush(bool flushStream, bool flushEncoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flushStream), ::il2cpp_utils::ExtractType(flushEncoder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flushStream, flushEncoder);
}
// Autogenerated method: System.IO.StreamWriter.set_AutoFlush
void System::IO::StreamWriter::set_AutoFlush(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::set_AutoFlush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.get_BaseStream
::System::IO::Stream* System::IO::StreamWriter::get_BaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::get_BaseStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.get_LeaveOpen
bool System::IO::StreamWriter::get_LeaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::get_LeaveOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeaveOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.WriteSpan
void System::IO::StreamWriter::WriteSpan(::System::ReadOnlySpan_1<::Il2CppChar> buffer, bool appendNewLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(appendNewLine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, appendNewLine);
}
// Autogenerated method: System.IO.StreamWriter.WriteAsyncInternal
::System::Threading::Tasks::Task* System::IO::StreamWriter::WriteAsyncInternal(::System::IO::StreamWriter* _this, ::Il2CppChar value, ::ArrayW<::Il2CppChar> charBuffer, int charPos, int charLen, ::ArrayW<::Il2CppChar> coreNewLine, bool autoFlush, bool appendNewLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", "WriteAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_this), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(charPos), ::il2cpp_utils::ExtractType(charLen), ::il2cpp_utils::ExtractType(coreNewLine), ::il2cpp_utils::ExtractType(autoFlush), ::il2cpp_utils::ExtractType(appendNewLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _this, value, charBuffer, charPos, charLen, coreNewLine, autoFlush, appendNewLine);
}
// Autogenerated method: System.IO.StreamWriter.WriteAsyncInternal
::System::Threading::Tasks::Task* System::IO::StreamWriter::WriteAsyncInternal(::System::IO::StreamWriter* _this, ::StringW value, ::ArrayW<::Il2CppChar> charBuffer, int charPos, int charLen, ::ArrayW<::Il2CppChar> coreNewLine, bool autoFlush, bool appendNewLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", "WriteAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_this), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(charPos), ::il2cpp_utils::ExtractType(charLen), ::il2cpp_utils::ExtractType(coreNewLine), ::il2cpp_utils::ExtractType(autoFlush), ::il2cpp_utils::ExtractType(appendNewLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _this, value, charBuffer, charPos, charLen, coreNewLine, autoFlush, appendNewLine);
}
// Autogenerated method: System.IO.StreamWriter.WriteAsyncInternal
::System::Threading::Tasks::Task* System::IO::StreamWriter::WriteAsyncInternal(::System::IO::StreamWriter* _this, ::System::ReadOnlyMemory_1<::Il2CppChar> source, ::ArrayW<::Il2CppChar> charBuffer, int charPos, int charLen, ::ArrayW<::Il2CppChar> coreNewLine, bool autoFlush, bool appendNewLine, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", "WriteAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_this), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(charPos), ::il2cpp_utils::ExtractType(charLen), ::il2cpp_utils::ExtractType(coreNewLine), ::il2cpp_utils::ExtractType(autoFlush), ::il2cpp_utils::ExtractType(appendNewLine), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _this, source, charBuffer, charPos, charLen, coreNewLine, autoFlush, appendNewLine, cancellationToken);
}
// Autogenerated method: System.IO.StreamWriter.set_CharPos_Prop
void System::IO::StreamWriter::set_CharPos_Prop(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::set_CharPos_Prop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CharPos_Prop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.set_HaveWrittenPreamble_Prop
void System::IO::StreamWriter::set_HaveWrittenPreamble_Prop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::set_HaveWrittenPreamble_Prop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HaveWrittenPreamble_Prop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.FlushAsyncInternal
::System::Threading::Tasks::Task* System::IO::StreamWriter::FlushAsyncInternal(bool flushStream, bool flushEncoder, ::ArrayW<::Il2CppChar> sCharBuffer, int sCharPos, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::FlushAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flushStream), ::il2cpp_utils::ExtractType(flushEncoder), ::il2cpp_utils::ExtractType(sCharBuffer), ::il2cpp_utils::ExtractType(sCharPos), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, flushStream, flushEncoder, sCharBuffer, sCharPos, cancellationToken);
}
// Autogenerated method: System.IO.StreamWriter.FlushAsyncInternal
::System::Threading::Tasks::Task* System::IO::StreamWriter::FlushAsyncInternal(::System::IO::StreamWriter* _this, bool flushStream, bool flushEncoder, ::ArrayW<::Il2CppChar> charBuffer, int charPos, bool haveWrittenPreamble, ::System::Text::Encoding* encoding, ::System::Text::Encoder* encoder, ::ArrayW<uint8_t> byteBuffer, ::System::IO::Stream* stream, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::FlushAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", "FlushAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_this), ::il2cpp_utils::ExtractType(flushStream), ::il2cpp_utils::ExtractType(flushEncoder), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(charPos), ::il2cpp_utils::ExtractType(haveWrittenPreamble), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(encoder), ::il2cpp_utils::ExtractType(byteBuffer), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _this, flushStream, flushEncoder, charBuffer, charPos, haveWrittenPreamble, encoding, encoder, byteBuffer, stream, cancellationToken);
}
// Autogenerated method: System.IO.StreamWriter.Close
void System::IO::StreamWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.Dispose
void System::IO::StreamWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StreamWriter.Flush
void System::IO::StreamWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.get_Encoding
::System::Text::Encoding* System::IO::StreamWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.WriteLine
void System::IO::StreamWriter::WriteLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::StreamWriter::WriteAsync(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::StreamWriter::WriteAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::StreamWriter::WriteAsync(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StreamWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::StreamWriter::WriteLineAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::StreamWriter::WriteLineAsync(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::StreamWriter::WriteLineAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::StreamWriter::WriteLineAsync(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StreamWriter.FlushAsync
::System::Threading::Tasks::Task* System::IO::StreamWriter::FlushAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter..cctor
void System::IO::StreamWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.StreamWriter/<WriteAsyncInternal>d__57
#include "System/IO/StreamWriter_-WriteAsyncInternal-d__57.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 charPos
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_charPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 charLen
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_charLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_charLen");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.StreamWriter _this
[[deprecated("Use field access instead!")]] ::System::IO::StreamWriter*& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_this"))->offset;
  return *reinterpret_cast<::System::IO::StreamWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char[] charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_charBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char value
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean appendNewLine
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_appendNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_appendNewLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appendNewLine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char[] coreNewLine
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_coreNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_coreNewLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coreNewLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoFlush
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_autoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_autoFlush");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoFlush"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::dyn_$i$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StreamWriter/<WriteAsyncInternal>d__57.MoveNext
void System::IO::StreamWriter::$WriteAsyncInternal$d__57::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::StreamWriter::$WriteAsyncInternal$d__57), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter/<WriteAsyncInternal>d__57.SetStateMachine
void System::IO::StreamWriter::$WriteAsyncInternal$d__57::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__57::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::StreamWriter::$WriteAsyncInternal$d__57), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.StreamWriter/<WriteAsyncInternal>d__59
#include "System/IO/StreamWriter_-WriteAsyncInternal-d__59.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 charPos
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_charPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 charLen
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_charLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_charLen");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.StreamWriter _this
[[deprecated("Use field access instead!")]] ::System::IO::StreamWriter*& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_this"))->offset;
  return *reinterpret_cast<::System::IO::StreamWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char[] charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_charBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean appendNewLine
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_appendNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_appendNewLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appendNewLine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char[] coreNewLine
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_coreNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_coreNewLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coreNewLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoFlush
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_autoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_autoFlush");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoFlush"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <count>5__2
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$count$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$count$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<count>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <index>5__3
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$index$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$index$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<index>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__4
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$i$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::dyn_$i$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StreamWriter/<WriteAsyncInternal>d__59.MoveNext
void System::IO::StreamWriter::$WriteAsyncInternal$d__59::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::StreamWriter::$WriteAsyncInternal$d__59), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter/<WriteAsyncInternal>d__59.SetStateMachine
void System::IO::StreamWriter::$WriteAsyncInternal$d__59::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__59::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::StreamWriter::$WriteAsyncInternal$d__59), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.StreamWriter/<WriteAsyncInternal>d__62
#include "System/IO/StreamWriter_-WriteAsyncInternal-d__62.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 charPos
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_charPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 charLen
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_charLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_charLen");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.StreamWriter _this
[[deprecated("Use field access instead!")]] ::System::IO::StreamWriter*& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_this"))->offset;
  return *reinterpret_cast<::System::IO::StreamWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char[] charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_charBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.ReadOnlyMemory`1<System.Char> source
[[deprecated("Use field access instead!")]] ::System::ReadOnlyMemory_1<::Il2CppChar>& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::System::ReadOnlyMemory_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean appendNewLine
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_appendNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_appendNewLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appendNewLine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char[] coreNewLine
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_coreNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_coreNewLine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coreNewLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoFlush
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_autoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_autoFlush");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoFlush"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <copied>5__2
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_$copied$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_$copied$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<copied>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__3
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_$i$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::dyn_$i$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StreamWriter/<WriteAsyncInternal>d__62.MoveNext
void System::IO::StreamWriter::$WriteAsyncInternal$d__62::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::StreamWriter::$WriteAsyncInternal$d__62), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter/<WriteAsyncInternal>d__62.SetStateMachine
void System::IO::StreamWriter::$WriteAsyncInternal$d__62::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$WriteAsyncInternal$d__62::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::StreamWriter::$WriteAsyncInternal$d__62), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.StreamWriter/<FlushAsyncInternal>d__74
#include "System/IO/StreamWriter_-FlushAsyncInternal-d__74.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean haveWrittenPreamble
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_haveWrittenPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_haveWrittenPreamble");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveWrittenPreamble"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.StreamWriter _this
[[deprecated("Use field access instead!")]] ::System::IO::StreamWriter*& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_this"))->offset;
  return *reinterpret_cast<::System::IO::StreamWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Text.Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_encoding");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_stream");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Text.Encoder encoder
[[deprecated("Use field access instead!")]] ::System::Text::Encoder*& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_encoder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoder"))->offset;
  return *reinterpret_cast<::System::Text::Encoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char[] charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_charBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 charPos
[[deprecated("Use field access instead!")]] int& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_charPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] byteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_byteBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flushEncoder
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_flushEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_flushEncoder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flushEncoder"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flushStream
[[deprecated("Use field access instead!")]] bool& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_flushStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_flushStream");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flushStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable/ConfiguredValueTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable::ConfiguredValueTaskAwaiter& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable::ConfiguredValueTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StreamWriter/<FlushAsyncInternal>d__74.MoveNext
void System::IO::StreamWriter::$FlushAsyncInternal$d__74::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::StreamWriter::$FlushAsyncInternal$d__74), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter/<FlushAsyncInternal>d__74.SetStateMachine
void System::IO::StreamWriter::$FlushAsyncInternal$d__74::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StreamWriter::$FlushAsyncInternal$d__74::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::StreamWriter::$FlushAsyncInternal$d__74), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.IO.TextReader/NullTextReader
#include "System/IO/TextReader_NullTextReader.hpp"
// Including type: System.IO.TextReader/SyncTextReader
#include "System/IO/TextReader_SyncTextReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextReader Null
::System::IO::TextReader* System::IO::TextReader::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextReader*>("System.IO", "TextReader", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextReader Null
void System::IO::TextReader::_set_Null(::System::IO::TextReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextReader", "Null", value));
}
// Autogenerated method: System.IO.TextReader.Close
void System::IO::TextReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Dispose
void System::IO::TextReader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Dispose
void System::IO::TextReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextReader.Peek
int System::IO::TextReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Peek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Read
int System::IO::TextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Read
int System::IO::TextReader::Read(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextReader.ReadToEnd
::StringW System::IO::TextReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.ReadLine
::StringW System::IO::TextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Synchronized
::System::IO::TextReader* System::IO::TextReader::Synchronized(::System::IO::TextReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextReader", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextReader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: System.IO.TextReader..cctor
void System::IO::TextReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.TextReader/NullTextReader
#include "System/IO/TextReader_NullTextReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.TextReader/NullTextReader.Read
int System::IO::TextReader::NullTextReader::Read(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::NullTextReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextReader/NullTextReader.ReadLine
::StringW System::IO::TextReader::NullTextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::NullTextReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.TextReader/SyncTextReader
#include "System/IO/TextReader_SyncTextReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.IO.TextReader _in
[[deprecated("Use field access instead!")]] ::System::IO::TextReader*& System::IO::TextReader::SyncTextReader::dyn__in() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::dyn__in");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_in"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.Close
void System::IO::TextReader::SyncTextReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.Dispose
void System::IO::TextReader::SyncTextReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.Peek
int System::IO::TextReader::SyncTextReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::Peek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.Read
int System::IO::TextReader::SyncTextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.Read
int System::IO::TextReader::SyncTextReader::Read(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.ReadLine
::StringW System::IO::TextReader::SyncTextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/SyncTextReader.ReadToEnd
::StringW System::IO::TextReader::SyncTextReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextReader::SyncTextReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.TextWriter/NullTextWriter
#include "System/IO/TextWriter_NullTextWriter.hpp"
// Including type: System.IO.TextWriter/SyncTextWriter
#include "System/IO/TextWriter_SyncTextWriter.hpp"
// Including type: System.IO.TextWriter/<>c
#include "System/IO/TextWriter_--c.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter Null
::System::IO::TextWriter* System::IO::TextWriter::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextWriter*>("System.IO", "TextWriter", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter Null
void System::IO::TextWriter::_set_Null(::System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] s_coreNewLine
::ArrayW<::Il2CppChar> System::IO::TextWriter::_get_s_coreNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_get_s_coreNewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "TextWriter", "s_coreNewLine"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] s_coreNewLine
void System::IO::TextWriter::_set_s_coreNewLine(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::_set_s_coreNewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "s_coreNewLine", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Char[] CoreNewLine
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::TextWriter::dyn_CoreNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::dyn_CoreNewLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CoreNewLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String CoreNewLineStr
[[deprecated("Use field access instead!")]] ::StringW& System::IO::TextWriter::dyn_CoreNewLineStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::dyn_CoreNewLineStr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CoreNewLineStr"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IFormatProvider _internalFormatProvider
[[deprecated("Use field access instead!")]] ::System::IFormatProvider*& System::IO::TextWriter::dyn__internalFormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::dyn__internalFormatProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_internalFormatProvider"))->offset;
  return *reinterpret_cast<::System::IFormatProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.TextWriter.get_FormatProvider
::System::IFormatProvider* System::IO::TextWriter::get_FormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::get_FormatProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::IFormatProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Close
void System::IO::TextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Dispose
void System::IO::TextWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextWriter.Dispose
void System::IO::TextWriter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Flush
void System::IO::TextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.get_Encoding
::System::Text::Encoding* System::IO::TextWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.get_NewLine
::StringW System::IO::TextWriter::get_NewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::get_NewLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::StringW format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::StringW format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::StringW format, ::ArrayW<::Il2CppObject*> arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg);
}
// Autogenerated method: System.IO.TextWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::WriteAsync(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::WriteAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::WriteAsync(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.TextWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::WriteAsync(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::WriteLineAsync(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::WriteLineAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::WriteLineAsync(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::WriteLineAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.FlushAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::FlushAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Synchronized
::System::IO::TextWriter* System::IO::TextWriter::Synchronized(::System::IO::TextWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer);
}
// Autogenerated method: System.IO.TextWriter..cctor
void System::IO::TextWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/NullTextWriter
#include "System/IO/TextWriter_NullTextWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.TextWriter/NullTextWriter.get_Encoding
::System::Text::Encoding* System::IO::TextWriter::NullTextWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/NullTextWriter.Write
void System::IO::TextWriter::NullTextWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/NullTextWriter.Write
void System::IO::TextWriter::NullTextWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/NullTextWriter.WriteLine
void System::IO::TextWriter::NullTextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/NullTextWriter.WriteLine
void System::IO::TextWriter::NullTextWriter::WriteLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/NullTextWriter.WriteLine
void System::IO::TextWriter::NullTextWriter::WriteLine(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/NullTextWriter.Write
void System::IO::TextWriter::NullTextWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::NullTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/SyncTextWriter
#include "System/IO/TextWriter_SyncTextWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.TextWriter _out
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& System::IO::TextWriter::SyncTextWriter::dyn__out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::dyn__out");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_out"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.get_Encoding
::System::Text::Encoding* System::IO::TextWriter::SyncTextWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.get_FormatProvider
::System::IFormatProvider* System::IO::TextWriter::SyncTextWriter::get_FormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::get_FormatProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::IFormatProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.get_NewLine
::StringW System::IO::TextWriter::SyncTextWriter::get_NewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::get_NewLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Close
void System::IO::TextWriter::SyncTextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Dispose
void System::IO::TextWriter::SyncTextWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Flush
void System::IO::TextWriter::SyncTextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::StringW format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::StringW format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::StringW format, ::ArrayW<::Il2CppObject*> arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, arg);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::SyncTextWriter::WriteAsync(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::SyncTextWriter::WriteAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::SyncTextWriter::WriteAsync(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::SyncTextWriter::WriteLineAsync(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::SyncTextWriter::WriteLineAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::SyncTextWriter::WriteLineAsync(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/SyncTextWriter.FlushAsync
::System::Threading::Tasks::Task* System::IO::TextWriter::SyncTextWriter::FlushAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::SyncTextWriter::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/<>c
#include "System/IO/TextWriter_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter/<>c <>9
::System::IO::TextWriter::$$c* System::IO::TextWriter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::TextWriter::$$c*>("System.IO", "TextWriter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter/<>c <>9
void System::IO::TextWriter::$$c::_set_$$9(::System::IO::TextWriter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__56_0
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::$$c::_get_$$9__56_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_get_$$9__56_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter/<>c", "<>9__56_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__56_0
void System::IO::TextWriter::$$c::_set_$$9__56_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_set_$$9__56_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9__56_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__57_0
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::$$c::_get_$$9__57_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_get_$$9__57_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter/<>c", "<>9__57_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__57_0
void System::IO::TextWriter::$$c::_set_$$9__57_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_set_$$9__57_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9__57_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__59_0
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::$$c::_get_$$9__59_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_get_$$9__59_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter/<>c", "<>9__59_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__59_0
void System::IO::TextWriter::$$c::_set_$$9__59_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_set_$$9__59_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9__59_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__61_0
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::$$c::_get_$$9__61_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_get_$$9__61_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter/<>c", "<>9__61_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__61_0
void System::IO::TextWriter::$$c::_set_$$9__61_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_set_$$9__61_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9__61_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__62_0
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::$$c::_get_$$9__62_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_get_$$9__62_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter/<>c", "<>9__62_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__62_0
void System::IO::TextWriter::$$c::_set_$$9__62_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_set_$$9__62_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9__62_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__64_0
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::$$c::_get_$$9__64_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_get_$$9__64_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter/<>c", "<>9__64_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__64_0
void System::IO::TextWriter::$$c::_set_$$9__64_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_set_$$9__64_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9__64_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__67_0
::System::Action_1<::Il2CppObject*>* System::IO::TextWriter::$$c::_get_$$9__67_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_get_$$9__67_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter/<>c", "<>9__67_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__67_0
void System::IO::TextWriter::$$c::_set_$$9__67_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::_set_$$9__67_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9__67_0", value)));
}
// Autogenerated method: System.IO.TextWriter/<>c..cctor
void System::IO::TextWriter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/<>c.<WriteAsync>b__56_0
void System::IO::TextWriter::$$c::$WriteAsync$b__56_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<WriteAsync>b__56_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteAsync>b__56_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<WriteAsync>b__57_0
void System::IO::TextWriter::$$c::$WriteAsync$b__57_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<WriteAsync>b__57_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteAsync>b__57_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<WriteAsync>b__59_0
void System::IO::TextWriter::$$c::$WriteAsync$b__59_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<WriteAsync>b__59_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteAsync>b__59_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<WriteLineAsync>b__61_0
void System::IO::TextWriter::$$c::$WriteLineAsync$b__61_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<WriteLineAsync>b__61_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteLineAsync>b__61_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<WriteLineAsync>b__62_0
void System::IO::TextWriter::$$c::$WriteLineAsync$b__62_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<WriteLineAsync>b__62_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteLineAsync>b__62_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<WriteLineAsync>b__64_0
void System::IO::TextWriter::$$c::$WriteLineAsync$b__64_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<WriteLineAsync>b__64_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteLineAsync>b__64_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/<>c.<FlushAsync>b__67_0
void System::IO::TextWriter::$$c::$FlushAsync$b__67_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::TextWriter::$$c::<FlushAsync>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FlushAsync>b__67_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.UnmanagedMemoryStream
#include "System/IO/UnmanagedMemoryStream.hpp"
// Including type: System.Runtime.InteropServices.SafeBuffer
#include "System/Runtime/InteropServices/SafeBuffer.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.ValueTask`1
#include "System/Threading/Tasks/ValueTask_1.hpp"
// Including type: System.Memory`1
#include "System/Memory_1.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Threading.Tasks.ValueTask
#include "System/Threading/Tasks/ValueTask.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.SafeBuffer _buffer
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::SafeBuffer*& System::IO::UnmanagedMemoryStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::SafeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* _mem
[[deprecated("Use field access instead!")]] uint8_t*& System::IO::UnmanagedMemoryStream::dyn__mem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__mem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mem"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _length
[[deprecated("Use field access instead!")]] int64_t& System::IO::UnmanagedMemoryStream::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _capacity
[[deprecated("Use field access instead!")]] int64_t& System::IO::UnmanagedMemoryStream::dyn__capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__capacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capacity"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
[[deprecated("Use field access instead!")]] int64_t& System::IO::UnmanagedMemoryStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _offset
[[deprecated("Use field access instead!")]] int64_t& System::IO::UnmanagedMemoryStream::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAccess _access
[[deprecated("Use field access instead!")]] ::System::IO::FileAccess& System::IO::UnmanagedMemoryStream::dyn__access() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__access");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_access"))->offset;
  return *reinterpret_cast<::System::IO::FileAccess*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _isOpen
[[deprecated("Use field access instead!")]] bool& System::IO::UnmanagedMemoryStream::dyn__isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Int32> _lastReadTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<int>*& System::IO::UnmanagedMemoryStream::dyn__lastReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::dyn__lastReadTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReadTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Initialize
void System::IO::UnmanagedMemoryStream::Initialize(uint8_t* pointer, int64_t length, int64_t capacity, ::System::IO::FileAccess access) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractType(access)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointer, length, capacity, access);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.EnsureNotClosed
void System::IO::UnmanagedMemoryStream::EnsureNotClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::EnsureNotClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureNotClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.EnsureReadable
void System::IO::UnmanagedMemoryStream::EnsureReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::EnsureReadable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.EnsureWriteable
void System::IO::UnmanagedMemoryStream::EnsureWriteable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::EnsureWriteable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureWriteable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_PositionPointer
uint8_t* System::IO::UnmanagedMemoryStream::get_PositionPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_PositionPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositionPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.ReadCore
int System::IO::UnmanagedMemoryStream::ReadCore(::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::ReadCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.WriteCore
void System::IO::UnmanagedMemoryStream::WriteCore(::System::ReadOnlySpan_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::WriteCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanRead
bool System::IO::UnmanagedMemoryStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanSeek
bool System::IO::UnmanagedMemoryStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanWrite
bool System::IO::UnmanagedMemoryStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Dispose
void System::IO::UnmanagedMemoryStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Flush
void System::IO::UnmanagedMemoryStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.FlushAsync
::System::Threading::Tasks::Task* System::IO::UnmanagedMemoryStream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_Length
int64_t System::IO::UnmanagedMemoryStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_Position
int64_t System::IO::UnmanagedMemoryStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.set_Position
void System::IO::UnmanagedMemoryStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Read
int System::IO::UnmanagedMemoryStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Read
int System::IO::UnmanagedMemoryStream::Read(::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 34));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::UnmanagedMemoryStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.ReadAsync
::System::Threading::Tasks::ValueTask_1<int> System::IO::UnmanagedMemoryStream::ReadAsync(::System::Memory_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask_1<int>, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.ReadByte
int System::IO::UnmanagedMemoryStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 35));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Seek
int64_t System::IO::UnmanagedMemoryStream::Seek(int64_t offset, ::System::IO::SeekOrigin loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, loc);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.SetLength
void System::IO::UnmanagedMemoryStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Write
void System::IO::UnmanagedMemoryStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Write
void System::IO::UnmanagedMemoryStream::Write(::System::ReadOnlySpan_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::UnmanagedMemoryStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.WriteAsync
::System::Threading::Tasks::ValueTask System::IO::UnmanagedMemoryStream::WriteAsync(::System::ReadOnlyMemory_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.WriteByte
void System::IO::UnmanagedMemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnmanagedMemoryStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.DriveNotFoundException
#include "System/IO/DriveNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Directory
#include "System/IO/Directory.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
// Including type: System.IO.EnumerationOptions
#include "System/IO/EnumerationOptions.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IO.SearchTarget
#include "System/IO/SearchTarget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Directory.CreateDirectory
::System::IO::DirectoryInfo* System::IO::Directory::CreateDirectory(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "CreateDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::DirectoryInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.Exists
bool System::IO::Directory::Exists(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetFiles
::ArrayW<::StringW> System::IO::Directory::GetFiles(::StringW path, ::StringW searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern);
}
// Autogenerated method: System.IO.Directory.GetFiles
::ArrayW<::StringW> System::IO::Directory::GetFiles(::StringW path, ::StringW searchPattern, ::System::IO::SearchOption searchOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern, searchOption);
}
// Autogenerated method: System.IO.Directory.GetFiles
::ArrayW<::StringW> System::IO::Directory::GetFiles(::StringW path, ::StringW searchPattern, ::System::IO::EnumerationOptions* enumerationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(enumerationOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern, enumerationOptions);
}
// Autogenerated method: System.IO.Directory.GetDirectories
::ArrayW<::StringW> System::IO::Directory::GetDirectories(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetDirectories
::ArrayW<::StringW> System::IO::Directory::GetDirectories(::StringW path, ::StringW searchPattern, ::System::IO::EnumerationOptions* enumerationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(enumerationOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern, enumerationOptions);
}
// Autogenerated method: System.IO.Directory.InternalEnumeratePaths
::System::Collections::Generic::IEnumerable_1<::StringW>* System::IO::Directory::InternalEnumeratePaths(::StringW path, ::StringW searchPattern, ::System::IO::SearchTarget searchTarget, ::System::IO::EnumerationOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::InternalEnumeratePaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InternalEnumeratePaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchTarget), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern, searchTarget, options);
}
// Autogenerated method: System.IO.Directory.EnumerateDirectories
::System::Collections::Generic::IEnumerable_1<::StringW>* System::IO::Directory::EnumerateDirectories(::StringW path, ::StringW searchPattern, ::System::IO::SearchOption searchOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::EnumerateDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "EnumerateDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern, searchOption);
}
// Autogenerated method: System.IO.Directory.EnumerateDirectories
::System::Collections::Generic::IEnumerable_1<::StringW>* System::IO::Directory::EnumerateDirectories(::StringW path, ::StringW searchPattern, ::System::IO::EnumerationOptions* enumerationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::EnumerateDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "EnumerateDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(enumerationOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern, enumerationOptions);
}
// Autogenerated method: System.IO.Directory.EnumerateFileSystemEntries
::System::Collections::Generic::IEnumerable_1<::StringW>* System::IO::Directory::EnumerateFileSystemEntries(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::EnumerateFileSystemEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "EnumerateFileSystemEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.EnumerateFileSystemEntries
::System::Collections::Generic::IEnumerable_1<::StringW>* System::IO::Directory::EnumerateFileSystemEntries(::StringW path, ::StringW searchPattern, ::System::IO::EnumerationOptions* enumerationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::EnumerateFileSystemEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "EnumerateFileSystemEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(enumerationOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern, enumerationOptions);
}
// Autogenerated method: System.IO.Directory.InternalGetDirectoryRoot
::StringW System::IO::Directory::InternalGetDirectoryRoot(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::InternalGetDirectoryRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InternalGetDirectoryRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetCurrentDirectory
::StringW System::IO::Directory::GetCurrentDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::GetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetCurrentDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Directory.Delete
void System::IO::Directory::Delete(::StringW path, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, recursive);
}
// Autogenerated method: System.IO.Directory.InsecureGetCurrentDirectory
::StringW System::IO::Directory::InsecureGetCurrentDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Directory::InsecureGetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InsecureGetCurrentDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
// Including type: System.IO.EnumerationOptions
#include "System/IO/EnumerationOptions.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IO.SearchTarget
#include "System/IO/SearchTarget.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.DirectoryInfo.Init
void System::IO::DirectoryInfo::Init(::StringW originalPath, ::StringW fullPath, ::StringW fileName, bool isNormalized) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPath), ::il2cpp_utils::ExtractType(fullPath), ::il2cpp_utils::ExtractType(fileName), ::il2cpp_utils::ExtractType(isNormalized)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, originalPath, fullPath, fileName, isNormalized);
}
// Autogenerated method: System.IO.DirectoryInfo.GetFiles
::ArrayW<::System::IO::FileInfo*> System::IO::DirectoryInfo::GetFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::IO::FileInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.GetFiles
::ArrayW<::System::IO::FileInfo*> System::IO::DirectoryInfo::GetFiles(::StringW searchPattern, ::System::IO::SearchOption searchOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::IO::FileInfo*>, false>(this, ___internal__method, searchPattern, searchOption);
}
// Autogenerated method: System.IO.DirectoryInfo.GetFiles
::ArrayW<::System::IO::FileInfo*> System::IO::DirectoryInfo::GetFiles(::StringW searchPattern, ::System::IO::EnumerationOptions* enumerationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(enumerationOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::IO::FileInfo*>, false>(this, ___internal__method, searchPattern, enumerationOptions);
}
// Autogenerated method: System.IO.DirectoryInfo.InternalEnumerateInfos
::System::Collections::Generic::IEnumerable_1<::System::IO::FileSystemInfo*>* System::IO::DirectoryInfo::InternalEnumerateInfos(::StringW path, ::StringW searchPattern, ::System::IO::SearchTarget searchTarget, ::System::IO::EnumerationOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::InternalEnumerateInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "DirectoryInfo", "InternalEnumerateInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchTarget), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::IO::FileSystemInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, searchPattern, searchTarget, options);
}
// Autogenerated method: System.IO.DirectoryInfo.Delete
void System::IO::DirectoryInfo::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DirectoryInfo::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileSystemInfo*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.EnumerationOptions
#include "System/IO/EnumerationOptions.hpp"
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IO.EnumerationOptions <Compatible>k__BackingField
::System::IO::EnumerationOptions* System::IO::EnumerationOptions::_get_$Compatible$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::_get_$Compatible$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::EnumerationOptions*>("System.IO", "EnumerationOptions", "<Compatible>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IO.EnumerationOptions <Compatible>k__BackingField
void System::IO::EnumerationOptions::_set_$Compatible$k__BackingField(::System::IO::EnumerationOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::_set_$Compatible$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "EnumerationOptions", "<Compatible>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IO.EnumerationOptions <CompatibleRecursive>k__BackingField
::System::IO::EnumerationOptions* System::IO::EnumerationOptions::_get_$CompatibleRecursive$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::_get_$CompatibleRecursive$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::EnumerationOptions*>("System.IO", "EnumerationOptions", "<CompatibleRecursive>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IO.EnumerationOptions <CompatibleRecursive>k__BackingField
void System::IO::EnumerationOptions::_set_$CompatibleRecursive$k__BackingField(::System::IO::EnumerationOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::_set_$CompatibleRecursive$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "EnumerationOptions", "<CompatibleRecursive>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IO.EnumerationOptions <Default>k__BackingField
::System::IO::EnumerationOptions* System::IO::EnumerationOptions::_get_$Default$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::_get_$Default$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::EnumerationOptions*>("System.IO", "EnumerationOptions", "<Default>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IO.EnumerationOptions <Default>k__BackingField
void System::IO::EnumerationOptions::_set_$Default$k__BackingField(::System::IO::EnumerationOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::_set_$Default$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "EnumerationOptions", "<Default>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <RecurseSubdirectories>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::IO::EnumerationOptions::dyn_$RecurseSubdirectories$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::dyn_$RecurseSubdirectories$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RecurseSubdirectories>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IgnoreInaccessible>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::IO::EnumerationOptions::dyn_$IgnoreInaccessible$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::dyn_$IgnoreInaccessible$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IgnoreInaccessible>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAttributes <AttributesToSkip>k__BackingField
[[deprecated("Use field access instead!")]] ::System::IO::FileAttributes& System::IO::EnumerationOptions::dyn_$AttributesToSkip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::dyn_$AttributesToSkip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AttributesToSkip>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IO::FileAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MatchType <MatchType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::IO::MatchType& System::IO::EnumerationOptions::dyn_$MatchType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::dyn_$MatchType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MatchType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IO::MatchType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MatchCasing <MatchCasing>k__BackingField
[[deprecated("Use field access instead!")]] ::System::IO::MatchCasing& System::IO::EnumerationOptions::dyn_$MatchCasing$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::dyn_$MatchCasing$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MatchCasing>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IO::MatchCasing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ReturnSpecialDirectories>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::IO::EnumerationOptions::dyn_$ReturnSpecialDirectories$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::dyn_$ReturnSpecialDirectories$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReturnSpecialDirectories>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.EnumerationOptions.get_Compatible
::System::IO::EnumerationOptions* System::IO::EnumerationOptions::get_Compatible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::get_Compatible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "EnumerationOptions", "get_Compatible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::EnumerationOptions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.EnumerationOptions.get_CompatibleRecursive
::System::IO::EnumerationOptions* System::IO::EnumerationOptions::get_CompatibleRecursive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::get_CompatibleRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "EnumerationOptions", "get_CompatibleRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::EnumerationOptions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.EnumerationOptions.get_Default
::System::IO::EnumerationOptions* System::IO::EnumerationOptions::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "EnumerationOptions", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::EnumerationOptions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.EnumerationOptions.FromSearchOption
::System::IO::EnumerationOptions* System::IO::EnumerationOptions::FromSearchOption(::System::IO::SearchOption searchOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::FromSearchOption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "EnumerationOptions", "FromSearchOption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::EnumerationOptions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, searchOption);
}
// Autogenerated method: System.IO.EnumerationOptions.get_RecurseSubdirectories
bool System::IO::EnumerationOptions::get_RecurseSubdirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::get_RecurseSubdirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecurseSubdirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.EnumerationOptions.set_RecurseSubdirectories
void System::IO::EnumerationOptions::set_RecurseSubdirectories(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::set_RecurseSubdirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RecurseSubdirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.EnumerationOptions.get_IgnoreInaccessible
bool System::IO::EnumerationOptions::get_IgnoreInaccessible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::get_IgnoreInaccessible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreInaccessible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.EnumerationOptions.set_IgnoreInaccessible
void System::IO::EnumerationOptions::set_IgnoreInaccessible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::set_IgnoreInaccessible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreInaccessible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.EnumerationOptions.get_AttributesToSkip
::System::IO::FileAttributes System::IO::EnumerationOptions::get_AttributesToSkip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::get_AttributesToSkip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributesToSkip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.EnumerationOptions.set_AttributesToSkip
void System::IO::EnumerationOptions::set_AttributesToSkip(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::set_AttributesToSkip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AttributesToSkip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.EnumerationOptions.get_MatchType
::System::IO::MatchType System::IO::EnumerationOptions::get_MatchType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::get_MatchType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MatchType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MatchType, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.EnumerationOptions.set_MatchType
void System::IO::EnumerationOptions::set_MatchType(::System::IO::MatchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::set_MatchType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MatchType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.EnumerationOptions.get_MatchCasing
::System::IO::MatchCasing System::IO::EnumerationOptions::get_MatchCasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::get_MatchCasing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MatchCasing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MatchCasing, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.EnumerationOptions.get_ReturnSpecialDirectories
bool System::IO::EnumerationOptions::get_ReturnSpecialDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::get_ReturnSpecialDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnSpecialDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.EnumerationOptions..cctor
void System::IO::EnumerationOptions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::EnumerationOptions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "EnumerationOptions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.File
#include "System/IO/File.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.File.OpenText
::System::IO::StreamReader* System::IO::File::OpenText(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::OpenText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "OpenText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::StreamReader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.CreateText
::System::IO::StreamWriter* System::IO::File::CreateText(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::CreateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "CreateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::StreamWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.AppendText
::System::IO::StreamWriter* System::IO::File::AppendText(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::AppendText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "AppendText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::StreamWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Copy
void System::IO::File::Copy(::StringW sourceFileName, ::StringW destFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFileName), ::il2cpp_utils::ExtractType(destFileName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceFileName, destFileName);
}
// Autogenerated method: System.IO.File.Copy
void System::IO::File::Copy(::StringW sourceFileName, ::StringW destFileName, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFileName), ::il2cpp_utils::ExtractType(destFileName), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceFileName, destFileName, overwrite);
}
// Autogenerated method: System.IO.File.Create
::System::IO::FileStream* System::IO::File::Create(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Create
::System::IO::FileStream* System::IO::File::Create(::StringW path, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, bufferSize);
}
// Autogenerated method: System.IO.File.Delete
void System::IO::File::Delete(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Exists
bool System::IO::File::Exists(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Open
::System::IO::FileStream* System::IO::File::Open(::StringW path, ::System::IO::FileMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, mode);
}
// Autogenerated method: System.IO.File.Open
::System::IO::FileStream* System::IO::File::Open(::StringW path, ::System::IO::FileMode mode, ::System::IO::FileAccess access, ::System::IO::FileShare share) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(share)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, mode, access, share);
}
// Autogenerated method: System.IO.File.GetAttributes
::System::IO::FileAttributes System::IO::File::GetAttributes(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileAttributes, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.SetAttributes
void System::IO::File::SetAttributes(::StringW path, ::System::IO::FileAttributes fileAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::SetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "SetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(fileAttributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, fileAttributes);
}
// Autogenerated method: System.IO.File.OpenRead
::System::IO::FileStream* System::IO::File::OpenRead(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::OpenRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "OpenRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.OpenWrite
::System::IO::FileStream* System::IO::File::OpenWrite(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::OpenWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "OpenWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.ReadAllText
::StringW System::IO::File::ReadAllText(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::ReadAllText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.InternalReadAllText
::StringW System::IO::File::InternalReadAllText(::StringW path, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::InternalReadAllText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "InternalReadAllText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, encoding);
}
// Autogenerated method: System.IO.File.WriteAllText
void System::IO::File::WriteAllText(::StringW path, ::StringW contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::WriteAllText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(contents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, contents);
}
// Autogenerated method: System.IO.File.ReadAllBytes
::ArrayW<uint8_t> System::IO::File::ReadAllBytes(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::ReadAllBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.ReadAllBytesUnknownLength
::ArrayW<uint8_t> System::IO::File::ReadAllBytesUnknownLength(::System::IO::FileStream* fs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::ReadAllBytesUnknownLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllBytesUnknownLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fs)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fs);
}
// Autogenerated method: System.IO.File.WriteAllBytes
void System::IO::File::WriteAllBytes(::StringW path, ::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::WriteAllBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, bytes);
}
// Autogenerated method: System.IO.File.InternalWriteAllBytes
void System::IO::File::InternalWriteAllBytes(::StringW path, ::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::InternalWriteAllBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "InternalWriteAllBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, bytes);
}
// Autogenerated method: System.IO.File.ReadAllLines
::ArrayW<::StringW> System::IO::File::ReadAllLines(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::ReadAllLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.InternalReadAllLines
::ArrayW<::StringW> System::IO::File::InternalReadAllLines(::StringW path, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::InternalReadAllLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "InternalReadAllLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, encoding);
}
// Autogenerated method: System.IO.File.Move
void System::IO::File::Move(::StringW sourceFileName, ::StringW destFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::File::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFileName), ::il2cpp_utils::ExtractType(destFileName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceFileName, destFileName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileInfo.get_Length
int64_t System::IO::FileInfo::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.get_DirectoryName
::StringW System::IO::FileInfo::get_DirectoryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::get_DirectoryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DirectoryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.get_Directory
::System::IO::DirectoryInfo* System::IO::FileInfo::get_Directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::get_Directory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Directory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::DirectoryInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.OpenText
::System::IO::StreamReader* System::IO::FileInfo::OpenText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::OpenText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::StreamReader*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.CreateText
::System::IO::StreamWriter* System::IO::FileInfo::CreateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::CreateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::StreamWriter*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.AppendText
::System::IO::StreamWriter* System::IO::FileInfo::AppendText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::AppendText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::StreamWriter*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.Delete
void System::IO::FileInfo::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileSystemInfo*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.get_Name
::StringW System::IO::FileInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileSystemInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.FileStatus
#include "System/IO/FileStatus.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Interop/Sys/FileStatus _fileStatus
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Interop::Sys::FileStatus& System::IO::FileStatus::dyn__fileStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::dyn__fileStatus");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileStatus"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Interop::Sys::FileStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _fileStatusInitialized
[[deprecated("Use field access instead!")]] int& System::IO::FileStatus::dyn__fileStatusInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::dyn__fileStatusInitialized");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileStatusInitialized"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <InitiallyDirectory>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::IO::FileStatus::dyn_$InitiallyDirectory$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::dyn_$InitiallyDirectory$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InitiallyDirectory>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _isDirectory
[[deprecated("Use field access instead!")]] bool& System::IO::FileStatus::dyn__isDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::dyn__isDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDirectory"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _exists
[[deprecated("Use field access instead!")]] bool& System::IO::FileStatus::dyn__exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::dyn__exists");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exists"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileStatus.get_InitiallyDirectory
bool System::IO::FileStatus::get_InitiallyDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::get_InitiallyDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InitiallyDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStatus.set_InitiallyDirectory
void System::IO::FileStatus::set_InitiallyDirectory(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::set_InitiallyDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_InitiallyDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStatus.Initialize
void System::IO::FileStatus::Initialize(ByRef<::System::IO::FileStatus> status, bool isDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileStatus", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(isDirectory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(status), isDirectory);
}
// Autogenerated method: System.IO.FileStatus.IsReadOnly
bool System::IO::FileStatus::IsReadOnly(::System::ReadOnlySpan_1<::Il2CppChar> path, bool continueOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(continueOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path, continueOnError);
}
// Autogenerated method: System.IO.FileStatus.GetAttributes
::System::IO::FileAttributes System::IO::FileStatus::GetAttributes(::System::ReadOnlySpan_1<::Il2CppChar> path, ::System::ReadOnlySpan_1<::Il2CppChar> fileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(fileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileAttributes, false>(this, ___internal__method, path, fileName);
}
// Autogenerated method: System.IO.FileStatus.SetAttributes
void System::IO::FileStatus::SetAttributes(::StringW path, ::System::IO::FileAttributes attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::SetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, attributes);
}
// Autogenerated method: System.IO.FileStatus.GetExists
bool System::IO::FileStatus::GetExists(::System::ReadOnlySpan_1<::Il2CppChar> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::GetExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: System.IO.FileStatus.GetCreationTime
::System::DateTimeOffset System::IO::FileStatus::GetCreationTime(::System::ReadOnlySpan_1<::Il2CppChar> path, bool continueOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::GetCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(continueOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, path, continueOnError);
}
// Autogenerated method: System.IO.FileStatus.UnixTimeToDateTimeOffset
::System::DateTimeOffset System::IO::FileStatus::UnixTimeToDateTimeOffset(int64_t seconds, int64_t nanoseconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::UnixTimeToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnixTimeToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(nanoseconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, seconds, nanoseconds);
}
// Autogenerated method: System.IO.FileStatus.GetLength
int64_t System::IO::FileStatus::GetLength(::System::ReadOnlySpan_1<::Il2CppChar> path, bool continueOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(continueOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, path, continueOnError);
}
// Autogenerated method: System.IO.FileStatus.Refresh
void System::IO::FileStatus::Refresh(::System::ReadOnlySpan_1<::Il2CppChar> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: System.IO.FileStatus.EnsureStatInitialized
void System::IO::FileStatus::EnsureStatInitialized(::System::ReadOnlySpan_1<::Il2CppChar> path, bool continueOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStatus::EnsureStatInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EnsureStatInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(continueOnError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, continueOnError);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.FileSystem
#include "System/IO/FileSystem.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileSystem.CopyDanglingSymlink
bool System::IO::FileSystem::CopyDanglingSymlink(::StringW sourceFullPath, ::StringW destFullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::CopyDanglingSymlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "CopyDanglingSymlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFullPath), ::il2cpp_utils::ExtractType(destFullPath)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceFullPath, destFullPath);
}
// Autogenerated method: System.IO.FileSystem.CopyFile
void System::IO::FileSystem::CopyFile(::StringW sourceFullPath, ::StringW destFullPath, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::CopyFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "CopyFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFullPath), ::il2cpp_utils::ExtractType(destFullPath), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceFullPath, destFullPath, overwrite);
}
// Autogenerated method: System.IO.FileSystem.LinkOrCopyFile
void System::IO::FileSystem::LinkOrCopyFile(::StringW sourceFullPath, ::StringW destFullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::LinkOrCopyFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "LinkOrCopyFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFullPath), ::il2cpp_utils::ExtractType(destFullPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceFullPath, destFullPath);
}
// Autogenerated method: System.IO.FileSystem.MoveFile
void System::IO::FileSystem::MoveFile(::StringW sourceFullPath, ::StringW destFullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::MoveFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "MoveFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFullPath), ::il2cpp_utils::ExtractType(destFullPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceFullPath, destFullPath);
}
// Autogenerated method: System.IO.FileSystem.DeleteFile
void System::IO::FileSystem::DeleteFile(::StringW fullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::DeleteFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "DeleteFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath);
}
// Autogenerated method: System.IO.FileSystem.CreateDirectory
void System::IO::FileSystem::CreateDirectory(::StringW fullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "CreateDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath);
}
// Autogenerated method: System.IO.FileSystem.RemoveDirectory
void System::IO::FileSystem::RemoveDirectory(::StringW fullPath, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::RemoveDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "RemoveDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath, recursive);
}
// Autogenerated method: System.IO.FileSystem.RemoveDirectoryInternal
void System::IO::FileSystem::RemoveDirectoryInternal(::System::IO::DirectoryInfo* directory, bool recursive, bool throwOnTopLevelDirectoryNotFound) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::RemoveDirectoryInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "RemoveDirectoryInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(recursive), ::il2cpp_utils::ExtractType(throwOnTopLevelDirectoryNotFound)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directory, recursive, throwOnTopLevelDirectoryNotFound);
}
// Autogenerated method: System.IO.FileSystem.DirectoryExists
bool System::IO::FileSystem::DirectoryExists(::System::ReadOnlySpan_1<::Il2CppChar> fullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::DirectoryExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "DirectoryExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath);
}
// Autogenerated method: System.IO.FileSystem.DirectoryExists
bool System::IO::FileSystem::DirectoryExists(::System::ReadOnlySpan_1<::Il2CppChar> fullPath, ByRef<::GlobalNamespace::Interop::ErrorInfo> errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::DirectoryExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "DirectoryExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::Interop::ErrorInfo&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath, byref(errorInfo));
}
// Autogenerated method: System.IO.FileSystem.FileExists
bool System::IO::FileSystem::FileExists(::System::ReadOnlySpan_1<::Il2CppChar> fullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::FileExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "FileExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath);
}
// Autogenerated method: System.IO.FileSystem.FileExists
bool System::IO::FileSystem::FileExists(::System::ReadOnlySpan_1<::Il2CppChar> fullPath, int fileType, ByRef<::GlobalNamespace::Interop::ErrorInfo> errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::FileExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "FileExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath), ::il2cpp_utils::ExtractType(fileType), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::Interop::ErrorInfo&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath, fileType, byref(errorInfo));
}
// Autogenerated method: System.IO.FileSystem.ShouldIgnoreDirectory
bool System::IO::FileSystem::ShouldIgnoreDirectory(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::ShouldIgnoreDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "ShouldIgnoreDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.IO.FileSystem.GetAttributes
::System::IO::FileAttributes System::IO::FileSystem::GetAttributes(::StringW fullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileAttributes, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath);
}
// Autogenerated method: System.IO.FileSystem.SetAttributes
void System::IO::FileSystem::SetAttributes(::StringW fullPath, ::System::IO::FileAttributes attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystem::SetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystem", "SetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath, attributes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileSystemInfo
#include "System/IO/FileSystemInfo.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.FileStatus _fileStatus
[[deprecated("Use field access instead!")]] ::System::IO::FileStatus& System::IO::FileSystemInfo::dyn__fileStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::dyn__fileStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileStatus"))->offset;
  return *reinterpret_cast<::System::IO::FileStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String FullPath
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileSystemInfo::dyn_FullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::dyn_FullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FullPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String OriginalPath
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileSystemInfo::dyn_OriginalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::dyn_OriginalPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileSystemInfo::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileSystemInfo.Create
::System::IO::FileSystemInfo* System::IO::FileSystemInfo::Create(::StringW fullPath, ::StringW fileName, ByRef<::System::IO::FileStatus> fileStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystemInfo", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath), ::il2cpp_utils::ExtractType(fileName), ::il2cpp_utils::ExtractType(fileStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileSystemInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullPath, fileName, byref(fileStatus));
}
// Autogenerated method: System.IO.FileSystemInfo.Init
void System::IO::FileSystemInfo::Init(ByRef<::System::IO::FileStatus> fileStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(fileStatus));
}
// Autogenerated method: System.IO.FileSystemInfo.get_Attributes
::System::IO::FileAttributes System::IO::FileSystemInfo::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.set_Attributes
void System::IO::FileSystemInfo::set_Attributes(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::set_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileSystemInfo.get_ExistsCore
bool System::IO::FileSystemInfo::get_ExistsCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_ExistsCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExistsCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_CreationTimeCore
::System::DateTimeOffset System::IO::FileSystemInfo::get_CreationTimeCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_CreationTimeCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreationTimeCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_LengthCore
int64_t System::IO::FileSystemInfo::get_LengthCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_LengthCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LengthCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.ThrowNotFound
void System::IO::FileSystemInfo::ThrowNotFound(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::ThrowNotFound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystemInfo", "ThrowNotFound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.FileSystemInfo.get_NormalizedPath
::StringW System::IO::FileSystemInfo::get_NormalizedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_NormalizedPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NormalizedPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.GetObjectData
void System::IO::FileSystemInfo::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileSystemInfo*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.IO.FileSystemInfo.get_FullName
::StringW System::IO::FileSystemInfo::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_FullName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileSystemInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_Extension
::StringW System::IO::FileSystemInfo::get_Extension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_Extension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_Name
::StringW System::IO::FileSystemInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileSystemInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_Exists
bool System::IO::FileSystemInfo::get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_Exists");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileSystemInfo*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.Delete
void System::IO::FileSystemInfo::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::Delete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileSystemInfo*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_CreationTime
::System::DateTime System::IO::FileSystemInfo::get_CreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_CreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_CreationTimeUtc
::System::DateTime System::IO::FileSystemInfo::get_CreationTimeUtc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::get_CreationTimeUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreationTimeUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.ToString
::StringW System::IO::FileSystemInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.MatchCasing
#include "System/IO/MatchCasing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MatchCasing PlatformDefault
::System::IO::MatchCasing System::IO::MatchCasing::_get_PlatformDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchCasing::_get_PlatformDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MatchCasing>("System.IO", "MatchCasing", "PlatformDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MatchCasing PlatformDefault
void System::IO::MatchCasing::_set_PlatformDefault(::System::IO::MatchCasing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchCasing::_set_PlatformDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MatchCasing", "PlatformDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MatchCasing CaseSensitive
::System::IO::MatchCasing System::IO::MatchCasing::_get_CaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchCasing::_get_CaseSensitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MatchCasing>("System.IO", "MatchCasing", "CaseSensitive"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MatchCasing CaseSensitive
void System::IO::MatchCasing::_set_CaseSensitive(::System::IO::MatchCasing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchCasing::_set_CaseSensitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MatchCasing", "CaseSensitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MatchCasing CaseInsensitive
::System::IO::MatchCasing System::IO::MatchCasing::_get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchCasing::_get_CaseInsensitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MatchCasing>("System.IO", "MatchCasing", "CaseInsensitive"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MatchCasing CaseInsensitive
void System::IO::MatchCasing::_set_CaseInsensitive(::System::IO::MatchCasing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchCasing::_set_CaseInsensitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MatchCasing", "CaseInsensitive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::MatchCasing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchCasing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.MatchType
#include "System/IO/MatchType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MatchType Simple
::System::IO::MatchType System::IO::MatchType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MatchType>("System.IO", "MatchType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MatchType Simple
void System::IO::MatchType::_set_Simple(::System::IO::MatchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MatchType", "Simple", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MatchType Win32
::System::IO::MatchType System::IO::MatchType::_get_Win32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchType::_get_Win32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MatchType>("System.IO", "MatchType", "Win32"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MatchType Win32
void System::IO::MatchType::_set_Win32(::System::IO::MatchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchType::_set_Win32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MatchType", "Win32", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::MatchType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MatchType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.SearchOption TopDirectoryOnly
::System::IO::SearchOption System::IO::SearchOption::_get_TopDirectoryOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchOption::_get_TopDirectoryOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchOption>("System.IO", "SearchOption", "TopDirectoryOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchOption TopDirectoryOnly
void System::IO::SearchOption::_set_TopDirectoryOnly(::System::IO::SearchOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchOption::_set_TopDirectoryOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchOption", "TopDirectoryOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SearchOption AllDirectories
::System::IO::SearchOption System::IO::SearchOption::_get_AllDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchOption::_get_AllDirectories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchOption>("System.IO", "SearchOption", "AllDirectories"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchOption AllDirectories
void System::IO::SearchOption::_set_AllDirectories(::System::IO::SearchOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchOption::_set_AllDirectories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchOption", "AllDirectories", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::SearchOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.SearchTarget
#include "System/IO/SearchTarget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.SearchTarget Files
::System::IO::SearchTarget System::IO::SearchTarget::_get_Files() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchTarget::_get_Files");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchTarget>("System.IO", "SearchTarget", "Files"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchTarget Files
void System::IO::SearchTarget::_set_Files(::System::IO::SearchTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchTarget::_set_Files");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchTarget", "Files", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SearchTarget Directories
::System::IO::SearchTarget System::IO::SearchTarget::_get_Directories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchTarget::_get_Directories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchTarget>("System.IO", "SearchTarget", "Directories"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchTarget Directories
void System::IO::SearchTarget::_set_Directories(::System::IO::SearchTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchTarget::_set_Directories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchTarget", "Directories", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SearchTarget Both
::System::IO::SearchTarget System::IO::SearchTarget::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchTarget::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchTarget>("System.IO", "SearchTarget", "Both"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchTarget Both
void System::IO::SearchTarget::_set_Both(::System::IO::SearchTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchTarget::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchTarget", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::SearchTarget::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchTarget::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes ReadOnly
::System::IO::FileAttributes System::IO::FileAttributes::_get_ReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_ReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "ReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes ReadOnly
void System::IO::FileAttributes::_set_ReadOnly(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_ReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "ReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Hidden
::System::IO::FileAttributes System::IO::FileAttributes::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Hidden
void System::IO::FileAttributes::_set_Hidden(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes System
::System::IO::FileAttributes System::IO::FileAttributes::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "System"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes System
void System::IO::FileAttributes::_set_System(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "System", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Directory
::System::IO::FileAttributes System::IO::FileAttributes::_get_Directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Directory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Directory"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Directory
void System::IO::FileAttributes::_set_Directory(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Directory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Directory", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Archive
::System::IO::FileAttributes System::IO::FileAttributes::_get_Archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Archive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Archive"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Archive
void System::IO::FileAttributes::_set_Archive(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Archive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Archive", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Device
::System::IO::FileAttributes System::IO::FileAttributes::_get_Device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Device");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Device"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Device
void System::IO::FileAttributes::_set_Device(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Device");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Device", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Normal
::System::IO::FileAttributes System::IO::FileAttributes::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Normal
void System::IO::FileAttributes::_set_Normal(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Temporary
::System::IO::FileAttributes System::IO::FileAttributes::_get_Temporary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Temporary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Temporary"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Temporary
void System::IO::FileAttributes::_set_Temporary(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Temporary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Temporary", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes SparseFile
::System::IO::FileAttributes System::IO::FileAttributes::_get_SparseFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_SparseFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "SparseFile"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes SparseFile
void System::IO::FileAttributes::_set_SparseFile(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_SparseFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "SparseFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes ReparsePoint
::System::IO::FileAttributes System::IO::FileAttributes::_get_ReparsePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_ReparsePoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "ReparsePoint"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes ReparsePoint
void System::IO::FileAttributes::_set_ReparsePoint(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_ReparsePoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "ReparsePoint", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Compressed
::System::IO::FileAttributes System::IO::FileAttributes::_get_Compressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Compressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Compressed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Compressed
void System::IO::FileAttributes::_set_Compressed(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Compressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Compressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Offline
::System::IO::FileAttributes System::IO::FileAttributes::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Offline
void System::IO::FileAttributes::_set_Offline(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Offline", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes NotContentIndexed
::System::IO::FileAttributes System::IO::FileAttributes::_get_NotContentIndexed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_NotContentIndexed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "NotContentIndexed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes NotContentIndexed
void System::IO::FileAttributes::_set_NotContentIndexed(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_NotContentIndexed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "NotContentIndexed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Encrypted
::System::IO::FileAttributes System::IO::FileAttributes::_get_Encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_Encrypted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "Encrypted"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Encrypted
void System::IO::FileAttributes::_set_Encrypted(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_Encrypted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Encrypted", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes IntegrityStream
::System::IO::FileAttributes System::IO::FileAttributes::_get_IntegrityStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_IntegrityStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "IntegrityStream"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes IntegrityStream
void System::IO::FileAttributes::_set_IntegrityStream(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_IntegrityStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "IntegrityStream", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes NoScrubData
::System::IO::FileAttributes System::IO::FileAttributes::_get_NoScrubData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_get_NoScrubData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAttributes>("System.IO", "FileAttributes", "NoScrubData"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes NoScrubData
void System::IO::FileAttributes::_set_NoScrubData(::System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::_set_NoScrubData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "NoScrubData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::FileAttributes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAttributes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.Stream/ReadWriteParameters
#include "System/IO/Stream_ReadWriteParameters.hpp"
// Including type: System.IO.Stream/ReadWriteTask
#include "System/IO/Stream_ReadWriteTask.hpp"
// Including type: System.IO.Stream/NullStream
#include "System/IO/Stream_NullStream.hpp"
// Including type: System.IO.Stream/SynchronousAsyncResult
#include "System/IO/Stream_SynchronousAsyncResult.hpp"
// Including type: System.IO.Stream/<>c
#include "System/IO/Stream_--c.hpp"
// Including type: System.IO.Stream/<FinishWriteAsync>d__57
#include "System/IO/Stream_-FinishWriteAsync-d__57.hpp"
// Including type: System.IO.Stream/<<ReadAsync>g__FinishReadAsync|44_0>d
#include "System/IO/Stream_--ReadAsync-g__FinishReadAsync-44_0-d.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.ValueTask`1
#include "System/Threading/Tasks/ValueTask_1.hpp"
// Including type: System.Memory`1
#include "System/Memory_1.hpp"
// Including type: System.Threading.Tasks.ValueTask
#include "System/Threading/Tasks/ValueTask.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Stream Null
::System::IO::Stream* System::IO::Stream::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Stream*>("System.IO", "Stream", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Stream Null
void System::IO::Stream::_set_Null(::System::IO::Stream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DefaultCopyBufferSize
int System::IO::Stream::_get_DefaultCopyBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::_get_DefaultCopyBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.IO", "Stream", "DefaultCopyBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DefaultCopyBufferSize
void System::IO::Stream::_set_DefaultCopyBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::_set_DefaultCopyBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream", "DefaultCopyBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream/ReadWriteTask _activeReadWriteTask
[[deprecated("Use field access instead!")]] ::System::IO::Stream::ReadWriteTask*& System::IO::Stream::dyn__activeReadWriteTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::dyn__activeReadWriteTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeReadWriteTask"))->offset;
  return *reinterpret_cast<::System::IO::Stream::ReadWriteTask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim _asyncActiveSemaphore
[[deprecated("Use field access instead!")]] ::System::Threading::SemaphoreSlim*& System::IO::Stream::dyn__asyncActiveSemaphore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::dyn__asyncActiveSemaphore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncActiveSemaphore"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream.EnsureAsyncActiveSemaphoreInitialized
::System::Threading::SemaphoreSlim* System::IO::Stream::EnsureAsyncActiveSemaphoreInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::EnsureAsyncActiveSemaphoreInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureAsyncActiveSemaphoreInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SemaphoreSlim*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_CanRead
bool System::IO::Stream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_CanSeek
bool System::IO::Stream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_CanTimeout
bool System::IO::Stream::get_CanTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_CanTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_CanWrite
bool System::IO::Stream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_Length
int64_t System::IO::Stream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_Position
int64_t System::IO::Stream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.set_Position
void System::IO::Stream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream.get_ReadTimeout
int System::IO::Stream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.set_ReadTimeout
void System::IO::Stream::set_ReadTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::set_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream.get_WriteTimeout
int System::IO::Stream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.set_WriteTimeout
void System::IO::Stream::set_WriteTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::set_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream.CopyTo
void System::IO::Stream::CopyTo(::System::IO::Stream* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.IO.Stream.CopyTo
void System::IO::Stream::CopyTo(::System::IO::Stream* destination, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination, bufferSize);
}
// Autogenerated method: System.IO.Stream.GetCopyBufferSize
int System::IO::Stream::GetCopyBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::GetCopyBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopyBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Close
void System::IO::Stream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Dispose
void System::IO::Stream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Dispose
void System::IO::Stream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Stream.Flush
void System::IO::Stream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.FlushAsync
::System::Threading::Tasks::Task* System::IO::Stream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.IO.Stream.BeginRead
::System::IAsyncResult* System::IO::Stream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BeginReadInternal
::System::IAsyncResult* System::IO::Stream::BeginReadInternal(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state, bool serializeAsynchronously, bool apm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(serializeAsynchronously), ::il2cpp_utils::ExtractType(apm)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state, serializeAsynchronously, apm);
}
// Autogenerated method: System.IO.Stream.EndRead
int System::IO::Stream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::Stream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::Stream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream.ReadAsync
::System::Threading::Tasks::ValueTask_1<int> System::IO::Stream::ReadAsync(::System::Memory_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask_1<int>, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.IO.Stream.BeginEndReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::Stream::BeginEndReadAsync(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginEndReadAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginEndReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.BeginWrite
::System::IAsyncResult* System::IO::Stream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BeginWriteInternal
::System::IAsyncResult* System::IO::Stream::BeginWriteInternal(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state, bool serializeAsynchronously, bool apm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginWriteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWriteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(serializeAsynchronously), ::il2cpp_utils::ExtractType(apm)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state, serializeAsynchronously, apm);
}
// Autogenerated method: System.IO.Stream.RunReadWriteTaskWhenReady
void System::IO::Stream::RunReadWriteTaskWhenReady(::System::Threading::Tasks::Task* asyncWaiter, ::System::IO::Stream::ReadWriteTask* readWriteTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::RunReadWriteTaskWhenReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunReadWriteTaskWhenReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncWaiter), ::il2cpp_utils::ExtractType(readWriteTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncWaiter, readWriteTask);
}
// Autogenerated method: System.IO.Stream.RunReadWriteTask
void System::IO::Stream::RunReadWriteTask(::System::IO::Stream::ReadWriteTask* readWriteTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::RunReadWriteTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunReadWriteTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readWriteTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, readWriteTask);
}
// Autogenerated method: System.IO.Stream.FinishTrackingAsyncOperation
void System::IO::Stream::FinishTrackingAsyncOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::FinishTrackingAsyncOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishTrackingAsyncOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.EndWrite
void System::IO::Stream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream.WriteAsync
::System::Threading::Tasks::Task* System::IO::Stream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::WriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.WriteAsync
::System::Threading::Tasks::Task* System::IO::Stream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream.WriteAsync
::System::Threading::Tasks::ValueTask System::IO::Stream::WriteAsync(::System::ReadOnlyMemory_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.IO.Stream.FinishWriteAsync
::System::Threading::Tasks::Task* System::IO::Stream::FinishWriteAsync(::System::Threading::Tasks::Task* writeTask, ::ArrayW<uint8_t> localBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::FinishWriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishWriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writeTask), ::il2cpp_utils::ExtractType(localBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, writeTask, localBuffer);
}
// Autogenerated method: System.IO.Stream.BeginEndWriteAsync
::System::Threading::Tasks::Task* System::IO::Stream::BeginEndWriteAsync(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BeginEndWriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginEndWriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.Seek
int64_t System::IO::Stream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Stream.SetLength
void System::IO::Stream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream.Read
int System::IO::Stream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.Read
int System::IO::Stream::Read(::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 34));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.Stream.ReadByte
int System::IO::Stream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 35));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Write
void System::IO::Stream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.Write
void System::IO::Stream::Write(::System::ReadOnlySpan_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.Stream.WriteByte
void System::IO::Stream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream.BlockingBeginRead
::System::IAsyncResult* System::IO::Stream::BlockingBeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BlockingBeginRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockingBeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BlockingEndRead
int System::IO::Stream::BlockingEndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BlockingEndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream", "BlockingEndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream.BlockingBeginWrite
::System::IAsyncResult* System::IO::Stream::BlockingBeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BlockingBeginWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockingBeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BlockingEndWrite
void System::IO::Stream::BlockingEndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::BlockingEndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream", "BlockingEndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream.HasOverriddenBeginEndRead
bool System::IO::Stream::HasOverriddenBeginEndRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::HasOverriddenBeginEndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasOverriddenBeginEndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream.HasOverriddenBeginEndWrite
bool System::IO::Stream::HasOverriddenBeginEndWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::HasOverriddenBeginEndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasOverriddenBeginEndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream..cctor
void System::IO::Stream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Stream.<ReadAsync>g__FinishReadAsync|44_0
::System::Threading::Tasks::ValueTask_1<int> System::IO::Stream::$ReadAsync$g__FinishReadAsync_44_0(::System::Threading::Tasks::Task_1<int>* readTask, ::ArrayW<uint8_t> localBuffer, ::System::Memory_1<uint8_t> localDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::<ReadAsync>g__FinishReadAsync|44_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream", "<ReadAsync>g__FinishReadAsync|44_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readTask), ::il2cpp_utils::ExtractType(localBuffer), ::il2cpp_utils::ExtractType(localDestination)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask_1<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, readTask, localBuffer, localDestination);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/ReadWriteTask
#include "System/IO/Stream_ReadWriteTask.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_invokeAsyncCallback
::System::Threading::ContextCallback* System::IO::Stream::ReadWriteTask::_get_s_invokeAsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::_get_s_invokeAsyncCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.IO", "Stream/ReadWriteTask", "s_invokeAsyncCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_invokeAsyncCallback
void System::IO::Stream::ReadWriteTask::_set_s_invokeAsyncCallback(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::_set_s_invokeAsyncCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream/ReadWriteTask", "s_invokeAsyncCallback", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _isRead
[[deprecated("Use field access instead!")]] bool& System::IO::Stream::ReadWriteTask::dyn__isRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__isRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _apm
[[deprecated("Use field access instead!")]] bool& System::IO::Stream::ReadWriteTask::dyn__apm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__apm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_apm"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Stream::ReadWriteTask::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Stream::ReadWriteTask::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _offset
[[deprecated("Use field access instead!")]] int& System::IO::Stream::ReadWriteTask::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _count
[[deprecated("Use field access instead!")]] int& System::IO::Stream::ReadWriteTask::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback _callback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::IO::Stream::ReadWriteTask::dyn__callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext _context
[[deprecated("Use field access instead!")]] ::System::Threading::ExecutionContext*& System::IO::Stream::ReadWriteTask::dyn__context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::dyn__context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_context"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream/ReadWriteTask.ClearBeginState
void System::IO::Stream::ReadWriteTask::ClearBeginState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::ClearBeginState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearBeginState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/ReadWriteTask.InvokeAsyncCallback
void System::IO::Stream::ReadWriteTask::InvokeAsyncCallback(::Il2CppObject* completedTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::InvokeAsyncCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/ReadWriteTask", "InvokeAsyncCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completedTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, completedTask);
}
// Autogenerated method: System.IO.Stream/ReadWriteTask.System.Threading.Tasks.ITaskCompletionAction.Invoke
void System::IO::Stream::ReadWriteTask::System_Threading_Tasks_ITaskCompletionAction_Invoke(::System::Threading::Tasks::Task* completingTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::System.Threading.Tasks.ITaskCompletionAction.Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream::ReadWriteTask*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completingTask);
}
// Autogenerated method: System.IO.Stream/ReadWriteTask.System.Threading.Tasks.ITaskCompletionAction.get_InvokeMayRunArbitraryCode
bool System::IO::Stream::ReadWriteTask::System_Threading_Tasks_ITaskCompletionAction_get_InvokeMayRunArbitraryCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::ReadWriteTask::System.Threading.Tasks.ITaskCompletionAction.get_InvokeMayRunArbitraryCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream::ReadWriteTask*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/NullStream
#include "System/IO/Stream_NullStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.Threading.Tasks.ValueTask`1
#include "System/Threading/Tasks/ValueTask_1.hpp"
// Including type: System.Memory`1
#include "System/Memory_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Threading.Tasks.ValueTask
#include "System/Threading/Tasks/ValueTask.hpp"
// Including type: System.ReadOnlyMemory`1
#include "System/ReadOnlyMemory_1.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Tasks.Task`1<System.Int32> s_zeroTask
::System::Threading::Tasks::Task_1<int>* System::IO::Stream::NullStream::_get_s_zeroTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::_get_s_zeroTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<int>*>("System.IO", "Stream/NullStream", "s_zeroTask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Tasks.Task`1<System.Int32> s_zeroTask
void System::IO::Stream::NullStream::_set_s_zeroTask(::System::Threading::Tasks::Task_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::_set_s_zeroTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream/NullStream", "s_zeroTask", value));
}
// Autogenerated method: System.IO.Stream/NullStream.get_CanRead
bool System::IO::Stream::NullStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/NullStream.get_CanWrite
bool System::IO::Stream::NullStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/NullStream.get_CanSeek
bool System::IO::Stream::NullStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/NullStream.get_Length
int64_t System::IO::Stream::NullStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/NullStream.get_Position
int64_t System::IO::Stream::NullStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/NullStream.set_Position
void System::IO::Stream::NullStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream/NullStream.CopyTo
void System::IO::Stream::NullStream::CopyTo(::System::IO::Stream* destination, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination, bufferSize);
}
// Autogenerated method: System.IO.Stream/NullStream.Dispose
void System::IO::Stream::NullStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Stream/NullStream.Flush
void System::IO::Stream::NullStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/NullStream.FlushAsync
::System::Threading::Tasks::Task* System::IO::Stream::NullStream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.IO.Stream/NullStream.BeginRead
::System::IAsyncResult* System::IO::Stream::NullStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream/NullStream.EndRead
int System::IO::Stream::NullStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream/NullStream.BeginWrite
::System::IAsyncResult* System::IO::Stream::NullStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream/NullStream.EndWrite
void System::IO::Stream::NullStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream/NullStream.Read
int System::IO::Stream::NullStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream/NullStream.Read
int System::IO::Stream::NullStream::Read(::System::Span_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 34));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.Stream/NullStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::Stream::NullStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream/NullStream.ReadAsync
::System::Threading::Tasks::ValueTask_1<int> System::IO::Stream::NullStream::ReadAsync(::System::Memory_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask_1<int>, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.IO.Stream/NullStream.ReadByte
int System::IO::Stream::NullStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 35));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/NullStream.Write
void System::IO::Stream::NullStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream/NullStream.Write
void System::IO::Stream::NullStream::Write(::System::ReadOnlySpan_1<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.Stream/NullStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::Stream::NullStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream/NullStream.WriteAsync
::System::Threading::Tasks::ValueTask System::IO::Stream::NullStream::WriteAsync(::System::ReadOnlyMemory_1<uint8_t> buffer, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::ValueTask, false>(this, ___internal__method, buffer, cancellationToken);
}
// Autogenerated method: System.IO.Stream/NullStream.WriteByte
void System::IO::Stream::NullStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream/NullStream.Seek
int64_t System::IO::Stream::NullStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Stream/NullStream.SetLength
void System::IO::Stream::NullStream::SetLength(int64_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length);
}
// Autogenerated method: System.IO.Stream/NullStream..cctor
void System::IO::Stream::NullStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::NullStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/NullStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/SynchronousAsyncResult
#include "System/IO/Stream_SynchronousAsyncResult.hpp"
// Including type: System.IO.Stream/SynchronousAsyncResult/<>c
#include "System/IO/Stream_SynchronousAsyncResult_--c.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _stateObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::IO::Stream::SynchronousAsyncResult::dyn__stateObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__stateObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isWrite
[[deprecated("Use field access instead!")]] bool& System::IO::Stream::SynchronousAsyncResult::dyn__isWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__isWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent _waitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::IO::Stream::SynchronousAsyncResult::dyn__waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.ExceptionServices.ExceptionDispatchInfo _exceptionInfo
[[deprecated("Use field access instead!")]] ::System::Runtime::ExceptionServices::ExceptionDispatchInfo*& System::IO::Stream::SynchronousAsyncResult::dyn__exceptionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__exceptionInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exceptionInfo"))->offset;
  return *reinterpret_cast<::System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _endXxxCalled
[[deprecated("Use field access instead!")]] bool& System::IO::Stream::SynchronousAsyncResult::dyn__endXxxCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__endXxxCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endXxxCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bytesRead
[[deprecated("Use field access instead!")]] int& System::IO::Stream::SynchronousAsyncResult::dyn__bytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::dyn__bytesRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream/SynchronousAsyncResult.get_IsCompleted
bool System::IO::Stream::SynchronousAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream::SynchronousAsyncResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/SynchronousAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::IO::Stream::SynchronousAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream::SynchronousAsyncResult*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/SynchronousAsyncResult.get_AsyncState
::Il2CppObject* System::IO::Stream::SynchronousAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream::SynchronousAsyncResult*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/SynchronousAsyncResult.get_CompletedSynchronously
bool System::IO::Stream::SynchronousAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream::SynchronousAsyncResult*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/SynchronousAsyncResult.ThrowIfError
void System::IO::Stream::SynchronousAsyncResult::ThrowIfError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::ThrowIfError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/SynchronousAsyncResult.EndRead
int System::IO::Stream::SynchronousAsyncResult::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::EndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/SynchronousAsyncResult", "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream/SynchronousAsyncResult.EndWrite
void System::IO::Stream::SynchronousAsyncResult::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::EndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/SynchronousAsyncResult", "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Stream/SynchronousAsyncResult/<>c
#include "System/IO/Stream_SynchronousAsyncResult_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Stream/SynchronousAsyncResult/<>c <>9
::System::IO::Stream::SynchronousAsyncResult::$$c* System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Stream::SynchronousAsyncResult::$$c*>("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Stream/SynchronousAsyncResult/<>c <>9
void System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9(::System::IO::Stream::SynchronousAsyncResult::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Threading.ManualResetEvent> <>9__12_0
::System::Func_1<::System::Threading::ManualResetEvent*>* System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::System::Threading::ManualResetEvent*>*>("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Threading.ManualResetEvent> <>9__12_0
void System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9__12_0(::System::Func_1<::System::Threading::ManualResetEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9__12_0", value)));
}
// Autogenerated method: System.IO.Stream/SynchronousAsyncResult/<>c..cctor
void System::IO::Stream::SynchronousAsyncResult::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/SynchronousAsyncResult/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Stream/SynchronousAsyncResult/<>c.<get_AsyncWaitHandle>b__12_0
::System::Threading::ManualResetEvent* System::IO::Stream::SynchronousAsyncResult::$$c::$get_AsyncWaitHandle$b__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::SynchronousAsyncResult::$$c::<get_AsyncWaitHandle>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_AsyncWaitHandle>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ManualResetEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/<>c
#include "System/IO/Stream_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Stream/<>c <>9
::System::IO::Stream::$$c* System::IO::Stream::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Stream::$$c*>("System.IO", "Stream/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Stream/<>c <>9
void System::IO::Stream::$$c::_set_$$9(::System::IO::Stream::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Threading.SemaphoreSlim> <>9__4_0
::System::Func_1<::System::Threading::SemaphoreSlim*>* System::IO::Stream::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::System::Threading::SemaphoreSlim*>*>("System.IO", "Stream/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Threading.SemaphoreSlim> <>9__4_0
void System::IO::Stream::$$c::_set_$$9__4_0(::System::Func_1<::System::Threading::SemaphoreSlim*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__37_0
::System::Action_1<::Il2CppObject*>* System::IO::Stream::$$c::_get_$$9__37_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__37_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.IO", "Stream/<>c", "<>9__37_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__37_0
void System::IO::Stream::$$c::_set_$$9__37_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__37_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__37_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Object,System.Int32> <>9__40_0
::System::Func_2<::Il2CppObject*, int>* System::IO::Stream::$$c::_get_$$9__40_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__40_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, int>*>("System.IO", "Stream/<>c", "<>9__40_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Object,System.Int32> <>9__40_0
void System::IO::Stream::$$c::_set_$$9__40_0(::System::Func_2<::Il2CppObject*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__40_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__40_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__45_0
::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>* System::IO::Stream::$$c::_get_$$9__45_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__45_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>*>("System.IO", "Stream/<>c", "<>9__45_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__45_0
void System::IO::Stream::$$c::_set_$$9__45_0(::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__45_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__45_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Int32> <>9__45_1
::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, int>* System::IO::Stream::$$c::_get_$$9__45_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__45_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, int>*>("System.IO", "Stream/<>c", "<>9__45_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Int32> <>9__45_1
void System::IO::Stream::$$c::_set_$$9__45_1(::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__45_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__45_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Object,System.Int32> <>9__48_0
::System::Func_2<::Il2CppObject*, int>* System::IO::Stream::$$c::_get_$$9__48_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__48_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, int>*>("System.IO", "Stream/<>c", "<>9__48_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Object,System.Int32> <>9__48_0
void System::IO::Stream::$$c::_set_$$9__48_0(::System::Func_2<::Il2CppObject*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__48_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__48_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.Threading.Tasks.Task,System.Object> <>9__49_0
::System::Action_2<::System::Threading::Tasks::Task*, ::Il2CppObject*>* System::IO::Stream::$$c::_get_$$9__49_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__49_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::System::Threading::Tasks::Task*, ::Il2CppObject*>*>("System.IO", "Stream/<>c", "<>9__49_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.Threading.Tasks.Task,System.Object> <>9__49_0
void System::IO::Stream::$$c::_set_$$9__49_0(::System::Action_2<::System::Threading::Tasks::Task*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__49_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__49_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__58_0
::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>* System::IO::Stream::$$c::_get_$$9__58_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__58_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>*>("System.IO", "Stream/<>c", "<>9__58_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__58_0
void System::IO::Stream::$$c::_set_$$9__58_0(::System::Func_5<::System::IO::Stream*, ::System::IO::Stream::ReadWriteParameters, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__58_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__58_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Threading.Tasks.VoidTaskResult> <>9__58_1
::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, ::System::Threading::Tasks::VoidTaskResult>* System::IO::Stream::$$c::_get_$$9__58_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_get_$$9__58_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, ::System::Threading::Tasks::VoidTaskResult>*>("System.IO", "Stream/<>c", "<>9__58_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Threading.Tasks.VoidTaskResult> <>9__58_1
void System::IO::Stream::$$c::_set_$$9__58_1(::System::Func_3<::System::IO::Stream*, ::System::IAsyncResult*, ::System::Threading::Tasks::VoidTaskResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::_set_$$9__58_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__58_1", value)));
}
// Autogenerated method: System.IO.Stream/<>c..cctor
void System::IO::Stream::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Stream/<>c.<EnsureAsyncActiveSemaphoreInitialized>b__4_0
::System::Threading::SemaphoreSlim* System::IO::Stream::$$c::$EnsureAsyncActiveSemaphoreInitialized$b__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<EnsureAsyncActiveSemaphoreInitialized>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<EnsureAsyncActiveSemaphoreInitialized>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SemaphoreSlim*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/<>c.<FlushAsync>b__37_0
void System::IO::Stream::$$c::$FlushAsync$b__37_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<FlushAsync>b__37_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FlushAsync>b__37_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.IO.Stream/<>c.<BeginReadInternal>b__40_0
int System::IO::Stream::$$c::$BeginReadInternal$b__40_0(::Il2CppObject* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginReadInternal>b__40_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginReadInternal>b__40_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: System.IO.Stream/<>c.<BeginEndReadAsync>b__45_0
::System::IAsyncResult* System::IO::Stream::$$c::$BeginEndReadAsync$b__45_0(::System::IO::Stream* stream, ::System::IO::Stream::ReadWriteParameters args, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginEndReadAsync>b__45_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndReadAsync>b__45_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, stream, args, callback, state);
}
// Autogenerated method: System.IO.Stream/<>c.<BeginEndReadAsync>b__45_1
int System::IO::Stream::$$c::$BeginEndReadAsync$b__45_1(::System::IO::Stream* stream, ::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginEndReadAsync>b__45_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndReadAsync>b__45_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stream, asyncResult);
}
// Autogenerated method: System.IO.Stream/<>c.<BeginWriteInternal>b__48_0
int System::IO::Stream::$$c::$BeginWriteInternal$b__48_0(::Il2CppObject* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginWriteInternal>b__48_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginWriteInternal>b__48_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: System.IO.Stream/<>c.<RunReadWriteTaskWhenReady>b__49_0
void System::IO::Stream::$$c::$RunReadWriteTaskWhenReady$b__49_0(::System::Threading::Tasks::Task* t, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<RunReadWriteTaskWhenReady>b__49_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunReadWriteTaskWhenReady>b__49_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, state);
}
// Autogenerated method: System.IO.Stream/<>c.<BeginEndWriteAsync>b__58_0
::System::IAsyncResult* System::IO::Stream::$$c::$BeginEndWriteAsync$b__58_0(::System::IO::Stream* stream, ::System::IO::Stream::ReadWriteParameters args, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginEndWriteAsync>b__58_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndWriteAsync>b__58_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, stream, args, callback, state);
}
// Autogenerated method: System.IO.Stream/<>c.<BeginEndWriteAsync>b__58_1
::System::Threading::Tasks::VoidTaskResult System::IO::Stream::$$c::$BeginEndWriteAsync$b__58_1(::System::IO::Stream* stream, ::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$c::<BeginEndWriteAsync>b__58_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndWriteAsync>b__58_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::VoidTaskResult, false>(this, ___internal__method, stream, asyncResult);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Stream/<FinishWriteAsync>d__57
#include "System/IO/Stream_-FinishWriteAsync-d__57.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::IO::Stream::$FinishWriteAsync$d__57::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$FinishWriteAsync$d__57::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::IO::Stream::$FinishWriteAsync$d__57::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$FinishWriteAsync$d__57::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task writeTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::IO::Stream::$FinishWriteAsync$d__57::dyn_writeTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$FinishWriteAsync$d__57::dyn_writeTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] localBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Stream::$FinishWriteAsync$d__57::dyn_localBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$FinishWriteAsync$d__57::dyn_localBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::IO::Stream::$FinishWriteAsync$d__57::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$FinishWriteAsync$d__57::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream/<FinishWriteAsync>d__57.MoveNext
void System::IO::Stream::$FinishWriteAsync$d__57::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$FinishWriteAsync$d__57::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Stream::$FinishWriteAsync$d__57), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/<FinishWriteAsync>d__57.SetStateMachine
void System::IO::Stream::$FinishWriteAsync$d__57::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$FinishWriteAsync$d__57::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Stream::$FinishWriteAsync$d__57), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Stream/<<ReadAsync>g__FinishReadAsync|44_0>d
#include "System/IO/Stream_--ReadAsync-g__FinishReadAsync-44_0-d.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder_1<int>& System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task`1<System.Int32> readTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<int>*& System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_readTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_readTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] localBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_localBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_localBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Memory`1<System.Byte> localDestination
[[deprecated("Use field access instead!")]] ::System::Memory_1<uint8_t>& System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_localDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_localDestination");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localDestination"))->offset;
  return *reinterpret_cast<::System::Memory_1<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream/<<ReadAsync>g__FinishReadAsync|44_0>d.MoveNext
void System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/<<ReadAsync>g__FinishReadAsync|44_0>d.SetStateMachine
void System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Stream::$$ReadAsync$g__FinishReadAsync|44_0$d), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.__Error
#include "System/IO/__Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.__Error.EndOfFile
void System::IO::__Error::EndOfFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::EndOfFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "EndOfFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.FileNotOpen
void System::IO::__Error::FileNotOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::FileNotOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "FileNotOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.ReaderClosed
void System::IO::__Error::ReaderClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::ReaderClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "ReaderClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.GetDisplayablePath
::StringW System::IO::__Error::GetDisplayablePath(::StringW path, bool isInvalidPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::GetDisplayablePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "GetDisplayablePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(isInvalidPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, isInvalidPath);
}
// Autogenerated method: System.IO.__Error.WinIOError
void System::IO::__Error::WinIOError(int errorCode, ::StringW maybeFullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::WinIOError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "WinIOError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(maybeFullPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, maybeFullPath);
}
// Autogenerated method: System.IO.__Error.WriterClosed
void System::IO::__Error::WriterClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::__Error::WriterClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "WriterClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream m_stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::BinaryReader::dyn_m_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::BinaryReader::dyn_m_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Decoder m_decoder
[[deprecated("Use field access instead!")]] ::System::Text::Decoder*& System::IO::BinaryReader::dyn_m_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_decoder"))->offset;
  return *reinterpret_cast<::System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_charBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::BinaryReader::dyn_m_charBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_charBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] m_singleChar
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::BinaryReader::dyn_m_singleChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_singleChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_singleChar"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] m_charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::BinaryReader::dyn_m_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxCharsSize
[[deprecated("Use field access instead!")]] int& System::IO::BinaryReader::dyn_m_maxCharsSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_maxCharsSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCharsSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_2BytesPerChar
[[deprecated("Use field access instead!")]] bool& System::IO::BinaryReader::dyn_m_2BytesPerChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_2BytesPerChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_2BytesPerChar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isMemoryStream
[[deprecated("Use field access instead!")]] bool& System::IO::BinaryReader::dyn_m_isMemoryStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_isMemoryStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isMemoryStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_leaveOpen
[[deprecated("Use field access instead!")]] bool& System::IO::BinaryReader::dyn_m_leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::dyn_m_leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.BinaryReader.get_BaseStream
::System::IO::Stream* System::IO::BinaryReader::get_BaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::get_BaseStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.Close
void System::IO::BinaryReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.Dispose
void System::IO::BinaryReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.BinaryReader.Dispose
void System::IO::BinaryReader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.PeekChar
int System::IO::BinaryReader::PeekChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::PeekChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.Read
int System::IO::BinaryReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadBoolean
bool System::IO::BinaryReader::ReadBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadByte
uint8_t System::IO::BinaryReader::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadSByte
int8_t System::IO::BinaryReader::ReadSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadSByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadChar
::Il2CppChar System::IO::BinaryReader::ReadChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadInt16
int16_t System::IO::BinaryReader::ReadInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadUInt16
uint16_t System::IO::BinaryReader::ReadUInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadUInt16");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadInt32
int System::IO::BinaryReader::ReadInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadUInt32
uint System::IO::BinaryReader::ReadUInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadUInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 17));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadInt64
int64_t System::IO::BinaryReader::ReadInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadUInt64
uint64_t System::IO::BinaryReader::ReadUInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadUInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 19));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadSingle
float System::IO::BinaryReader::ReadSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 20));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadDouble
double System::IO::BinaryReader::ReadDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 21));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadDecimal
::System::Decimal System::IO::BinaryReader::ReadDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadString
::StringW System::IO::BinaryReader::ReadString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.InternalReadChars
int System::IO::BinaryReader::InternalReadChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::InternalReadChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.BinaryReader.InternalReadOneChar
int System::IO::BinaryReader::InternalReadOneChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::InternalReadOneChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadOneChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadChars
::ArrayW<::Il2CppChar> System::IO::BinaryReader::ReadChars(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.BinaryReader.Read
int System::IO::BinaryReader::Read(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 25));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.BinaryReader.ReadBytes
::ArrayW<uint8_t> System::IO::BinaryReader::ReadBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::ReadBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.BinaryReader.FillBuffer
void System::IO::BinaryReader::FillBuffer(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::FillBuffer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: System.IO.BinaryReader.Read7BitEncodedInt
int System::IO::BinaryReader::Read7BitEncodedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryReader::Read7BitEncodedInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read7BitEncodedInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.BinaryWriter Null
::System::IO::BinaryWriter* System::IO::BinaryWriter::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::BinaryWriter*>("System.IO", "BinaryWriter", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.BinaryWriter Null
void System::IO::BinaryWriter::_set_Null(::System::IO::BinaryWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "BinaryWriter", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LargeByteBufferSize
int System::IO::BinaryWriter::_get_LargeByteBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::_get_LargeByteBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.IO", "BinaryWriter", "LargeByteBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LargeByteBufferSize
void System::IO::BinaryWriter::_set_LargeByteBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::_set_LargeByteBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "BinaryWriter", "LargeByteBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.IO.Stream OutStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::BinaryWriter::dyn_OutStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn_OutStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::BinaryWriter::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding _encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::IO::BinaryWriter::dyn__encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoder _encoder
[[deprecated("Use field access instead!")]] ::System::Text::Encoder*& System::IO::BinaryWriter::dyn__encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoder"))->offset;
  return *reinterpret_cast<::System::Text::Encoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
[[deprecated("Use field access instead!")]] bool& System::IO::BinaryWriter::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _tmpOneCharBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::IO::BinaryWriter::dyn__tmpOneCharBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__tmpOneCharBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tmpOneCharBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _largeByteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::BinaryWriter::dyn__largeByteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__largeByteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_largeByteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxChars
[[deprecated("Use field access instead!")]] int& System::IO::BinaryWriter::dyn__maxChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::dyn__maxChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxChars"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.BinaryWriter.Close
void System::IO::BinaryWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryWriter.Dispose
void System::IO::BinaryWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.BinaryWriter.Dispose
void System::IO::BinaryWriter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryWriter.Flush
void System::IO::BinaryWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::ArrayW<::Il2CppChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryWriter*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write7BitEncodedInt
void System::IO::BinaryWriter::Write7BitEncodedInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::Write7BitEncodedInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write7BitEncodedInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter..cctor
void System::IO::BinaryWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::BinaryWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "BinaryWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.StringReader
#include "System/IO/StringReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _s
[[deprecated("Use field access instead!")]] ::StringW& System::IO::StringReader::dyn__s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::dyn__s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_s"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
[[deprecated("Use field access instead!")]] int& System::IO::StringReader::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::IO::StringReader::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StringReader.Close
void System::IO::StringReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.Dispose
void System::IO::StringReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StringReader.Peek
int System::IO::StringReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::Peek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.Read
int System::IO::StringReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.Read
int System::IO::StringReader::Read(ByRef<::ArrayW<::Il2CppChar>> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), index, count);
}
// Autogenerated method: System.IO.StringReader.ReadToEnd
::StringW System::IO::StringReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.ReadLine
::StringW System::IO::StringReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Text.UnicodeEncoding
#include "System/Text/UnicodeEncoding.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.UnicodeEncoding m_encoding
::System::Text::UnicodeEncoding* System::IO::StringWriter::_get_m_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::_get_m_encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::UnicodeEncoding*>("System.IO", "StringWriter", "m_encoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.UnicodeEncoding m_encoding
void System::IO::StringWriter::_set_m_encoding(::System::Text::UnicodeEncoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::_set_m_encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StringWriter", "m_encoding", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _sb
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::IO::StringWriter::dyn__sb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::dyn__sb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sb"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isOpen
[[deprecated("Use field access instead!")]] bool& System::IO::StringWriter::dyn__isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::dyn__isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StringWriter.Close
void System::IO::StringWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringWriter.Dispose
void System::IO::StringWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StringWriter.get_Encoding
::System::Text::Encoding* System::IO::StringWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::StringWriter::WriteAsync(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::StringWriter::WriteAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.WriteAsync
::System::Threading::Tasks::Task* System::IO::StringWriter::WriteAsync(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StringWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::StringWriter::WriteLineAsync(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::StringWriter::WriteLineAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.WriteLineAsync
::System::Threading::Tasks::Task* System::IO::StringWriter::WriteLineAsync(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::WriteLineAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StringWriter.FlushAsync
::System::Threading::Tasks::Task* System::IO::StringWriter::FlushAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::TextWriter*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.StringWriter.ToString
::StringW System::IO::StringWriter::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::StringWriter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
// Including type: System.IO.FileStream/ReadDelegate
#include "System/IO/FileStream_ReadDelegate.hpp"
// Including type: System.IO.FileStream/WriteDelegate
#include "System/IO/FileStream_WriteDelegate.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeFileHandle
#include "Microsoft/Win32/SafeHandles/SafeFileHandle.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 DefaultBufferSize
int System::IO::FileStream::_get_DefaultBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_get_DefaultBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.IO", "FileStream", "DefaultBufferSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DefaultBufferSize
void System::IO::FileStream::_set_DefaultBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_set_DefaultBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "DefaultBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] buf_recycle
::ArrayW<uint8_t> System::IO::FileStream::_get_buf_recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_get_buf_recycle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO", "FileStream", "buf_recycle"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] buf_recycle
void System::IO::FileStream::_set_buf_recycle(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_set_buf_recycle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "buf_recycle", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object buf_recycle_lock
::Il2CppObject* System::IO::FileStream::_get_buf_recycle_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_get_buf_recycle_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.IO", "FileStream", "buf_recycle_lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object buf_recycle_lock
void System::IO::FileStream::_set_buf_recycle_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::_set_buf_recycle_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "buf_recycle_lock", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buf
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::FileStream::dyn_buf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileStream::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeFileHandle safeHandle
[[deprecated("Use field access instead!")]] ::Microsoft::Win32::SafeHandles::SafeFileHandle*& System::IO::FileStream::dyn_safeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_safeHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "safeHandle"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::SafeHandles::SafeFileHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isExposed
[[deprecated("Use field access instead!")]] bool& System::IO::FileStream::dyn_isExposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_isExposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isExposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 append_startpos
[[deprecated("Use field access instead!")]] int64_t& System::IO::FileStream::dyn_append_startpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_append_startpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "append_startpos"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAccess access
[[deprecated("Use field access instead!")]] ::System::IO::FileAccess& System::IO::FileStream::dyn_access() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_access");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "access"))->offset;
  return *reinterpret_cast<::System::IO::FileAccess*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean owner
[[deprecated("Use field access instead!")]] bool& System::IO::FileStream::dyn_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean async
[[deprecated("Use field access instead!")]] bool& System::IO::FileStream::dyn_async() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_async");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canseek
[[deprecated("Use field access instead!")]] bool& System::IO::FileStream::dyn_canseek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_canseek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canseek"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean anonymous
[[deprecated("Use field access instead!")]] bool& System::IO::FileStream::dyn_anonymous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_anonymous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anonymous"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean buf_dirty
[[deprecated("Use field access instead!")]] bool& System::IO::FileStream::dyn_buf_dirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf_dirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_dirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 buf_size
[[deprecated("Use field access instead!")]] int& System::IO::FileStream::dyn_buf_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 buf_length
[[deprecated("Use field access instead!")]] int& System::IO::FileStream::dyn_buf_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 buf_offset
[[deprecated("Use field access instead!")]] int& System::IO::FileStream::dyn_buf_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 buf_start
[[deprecated("Use field access instead!")]] int64_t& System::IO::FileStream::dyn_buf_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::dyn_buf_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_start"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileStream.Init
void System::IO::FileStream::Init(::Microsoft::Win32::SafeHandles::SafeFileHandle* safeHandle, ::System::IO::FileAccess access, bool ownsHandle, int bufferSize, bool isAsync, bool isConsoleWrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(ownsHandle), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(isAsync), ::il2cpp_utils::ExtractType(isConsoleWrapper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, safeHandle, access, ownsHandle, bufferSize, isAsync, isConsoleWrapper);
}
// Autogenerated method: System.IO.FileStream.get_Name
::StringW System::IO::FileStream::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_SafeFileHandle
::Microsoft::Win32::SafeHandles::SafeFileHandle* System::IO::FileStream::get_SafeFileHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_SafeFileHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeFileHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ExposeHandle
void System::IO::FileStream::ExposeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ExposeHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExposeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ReadInternal
int System::IO::FileStream::ReadInternal(::ArrayW<uint8_t> dest, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dest, offset, count);
}
// Autogenerated method: System.IO.FileStream.WriteInternal
void System::IO::FileStream::WriteInternal(::ArrayW<uint8_t> src, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, offset, count);
}
// Autogenerated method: System.IO.FileStream.ReadSegment
int System::IO::FileStream::ReadSegment(::ArrayW<uint8_t> dest, int dest_offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dest, dest_offset, count);
}
// Autogenerated method: System.IO.FileStream.WriteSegment
int System::IO::FileStream::WriteSegment(::ArrayW<uint8_t> src, int src_offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(src_offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, src, src_offset, count);
}
// Autogenerated method: System.IO.FileStream.FlushBuffer
void System::IO::FileStream::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::FlushBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.FlushBufferIfDirty
void System::IO::FileStream::FlushBufferIfDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::FlushBufferIfDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBufferIfDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.RefillBuffer
void System::IO::FileStream::RefillBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::RefillBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefillBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ReadData
int System::IO::FileStream::ReadData(::System::Runtime::InteropServices::SafeHandle* safeHandle, ::ArrayW<uint8_t> buf, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, safeHandle, buf, offset, count);
}
// Autogenerated method: System.IO.FileStream.InitBuffer
void System::IO::FileStream::InitBuffer(int size, bool isZeroSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::InitBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(isZeroSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size, isZeroSize);
}
// Autogenerated method: System.IO.FileStream.GetSecureFileName
::StringW System::IO::FileStream::GetSecureFileName(::StringW filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, filename);
}
// Autogenerated method: System.IO.FileStream.GetSecureFileName
::StringW System::IO::FileStream::GetSecureFileName(::StringW filename, bool full) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(full)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, filename, full);
}
// Autogenerated method: System.IO.FileStream.get_CanRead
bool System::IO::FileStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_CanWrite
bool System::IO::FileStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_CanSeek
bool System::IO::FileStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_Length
int64_t System::IO::FileStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_Position
int64_t System::IO::FileStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.set_Position
void System::IO::FileStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream.ReadByte
int System::IO::FileStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 35));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.WriteByte
void System::IO::FileStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream.Read
int System::IO::FileStream::Read(ByRef<::ArrayW<uint8_t>> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(array), offset, count);
}
// Autogenerated method: System.IO.FileStream.BeginRead
::System::IAsyncResult* System::IO::FileStream::BeginRead(::ArrayW<uint8_t> array, int offset, int numBytes, ::System::AsyncCallback* userCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, array, offset, numBytes, userCallback, stateObject);
}
// Autogenerated method: System.IO.FileStream.EndRead
int System::IO::FileStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.FileStream.Write
void System::IO::FileStream::Write(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.FileStream.BeginWrite
::System::IAsyncResult* System::IO::FileStream::BeginWrite(::ArrayW<uint8_t> array, int offset, int numBytes, ::System::AsyncCallback* userCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, array, offset, numBytes, userCallback, stateObject);
}
// Autogenerated method: System.IO.FileStream.EndWrite
void System::IO::FileStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.FileStream.Seek
int64_t System::IO::FileStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.FileStream.SetLength
void System::IO::FileStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream.Flush
void System::IO::FileStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.Finalize
void System::IO::FileStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.Dispose
void System::IO::FileStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.FileStream.FlushAsync
::System::Threading::Tasks::Task* System::IO::FileStream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.IO.FileStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::FileStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.FileStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::FileStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.FileStream..cctor
void System::IO::FileStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream/ReadDelegate
#include "System/IO/FileStream_ReadDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileStream/ReadDelegate.Invoke
int System::IO::FileStream::ReadDelegate::Invoke(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream::ReadDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.FileStream/ReadDelegate.BeginInvoke
::System::IAsyncResult* System::IO::FileStream::ReadDelegate::BeginInvoke(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream::ReadDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, object);
}
// Autogenerated method: System.IO.FileStream/ReadDelegate.EndInvoke
int System::IO::FileStream::ReadDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::ReadDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream::ReadDelegate*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream/WriteDelegate
#include "System/IO/FileStream_WriteDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileStream/WriteDelegate.Invoke
void System::IO::FileStream::WriteDelegate::Invoke(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream::WriteDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.FileStream/WriteDelegate.BeginInvoke
::System::IAsyncResult* System::IO::FileStream::WriteDelegate::BeginInvoke(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream::WriteDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, object);
}
// Autogenerated method: System.IO.FileStream/WriteDelegate.EndInvoke
void System::IO::FileStream::WriteDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStream::WriteDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStream::WriteDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStreamAsyncResult
#include "System/IO/FileStreamAsyncResult.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object state
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::IO::FileStreamAsyncResult::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
[[deprecated("Use field access instead!")]] bool& System::IO::FileStreamAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent wh
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::IO::FileStreamAsyncResult::dyn_wh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_wh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wh"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback cb
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::IO::FileStreamAsyncResult::dyn_cb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_cb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cb"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completedSynch
[[deprecated("Use field access instead!")]] bool& System::IO::FileStreamAsyncResult::dyn_completedSynch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_completedSynch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completedSynch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Count
[[deprecated("Use field access instead!")]] int& System::IO::FileStreamAsyncResult::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 OriginalCount
[[deprecated("Use field access instead!")]] int& System::IO::FileStreamAsyncResult::dyn_OriginalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_OriginalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BytesRead
[[deprecated("Use field access instead!")]] int& System::IO::FileStreamAsyncResult::dyn_BytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_BytesRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BytesRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback realcb
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::IO::FileStreamAsyncResult::dyn_realcb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::dyn_realcb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realcb"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.CBWrapper
void System::IO::FileStreamAsyncResult::CBWrapper(::System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::CBWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileStreamAsyncResult", "CBWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ares);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_AsyncState
::Il2CppObject* System::IO::FileStreamAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStreamAsyncResult*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_CompletedSynchronously
bool System::IO::FileStreamAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStreamAsyncResult*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::IO::FileStreamAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStreamAsyncResult*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_IsCompleted
bool System::IO::FileStreamAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileStreamAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::FileStreamAsyncResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.MonoFileType
#include "System/IO/MonoFileType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Unknown
::System::IO::MonoFileType System::IO::MonoFileType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoFileType>("System.IO", "MonoFileType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Unknown
void System::IO::MonoFileType::_set_Unknown(::System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Disk
::System::IO::MonoFileType System::IO::MonoFileType::_get_Disk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_get_Disk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoFileType>("System.IO", "MonoFileType", "Disk"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Disk
void System::IO::MonoFileType::_set_Disk(::System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_set_Disk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Disk", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Char
::System::IO::MonoFileType System::IO::MonoFileType::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoFileType>("System.IO", "MonoFileType", "Char"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Char
void System::IO::MonoFileType::_set_Char(::System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Pipe
::System::IO::MonoFileType System::IO::MonoFileType::_get_Pipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_get_Pipe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoFileType>("System.IO", "MonoFileType", "Pipe"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Pipe
void System::IO::MonoFileType::_set_Pipe(::System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_set_Pipe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Pipe", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Remote
::System::IO::MonoFileType System::IO::MonoFileType::_get_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_get_Remote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoFileType>("System.IO", "MonoFileType", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Remote
void System::IO::MonoFileType::_set_Remote(::System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::_set_Remote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Remote", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::MonoFileType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoFileType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.MonoIO
#include "System/IO/MonoIO.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.IO.MonoIOError
#include "System/IO/MonoIOError.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
// Including type: System.IO.MonoFileType
#include "System/IO/MonoFileType.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
// Including type: System.IO.FileOptions
#include "System/IO/FileOptions.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IntPtr InvalidHandle
::System::IntPtr System::IO::MonoIO::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("System.IO", "MonoIO", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IntPtr InvalidHandle
void System::IO::MonoIO::_set_InvalidHandle(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIO", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean dump_handles
bool System::IO::MonoIO::_get_dump_handles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::_get_dump_handles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "MonoIO", "dump_handles"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean dump_handles
void System::IO::MonoIO::_set_dump_handles(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::_set_dump_handles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIO", "dump_handles", value));
}
// Autogenerated method: System.IO.MonoIO.GetException
::System::Exception* System::IO::MonoIO::GetException(::System::IO::MonoIOError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.IO.MonoIO.GetException
::System::Exception* System::IO::MonoIO::GetException(::StringW path, ::System::IO::MonoIOError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.GetCurrentDirectory
::StringW System::IO::MonoIO::GetCurrentDirectory(ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetCurrentDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(error));
}
// Autogenerated method: System.IO.MonoIO.SetFileAttributes
bool System::IO::MonoIO::SetFileAttributes(::Il2CppChar* path, ::System::IO::FileAttributes attrs, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::SetFileAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "SetFileAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(attrs), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, attrs, byref(error));
}
// Autogenerated method: System.IO.MonoIO.SetFileAttributes
bool System::IO::MonoIO::SetFileAttributes(::StringW path, ::System::IO::FileAttributes attrs, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::SetFileAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "SetFileAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(attrs), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, attrs, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileType
::System::IO::MonoFileType System::IO::MonoIO::GetFileType(::System::IntPtr handle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetFileType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MonoFileType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileType
::System::IO::MonoFileType System::IO::MonoIO::GetFileType(::System::Runtime::InteropServices::SafeHandle* safeHandle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetFileType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MonoFileType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Open
::System::IntPtr System::IO::MonoIO::Open(::Il2CppChar* filename, ::System::IO::FileMode mode, ::System::IO::FileAccess access, ::System::IO::FileShare share, ::System::IO::FileOptions options, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(share), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, mode, access, share, options, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Open
::System::IntPtr System::IO::MonoIO::Open(::StringW filename, ::System::IO::FileMode mode, ::System::IO::FileAccess access, ::System::IO::FileShare share, ::System::IO::FileOptions options, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(share), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, mode, access, share, options, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Cancel_internal
bool System::IO::MonoIO::Cancel_internal(::System::IntPtr handle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Cancel_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Cancel_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Cancel
bool System::IO::MonoIO::Cancel(::System::Runtime::InteropServices::SafeHandle* safeHandle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Close
bool System::IO::MonoIO::Close(::System::IntPtr handle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Read
int System::IO::MonoIO::Read(::System::IntPtr handle, ::ArrayW<uint8_t> dest, int dest_offset, int count, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, dest, dest_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Read
int System::IO::MonoIO::Read(::System::Runtime::InteropServices::SafeHandle* safeHandle, ::ArrayW<uint8_t> dest, int dest_offset, int count, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, dest, dest_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Write
int System::IO::MonoIO::Write(::System::IntPtr handle, ByRef<::ArrayW<uint8_t>> src, int src_offset, int count, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(src_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(src), src_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Write
int System::IO::MonoIO::Write(::System::Runtime::InteropServices::SafeHandle* safeHandle, ::ArrayW<uint8_t> src, int src_offset, int count, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(src_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, src, src_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Seek
int64_t System::IO::MonoIO::Seek(::System::IntPtr handle, int64_t offset, ::System::IO::SeekOrigin origin, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, offset, origin, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Seek
int64_t System::IO::MonoIO::Seek(::System::Runtime::InteropServices::SafeHandle* safeHandle, int64_t offset, ::System::IO::SeekOrigin origin, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, offset, origin, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetLength
int64_t System::IO::MonoIO::GetLength(::System::IntPtr handle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetLength
int64_t System::IO::MonoIO::GetLength(::System::Runtime::InteropServices::SafeHandle* safeHandle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.SetLength
bool System::IO::MonoIO::SetLength(::System::IntPtr handle, int64_t length, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::SetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, length, byref(error));
}
// Autogenerated method: System.IO.MonoIO.SetLength
bool System::IO::MonoIO::SetLength(::System::Runtime::InteropServices::SafeHandle* safeHandle, int64_t length, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::SetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, safeHandle, length, byref(error));
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleOutput
::System::IntPtr System::IO::MonoIO::get_ConsoleOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_ConsoleOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleInput
::System::IntPtr System::IO::MonoIO::get_ConsoleInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_ConsoleInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleError
::System::IntPtr System::IO::MonoIO::get_ConsoleError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_ConsoleError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.CreatePipe
bool System::IO::MonoIO::CreatePipe(ByRef<::System::IntPtr> read_handle, ByRef<::System::IntPtr> write_handle, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::CreatePipe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "CreatePipe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(read_handle), byref(write_handle), byref(error));
}
// Autogenerated method: System.IO.MonoIO.DuplicateHandle
bool System::IO::MonoIO::DuplicateHandle(::System::IntPtr source_process_handle, ::System::IntPtr source_handle, ::System::IntPtr target_process_handle, ByRef<::System::IntPtr> target_handle, int access, int inherit, int options, ByRef<::System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source_process_handle), ::il2cpp_utils::ExtractType(source_handle), ::il2cpp_utils::ExtractType(target_process_handle), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(inherit), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<::System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source_process_handle, source_handle, target_process_handle, byref(target_handle), access, inherit, options, byref(error));
}
// Autogenerated method: System.IO.MonoIO.get_VolumeSeparatorChar
::Il2CppChar System::IO::MonoIO::get_VolumeSeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_VolumeSeparatorChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_VolumeSeparatorChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_DirectorySeparatorChar
::Il2CppChar System::IO::MonoIO::get_DirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_DirectorySeparatorChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_DirectorySeparatorChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_AltDirectorySeparatorChar
::Il2CppChar System::IO::MonoIO::get_AltDirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_AltDirectorySeparatorChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_AltDirectorySeparatorChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_PathSeparator
::Il2CppChar System::IO::MonoIO::get_PathSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::get_PathSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_PathSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.DumpHandles
void System::IO::MonoIO::DumpHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::DumpHandles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DumpHandles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.RemapPath
bool System::IO::MonoIO::RemapPath(::StringW path, ByRef<::StringW> newPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::RemapPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemapPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(newPath));
}
// Autogenerated method: System.IO.MonoIO..cctor
void System::IO::MonoIO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.MonoIOError
#include "System/IO/MonoIOError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_SUCCESS
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_SUCCESS
void System::IO::MonoIOError::_set_ERROR_SUCCESS(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILE_NOT_FOUND
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILE_NOT_FOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_FILE_NOT_FOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILE_NOT_FOUND"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILE_NOT_FOUND
void System::IO::MonoIOError::_set_ERROR_FILE_NOT_FOUND(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_FILE_NOT_FOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILE_NOT_FOUND", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_PATH_NOT_FOUND
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_PATH_NOT_FOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_PATH_NOT_FOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_PATH_NOT_FOUND"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_PATH_NOT_FOUND
void System::IO::MonoIOError::_set_ERROR_PATH_NOT_FOUND(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_PATH_NOT_FOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_PATH_NOT_FOUND", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_TOO_MANY_OPEN_FILES
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_TOO_MANY_OPEN_FILES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_TOO_MANY_OPEN_FILES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_TOO_MANY_OPEN_FILES"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_TOO_MANY_OPEN_FILES
void System::IO::MonoIOError::_set_ERROR_TOO_MANY_OPEN_FILES(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_TOO_MANY_OPEN_FILES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_TOO_MANY_OPEN_FILES", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ACCESS_DENIED
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ACCESS_DENIED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_ACCESS_DENIED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ACCESS_DENIED"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ACCESS_DENIED
void System::IO::MonoIOError::_set_ERROR_ACCESS_DENIED(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_ACCESS_DENIED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ACCESS_DENIED", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_HANDLE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_HANDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_INVALID_HANDLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_HANDLE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_HANDLE
void System::IO::MonoIOError::_set_ERROR_INVALID_HANDLE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_INVALID_HANDLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_HANDLE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_DRIVE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_DRIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_INVALID_DRIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_DRIVE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_DRIVE
void System::IO::MonoIOError::_set_ERROR_INVALID_DRIVE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_INVALID_DRIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_DRIVE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NOT_SAME_DEVICE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NOT_SAME_DEVICE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_NOT_SAME_DEVICE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NOT_SAME_DEVICE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NOT_SAME_DEVICE
void System::IO::MonoIOError::_set_ERROR_NOT_SAME_DEVICE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_NOT_SAME_DEVICE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NOT_SAME_DEVICE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NO_MORE_FILES
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NO_MORE_FILES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_NO_MORE_FILES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NO_MORE_FILES"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NO_MORE_FILES
void System::IO::MonoIOError::_set_ERROR_NO_MORE_FILES(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_NO_MORE_FILES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NO_MORE_FILES", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NOT_READY
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NOT_READY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_NOT_READY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NOT_READY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NOT_READY
void System::IO::MonoIOError::_set_ERROR_NOT_READY(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_NOT_READY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NOT_READY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_WRITE_FAULT
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_WRITE_FAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_WRITE_FAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_WRITE_FAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_WRITE_FAULT
void System::IO::MonoIOError::_set_ERROR_WRITE_FAULT(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_WRITE_FAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_WRITE_FAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_READ_FAULT
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_READ_FAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_READ_FAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_READ_FAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_READ_FAULT
void System::IO::MonoIOError::_set_ERROR_READ_FAULT(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_READ_FAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_READ_FAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_GEN_FAILURE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_GEN_FAILURE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_GEN_FAILURE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_GEN_FAILURE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_GEN_FAILURE
void System::IO::MonoIOError::_set_ERROR_GEN_FAILURE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_GEN_FAILURE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_GEN_FAILURE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_SHARING_VIOLATION
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_SHARING_VIOLATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_SHARING_VIOLATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_SHARING_VIOLATION"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_SHARING_VIOLATION
void System::IO::MonoIOError::_set_ERROR_SHARING_VIOLATION(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_SHARING_VIOLATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_SHARING_VIOLATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_LOCK_VIOLATION
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_LOCK_VIOLATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_LOCK_VIOLATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_LOCK_VIOLATION"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_LOCK_VIOLATION
void System::IO::MonoIOError::_set_ERROR_LOCK_VIOLATION(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_LOCK_VIOLATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_LOCK_VIOLATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_HANDLE_DISK_FULL
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_HANDLE_DISK_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_HANDLE_DISK_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_HANDLE_DISK_FULL"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_HANDLE_DISK_FULL
void System::IO::MonoIOError::_set_ERROR_HANDLE_DISK_FULL(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_HANDLE_DISK_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_HANDLE_DISK_FULL", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NOT_SUPPORTED
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NOT_SUPPORTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_NOT_SUPPORTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NOT_SUPPORTED"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NOT_SUPPORTED
void System::IO::MonoIOError::_set_ERROR_NOT_SUPPORTED(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_NOT_SUPPORTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NOT_SUPPORTED", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILE_EXISTS
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILE_EXISTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_FILE_EXISTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILE_EXISTS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILE_EXISTS
void System::IO::MonoIOError::_set_ERROR_FILE_EXISTS(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_FILE_EXISTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILE_EXISTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_CANNOT_MAKE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_CANNOT_MAKE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_CANNOT_MAKE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_CANNOT_MAKE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_CANNOT_MAKE
void System::IO::MonoIOError::_set_ERROR_CANNOT_MAKE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_CANNOT_MAKE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_CANNOT_MAKE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_PARAMETER
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_INVALID_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_PARAMETER
void System::IO::MonoIOError::_set_ERROR_INVALID_PARAMETER(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_INVALID_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_BROKEN_PIPE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_BROKEN_PIPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_BROKEN_PIPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_BROKEN_PIPE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_BROKEN_PIPE
void System::IO::MonoIOError::_set_ERROR_BROKEN_PIPE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_BROKEN_PIPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_BROKEN_PIPE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_NAME
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_INVALID_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_NAME
void System::IO::MonoIOError::_set_ERROR_INVALID_NAME(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_INVALID_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_NAME", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_DIR_NOT_EMPTY
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_DIR_NOT_EMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_DIR_NOT_EMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_DIR_NOT_EMPTY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_DIR_NOT_EMPTY
void System::IO::MonoIOError::_set_ERROR_DIR_NOT_EMPTY(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_DIR_NOT_EMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_DIR_NOT_EMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ALREADY_EXISTS
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ALREADY_EXISTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_ALREADY_EXISTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ALREADY_EXISTS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ALREADY_EXISTS
void System::IO::MonoIOError::_set_ERROR_ALREADY_EXISTS(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_ALREADY_EXISTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ALREADY_EXISTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILENAME_EXCED_RANGE
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILENAME_EXCED_RANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_FILENAME_EXCED_RANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILENAME_EXCED_RANGE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILENAME_EXCED_RANGE
void System::IO::MonoIOError::_set_ERROR_FILENAME_EXCED_RANGE(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_FILENAME_EXCED_RANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILENAME_EXCED_RANGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_DIRECTORY
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_DIRECTORY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_DIRECTORY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_DIRECTORY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_DIRECTORY
void System::IO::MonoIOError::_set_ERROR_DIRECTORY(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_DIRECTORY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_DIRECTORY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ENCRYPTION_FAILED
::System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ENCRYPTION_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_get_ERROR_ENCRYPTION_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ENCRYPTION_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ENCRYPTION_FAILED
void System::IO::MonoIOError::_set_ERROR_ENCRYPTION_FAILED(::System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::_set_ERROR_ENCRYPTION_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ENCRYPTION_FAILED", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::MonoIOError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::MonoIOError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Path
#include "System/IO/Path.hpp"
// Including type: System.IO.Path/<>c
#include "System/IO/Path_--c.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] InvalidPathChars
::ArrayW<::Il2CppChar> System::IO::Path::_get_InvalidPathChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_InvalidPathChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "InvalidPathChars"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] InvalidPathChars
void System::IO::Path::_set_InvalidPathChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_InvalidPathChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "InvalidPathChars", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char AltDirectorySeparatorChar
::Il2CppChar System::IO::Path::_get_AltDirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_AltDirectorySeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "AltDirectorySeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char AltDirectorySeparatorChar
void System::IO::Path::_set_AltDirectorySeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_AltDirectorySeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "AltDirectorySeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char DirectorySeparatorChar
::Il2CppChar System::IO::Path::_get_DirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_DirectorySeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "DirectorySeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char DirectorySeparatorChar
void System::IO::Path::_set_DirectorySeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_DirectorySeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "DirectorySeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char PathSeparator
::Il2CppChar System::IO::Path::_get_PathSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_PathSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "PathSeparator"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char PathSeparator
void System::IO::Path::_set_PathSeparator(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_PathSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "PathSeparator", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String DirectorySeparatorStr
::StringW System::IO::Path::_get_DirectorySeparatorStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_DirectorySeparatorStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.IO", "Path", "DirectorySeparatorStr"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String DirectorySeparatorStr
void System::IO::Path::_set_DirectorySeparatorStr(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_DirectorySeparatorStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "DirectorySeparatorStr", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char VolumeSeparatorChar
::Il2CppChar System::IO::Path::_get_VolumeSeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_VolumeSeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "VolumeSeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char VolumeSeparatorChar
void System::IO::Path::_set_VolumeSeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_VolumeSeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "VolumeSeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] PathSeparatorChars
::ArrayW<::Il2CppChar> System::IO::Path::_get_PathSeparatorChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_PathSeparatorChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "PathSeparatorChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] PathSeparatorChars
void System::IO::Path::_set_PathSeparatorChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_PathSeparatorChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "PathSeparatorChars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean dirEqualsVolume
bool System::IO::Path::_get_dirEqualsVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_dirEqualsVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "Path", "dirEqualsVolume"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean dirEqualsVolume
void System::IO::Path::_set_dirEqualsVolume(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_dirEqualsVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "dirEqualsVolume", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] trimEndCharsWindows
::ArrayW<::Il2CppChar> System::IO::Path::_get_trimEndCharsWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_trimEndCharsWindows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "trimEndCharsWindows"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] trimEndCharsWindows
void System::IO::Path::_set_trimEndCharsWindows(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_trimEndCharsWindows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "trimEndCharsWindows", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] trimEndCharsUnix
::ArrayW<::Il2CppChar> System::IO::Path::_get_trimEndCharsUnix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_get_trimEndCharsUnix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "trimEndCharsUnix"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] trimEndCharsUnix
void System::IO::Path::_set_trimEndCharsUnix(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::_set_trimEndCharsUnix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "trimEndCharsUnix", value));
}
// Autogenerated method: System.IO.Path.ChangeExtension
::StringW System::IO::Path::ChangeExtension(::StringW path, ::StringW extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::ChangeExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "ChangeExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, extension);
}
// Autogenerated method: System.IO.Path.Combine
::StringW System::IO::Path::Combine(::StringW path1, ::StringW path2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path1, path2);
}
// Autogenerated method: System.IO.Path.CleanPath
::StringW System::IO::Path::CleanPath(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::CleanPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "CleanPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.IO.Path.GetDirectoryName
::StringW System::IO::Path::GetDirectoryName(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetDirectoryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetDirectoryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetDirectoryName
::System::ReadOnlySpan_1<::Il2CppChar> System::IO::Path::GetDirectoryName(::System::ReadOnlySpan_1<::Il2CppChar> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetDirectoryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetDirectoryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetExtension
::StringW System::IO::Path::GetExtension(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFileName
::StringW System::IO::Path::GetFileName(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFileNameWithoutExtension
::StringW System::IO::Path::GetFileNameWithoutExtension(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFileNameWithoutExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFileNameWithoutExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPath
::StringW System::IO::Path::GetFullPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPathInternal
::StringW System::IO::Path::GetFullPathInternal(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFullPathInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPathInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.InsecureGetFullPath
::StringW System::IO::Path::InsecureGetFullPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::InsecureGetFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "InsecureGetFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.IsDirectorySeparator
bool System::IO::Path::IsDirectorySeparator(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::IsDirectorySeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "IsDirectorySeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.IO.Path.GetPathRoot
::StringW System::IO::Path::GetPathRoot(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetPathRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetPathRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetTempPath
::StringW System::IO::Path::GetTempPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetTempPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetTempPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.get_temp_path
::StringW System::IO::Path::get_temp_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::get_temp_path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "get_temp_path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.HasExtension
bool System::IO::Path::HasExtension(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::HasExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "HasExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.IsPathRooted
bool System::IO::Path::IsPathRooted(::System::ReadOnlySpan_1<::Il2CppChar> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::IsPathRooted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "IsPathRooted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.IsPathRooted
bool System::IO::Path::IsPathRooted(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::IsPathRooted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "IsPathRooted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetInvalidPathChars
::ArrayW<::Il2CppChar> System::IO::Path::GetInvalidPathChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetInvalidPathChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetInvalidPathChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.findExtension
int System::IO::Path::findExtension(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::findExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "findExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path..cctor
void System::IO::Path::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.CanonicalizePath
::StringW System::IO::Path::CanonicalizePath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::CanonicalizePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "CanonicalizePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.Combine
::StringW System::IO::Path::Combine(::ArrayW<::StringW> paths) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paths)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paths);
}
// Autogenerated method: System.IO.Path.Combine
::StringW System::IO::Path::Combine(::StringW path1, ::StringW path2, ::StringW path3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2), ::il2cpp_utils::ExtractType(path3)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path1, path2, path3);
}
// Autogenerated method: System.IO.Path.Validate
void System::IO::Path::Validate(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.Validate
void System::IO::Path::Validate(::StringW path, ::StringW parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(parameterName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, parameterName);
}
// Autogenerated method: System.IO.Path.GetFileName
::System::ReadOnlySpan_1<::Il2CppChar> System::IO::Path::GetFileName(::System::ReadOnlySpan_1<::Il2CppChar> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::GetFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.Join
::StringW System::IO::Path::Join(::System::ReadOnlySpan_1<::Il2CppChar> path1, ::System::ReadOnlySpan_1<::Il2CppChar> path2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path1, path2);
}
// Autogenerated method: System.IO.Path.Join
::StringW System::IO::Path::Join(::System::ReadOnlySpan_1<::Il2CppChar> path1, ::System::ReadOnlySpan_1<::Il2CppChar> path2, ::System::ReadOnlySpan_1<::Il2CppChar> path3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2), ::il2cpp_utils::ExtractType(path3)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path1, path2, path3);
}
// Autogenerated method: System.IO.Path.TryJoin
bool System::IO::Path::TryJoin(::System::ReadOnlySpan_1<::Il2CppChar> path1, ::System::ReadOnlySpan_1<::Il2CppChar> path2, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::TryJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "TryJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path1, path2, destination, byref(charsWritten));
}
// Autogenerated method: System.IO.Path.JoinInternal
::StringW System::IO::Path::JoinInternal(::System::ReadOnlySpan_1<::Il2CppChar> first, ::System::ReadOnlySpan_1<::Il2CppChar> second) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::JoinInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "JoinInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, first, second);
}
// Autogenerated method: System.IO.Path.JoinInternal
::StringW System::IO::Path::JoinInternal(::System::ReadOnlySpan_1<::Il2CppChar> first, ::System::ReadOnlySpan_1<::Il2CppChar> second, ::System::ReadOnlySpan_1<::Il2CppChar> third) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::JoinInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "JoinInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(third)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, first, second, third);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Path/<>c
#include "System/IO/Path_--c.hpp"
// Including type: System.Buffers.SpanAction`2
#include "System/Buffers/SpanAction_2.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Path/<>c <>9
::System::IO::Path::$$c* System::IO::Path::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Path::$$c*>("System.IO", "Path/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Path/<>c <>9
void System::IO::Path::$$c::_set_$$9(::System::IO::Path::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Path/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.SpanAction`2<System.Char,System.ValueTuple`5<System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Boolean>> <>9__56_0
::System::Buffers::SpanAction_2<::Il2CppChar, ::System::ValueTuple_5<::System::IntPtr, int, ::System::IntPtr, int, bool>>* System::IO::Path::$$c::_get_$$9__56_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::$$c::_get_$$9__56_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Buffers::SpanAction_2<::Il2CppChar, ::System::ValueTuple_5<::System::IntPtr, int, ::System::IntPtr, int, bool>>*>("System.IO", "Path/<>c", "<>9__56_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.SpanAction`2<System.Char,System.ValueTuple`5<System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Boolean>> <>9__56_0
void System::IO::Path::$$c::_set_$$9__56_0(::System::Buffers::SpanAction_2<::Il2CppChar, ::System::ValueTuple_5<::System::IntPtr, int, ::System::IntPtr, int, bool>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::$$c::_set_$$9__56_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Path/<>c", "<>9__56_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.SpanAction`2<System.Char,System.ValueTuple`8<System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Boolean,System.ValueTuple`1<System.Boolean>>> <>9__57_0
::System::Buffers::SpanAction_2<::Il2CppChar, ::System::ValueTuple_8<::System::IntPtr, int, ::System::IntPtr, int, ::System::IntPtr, int, bool, ::System::ValueTuple_1<bool>>>* System::IO::Path::$$c::_get_$$9__57_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::$$c::_get_$$9__57_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Buffers::SpanAction_2<::Il2CppChar, ::System::ValueTuple_8<::System::IntPtr, int, ::System::IntPtr, int, ::System::IntPtr, int, bool, ::System::ValueTuple_1<bool>>>*>("System.IO", "Path/<>c", "<>9__57_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.SpanAction`2<System.Char,System.ValueTuple`8<System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Boolean,System.ValueTuple`1<System.Boolean>>> <>9__57_0
void System::IO::Path::$$c::_set_$$9__57_0(::System::Buffers::SpanAction_2<::Il2CppChar, ::System::ValueTuple_8<::System::IntPtr, int, ::System::IntPtr, int, ::System::IntPtr, int, bool, ::System::ValueTuple_1<bool>>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::$$c::_set_$$9__57_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Path/<>c", "<>9__57_0", value)));
}
// Autogenerated method: System.IO.Path/<>c..cctor
void System::IO::Path::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path/<>c.<JoinInternal>b__56_0
void System::IO::Path::$$c::$JoinInternal$b__56_0(::System::Span_1<::Il2CppChar> destination, ::System::ValueTuple_5<::System::IntPtr, int, ::System::IntPtr, int, bool> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::$$c::<JoinInternal>b__56_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<JoinInternal>b__56_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination, state);
}
// Autogenerated method: System.IO.Path/<>c.<JoinInternal>b__57_0
void System::IO::Path::$$c::$JoinInternal$b__57_0(::System::Span_1<::Il2CppChar> destination, ::System::ValueTuple_8<::System::IntPtr, int, ::System::IntPtr, int, ::System::IntPtr, int, bool, ::System::ValueTuple_1<bool>> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Path::$$c::<JoinInternal>b__57_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<JoinInternal>b__57_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination, state);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.UnexceptionalStreamReader
#include "System/IO/UnexceptionalStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean[] newline
::ArrayW<bool> System::IO::UnexceptionalStreamReader::_get_newline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::_get_newline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("System.IO", "UnexceptionalStreamReader", "newline"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean[] newline
void System::IO::UnexceptionalStreamReader::_set_newline(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::_set_newline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "UnexceptionalStreamReader", "newline", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char newlineChar
::Il2CppChar System::IO::UnexceptionalStreamReader::_get_newlineChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::_get_newlineChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "UnexceptionalStreamReader", "newlineChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Char newlineChar
void System::IO::UnexceptionalStreamReader::_set_newlineChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::_set_newlineChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "UnexceptionalStreamReader", "newlineChar", value));
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.CheckEOL
bool System::IO::UnexceptionalStreamReader::CheckEOL(::Il2CppChar current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::CheckEOL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckEOL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, current);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader..cctor
void System::IO::UnexceptionalStreamReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "UnexceptionalStreamReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Peek
int System::IO::UnexceptionalStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Read
int System::IO::UnexceptionalStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Read
int System::IO::UnexceptionalStreamReader::Read(ByRef<::ArrayW<::Il2CppChar>> dest_buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(dest_buffer), index, count);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.ReadLine
::StringW System::IO::UnexceptionalStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.ReadToEnd
::StringW System::IO::UnexceptionalStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.UnexceptionalStreamWriter
#include "System/IO/UnexceptionalStreamWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Flush
void System::IO::UnexceptionalStreamWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamWriter::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.CStreamReader
#include "System/IO/CStreamReader.hpp"
// Including type: System.TermInfoDriver
#include "System/TermInfoDriver.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.TermInfoDriver driver
[[deprecated("Use field access instead!")]] ::System::TermInfoDriver*& System::IO::CStreamReader::dyn_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::dyn_driver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driver"))->offset;
  return *reinterpret_cast<::System::TermInfoDriver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.CStreamReader.Peek
int System::IO::CStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.Read
int System::IO::CStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.Read
int System::IO::CStreamReader::Read(ByRef<::ArrayW<::Il2CppChar>> dest, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(dest), index, count);
}
// Autogenerated method: System.IO.CStreamReader.ReadLine
::StringW System::IO::CStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.ReadToEnd
::StringW System::IO::CStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.CStreamWriter
#include "System/IO/CStreamWriter.hpp"
// Including type: System.TermInfoDriver
#include "System/TermInfoDriver.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.TermInfoDriver driver
[[deprecated("Use field access instead!")]] ::System::TermInfoDriver*& System::IO::CStreamWriter::dyn_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::dyn_driver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driver"))->offset;
  return *reinterpret_cast<::System::TermInfoDriver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteString
void System::IO::CStreamWriter::InternalWriteString(::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::InternalWriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteChar
void System::IO::CStreamWriter::InternalWriteChar(::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::InternalWriteChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteChars
void System::IO::CStreamWriter::InternalWriteChars(::ArrayW<::Il2CppChar> buffer, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::InternalWriteChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, n);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::ArrayW<::Il2CppChar> val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.WriteLine
void System::IO::CStreamWriter::WriteLine(::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::CStreamWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::StreamWriter*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.MonoLinqHelper
#include "System/IO/MonoLinqHelper.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Enumeration.FileSystemEntry
#include "System/IO/Enumeration/FileSystemEntry.hpp"
// Including type: System.IO.FileSystemInfo
#include "System/IO/FileSystemInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Interop/Sys/DirectoryEntry _directoryEntry
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Interop::Sys::DirectoryEntry& System::IO::Enumeration::FileSystemEntry::dyn__directoryEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::dyn__directoryEntry");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directoryEntry"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Interop::Sys::DirectoryEntry*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileStatus _status
[[deprecated("Use field access instead!")]] ::System::IO::FileStatus& System::IO::Enumeration::FileSystemEntry::dyn__status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::dyn__status");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_status"))->offset;
  return *reinterpret_cast<::System::IO::FileStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Span`1<System.Char> _pathBuffer
[[deprecated("Use field access instead!")]] ::System::Span_1<::Il2CppChar>& System::IO::Enumeration::FileSystemEntry::dyn__pathBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::dyn__pathBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pathBuffer"))->offset;
  return *reinterpret_cast<::System::Span_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ReadOnlySpan`1<System.Char> _fullPath
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::IO::Enumeration::FileSystemEntry::dyn__fullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::dyn__fullPath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullPath"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ReadOnlySpan`1<System.Char> _fileName
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::IO::Enumeration::FileSystemEntry::dyn__fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::dyn__fileName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileName"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Enumeration.FileSystemEntry/<_fileNameBuffer>e__FixedBuffer _fileNameBuffer
[[deprecated("Use field access instead!")]] ::System::IO::Enumeration::FileSystemEntry::$_fileNameBuffer$e__FixedBuffer& System::IO::Enumeration::FileSystemEntry::dyn__fileNameBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::dyn__fileNameBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileNameBuffer"))->offset;
  return *reinterpret_cast<::System::IO::Enumeration::FileSystemEntry::$_fileNameBuffer$e__FixedBuffer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAttributes _initialAttributes
[[deprecated("Use field access instead!")]] ::System::IO::FileAttributes& System::IO::Enumeration::FileSystemEntry::dyn__initialAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::dyn__initialAttributes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialAttributes"))->offset;
  return *reinterpret_cast<::System::IO::FileAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ReadOnlySpan`1<System.Char> <Directory>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::IO::Enumeration::FileSystemEntry::dyn_$Directory$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::dyn_$Directory$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Directory>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ReadOnlySpan`1<System.Char> <RootDirectory>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::IO::Enumeration::FileSystemEntry::dyn_$RootDirectory$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::dyn_$RootDirectory$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RootDirectory>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ReadOnlySpan`1<System.Char> <OriginalRootDirectory>k__BackingField
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::IO::Enumeration::FileSystemEntry::dyn_$OriginalRootDirectory$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::dyn_$OriginalRootDirectory$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OriginalRootDirectory>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.Initialize
::System::IO::FileAttributes System::IO::Enumeration::FileSystemEntry::Initialize(ByRef<::System::IO::Enumeration::FileSystemEntry> entry, ::GlobalNamespace::Interop::Sys::DirectoryEntry directoryEntry, ::System::ReadOnlySpan_1<::Il2CppChar> directory, ::System::ReadOnlySpan_1<::Il2CppChar> rootDirectory, ::System::ReadOnlySpan_1<::Il2CppChar> originalRootDirectory, ::System::Span_1<::Il2CppChar> pathBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEntry", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(directoryEntry), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(rootDirectory), ::il2cpp_utils::ExtractType(originalRootDirectory), ::il2cpp_utils::ExtractType(pathBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileAttributes, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(entry), directoryEntry, directory, rootDirectory, originalRootDirectory, pathBuffer);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.get_FullPath
::System::ReadOnlySpan_1<::Il2CppChar> System::IO::Enumeration::FileSystemEntry::get_FullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::get_FullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_FullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.get_FileName
::System::ReadOnlySpan_1<::Il2CppChar> System::IO::Enumeration::FileSystemEntry::get_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::get_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.get_Directory
::System::ReadOnlySpan_1<::Il2CppChar> System::IO::Enumeration::FileSystemEntry::get_Directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::get_Directory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Directory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.set_Directory
void System::IO::Enumeration::FileSystemEntry::set_Directory(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::set_Directory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Directory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.get_RootDirectory
::System::ReadOnlySpan_1<::Il2CppChar> System::IO::Enumeration::FileSystemEntry::get_RootDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::get_RootDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_RootDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.set_RootDirectory
void System::IO::Enumeration::FileSystemEntry::set_RootDirectory(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::set_RootDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_RootDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.get_OriginalRootDirectory
::System::ReadOnlySpan_1<::Il2CppChar> System::IO::Enumeration::FileSystemEntry::get_OriginalRootDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::get_OriginalRootDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_OriginalRootDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.set_OriginalRootDirectory
void System::IO::Enumeration::FileSystemEntry::set_OriginalRootDirectory(::System::ReadOnlySpan_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::set_OriginalRootDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_OriginalRootDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.get_Attributes
::System::IO::FileAttributes System::IO::Enumeration::FileSystemEntry::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.get_IsDirectory
bool System::IO::Enumeration::FileSystemEntry::get_IsDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::get_IsDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.ToFileSystemInfo
::System::IO::FileSystemInfo* System::IO::Enumeration::FileSystemEntry::ToFileSystemInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::ToFileSystemInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToFileSystemInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileSystemInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.ToFullPath
::StringW System::IO::Enumeration::FileSystemEntry::ToFullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::ToFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEntry.ToSpecifiedFullPath
::StringW System::IO::Enumeration::FileSystemEntry::ToSpecifiedFullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEntry::ToSpecifiedFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSpecifiedFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory
#include "System/IO/Enumeration/FileSystemEnumerableFactory.hpp"
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass3_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass3_0.hpp"
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c.hpp"
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass4_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass4_0.hpp"
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass5_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass5_0.hpp"
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass6_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass6_0.hpp"
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass7_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass7_0.hpp"
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass8_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass8_0.hpp"
// Including type: System.IO.EnumerationOptions
#include "System/IO/EnumerationOptions.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.IO.FileSystemInfo
#include "System/IO/FileSystemInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] s_unixEscapeChars
::ArrayW<::Il2CppChar> System::IO::Enumeration::FileSystemEnumerableFactory::_get_s_unixEscapeChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::_get_s_unixEscapeChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO.Enumeration", "FileSystemEnumerableFactory", "s_unixEscapeChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] s_unixEscapeChars
void System::IO::Enumeration::FileSystemEnumerableFactory::_set_s_unixEscapeChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::_set_s_unixEscapeChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Enumeration", "FileSystemEnumerableFactory", "s_unixEscapeChars", value));
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory.NormalizeInputs
void System::IO::Enumeration::FileSystemEnumerableFactory::NormalizeInputs(ByRef<::StringW> directory, ByRef<::StringW> expression, ::System::IO::EnumerationOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::NormalizeInputs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEnumerableFactory", "NormalizeInputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(directory), byref(expression), options);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory.MatchesPattern
bool System::IO::Enumeration::FileSystemEnumerableFactory::MatchesPattern(::StringW expression, ::System::ReadOnlySpan_1<::Il2CppChar> name, ::System::IO::EnumerationOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::MatchesPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEnumerableFactory", "MatchesPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, name, options);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory.UserFiles
::System::Collections::Generic::IEnumerable_1<::StringW>* System::IO::Enumeration::FileSystemEnumerableFactory::UserFiles(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::UserFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEnumerableFactory", "UserFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directory, expression, options);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory.UserDirectories
::System::Collections::Generic::IEnumerable_1<::StringW>* System::IO::Enumeration::FileSystemEnumerableFactory::UserDirectories(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::UserDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEnumerableFactory", "UserDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directory, expression, options);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory.UserEntries
::System::Collections::Generic::IEnumerable_1<::StringW>* System::IO::Enumeration::FileSystemEnumerableFactory::UserEntries(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::UserEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEnumerableFactory", "UserEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directory, expression, options);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory.FileInfos
::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>* System::IO::Enumeration::FileSystemEnumerableFactory::FileInfos(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::FileInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEnumerableFactory", "FileInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::IO::FileInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directory, expression, options);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory.DirectoryInfos
::System::Collections::Generic::IEnumerable_1<::System::IO::DirectoryInfo*>* System::IO::Enumeration::FileSystemEnumerableFactory::DirectoryInfos(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::DirectoryInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEnumerableFactory", "DirectoryInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::IO::DirectoryInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directory, expression, options);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory.FileSystemInfos
::System::Collections::Generic::IEnumerable_1<::System::IO::FileSystemInfo*>* System::IO::Enumeration::FileSystemEnumerableFactory::FileSystemInfos(::StringW directory, ::StringW expression, ::System::IO::EnumerationOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::FileSystemInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEnumerableFactory", "FileSystemInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::IO::FileSystemInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directory, expression, options);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory..cctor
void System::IO::Enumeration::FileSystemEnumerableFactory::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEnumerableFactory", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass3_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass3_0.hpp"
// Including type: System.IO.EnumerationOptions
#include "System/IO/EnumerationOptions.hpp"
// Including type: System.IO.Enumeration.FileSystemEntry
#include "System/IO/Enumeration/FileSystemEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String expression
[[deprecated("Use field access instead!")]] ::StringW& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass3_0::dyn_expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass3_0::dyn_expression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expression"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.EnumerationOptions options
[[deprecated("Use field access instead!")]] ::System::IO::EnumerationOptions*& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass3_0::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass3_0::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::IO::EnumerationOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass3_0.<UserFiles>b__1
bool System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass3_0::$UserFiles$b__1(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass3_0::<UserFiles>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UserFiles>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(entry));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c.hpp"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.IO.FileSystemInfo
#include "System/IO/FileSystemInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Enumeration.FileSystemEnumerableFactory/<>c <>9
::System::IO::Enumeration::FileSystemEnumerableFactory::$$c* System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Enumeration::FileSystemEnumerableFactory::$$c*>("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Enumeration.FileSystemEnumerableFactory/<>c <>9
void System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9(::System::IO::Enumeration::FileSystemEnumerableFactory::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.String> <>9__3_0
typename ::System::IO::Enumeration::FileSystemEnumerable_1<::StringW>::FindTransform* System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::IO::Enumeration::FileSystemEnumerable_1<::StringW>::FindTransform*>("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.String> <>9__3_0
void System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__3_0(typename ::System::IO::Enumeration::FileSystemEnumerable_1<::StringW>::FindTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__3_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.String> <>9__4_0
typename ::System::IO::Enumeration::FileSystemEnumerable_1<::StringW>::FindTransform* System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::IO::Enumeration::FileSystemEnumerable_1<::StringW>::FindTransform*>("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.String> <>9__4_0
void System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__4_0(typename ::System::IO::Enumeration::FileSystemEnumerable_1<::StringW>::FindTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.String> <>9__5_0
typename ::System::IO::Enumeration::FileSystemEnumerable_1<::StringW>::FindTransform* System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::IO::Enumeration::FileSystemEnumerable_1<::StringW>::FindTransform*>("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.String> <>9__5_0
void System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__5_0(typename ::System::IO::Enumeration::FileSystemEnumerable_1<::StringW>::FindTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__5_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.IO.FileInfo> <>9__6_0
typename ::System::IO::Enumeration::FileSystemEnumerable_1<::System::IO::FileInfo*>::FindTransform* System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::IO::Enumeration::FileSystemEnumerable_1<::System::IO::FileInfo*>::FindTransform*>("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.IO.FileInfo> <>9__6_0
void System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__6_0(typename ::System::IO::Enumeration::FileSystemEnumerable_1<::System::IO::FileInfo*>::FindTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.IO.DirectoryInfo> <>9__7_0
typename ::System::IO::Enumeration::FileSystemEnumerable_1<::System::IO::DirectoryInfo*>::FindTransform* System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::IO::Enumeration::FileSystemEnumerable_1<::System::IO::DirectoryInfo*>::FindTransform*>("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.IO.DirectoryInfo> <>9__7_0
void System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__7_0(typename ::System::IO::Enumeration::FileSystemEnumerable_1<::System::IO::DirectoryInfo*>::FindTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.IO.FileSystemInfo> <>9__8_0
typename ::System::IO::Enumeration::FileSystemEnumerable_1<::System::IO::FileSystemInfo*>::FindTransform* System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::IO::Enumeration::FileSystemEnumerable_1<::System::IO::FileSystemInfo*>::FindTransform*>("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Enumeration.FileSystemEnumerable`1/FindTransform<System.IO.FileSystemInfo> <>9__8_0
void System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__8_0(typename ::System::IO::Enumeration::FileSystemEnumerable_1<::System::IO::FileSystemInfo*>::FindTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", "<>9__8_0", value)));
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c..cctor
void System::IO::Enumeration::FileSystemEnumerableFactory::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemEnumerableFactory/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c.<UserFiles>b__3_0
::StringW System::IO::Enumeration::FileSystemEnumerableFactory::$$c::$UserFiles$b__3_0(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::<UserFiles>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UserFiles>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(entry));
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c.<UserDirectories>b__4_0
::StringW System::IO::Enumeration::FileSystemEnumerableFactory::$$c::$UserDirectories$b__4_0(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::<UserDirectories>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UserDirectories>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(entry));
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c.<UserEntries>b__5_0
::StringW System::IO::Enumeration::FileSystemEnumerableFactory::$$c::$UserEntries$b__5_0(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::<UserEntries>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UserEntries>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(entry));
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c.<FileInfos>b__6_0
::System::IO::FileInfo* System::IO::Enumeration::FileSystemEnumerableFactory::$$c::$FileInfos$b__6_0(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::<FileInfos>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FileInfos>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileInfo*, false>(this, ___internal__method, byref(entry));
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c.<DirectoryInfos>b__7_0
::System::IO::DirectoryInfo* System::IO::Enumeration::FileSystemEnumerableFactory::$$c::$DirectoryInfos$b__7_0(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::<DirectoryInfos>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DirectoryInfos>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::DirectoryInfo*, false>(this, ___internal__method, byref(entry));
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c.<FileSystemInfos>b__8_0
::System::IO::FileSystemInfo* System::IO::Enumeration::FileSystemEnumerableFactory::$$c::$FileSystemInfos$b__8_0(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c::<FileSystemInfos>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FileSystemInfos>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileSystemInfo*, false>(this, ___internal__method, byref(entry));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass4_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass4_0.hpp"
// Including type: System.IO.EnumerationOptions
#include "System/IO/EnumerationOptions.hpp"
// Including type: System.IO.Enumeration.FileSystemEntry
#include "System/IO/Enumeration/FileSystemEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String expression
[[deprecated("Use field access instead!")]] ::StringW& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass4_0::dyn_expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass4_0::dyn_expression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expression"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.EnumerationOptions options
[[deprecated("Use field access instead!")]] ::System::IO::EnumerationOptions*& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass4_0::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass4_0::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::IO::EnumerationOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass4_0.<UserDirectories>b__1
bool System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass4_0::$UserDirectories$b__1(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass4_0::<UserDirectories>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UserDirectories>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(entry));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass5_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass5_0.hpp"
// Including type: System.IO.EnumerationOptions
#include "System/IO/EnumerationOptions.hpp"
// Including type: System.IO.Enumeration.FileSystemEntry
#include "System/IO/Enumeration/FileSystemEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String expression
[[deprecated("Use field access instead!")]] ::StringW& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass5_0::dyn_expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass5_0::dyn_expression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expression"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.EnumerationOptions options
[[deprecated("Use field access instead!")]] ::System::IO::EnumerationOptions*& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass5_0::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass5_0::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::IO::EnumerationOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass5_0.<UserEntries>b__1
bool System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass5_0::$UserEntries$b__1(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass5_0::<UserEntries>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UserEntries>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(entry));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass6_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass6_0.hpp"
// Including type: System.IO.EnumerationOptions
#include "System/IO/EnumerationOptions.hpp"
// Including type: System.IO.Enumeration.FileSystemEntry
#include "System/IO/Enumeration/FileSystemEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String expression
[[deprecated("Use field access instead!")]] ::StringW& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass6_0::dyn_expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass6_0::dyn_expression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expression"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.EnumerationOptions options
[[deprecated("Use field access instead!")]] ::System::IO::EnumerationOptions*& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass6_0::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass6_0::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::IO::EnumerationOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass6_0.<FileInfos>b__1
bool System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass6_0::$FileInfos$b__1(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass6_0::<FileInfos>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FileInfos>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(entry));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass7_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass7_0.hpp"
// Including type: System.IO.EnumerationOptions
#include "System/IO/EnumerationOptions.hpp"
// Including type: System.IO.Enumeration.FileSystemEntry
#include "System/IO/Enumeration/FileSystemEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String expression
[[deprecated("Use field access instead!")]] ::StringW& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass7_0::dyn_expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass7_0::dyn_expression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expression"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.EnumerationOptions options
[[deprecated("Use field access instead!")]] ::System::IO::EnumerationOptions*& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass7_0::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass7_0::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::IO::EnumerationOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass7_0.<DirectoryInfos>b__1
bool System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass7_0::$DirectoryInfos$b__1(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass7_0::<DirectoryInfos>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DirectoryInfos>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(entry));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass8_0
#include "System/IO/Enumeration/FileSystemEnumerableFactory_--c__DisplayClass8_0.hpp"
// Including type: System.IO.EnumerationOptions
#include "System/IO/EnumerationOptions.hpp"
// Including type: System.IO.Enumeration.FileSystemEntry
#include "System/IO/Enumeration/FileSystemEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String expression
[[deprecated("Use field access instead!")]] ::StringW& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass8_0::dyn_expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass8_0::dyn_expression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expression"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.EnumerationOptions options
[[deprecated("Use field access instead!")]] ::System::IO::EnumerationOptions*& System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass8_0::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass8_0::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::IO::EnumerationOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Enumeration.FileSystemEnumerableFactory/<>c__DisplayClass8_0.<FileSystemInfos>b__1
bool System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass8_0::$FileSystemInfos$b__1(ByRef<::System::IO::Enumeration::FileSystemEntry> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemEnumerableFactory::$$c__DisplayClass8_0::<FileSystemInfos>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FileSystemInfos>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(entry));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.IO.Enumeration.FileSystemName
#include "System/IO/Enumeration/FileSystemName.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] s_wildcardChars
::ArrayW<::Il2CppChar> System::IO::Enumeration::FileSystemName::_get_s_wildcardChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemName::_get_s_wildcardChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO.Enumeration", "FileSystemName", "s_wildcardChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] s_wildcardChars
void System::IO::Enumeration::FileSystemName::_set_s_wildcardChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemName::_set_s_wildcardChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Enumeration", "FileSystemName", "s_wildcardChars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] s_simpleWildcardChars
::ArrayW<::Il2CppChar> System::IO::Enumeration::FileSystemName::_get_s_simpleWildcardChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemName::_get_s_simpleWildcardChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO.Enumeration", "FileSystemName", "s_simpleWildcardChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] s_simpleWildcardChars
void System::IO::Enumeration::FileSystemName::_set_s_simpleWildcardChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemName::_set_s_simpleWildcardChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Enumeration", "FileSystemName", "s_simpleWildcardChars", value));
}
// Autogenerated method: System.IO.Enumeration.FileSystemName.TranslateWin32Expression
::StringW System::IO::Enumeration::FileSystemName::TranslateWin32Expression(::StringW expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemName::TranslateWin32Expression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemName", "TranslateWin32Expression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression);
}
// Autogenerated method: System.IO.Enumeration.FileSystemName.MatchesWin32Expression
bool System::IO::Enumeration::FileSystemName::MatchesWin32Expression(::System::ReadOnlySpan_1<::Il2CppChar> expression, ::System::ReadOnlySpan_1<::Il2CppChar> name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemName::MatchesWin32Expression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemName", "MatchesWin32Expression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, name, ignoreCase);
}
// Autogenerated method: System.IO.Enumeration.FileSystemName.MatchesSimpleExpression
bool System::IO::Enumeration::FileSystemName::MatchesSimpleExpression(::System::ReadOnlySpan_1<::Il2CppChar> expression, ::System::ReadOnlySpan_1<::Il2CppChar> name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemName::MatchesSimpleExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemName", "MatchesSimpleExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, name, ignoreCase);
}
// Autogenerated method: System.IO.Enumeration.FileSystemName.MatchPattern
bool System::IO::Enumeration::FileSystemName::MatchPattern(::System::ReadOnlySpan_1<::Il2CppChar> expression, ::System::ReadOnlySpan_1<::Il2CppChar> name, bool ignoreCase, bool useExtendedWildcards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemName::MatchPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemName", "MatchPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(useExtendedWildcards)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, name, ignoreCase, useExtendedWildcards);
}
// Autogenerated method: System.IO.Enumeration.FileSystemName..cctor
void System::IO::Enumeration::FileSystemName::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Enumeration::FileSystemName::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Enumeration", "FileSystemName", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.CharUnicodeInfo
#include "System/Globalization/CharUnicodeInfo.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalConvertToUtf32
int System::Globalization::CharUnicodeInfo::InternalConvertToUtf32(::StringW s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalConvertToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalConvertToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalConvertToUtf32
int System::Globalization::CharUnicodeInfo::InternalConvertToUtf32(::StringW s, int index, ByRef<int> charLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalConvertToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalConvertToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index, byref(charLength));
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.GetUnicodeCategory
::System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::GetUnicodeCategory(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.GetUnicodeCategory
::System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::GetUnicodeCategory(::StringW s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.GetUnicodeCategory
::System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::GetUnicodeCategory(int codePoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codePoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, codePoint);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetCategoryValue
uint8_t System::Globalization::CharUnicodeInfo::InternalGetCategoryValue(int ch, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalGetCategoryValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetCategoryValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, offset);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory
::System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory(::StringW value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory
::System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory(::StringW str, int index, ByRef<int> charLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::UnicodeCategory, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, index, byref(charLength));
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.IsWhiteSpace
bool System::Globalization::CharUnicodeInfo::IsWhiteSpace(::StringW s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.IsWhiteSpace
bool System::Globalization::CharUnicodeInfo::IsWhiteSpace(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.get_CategoryLevel1Index
::System::ReadOnlySpan_1<uint8_t> System::Globalization::CharUnicodeInfo::get_CategoryLevel1Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::get_CategoryLevel1Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "get_CategoryLevel1Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.get_CategoryLevel2Index
::System::ReadOnlySpan_1<uint8_t> System::Globalization::CharUnicodeInfo::get_CategoryLevel2Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::get_CategoryLevel2Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "get_CategoryLevel2Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.get_CategoryLevel3Index
::System::ReadOnlySpan_1<uint8_t> System::Globalization::CharUnicodeInfo::get_CategoryLevel3Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::get_CategoryLevel3Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "get_CategoryLevel3Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.get_CategoriesValue
::System::ReadOnlySpan_1<uint8_t> System::Globalization::CharUnicodeInfo::get_CategoriesValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CharUnicodeInfo::get_CategoriesValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "get_CategoriesValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.SortVersion
#include "System/Globalization/SortVersion.hpp"
// Including type: System.Globalization.ISimpleCollator
#include "System/Globalization/ISimpleCollator.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
::System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidIndexMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_ValidIndexMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidIndexMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidIndexMaskOffFlags(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_ValidIndexMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidIndexMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
::System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidCompareMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_ValidCompareMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidCompareMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidCompareMaskOffFlags(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_ValidCompareMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidCompareMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
::System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidHashCodeOfStringMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_ValidHashCodeOfStringMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidHashCodeOfStringMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidHashCodeOfStringMaskOffFlags(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_ValidHashCodeOfStringMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidHashCodeOfStringMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidSortkeyCtorMaskOffFlags
::System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidSortkeyCtorMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_ValidSortkeyCtorMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidSortkeyCtorMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidSortkeyCtorMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidSortkeyCtorMaskOffFlags(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_ValidSortkeyCtorMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidSortkeyCtorMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Globalization.CompareInfo Invariant
::System::Globalization::CompareInfo* System::Globalization::CompareInfo::_get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareInfo*>("System.Globalization", "CompareInfo", "Invariant"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Globalization.CompareInfo Invariant
void System::Globalization::CompareInfo::_set_Invariant(::System::Globalization::CompareInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "Invariant", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.ISimpleCollator> collators
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::ISimpleCollator*>* System::Globalization::CompareInfo::_get_collators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_collators");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::ISimpleCollator*>*>("System.Globalization", "CompareInfo", "collators")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.ISimpleCollator> collators
void System::Globalization::CompareInfo::_set_collators(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::ISimpleCollator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_collators");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "collators", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean managedCollation
bool System::Globalization::CompareInfo::_get_managedCollation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_managedCollation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CompareInfo", "managedCollation"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean managedCollation
void System::Globalization::CompareInfo::_set_managedCollation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_managedCollation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "managedCollation", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean managedCollationChecked
bool System::Globalization::CompareInfo::_get_managedCollationChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_get_managedCollationChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CompareInfo", "managedCollationChecked"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean managedCollationChecked
void System::Globalization::CompareInfo::_set_managedCollationChecked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::_set_managedCollationChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "managedCollationChecked", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CompareInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _sortName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CompareInfo::dyn__sortName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn__sortName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.SortVersion m_SortVersion
[[deprecated("Use field access instead!")]] ::System::Globalization::SortVersion*& System::Globalization::CompareInfo::dyn_m_SortVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn_m_SortVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SortVersion"))->offset;
  return *reinterpret_cast<::System::Globalization::SortVersion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 culture
[[deprecated("Use field access instead!")]] int& System::Globalization::CompareInfo::dyn_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn_culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "culture"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.ISimpleCollator collator
[[deprecated("Use field access instead!")]] ::System::Globalization::ISimpleCollator*& System::Globalization::CompareInfo::dyn_collator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::dyn_collator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collator"))->offset;
  return *reinterpret_cast<::System::Globalization::ISimpleCollator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CompareInfo.InvariantIndexOf
int System::Globalization::CompareInfo::InvariantIndexOf(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::InvariantIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "InvariantIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value, startIndex, count, ignoreCase);
}
// Autogenerated method: System.Globalization.CompareInfo.InvariantIndexOf
int System::Globalization::CompareInfo::InvariantIndexOf(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> value, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::InvariantIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "InvariantIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value, ignoreCase);
}
// Autogenerated method: System.Globalization.CompareInfo.InvariantLastIndexOf
int System::Globalization::CompareInfo::InvariantLastIndexOf(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::InvariantLastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "InvariantLastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value, startIndex, count, ignoreCase);
}
// Autogenerated method: System.Globalization.CompareInfo.InvariantFindString
int System::Globalization::CompareInfo::InvariantFindString(::Il2CppChar* source, int sourceCount, ::Il2CppChar* value, int valueCount, bool ignoreCase, bool start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::InvariantFindString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "InvariantFindString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sourceCount), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(valueCount), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, sourceCount, value, valueCount, ignoreCase, start);
}
// Autogenerated method: System.Globalization.CompareInfo.InvariantToUpper
::Il2CppChar System::Globalization::CompareInfo::InvariantToUpper(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::InvariantToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "InvariantToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.CompareInfo.InvariantCreateSortKey
::System::Globalization::SortKey* System::Globalization::CompareInfo::InvariantCreateSortKey(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::InvariantCreateSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvariantCreateSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetCompareInfo
::System::Globalization::CompareInfo* System::Globalization::CompareInfo::GetCompareInfo(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetCompareInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "GetCompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CompareInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserializing
void System::Globalization::CompareInfo::OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Globalization::CompareInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserialized
void System::Globalization::CompareInfo::OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserialized
void System::Globalization::CompareInfo::OnDeserialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.OnSerializing
void System::Globalization::CompareInfo::OnSerializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.get_Name
::StringW System::Globalization::CompareInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare(::StringW string1, ::StringW string2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, string1, string2);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare(::StringW string1, ::StringW string2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, string1, string2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare(::System::ReadOnlySpan_1<::Il2CppChar> string1, ::StringW string2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(string2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, string1, string2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.CompareOptionIgnoreCase
int System::Globalization::CompareInfo::CompareOptionIgnoreCase(::System::ReadOnlySpan_1<::Il2CppChar> string1, ::System::ReadOnlySpan_1<::Il2CppChar> string2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CompareOptionIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareOptionIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(string2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, string1, string2);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare(::StringW string1, int offset1, int length1, ::StringW string2, int offset2, int length2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, string1, offset1, length1, string2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.CompareOrdinalIgnoreCase
int System::Globalization::CompareInfo::CompareOrdinalIgnoreCase(::StringW strA, int indexA, int lengthA, ::StringW strB, int indexB, int lengthB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CompareOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "CompareOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(lengthA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(lengthB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, lengthA, strB, indexB, lengthB);
}
// Autogenerated method: System.Globalization.CompareInfo.CompareOrdinalIgnoreCase
int System::Globalization::CompareInfo::CompareOrdinalIgnoreCase(::System::ReadOnlySpan_1<::Il2CppChar> strA, ::System::ReadOnlySpan_1<::Il2CppChar> strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CompareOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "CompareOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.Globalization.CompareInfo.IsPrefix
bool System::Globalization::CompareInfo::IsPrefix(::StringW source, ::StringW prefix, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IsPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, prefix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IsPrefix
bool System::Globalization::CompareInfo::IsPrefix(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> prefix, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IsPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, prefix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IsSuffix
bool System::Globalization::CompareInfo::IsSuffix(::StringW source, ::StringW suffix, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IsSuffix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, suffix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IsSuffix
bool System::Globalization::CompareInfo::IsSuffix(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> suffix, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IsSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(suffix), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, suffix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOf
int System::Globalization::CompareInfo::IndexOf(::StringW source, ::StringW value, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOf
int System::Globalization::CompareInfo::IndexOf(::StringW source, ::StringW value, int startIndex, int count, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, startIndex, count, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOfOrdinal
int System::Globalization::CompareInfo::IndexOfOrdinal(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> value, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, ignoreCase);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOf
int System::Globalization::CompareInfo::IndexOf(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOf
int System::Globalization::CompareInfo::IndexOf(::StringW source, ::StringW value, int startIndex, int count, ::System::Globalization::CompareOptions options, int* matchLengthPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchLengthPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, startIndex, count, options, matchLengthPtr);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOfOrdinal
int System::Globalization::CompareInfo::IndexOfOrdinal(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, startIndex, count, ignoreCase);
}
// Autogenerated method: System.Globalization.CompareInfo.LastIndexOf
int System::Globalization::CompareInfo::LastIndexOf(::StringW source, ::StringW value, int startIndex, int count, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::LastIndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, startIndex, count, options);
}
// Autogenerated method: System.Globalization.CompareInfo.LastIndexOfOrdinal
int System::Globalization::CompareInfo::LastIndexOfOrdinal(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::LastIndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, startIndex, count, ignoreCase);
}
// Autogenerated method: System.Globalization.CompareInfo.GetSortKey
::System::Globalization::SortKey* System::Globalization::CompareInfo::GetSortKey(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetSortKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetIgnoreCaseHash
int System::Globalization::CompareInfo::GetIgnoreCaseHash(::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetIgnoreCaseHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "GetIgnoreCaseHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCodeOfString
int System::Globalization::CompareInfo::GetHashCodeOfString(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCode
int System::Globalization::CompareInfo::GetHashCode(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CompareInfo*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.get_UseManagedCollation
bool System::Globalization::CompareInfo::get_UseManagedCollation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::get_UseManagedCollation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "get_UseManagedCollation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.GetCollator
::System::Globalization::ISimpleCollator* System::Globalization::CompareInfo::GetCollator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetCollator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCollator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::ISimpleCollator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.CreateSortKeyCore
::System::Globalization::SortKey* System::Globalization::CompareInfo::CreateSortKeyCore(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CreateSortKeyCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSortKeyCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index_switch
int System::Globalization::CompareInfo::internal_index_switch(::StringW s1, int sindex, int count, ::StringW s2, ::System::Globalization::CompareOptions opt, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_index_switch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_index_switch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(sindex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(opt), ::il2cpp_utils::ExtractType(first)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, sindex, count, s2, opt, first);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare_switch
int System::Globalization::CompareInfo::internal_compare_switch(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_compare_switch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_compare_switch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare_managed
int System::Globalization::CompareInfo::internal_compare_managed(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_compare_managed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_compare_managed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index_managed
int System::Globalization::CompareInfo::internal_index_managed(::StringW s1, int sindex, int count, ::StringW s2, ::System::Globalization::CompareOptions opt, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_index_managed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_index_managed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(sindex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(opt), ::il2cpp_utils::ExtractType(first)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, sindex, count, s2, opt, first);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare_icall
int System::Globalization::CompareInfo::internal_compare_icall(::Il2CppChar* str1, int length1, ::Il2CppChar* str2, int length2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_compare_icall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "internal_compare_icall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str1, length1, str2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare
int System::Globalization::CompareInfo::internal_compare(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "internal_compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index_icall
int System::Globalization::CompareInfo::internal_index_icall(::Il2CppChar* source, int sindex, int count, ::Il2CppChar* value, int value_length, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_index_icall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "internal_index_icall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sindex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(value_length), ::il2cpp_utils::ExtractType(first)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, sindex, count, value, value_length, first);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index
int System::Globalization::CompareInfo::internal_index(::StringW source, int sindex, int count, ::StringW value, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::internal_index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "internal_index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sindex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(first)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, sindex, count, value, first);
}
// Autogenerated method: System.Globalization.CompareInfo.InitSort
void System::Globalization::CompareInfo::InitSort(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::InitSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.Globalization.CompareInfo.CompareStringOrdinalIgnoreCase
int System::Globalization::CompareInfo::CompareStringOrdinalIgnoreCase(::Il2CppChar* pString1, int length1, ::Il2CppChar* pString2, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CompareStringOrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "CompareStringOrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pString1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(pString2), ::il2cpp_utils::ExtractType(length2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pString1, length1, pString2, length2);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOfOrdinalCore
int System::Globalization::CompareInfo::IndexOfOrdinalCore(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOfOrdinalCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "IndexOfOrdinalCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value, startIndex, count, ignoreCase);
}
// Autogenerated method: System.Globalization.CompareInfo.LastIndexOfOrdinalCore
int System::Globalization::CompareInfo::LastIndexOfOrdinalCore(::StringW source, ::StringW value, int startIndex, int count, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::LastIndexOfOrdinalCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "LastIndexOfOrdinalCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value, startIndex, count, ignoreCase);
}
// Autogenerated method: System.Globalization.CompareInfo.LastIndexOfCore
int System::Globalization::CompareInfo::LastIndexOfCore(::StringW source, ::StringW target, int startIndex, int count, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::LastIndexOfCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, target, startIndex, count, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOfCore
int System::Globalization::CompareInfo::IndexOfCore(::StringW source, ::StringW target, int startIndex, int count, ::System::Globalization::CompareOptions options, int* matchLengthPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOfCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchLengthPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, target, startIndex, count, options, matchLengthPtr);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOfCore
int System::Globalization::CompareInfo::IndexOfCore(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> target, ::System::Globalization::CompareOptions options, int* matchLengthPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOfCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchLengthPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, target, options, matchLengthPtr);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOfOrdinalCore
int System::Globalization::CompareInfo::IndexOfOrdinalCore(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> value, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::IndexOfOrdinalCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfOrdinalCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, value, ignoreCase);
}
// Autogenerated method: System.Globalization.CompareInfo.CompareString
int System::Globalization::CompareInfo::CompareString(::System::ReadOnlySpan_1<::Il2CppChar> string1, ::StringW string2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CompareString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(string2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, string1, string2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.CompareString
int System::Globalization::CompareInfo::CompareString(::System::ReadOnlySpan_1<::Il2CppChar> string1, ::System::ReadOnlySpan_1<::Il2CppChar> string2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CompareString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(string2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, string1, string2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.CreateSortKey
::System::Globalization::SortKey* System::Globalization::CompareInfo::CreateSortKey(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::CreateSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.StartsWith
bool System::Globalization::CompareInfo::StartsWith(::StringW source, ::StringW prefix, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, prefix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.StartsWith
bool System::Globalization::CompareInfo::StartsWith(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> prefix, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, prefix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.EndsWith
bool System::Globalization::CompareInfo::EndsWith(::StringW source, ::StringW suffix, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(suffix), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, suffix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.EndsWith
bool System::Globalization::CompareInfo::EndsWith(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::ReadOnlySpan_1<::Il2CppChar> suffix, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(suffix), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, suffix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCodeOfStringCore
int System::Globalization::CompareInfo::GetHashCodeOfStringCore(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetHashCodeOfStringCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCodeOfStringCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo..cctor
void System::Globalization::CompareInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.Equals
bool System::Globalization::CompareInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCode
int System::Globalization::CompareInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.ToString
::StringW System::Globalization::CompareInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions None
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions None
void System::Globalization::CompareOptions::_set_None(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreCase
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreCase
void System::Globalization::CompareOptions::_set_IgnoreCase(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreNonSpace
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreNonSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_IgnoreNonSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreNonSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreNonSpace
void System::Globalization::CompareOptions::_set_IgnoreNonSpace(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_IgnoreNonSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreNonSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreSymbols
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreSymbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_IgnoreSymbols");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreSymbols"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreSymbols
void System::Globalization::CompareOptions::_set_IgnoreSymbols(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_IgnoreSymbols");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreSymbols", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreKanaType
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreKanaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_IgnoreKanaType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreKanaType"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreKanaType
void System::Globalization::CompareOptions::_set_IgnoreKanaType(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_IgnoreKanaType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreKanaType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreWidth
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_IgnoreWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreWidth
void System::Globalization::CompareOptions::_set_IgnoreWidth(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_IgnoreWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions OrdinalIgnoreCase
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_OrdinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_OrdinalIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "OrdinalIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions OrdinalIgnoreCase
void System::Globalization::CompareOptions::_set_OrdinalIgnoreCase(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_OrdinalIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "OrdinalIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions StringSort
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_StringSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_StringSort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "StringSort"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions StringSort
void System::Globalization::CompareOptions::_set_StringSort(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_StringSort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "StringSort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions Ordinal
::System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_Ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_get_Ordinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "Ordinal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions Ordinal
void System::Globalization::CompareOptions::_set_Ordinal(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::_set_Ordinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "Ordinal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::CompareOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.CultureNotFoundException
#include "System/Globalization/CultureNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _invalidCultureName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureNotFoundException::dyn__invalidCultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::dyn__invalidCultureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invalidCultureName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> _invalidCultureId
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& System::Globalization::CultureNotFoundException::dyn__invalidCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::dyn__invalidCultureId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invalidCultureId"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_InvalidCultureId
::System::Nullable_1<int> System::Globalization::CultureNotFoundException::get_InvalidCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::get_InvalidCultureId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureNotFoundException*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_InvalidCultureName
::StringW System::Globalization::CultureNotFoundException::get_InvalidCultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::get_InvalidCultureName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureNotFoundException*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_DefaultMessage
::StringW System::Globalization::CultureNotFoundException::get_DefaultMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::get_DefaultMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureNotFoundException", "get_DefaultMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_FormatedInvalidCultureId
::StringW System::Globalization::CultureNotFoundException::get_FormatedInvalidCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::get_FormatedInvalidCultureId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatedInvalidCultureId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.GetObjectData
void System::Globalization::CultureNotFoundException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ArgumentException*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_Message
::StringW System::Globalization::CultureNotFoundException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureNotFoundException::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ArgumentException*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.CultureTypes
#include "System/Globalization/CultureTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.CultureTypes NeutralCultures
::System::Globalization::CultureTypes System::Globalization::CultureTypes::_get_NeutralCultures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_get_NeutralCultures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureTypes>("System.Globalization", "CultureTypes", "NeutralCultures"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CultureTypes NeutralCultures
void System::Globalization::CultureTypes::_set_NeutralCultures(::System::Globalization::CultureTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_set_NeutralCultures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureTypes", "NeutralCultures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CultureTypes SpecificCultures
::System::Globalization::CultureTypes System::Globalization::CultureTypes::_get_SpecificCultures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_get_SpecificCultures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureTypes>("System.Globalization", "CultureTypes", "SpecificCultures"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CultureTypes SpecificCultures
void System::Globalization::CultureTypes::_set_SpecificCultures(::System::Globalization::CultureTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_set_SpecificCultures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureTypes", "SpecificCultures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CultureTypes InstalledWin32Cultures
::System::Globalization::CultureTypes System::Globalization::CultureTypes::_get_InstalledWin32Cultures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_get_InstalledWin32Cultures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureTypes>("System.Globalization", "CultureTypes", "InstalledWin32Cultures"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CultureTypes InstalledWin32Cultures
void System::Globalization::CultureTypes::_set_InstalledWin32Cultures(::System::Globalization::CultureTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_set_InstalledWin32Cultures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureTypes", "InstalledWin32Cultures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CultureTypes AllCultures
::System::Globalization::CultureTypes System::Globalization::CultureTypes::_get_AllCultures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_get_AllCultures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureTypes>("System.Globalization", "CultureTypes", "AllCultures"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CultureTypes AllCultures
void System::Globalization::CultureTypes::_set_AllCultures(::System::Globalization::CultureTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_set_AllCultures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureTypes", "AllCultures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CultureTypes UserCustomCulture
::System::Globalization::CultureTypes System::Globalization::CultureTypes::_get_UserCustomCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_get_UserCustomCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureTypes>("System.Globalization", "CultureTypes", "UserCustomCulture"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CultureTypes UserCustomCulture
void System::Globalization::CultureTypes::_set_UserCustomCulture(::System::Globalization::CultureTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_set_UserCustomCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureTypes", "UserCustomCulture", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CultureTypes ReplacementCultures
::System::Globalization::CultureTypes System::Globalization::CultureTypes::_get_ReplacementCultures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_get_ReplacementCultures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureTypes>("System.Globalization", "CultureTypes", "ReplacementCultures"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CultureTypes ReplacementCultures
void System::Globalization::CultureTypes::_set_ReplacementCultures(::System::Globalization::CultureTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_set_ReplacementCultures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureTypes", "ReplacementCultures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CultureTypes WindowsOnlyCultures
::System::Globalization::CultureTypes System::Globalization::CultureTypes::_get_WindowsOnlyCultures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_get_WindowsOnlyCultures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureTypes>("System.Globalization", "CultureTypes", "WindowsOnlyCultures"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CultureTypes WindowsOnlyCultures
void System::Globalization::CultureTypes::_set_WindowsOnlyCultures(::System::Globalization::CultureTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_set_WindowsOnlyCultures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureTypes", "WindowsOnlyCultures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CultureTypes FrameworkCultures
::System::Globalization::CultureTypes System::Globalization::CultureTypes::_get_FrameworkCultures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_get_FrameworkCultures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureTypes>("System.Globalization", "CultureTypes", "FrameworkCultures"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CultureTypes FrameworkCultures
void System::Globalization::CultureTypes::_set_FrameworkCultures(::System::Globalization::CultureTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::_set_FrameworkCultures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureTypes", "FrameworkCultures", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.MonthNameStyles
#include "System/Globalization/MonthNameStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles Regular
::System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles Regular
void System::Globalization::MonthNameStyles::_set_Regular(::System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles Genitive
::System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_Genitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_get_Genitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "Genitive"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles Genitive
void System::Globalization::MonthNameStyles::_set_Genitive(::System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_set_Genitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "Genitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles LeapYear
::System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_LeapYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_get_LeapYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "LeapYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles LeapYear
void System::Globalization::MonthNameStyles::_set_LeapYear(::System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::_set_LeapYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "LeapYear", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::MonthNameStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::MonthNameStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeFormatFlags
#include "System/Globalization/DateTimeFormatFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags None
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags None
void System::Globalization::DateTimeFormatFlags::_set_None(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseGenitiveMonth
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseGenitiveMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseGenitiveMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseGenitiveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseGenitiveMonth
void System::Globalization::DateTimeFormatFlags::_set_UseGenitiveMonth(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseGenitiveMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseGenitiveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseLeapYearMonth
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseLeapYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseLeapYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseLeapYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseLeapYearMonth
void System::Globalization::DateTimeFormatFlags::_set_UseLeapYearMonth(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseLeapYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseLeapYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInMonthNames
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseSpacesInMonthNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseSpacesInMonthNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInMonthNames
void System::Globalization::DateTimeFormatFlags::_set_UseSpacesInMonthNames(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseSpacesInMonthNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseSpacesInMonthNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseHebrewRule
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseHebrewRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseHebrewRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseHebrewRule"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseHebrewRule
void System::Globalization::DateTimeFormatFlags::_set_UseHebrewRule(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseHebrewRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseHebrewRule", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInDayNames
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseSpacesInDayNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseSpacesInDayNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInDayNames
void System::Globalization::DateTimeFormatFlags::_set_UseSpacesInDayNames(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseSpacesInDayNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseSpacesInDayNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseDigitPrefixInTokens
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseDigitPrefixInTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_UseDigitPrefixInTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseDigitPrefixInTokens"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseDigitPrefixInTokens
void System::Globalization::DateTimeFormatFlags::_set_UseDigitPrefixInTokens(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_UseDigitPrefixInTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseDigitPrefixInTokens", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags NotInitialized
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_get_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags NotInitialized
void System::Globalization::DateTimeFormatFlags::_set_NotInitialized(::System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::_set_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "NotInitialized", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::DateTimeFormatFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.DateTimeFormatInfo/TokenHashValue
#include "System/Globalization/DateTimeFormatInfo_TokenHashValue.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.MonthNameStyles
#include "System/Globalization/MonthNameStyles.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
// Including type: System.__DTString
#include "System/__DTString.hpp"
// Including type: System.TokenType
#include "System/TokenType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo s_invariantInfo
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_s_invariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_s_invariantInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "s_invariantInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo s_invariantInfo
void System::Globalization::DateTimeFormatInfo::_set_s_invariantInfo(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_s_invariantInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_invariantInfo", value));
}
// Autogenerated static field getter
// Get static field: static private System.String rfc1123Pattern
::StringW System::Globalization::DateTimeFormatInfo::_get_rfc1123Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_rfc1123Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "rfc1123Pattern"));
}
// Autogenerated static field setter
// Set static field: static private System.String rfc1123Pattern
void System::Globalization::DateTimeFormatInfo::_set_rfc1123Pattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_rfc1123Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "rfc1123Pattern", value));
}
// Autogenerated static field getter
// Get static field: static private System.String sortableDateTimePattern
::StringW System::Globalization::DateTimeFormatInfo::_get_sortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_sortableDateTimePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "sortableDateTimePattern"));
}
// Autogenerated static field setter
// Set static field: static private System.String sortableDateTimePattern
void System::Globalization::DateTimeFormatInfo::_set_sortableDateTimePattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_sortableDateTimePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "sortableDateTimePattern", value));
}
// Autogenerated static field getter
// Get static field: static private System.String universalSortableDateTimePattern
::StringW System::Globalization::DateTimeFormatInfo::_get_universalSortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_universalSortableDateTimePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "universalSortableDateTimePattern"));
}
// Autogenerated static field setter
// Set static field: static private System.String universalSortableDateTimePattern
void System::Globalization::DateTimeFormatInfo::_set_universalSortableDateTimePattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_universalSortableDateTimePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "universalSortableDateTimePattern", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_ALL_DATETIMES_SIZE
int System::Globalization::DateTimeFormatInfo::_get_DEFAULT_ALL_DATETIMES_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_DEFAULT_ALL_DATETIMES_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "DEFAULT_ALL_DATETIMES_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_ALL_DATETIMES_SIZE
void System::Globalization::DateTimeFormatInfo::_set_DEFAULT_ALL_DATETIMES_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_DEFAULT_ALL_DATETIMES_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "DEFAULT_ALL_DATETIMES_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] s_monthSpaces
::ArrayW<::Il2CppChar> System::Globalization::DateTimeFormatInfo::_get_s_monthSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_s_monthSpaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "DateTimeFormatInfo", "s_monthSpaces"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] s_monthSpaces
void System::Globalization::DateTimeFormatInfo::_set_s_monthSpaces(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_s_monthSpaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_monthSpaces", value));
}
// Autogenerated static field getter
// Get static field: static System.String RoundtripFormat
::StringW System::Globalization::DateTimeFormatInfo::_get_RoundtripFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_RoundtripFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "RoundtripFormat"));
}
// Autogenerated static field setter
// Set static field: static System.String RoundtripFormat
void System::Globalization::DateTimeFormatInfo::_set_RoundtripFormat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_RoundtripFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "RoundtripFormat", value));
}
// Autogenerated static field getter
// Get static field: static System.String RoundtripDateTimeUnfixed
::StringW System::Globalization::DateTimeFormatInfo::_get_RoundtripDateTimeUnfixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_RoundtripDateTimeUnfixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "RoundtripDateTimeUnfixed"));
}
// Autogenerated static field setter
// Set static field: static System.String RoundtripDateTimeUnfixed
void System::Globalization::DateTimeFormatInfo::_set_RoundtripDateTimeUnfixed(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_RoundtripDateTimeUnfixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "RoundtripDateTimeUnfixed", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.DateTimeStyles InvalidDateTimeStyles
::System::Globalization::DateTimeStyles System::Globalization::DateTimeFormatInfo::_get_InvalidDateTimeStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_InvalidDateTimeStyles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeFormatInfo", "InvalidDateTimeStyles"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.DateTimeStyles InvalidDateTimeStyles
void System::Globalization::DateTimeFormatInfo::_set_InvalidDateTimeStyles(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_InvalidDateTimeStyles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "InvalidDateTimeStyles", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TOKEN_HASH_SIZE
int System::Globalization::DateTimeFormatInfo::_get_TOKEN_HASH_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_TOKEN_HASH_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "TOKEN_HASH_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TOKEN_HASH_SIZE
void System::Globalization::DateTimeFormatInfo::_set_TOKEN_HASH_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_TOKEN_HASH_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "TOKEN_HASH_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SECOND_PRIME
int System::Globalization::DateTimeFormatInfo::_get_SECOND_PRIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_SECOND_PRIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "SECOND_PRIME"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SECOND_PRIME
void System::Globalization::DateTimeFormatInfo::_set_SECOND_PRIME(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_SECOND_PRIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "SECOND_PRIME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String dateSeparatorOrTimeZoneOffset
::StringW System::Globalization::DateTimeFormatInfo::_get_dateSeparatorOrTimeZoneOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_dateSeparatorOrTimeZoneOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "dateSeparatorOrTimeZoneOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.String dateSeparatorOrTimeZoneOffset
void System::Globalization::DateTimeFormatInfo::_set_dateSeparatorOrTimeZoneOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_dateSeparatorOrTimeZoneOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "dateSeparatorOrTimeZoneOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.String invariantDateSeparator
::StringW System::Globalization::DateTimeFormatInfo::_get_invariantDateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_invariantDateSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "invariantDateSeparator"));
}
// Autogenerated static field setter
// Set static field: static private System.String invariantDateSeparator
void System::Globalization::DateTimeFormatInfo::_set_invariantDateSeparator(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_invariantDateSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantDateSeparator", value));
}
// Autogenerated static field getter
// Get static field: static private System.String invariantTimeSeparator
::StringW System::Globalization::DateTimeFormatInfo::_get_invariantTimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_invariantTimeSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "invariantTimeSeparator"));
}
// Autogenerated static field setter
// Set static field: static private System.String invariantTimeSeparator
void System::Globalization::DateTimeFormatInfo::_set_invariantTimeSeparator(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_invariantTimeSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantTimeSeparator", value));
}
// Autogenerated static field getter
// Get static field: static System.String IgnorablePeriod
::StringW System::Globalization::DateTimeFormatInfo::_get_IgnorablePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_IgnorablePeriod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "IgnorablePeriod"));
}
// Autogenerated static field setter
// Set static field: static System.String IgnorablePeriod
void System::Globalization::DateTimeFormatInfo::_set_IgnorablePeriod(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_IgnorablePeriod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "IgnorablePeriod", value));
}
// Autogenerated static field getter
// Get static field: static System.String IgnorableComma
::StringW System::Globalization::DateTimeFormatInfo::_get_IgnorableComma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_IgnorableComma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "IgnorableComma"));
}
// Autogenerated static field setter
// Set static field: static System.String IgnorableComma
void System::Globalization::DateTimeFormatInfo::_set_IgnorableComma(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_IgnorableComma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "IgnorableComma", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKYearSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKYearSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKYearSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKYearSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKYearSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKYearSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKYearSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKYearSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKMonthSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKMonthSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKMonthSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKMonthSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKMonthSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKMonthSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKMonthSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKMonthSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKDaySuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKDaySuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKDaySuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKDaySuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKDaySuff
void System::Globalization::DateTimeFormatInfo::_set_CJKDaySuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKDaySuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKDaySuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanYearSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanYearSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanYearSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanYearSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanYearSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanYearSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanYearSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanYearSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanMonthSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanMonthSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanMonthSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanMonthSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanMonthSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanMonthSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanMonthSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanMonthSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanDaySuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanDaySuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanDaySuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanDaySuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanDaySuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanDaySuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanDaySuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanDaySuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanHourSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanHourSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanHourSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanMinuteSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanMinuteSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanMinuteSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanMinuteSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanMinuteSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanMinuteSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanMinuteSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanMinuteSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanSecondSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanSecondSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanSecondSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanSecondSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanSecondSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanSecondSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanSecondSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanSecondSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKHourSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKHourSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKHourSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String ChineseHourSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_ChineseHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_ChineseHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "ChineseHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String ChineseHourSuff
void System::Globalization::DateTimeFormatInfo::_set_ChineseHourSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_ChineseHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "ChineseHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKMinuteSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKMinuteSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKMinuteSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKMinuteSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKMinuteSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKMinuteSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKMinuteSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKMinuteSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKSecondSuff
::StringW System::Globalization::DateTimeFormatInfo::_get_CJKSecondSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_CJKSecondSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "CJKSecondSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKSecondSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKSecondSuff(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_CJKSecondSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKSecondSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String JapaneseEraStart
::StringW System::Globalization::DateTimeFormatInfo::_get_JapaneseEraStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_JapaneseEraStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "JapaneseEraStart"));
}
// Autogenerated static field setter
// Set static field: static System.String JapaneseEraStart
void System::Globalization::DateTimeFormatInfo::_set_JapaneseEraStart(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_JapaneseEraStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "JapaneseEraStart", value));
}
// Autogenerated static field getter
// Get static field: static System.String LocalTimeMark
::StringW System::Globalization::DateTimeFormatInfo::_get_LocalTimeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_LocalTimeMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "LocalTimeMark"));
}
// Autogenerated static field setter
// Set static field: static System.String LocalTimeMark
void System::Globalization::DateTimeFormatInfo::_set_LocalTimeMark(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_LocalTimeMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "LocalTimeMark", value));
}
// Autogenerated static field getter
// Get static field: static System.String GMTName
::StringW System::Globalization::DateTimeFormatInfo::_get_GMTName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_GMTName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "GMTName"));
}
// Autogenerated static field setter
// Set static field: static System.String GMTName
void System::Globalization::DateTimeFormatInfo::_set_GMTName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_GMTName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "GMTName", value));
}
// Autogenerated static field getter
// Get static field: static System.String ZuluName
::StringW System::Globalization::DateTimeFormatInfo::_get_ZuluName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_ZuluName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "ZuluName"));
}
// Autogenerated static field setter
// Set static field: static System.String ZuluName
void System::Globalization::DateTimeFormatInfo::_set_ZuluName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_ZuluName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "ZuluName", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanLangName
::StringW System::Globalization::DateTimeFormatInfo::_get_KoreanLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_KoreanLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "KoreanLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanLangName
void System::Globalization::DateTimeFormatInfo::_set_KoreanLangName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_KoreanLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanLangName", value));
}
// Autogenerated static field getter
// Get static field: static System.String JapaneseLangName
::StringW System::Globalization::DateTimeFormatInfo::_get_JapaneseLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_JapaneseLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "JapaneseLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String JapaneseLangName
void System::Globalization::DateTimeFormatInfo::_set_JapaneseLangName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_JapaneseLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "JapaneseLangName", value));
}
// Autogenerated static field getter
// Get static field: static System.String EnglishLangName
::StringW System::Globalization::DateTimeFormatInfo::_get_EnglishLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_EnglishLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "DateTimeFormatInfo", "EnglishLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String EnglishLangName
void System::Globalization::DateTimeFormatInfo::_set_EnglishLangName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_EnglishLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "EnglishLangName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo s_jajpDTFI
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_s_jajpDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_s_jajpDTFI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "s_jajpDTFI"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo s_jajpDTFI
void System::Globalization::DateTimeFormatInfo::_set_s_jajpDTFI(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_s_jajpDTFI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_jajpDTFI", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo s_zhtwDTFI
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_s_zhtwDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_get_s_zhtwDTFI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "s_zhtwDTFI"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo s_zhtwDTFI
void System::Globalization::DateTimeFormatInfo::_set_s_zhtwDTFI(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::_set_s_zhtwDTFI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_zhtwDTFI", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureData _cultureData
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureData*& System::Globalization::DateTimeFormatInfo::dyn__cultureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn__cultureData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cultureData"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _langName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn__langName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn__langName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_langName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo _compareInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::Globalization::DateTimeFormatInfo::dyn__compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn__compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _cultureInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::Globalization::DateTimeFormatInfo::dyn__cultureInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn__cultureInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cultureInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String amDesignator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_amDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_amDesignator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amDesignator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String pmDesignator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_pmDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_pmDesignator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pmDesignator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String dateSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_dateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_dateSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String generalShortTimePattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_generalShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_generalShortTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "generalShortTimePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String generalLongTimePattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_generalLongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_generalLongTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "generalLongTimePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String timeSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_timeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_timeSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String monthDayPattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_monthDayPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_monthDayPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monthDayPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String dateTimeOffsetPattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_dateTimeOffsetPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_dateTimeOffsetPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTimeOffsetPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.Calendar calendar
[[deprecated("Use field access instead!")]] ::System::Globalization::Calendar*& System::Globalization::DateTimeFormatInfo::dyn_calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_calendar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendar"))->offset;
  return *reinterpret_cast<::System::Globalization::Calendar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 firstDayOfWeek
[[deprecated("Use field access instead!")]] int& System::Globalization::DateTimeFormatInfo::dyn_firstDayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_firstDayOfWeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstDayOfWeek"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 calendarWeekRule
[[deprecated("Use field access instead!")]] int& System::Globalization::DateTimeFormatInfo::dyn_calendarWeekRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_calendarWeekRule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendarWeekRule"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fullDateTimePattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_fullDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_fullDateTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullDateTimePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] abbreviatedDayNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_abbreviatedDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_abbreviatedDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbreviatedDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_superShortDayNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_superShortDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_superShortDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_superShortDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] dayNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_dayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_dayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] abbreviatedMonthNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_abbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_abbreviatedMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbreviatedMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] monthNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_monthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_monthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] genitiveMonthNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_genitiveMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_genitiveMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "genitiveMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_genitiveAbbreviatedMonthNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_genitiveAbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_genitiveAbbreviatedMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_genitiveAbbreviatedMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] leapYearMonthNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_leapYearMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_leapYearMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leapYearMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String longDatePattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_longDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_longDatePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "longDatePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String shortDatePattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_shortDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_shortDatePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shortDatePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String yearMonthPattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_yearMonthPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_yearMonthPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yearMonthPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String longTimePattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_longTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_longTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "longTimePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String shortTimePattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn_shortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_shortTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shortTimePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] allYearMonthPatterns
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_allYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_allYearMonthPatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allYearMonthPatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] allShortDatePatterns
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_allShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_allShortDatePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allShortDatePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] allLongDatePatterns
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_allLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_allLongDatePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allLongDatePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] allShortTimePatterns
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_allShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_allShortTimePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allShortTimePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] allLongTimePatterns
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_allLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_allLongTimePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allLongTimePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_eraNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_eraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_eraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_abbrevEraNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_abbrevEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_abbrevEnglishEraNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEnglishEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_abbrevEnglishEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CalendarId[] optionalCalendars
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Globalization::CalendarId>& System::Globalization::DateTimeFormatInfo::dyn_optionalCalendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_optionalCalendars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "optionalCalendars"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Globalization::CalendarId>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _isReadOnly
[[deprecated("Use field access instead!")]] bool& System::Globalization::DateTimeFormatInfo::dyn__isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn__isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.DateTimeFormatFlags formatFlags
[[deprecated("Use field access instead!")]] ::System::Globalization::DateTimeFormatFlags& System::Globalization::DateTimeFormatInfo::dyn_formatFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn_formatFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formatFlags"))->offset;
  return *reinterpret_cast<::System::Globalization::DateTimeFormatFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fullTimeSpanPositivePattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn__fullTimeSpanPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn__fullTimeSpanPositivePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullTimeSpanPositivePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fullTimeSpanNegativePattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::dyn__fullTimeSpanNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn__fullTimeSpanNegativePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullTimeSpanNegativePattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.DateTimeFormatInfo/TokenHashValue[] _dtfiTokenHash
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Globalization::DateTimeFormatInfo::TokenHashValue*>& System::Globalization::DateTimeFormatInfo::dyn__dtfiTokenHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::dyn__dtfiTokenHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dtfiTokenHash"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Globalization::DateTimeFormatInfo::TokenHashValue*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CultureName
::StringW System::Globalization::DateTimeFormatInfo::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_Culture
::System::Globalization::CultureInfo* System::Globalization::DateTimeFormatInfo::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LanguageName
::StringW System::Globalization::DateTimeFormatInfo::get_LanguageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_LanguageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LanguageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetAbbreviatedDayOfWeekNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedDayOfWeekNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedDayOfWeekNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetAbbreviatedDayOfWeekNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetAbbreviatedDayOfWeekNamesCore
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedDayOfWeekNamesCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedDayOfWeekNamesCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetAbbreviatedDayOfWeekNamesCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetDayOfWeekNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetDayOfWeekNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetDayOfWeekNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetDayOfWeekNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetDayOfWeekNamesCore
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetDayOfWeekNamesCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetDayOfWeekNamesCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetDayOfWeekNamesCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetAbbreviatedMonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetAbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetAbbreviatedMonthNamesCore
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedMonthNamesCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedMonthNamesCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetAbbreviatedMonthNamesCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetMonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetMonthNamesCore
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetMonthNamesCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetMonthNamesCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetMonthNamesCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InitializeOverridableProperties
void System::Globalization::DateTimeFormatInfo::InitializeOverridableProperties(::System::Globalization::CultureData* cultureData, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::InitializeOverridableProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeOverridableProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureData), ::il2cpp_utils::ExtractType(calendarId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cultureData, calendarId);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_InvariantInfo
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::get_InvariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_InvariantInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "get_InvariantInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CurrentInfo
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::get_CurrentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_CurrentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "get_CurrentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetInstance
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetInstance(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetFormat
::Il2CppObject* System::Globalization::DateTimeFormatInfo::GetFormat(::System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::DateTimeFormatInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.Clone
::Il2CppObject* System::Globalization::DateTimeFormatInfo::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::DateTimeFormatInfo*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AMDesignator
::StringW System::Globalization::DateTimeFormatInfo::get_AMDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AMDesignator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AMDesignator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_Calendar
::System::Globalization::Calendar* System::Globalization::DateTimeFormatInfo::get_Calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_Calendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Calendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_Calendar
void System::Globalization::DateTimeFormatInfo::set_Calendar(::System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::set_Calendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Calendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_OptionalCalendars
::ArrayW<::System::Globalization::CalendarId> System::Globalization::DateTimeFormatInfo::get_OptionalCalendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_OptionalCalendars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OptionalCalendars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::CalendarId>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_EraNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_EraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_EraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetEraName
::StringW System::Globalization::DateTimeFormatInfo::GetEraName(int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetEraName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEraName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, era);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedEraNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AbbreviatedEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AbbreviatedEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName
::StringW System::Globalization::DateTimeFormatInfo::GetAbbreviatedEraName(int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetAbbreviatedEraName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbbreviatedEraName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, era);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedEnglishEraNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AbbreviatedEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AbbreviatedEnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedEnglishEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DateSeparator
::StringW System::Globalization::DateTimeFormatInfo::get_DateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_DateSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullDateTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_FullDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_FullDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullDateTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LongDatePattern
::StringW System::Globalization::DateTimeFormatInfo::get_LongDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_LongDatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongDatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LongTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_LongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_LongTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthDayPattern
::StringW System::Globalization::DateTimeFormatInfo::get_MonthDayPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_MonthDayPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonthDayPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_PMDesignator
::StringW System::Globalization::DateTimeFormatInfo::get_PMDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_PMDesignator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PMDesignator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_RFC1123Pattern
::StringW System::Globalization::DateTimeFormatInfo::get_RFC1123Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_RFC1123Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RFC1123Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_ShortDatePattern
::StringW System::Globalization::DateTimeFormatInfo::get_ShortDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_ShortDatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShortDatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_ShortTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_ShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_ShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShortTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_SortableDateTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_SortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_SortableDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortableDateTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_GeneralShortTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_GeneralShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_GeneralShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GeneralShortTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_GeneralLongTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_GeneralLongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_GeneralLongTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GeneralLongTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DateTimeOffsetPattern
::StringW System::Globalization::DateTimeFormatInfo::get_DateTimeOffsetPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_DateTimeOffsetPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeOffsetPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_TimeSeparator
::StringW System::Globalization::DateTimeFormatInfo::get_TimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_TimeSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UniversalSortableDateTimePattern
::StringW System::Globalization::DateTimeFormatInfo::get_UniversalSortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UniversalSortableDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UniversalSortableDateTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_YearMonthPattern
::StringW System::Globalization::DateTimeFormatInfo::get_YearMonthPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_YearMonthPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_YearMonthPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedDayNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AbbreviatedDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AbbreviatedDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DayNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_DayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_DayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedMonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_MonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_MonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasSpacesInMonthNames
bool System::Globalization::DateTimeFormatInfo::get_HasSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_HasSpacesInMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSpacesInMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasSpacesInDayNames
bool System::Globalization::DateTimeFormatInfo::get_HasSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_HasSpacesInDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSpacesInDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetMonthName
::StringW System::Globalization::DateTimeFormatInfo::internalGetMonthName(int month, ::System::Globalization::MonthNameStyles style, bool abbreviated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(abbreviated)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, month, style, abbreviated);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetGenitiveMonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetGenitiveMonthNames(bool abbreviated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetGenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetGenitiveMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(abbreviated)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, abbreviated);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetLeapYearMonthNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::internalGetLeapYearMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::internalGetLeapYearMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetLeapYearMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName
::StringW System::Globalization::DateTimeFormatInfo::GetAbbreviatedDayName(::System::DayOfWeek dayofweek) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetAbbreviatedDayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbbreviatedDayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayofweek)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, dayofweek);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetCombinedPatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::GetCombinedPatterns(::ArrayW<::StringW> patterns1, ::ArrayW<::StringW> patterns2, ::StringW connectString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetCombinedPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetCombinedPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patterns1), ::il2cpp_utils::ExtractType(patterns2), ::il2cpp_utils::ExtractType(connectString)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, patterns1, patterns2, connectString);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::GetAllDateTimePatterns(::Il2CppChar format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetAllDateTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllDateTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetDayName
::StringW System::Globalization::DateTimeFormatInfo::GetDayName(::System::DayOfWeek dayofweek) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetDayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayofweek)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, dayofweek);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName
::StringW System::Globalization::DateTimeFormatInfo::GetAbbreviatedMonthName(int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetAbbreviatedMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbbreviatedMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, month);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetMonthName
::StringW System::Globalization::DateTimeFormatInfo::GetMonthName(int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, month);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetMergedPatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::GetMergedPatterns(::ArrayW<::StringW> patterns, ::StringW defaultPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetMergedPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetMergedPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patterns), ::il2cpp_utils::ExtractType(defaultPattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, patterns, defaultPattern);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllYearMonthPatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AllYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AllYearMonthPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllYearMonthPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllShortDatePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AllShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AllShortDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllShortDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllShortTimePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AllShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AllShortTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllShortTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllLongDatePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AllLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AllLongDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllLongDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllLongTimePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_AllLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_AllLongTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllLongTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedYearMonthPatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_UnclonedYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UnclonedYearMonthPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedYearMonthPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedShortDatePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_UnclonedShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UnclonedShortDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedShortDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedLongDatePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_UnclonedLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UnclonedLongDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedLongDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedShortTimePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_UnclonedShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UnclonedShortTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedShortTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedLongTimePatterns
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_UnclonedLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_UnclonedLongTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedLongTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.ReadOnly
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::ReadOnly(::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dtfi);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_IsReadOnly
bool System::Globalization::DateTimeFormatInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthGenitiveNames
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfo::get_MonthGenitiveNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_MonthGenitiveNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonthGenitiveNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullTimeSpanPositivePattern
::StringW System::Globalization::DateTimeFormatInfo::get_FullTimeSpanPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_FullTimeSpanPositivePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullTimeSpanPositivePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullTimeSpanNegativePattern
::StringW System::Globalization::DateTimeFormatInfo::get_FullTimeSpanNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_FullTimeSpanNegativePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullTimeSpanNegativePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CompareInfo
::System::Globalization::CompareInfo* System::Globalization::DateTimeFormatInfo::get_CompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_CompareInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CompareInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.ValidateStyles
void System::Globalization::DateTimeFormatInfo::ValidateStyles(::System::Globalization::DateTimeStyles style, ::StringW parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::ValidateStyles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "ValidateStyles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(parameterName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, style, parameterName);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FormatFlags
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatInfo::get_FormatFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_FormatFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InitializeFormatFlags
::System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatInfo::InitializeFormatFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::InitializeFormatFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFormatFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasForceTwoDigitYears
bool System::Globalization::DateTimeFormatInfo::get_HasForceTwoDigitYears() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_HasForceTwoDigitYears");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasForceTwoDigitYears", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasYearMonthAdjustment
bool System::Globalization::DateTimeFormatInfo::get_HasYearMonthAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::get_HasYearMonthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasYearMonthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.YearMonthAdjustment
bool System::Globalization::DateTimeFormatInfo::YearMonthAdjustment(ByRef<int> year, ByRef<int> month, bool parsedMonthName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::YearMonthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "YearMonthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(parsedMonthName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(year), byref(month), parsedMonthName);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetJapaneseCalendarDTFI
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetJapaneseCalendarDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetJapaneseCalendarDTFI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetJapaneseCalendarDTFI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetTaiwanCalendarDTFI
::System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetTaiwanCalendarDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::GetTaiwanCalendarDTFI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetTaiwanCalendarDTFI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.ClearTokenHashTable
void System::Globalization::DateTimeFormatInfo::ClearTokenHashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::ClearTokenHashTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTokenHashTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.CreateTokenHashTable
::ArrayW<::System::Globalization::DateTimeFormatInfo::TokenHashValue*> System::Globalization::DateTimeFormatInfo::CreateTokenHashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::CreateTokenHashTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTokenHashTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::DateTimeFormatInfo::TokenHashValue*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.PopulateSpecialTokenHashTable
void System::Globalization::DateTimeFormatInfo::PopulateSpecialTokenHashTable(::ArrayW<::System::Globalization::DateTimeFormatInfo::TokenHashValue*> temp, ByRef<bool> useDateSepAsIgnorableSymbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::PopulateSpecialTokenHashTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateSpecialTokenHashTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(temp), ::il2cpp_utils::ExtractType(useDateSepAsIgnorableSymbol)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, temp, byref(useDateSepAsIgnorableSymbol));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.IsJapaneseCalendar
bool System::Globalization::DateTimeFormatInfo::IsJapaneseCalendar(::System::Globalization::Calendar* calendar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::IsJapaneseCalendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "IsJapaneseCalendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendar)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calendar);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.AddMonthNames
void System::Globalization::DateTimeFormatInfo::AddMonthNames(::ArrayW<::System::Globalization::DateTimeFormatInfo::TokenHashValue*> temp, ::StringW monthPostfix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::AddMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(temp), ::il2cpp_utils::ExtractType(monthPostfix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, temp, monthPostfix);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.TryParseHebrewNumber
bool System::Globalization::DateTimeFormatInfo::TryParseHebrewNumber(ByRef<::System::__DTString> str, ByRef<bool> badFormat, ByRef<int> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::TryParseHebrewNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "TryParseHebrewNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), byref(badFormat), byref(number));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.IsHebrewChar
bool System::Globalization::DateTimeFormatInfo::IsHebrewChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::IsHebrewChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "IsHebrewChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.IsAllowedJapaneseTokenFollowedByNonSpaceLetter
bool System::Globalization::DateTimeFormatInfo::IsAllowedJapaneseTokenFollowedByNonSpaceLetter(::StringW tokenString, ::Il2CppChar nextCh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::IsAllowedJapaneseTokenFollowedByNonSpaceLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAllowedJapaneseTokenFollowedByNonSpaceLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenString), ::il2cpp_utils::ExtractType(nextCh)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tokenString, nextCh);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.Tokenize
bool System::Globalization::DateTimeFormatInfo::Tokenize(::System::TokenType TokenMask, ByRef<::System::TokenType> tokenType, ByRef<int> tokenValue, ByRef<::System::__DTString> str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::Tokenize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tokenize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(TokenMask), ::il2cpp_utils::ExtractIndependentType<::System::TokenType&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, TokenMask, byref(tokenType), byref(tokenValue), byref(str));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InsertAtCurrentHashNode
void System::Globalization::DateTimeFormatInfo::InsertAtCurrentHashNode(::ArrayW<::System::Globalization::DateTimeFormatInfo::TokenHashValue*> hashTable, ::StringW str, ::Il2CppChar ch, ::System::TokenType tokenType, int tokenValue, int pos, int hashcode, int hashProbe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::InsertAtCurrentHashNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAtCurrentHashNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashTable), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(tokenType), ::il2cpp_utils::ExtractType(tokenValue), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(hashcode), ::il2cpp_utils::ExtractType(hashProbe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hashTable, str, ch, tokenType, tokenValue, pos, hashcode, hashProbe);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InsertHash
void System::Globalization::DateTimeFormatInfo::InsertHash(::ArrayW<::System::Globalization::DateTimeFormatInfo::TokenHashValue*> hashTable, ::StringW str, ::System::TokenType tokenType, int tokenValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::InsertHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashTable), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(tokenType), ::il2cpp_utils::ExtractType(tokenValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hashTable, str, tokenType, tokenValue);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.CompareStringIgnoreCaseOptimized
bool System::Globalization::DateTimeFormatInfo::CompareStringIgnoreCaseOptimized(::StringW string1, int offset1, int length1, ::StringW string2, int offset2, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::CompareStringIgnoreCaseOptimized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareStringIgnoreCaseOptimized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(string2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, string1, offset1, length1, string2, offset2, length2);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo..cctor
void System::Globalization::DateTimeFormatInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeFormatInfo/TokenHashValue
#include "System/Globalization/DateTimeFormatInfo_TokenHashValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String tokenString
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::DateTimeFormatInfo::TokenHashValue::dyn_tokenString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::TokenHashValue::dyn_tokenString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.TokenType tokenType
[[deprecated("Use field access instead!")]] ::System::TokenType& System::Globalization::DateTimeFormatInfo::TokenHashValue::dyn_tokenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::TokenHashValue::dyn_tokenType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenType"))->offset;
  return *reinterpret_cast<::System::TokenType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 tokenValue
[[deprecated("Use field access instead!")]] int& System::Globalization::DateTimeFormatInfo::TokenHashValue::dyn_tokenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfo::TokenHashValue::dyn_tokenValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.FORMATFLAGS
#include "System/Globalization/FORMATFLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS None
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS None
void System::Globalization::FORMATFLAGS::_set_None(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseGenitiveMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseGenitiveMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseGenitiveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
void System::Globalization::FORMATFLAGS::_set_UseGenitiveMonth(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseGenitiveMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseGenitiveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseLeapYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseLeapYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseLeapYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
void System::Globalization::FORMATFLAGS::_set_UseLeapYearMonth(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseLeapYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseLeapYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseSpacesInMonthNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseSpacesInMonthNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
void System::Globalization::FORMATFLAGS::_set_UseSpacesInMonthNames(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseSpacesInMonthNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseSpacesInMonthNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseHebrewParsing
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseHebrewParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseHebrewParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseHebrewParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseHebrewParsing
void System::Globalization::FORMATFLAGS::_set_UseHebrewParsing(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseHebrewParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseHebrewParsing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseSpacesInDayNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseSpacesInDayNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
void System::Globalization::FORMATFLAGS::_set_UseSpacesInDayNames(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseSpacesInDayNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseSpacesInDayNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
::System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseDigitPrefixInTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_get_UseDigitPrefixInTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseDigitPrefixInTokens"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
void System::Globalization::FORMATFLAGS::_set_UseDigitPrefixInTokens(::System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::_set_UseDigitPrefixInTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseDigitPrefixInTokens", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::FORMATFLAGS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FORMATFLAGS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.CalendarId
#include "System/Globalization/CalendarId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId UNINITIALIZED_VALUE
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_UNINITIALIZED_VALUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_UNINITIALIZED_VALUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "UNINITIALIZED_VALUE"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId UNINITIALIZED_VALUE
void System::Globalization::CalendarId::_set_UNINITIALIZED_VALUE(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_UNINITIALIZED_VALUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "UNINITIALIZED_VALUE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN
void System::Globalization::CalendarId::_set_GREGORIAN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_US
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_US() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN_US");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_US"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_US
void System::Globalization::CalendarId::_set_GREGORIAN_US(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN_US");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_US", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JAPAN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_JAPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_JAPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JAPAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JAPAN
void System::Globalization::CalendarId::_set_JAPAN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_JAPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JAPAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId TAIWAN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_TAIWAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_TAIWAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "TAIWAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId TAIWAN
void System::Globalization::CalendarId::_set_TAIWAN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_TAIWAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "TAIWAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId KOREA
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_KOREA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_KOREA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "KOREA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId KOREA
void System::Globalization::CalendarId::_set_KOREA(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_KOREA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "KOREA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId HIJRI
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_HIJRI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_HIJRI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "HIJRI"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId HIJRI
void System::Globalization::CalendarId::_set_HIJRI(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_HIJRI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "HIJRI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId THAI
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_THAI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_THAI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "THAI"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId THAI
void System::Globalization::CalendarId::_set_THAI(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_THAI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "THAI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId HEBREW
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_HEBREW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_HEBREW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "HEBREW"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId HEBREW
void System::Globalization::CalendarId::_set_HEBREW(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_HEBREW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "HEBREW", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_ME_FRENCH
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_ME_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN_ME_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_ME_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_ME_FRENCH
void System::Globalization::CalendarId::_set_GREGORIAN_ME_FRENCH(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN_ME_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_ME_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_ARABIC
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_ARABIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN_ARABIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_ARABIC"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_ARABIC
void System::Globalization::CalendarId::_set_GREGORIAN_ARABIC(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN_ARABIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_ARABIC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_ENGLISH
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_XLIT_ENGLISH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN_XLIT_ENGLISH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_XLIT_ENGLISH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_ENGLISH
void System::Globalization::CalendarId::_set_GREGORIAN_XLIT_ENGLISH(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN_XLIT_ENGLISH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_XLIT_ENGLISH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_FRENCH
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_XLIT_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_GREGORIAN_XLIT_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_XLIT_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_FRENCH
void System::Globalization::CalendarId::_set_GREGORIAN_XLIT_FRENCH(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_GREGORIAN_XLIT_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_XLIT_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JULIAN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_JULIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_JULIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JULIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JULIAN
void System::Globalization::CalendarId::_set_JULIAN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_JULIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JULIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JAPANESELUNISOLAR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_JAPANESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_JAPANESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JAPANESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JAPANESELUNISOLAR
void System::Globalization::CalendarId::_set_JAPANESELUNISOLAR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_JAPANESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JAPANESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId CHINESELUNISOLAR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_CHINESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_CHINESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "CHINESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId CHINESELUNISOLAR
void System::Globalization::CalendarId::_set_CHINESELUNISOLAR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_CHINESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "CHINESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId SAKA
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_SAKA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_SAKA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "SAKA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId SAKA
void System::Globalization::CalendarId::_set_SAKA(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_SAKA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "SAKA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_CHN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_CHN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_LUNAR_ETO_CHN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_CHN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_CHN
void System::Globalization::CalendarId::_set_LUNAR_ETO_CHN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_LUNAR_ETO_CHN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_CHN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_KOR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_KOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_LUNAR_ETO_KOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_KOR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_KOR
void System::Globalization::CalendarId::_set_LUNAR_ETO_KOR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_LUNAR_ETO_KOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_KOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_ROKUYOU
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_ROKUYOU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_LUNAR_ETO_ROKUYOU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_ROKUYOU"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_ROKUYOU
void System::Globalization::CalendarId::_set_LUNAR_ETO_ROKUYOU(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_LUNAR_ETO_ROKUYOU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_ROKUYOU", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId KOREANLUNISOLAR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_KOREANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_KOREANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "KOREANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId KOREANLUNISOLAR
void System::Globalization::CalendarId::_set_KOREANLUNISOLAR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_KOREANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "KOREANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId TAIWANLUNISOLAR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_TAIWANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_TAIWANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "TAIWANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId TAIWANLUNISOLAR
void System::Globalization::CalendarId::_set_TAIWANLUNISOLAR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_TAIWANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "TAIWANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId PERSIAN
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_PERSIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_PERSIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "PERSIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId PERSIAN
void System::Globalization::CalendarId::_set_PERSIAN(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_PERSIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "PERSIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId UMALQURA
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_UMALQURA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_UMALQURA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "UMALQURA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId UMALQURA
void System::Globalization::CalendarId::_set_UMALQURA(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_UMALQURA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "UMALQURA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LAST_CALENDAR
::System::Globalization::CalendarId System::Globalization::CalendarId::_get_LAST_CALENDAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_get_LAST_CALENDAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LAST_CALENDAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LAST_CALENDAR
void System::Globalization::CalendarId::_set_LAST_CALENDAR(::System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::_set_LAST_CALENDAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LAST_CALENDAR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated("Use field access instead!")]] uint16_t& System::Globalization::CalendarId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeFormatInfoScanner
#include "System/Globalization/DateTimeFormatInfoScanner.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.FORMATFLAGS
#include "System/Globalization/FORMATFLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> s_knownWords
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* System::Globalization::DateTimeFormatInfoScanner::_get_s_knownWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::_get_s_knownWords");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("System.Globalization", "DateTimeFormatInfoScanner", "s_knownWords")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> s_knownWords
void System::Globalization::DateTimeFormatInfoScanner::_set_s_knownWords(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::_set_s_knownWords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner", "s_knownWords", value));
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.String> m_dateWords
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Globalization::DateTimeFormatInfoScanner::dyn_m_dateWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::dyn_m_dateWords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dateWords"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern _ymdFlags
[[deprecated("Use field access instead!")]] ::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern& System::Globalization::DateTimeFormatInfoScanner::dyn__ymdFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::dyn__ymdFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ymdFlags"))->offset;
  return *reinterpret_cast<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.get_KnownWords
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* System::Globalization::DateTimeFormatInfoScanner::get_KnownWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::get_KnownWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "get_KnownWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.SkipWhiteSpacesAndNonLetter
int System::Globalization::DateTimeFormatInfoScanner::SkipWhiteSpacesAndNonLetter(::StringW pattern, int currentIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::SkipWhiteSpacesAndNonLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "SkipWhiteSpacesAndNonLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(currentIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pattern, currentIndex);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddDateWordOrPostfix
void System::Globalization::DateTimeFormatInfoScanner::AddDateWordOrPostfix(::StringW formatPostfix, ::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::AddDateWordOrPostfix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDateWordOrPostfix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatPostfix), ::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, formatPostfix, str);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddDateWords
int System::Globalization::DateTimeFormatInfoScanner::AddDateWords(::StringW pattern, int index, ::StringW formatPostfix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::AddDateWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDateWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(formatPostfix)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pattern, index, formatPostfix);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ScanRepeatChar
int System::Globalization::DateTimeFormatInfoScanner::ScanRepeatChar(::StringW pattern, ::Il2CppChar ch, int index, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::ScanRepeatChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ScanRepeatChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pattern, ch, index, byref(count));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddIgnorableSymbols
void System::Globalization::DateTimeFormatInfoScanner::AddIgnorableSymbols(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::AddIgnorableSymbols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddIgnorableSymbols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ScanDateWord
void System::Globalization::DateTimeFormatInfoScanner::ScanDateWord(::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::ScanDateWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDateWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetDateWordsOfDTFI
::ArrayW<::StringW> System::Globalization::DateTimeFormatInfoScanner::GetDateWordsOfDTFI(::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::GetDateWordsOfDTFI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDateWordsOfDTFI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, dtfi);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagGenitiveMonth
::System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagGenitiveMonth(::ArrayW<::StringW> monthNames, ::ArrayW<::StringW> genitveMonthNames, ::ArrayW<::StringW> abbrevMonthNames, ::ArrayW<::StringW> genetiveAbbrevMonthNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagGenitiveMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagGenitiveMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monthNames), ::il2cpp_utils::ExtractType(genitveMonthNames), ::il2cpp_utils::ExtractType(abbrevMonthNames), ::il2cpp_utils::ExtractType(genetiveAbbrevMonthNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, monthNames, genitveMonthNames, abbrevMonthNames, genetiveAbbrevMonthNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseSpaceInMonthNames
::System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInMonthNames(::ArrayW<::StringW> monthNames, ::ArrayW<::StringW> genitveMonthNames, ::ArrayW<::StringW> abbrevMonthNames, ::ArrayW<::StringW> genetiveAbbrevMonthNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseSpaceInMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monthNames), ::il2cpp_utils::ExtractType(genitveMonthNames), ::il2cpp_utils::ExtractType(abbrevMonthNames), ::il2cpp_utils::ExtractType(genetiveAbbrevMonthNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, monthNames, genitveMonthNames, abbrevMonthNames, genetiveAbbrevMonthNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseSpaceInDayNames
::System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInDayNames(::ArrayW<::StringW> dayNames, ::ArrayW<::StringW> abbrevDayNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseSpaceInDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayNames), ::il2cpp_utils::ExtractType(abbrevDayNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dayNames, abbrevDayNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseHebrewCalendar
::System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseHebrewCalendar(int calID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseHebrewCalendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseHebrewCalendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calID);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.EqualStringArrays
bool System::Globalization::DateTimeFormatInfoScanner::EqualStringArrays(::ArrayW<::StringW> array1, ::ArrayW<::StringW> array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::EqualStringArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "EqualStringArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array1, array2);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ArrayElementsHaveSpace
bool System::Globalization::DateTimeFormatInfoScanner::ArrayElementsHaveSpace(::ArrayW<::StringW> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::ArrayElementsHaveSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ArrayElementsHaveSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ArrayElementsBeginWithDigit
bool System::Globalization::DateTimeFormatInfoScanner::ArrayElementsBeginWithDigit(::ArrayW<::StringW> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::ArrayElementsBeginWithDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ArrayElementsBeginWithDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern
#include "System/Globalization/DateTimeFormatInfoScanner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern None
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern None
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_None(::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundYearPatternFlag
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYearPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYearPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYearPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundYearPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYearPatternFlag(::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYearPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYearPatternFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundMonthPatternFlag
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundMonthPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundMonthPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundMonthPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundMonthPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundMonthPatternFlag(::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundMonthPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundMonthPatternFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundDayPatternFlag
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundDayPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundDayPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundDayPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundDayPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundDayPatternFlag(::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundDayPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundDayPatternFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundYMDPatternFlag
::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYMDPatternFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_get_FoundYMDPatternFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern>("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYMDPatternFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatInfoScanner/FoundDatePattern FoundYMDPatternFlag
void System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYMDPatternFlag(::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::_set_FoundYMDPatternFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner/FoundDatePattern", "FoundYMDPatternFlag", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeStyles
#include "System/Globalization/DateTimeStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles None
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles None
void System::Globalization::DateTimeStyles::_set_None(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowLeadingWhite
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowLeadingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AllowLeadingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowLeadingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowLeadingWhite
void System::Globalization::DateTimeStyles::_set_AllowLeadingWhite(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AllowLeadingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowLeadingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowTrailingWhite
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowTrailingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AllowTrailingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowTrailingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowTrailingWhite
void System::Globalization::DateTimeStyles::_set_AllowTrailingWhite(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AllowTrailingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowTrailingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowInnerWhite
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowInnerWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AllowInnerWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowInnerWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowInnerWhite
void System::Globalization::DateTimeStyles::_set_AllowInnerWhite(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AllowInnerWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowInnerWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AllowWhiteSpaces
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AllowWhiteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AllowWhiteSpaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AllowWhiteSpaces"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AllowWhiteSpaces
void System::Globalization::DateTimeStyles::_set_AllowWhiteSpaces(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AllowWhiteSpaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AllowWhiteSpaces", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles NoCurrentDateDefault
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_NoCurrentDateDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_NoCurrentDateDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "NoCurrentDateDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles NoCurrentDateDefault
void System::Globalization::DateTimeStyles::_set_NoCurrentDateDefault(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_NoCurrentDateDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "NoCurrentDateDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AdjustToUniversal
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AdjustToUniversal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AdjustToUniversal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AdjustToUniversal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AdjustToUniversal
void System::Globalization::DateTimeStyles::_set_AdjustToUniversal(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AdjustToUniversal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AdjustToUniversal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AssumeLocal
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AssumeLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AssumeLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AssumeLocal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AssumeLocal
void System::Globalization::DateTimeStyles::_set_AssumeLocal(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AssumeLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AssumeLocal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles AssumeUniversal
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_AssumeUniversal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_AssumeUniversal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "AssumeUniversal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles AssumeUniversal
void System::Globalization::DateTimeStyles::_set_AssumeUniversal(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_AssumeUniversal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "AssumeUniversal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeStyles RoundtripKind
::System::Globalization::DateTimeStyles System::Globalization::DateTimeStyles::_get_RoundtripKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_get_RoundtripKind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeStyles", "RoundtripKind"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeStyles RoundtripKind
void System::Globalization::DateTimeStyles::_set_RoundtripKind(::System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::_set_RoundtripKind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeStyles", "RoundtripKind", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::DateTimeStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DateTimeStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.DaylightTimeStruct
#include "System/Globalization/DaylightTimeStruct.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime Start
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Globalization::DaylightTimeStruct::dyn_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DaylightTimeStruct::dyn_Start");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Start"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime End
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Globalization::DaylightTimeStruct::dyn_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DaylightTimeStruct::dyn_End");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "End"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.TimeSpan Delta
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::Globalization::DaylightTimeStruct::dyn_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::DaylightTimeStruct::dyn_Delta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delta"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.DaylightTimeStruct..ctor
// ABORTED elsewhere.  System::Globalization::DaylightTimeStruct::DaylightTimeStruct(::System::DateTime start, ::System::DateTime end, ::System::TimeSpan delta)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumberParsingContext
#include "System/Globalization/HebrewNumberParsingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Globalization.HebrewNumber/HS state
[[deprecated("Use field access instead!")]] ::System::Globalization::HebrewNumber::HS& System::Globalization::HebrewNumberParsingContext::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingContext::dyn_state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Globalization::HebrewNumber::HS*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 result
[[deprecated("Use field access instead!")]] int& System::Globalization::HebrewNumberParsingContext::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingContext::dyn_result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.HebrewNumberParsingContext..ctor
System::Globalization::HebrewNumberParsingContext::HebrewNumberParsingContext(int result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingContext::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumberParsingState
#include "System/Globalization/HebrewNumberParsingState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState InvalidHebrewNumber
::System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_InvalidHebrewNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_get_InvalidHebrewNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "InvalidHebrewNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState InvalidHebrewNumber
void System::Globalization::HebrewNumberParsingState::_set_InvalidHebrewNumber(::System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_set_InvalidHebrewNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "InvalidHebrewNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState NotHebrewDigit
::System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_NotHebrewDigit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_get_NotHebrewDigit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "NotHebrewDigit"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState NotHebrewDigit
void System::Globalization::HebrewNumberParsingState::_set_NotHebrewDigit(::System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_set_NotHebrewDigit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "NotHebrewDigit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState FoundEndOfHebrewNumber
::System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_FoundEndOfHebrewNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_get_FoundEndOfHebrewNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "FoundEndOfHebrewNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState FoundEndOfHebrewNumber
void System::Globalization::HebrewNumberParsingState::_set_FoundEndOfHebrewNumber(::System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_set_FoundEndOfHebrewNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "FoundEndOfHebrewNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumberParsingState ContinueParsing
::System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumberParsingState::_get_ContinueParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_get_ContinueParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumberParsingState>("System.Globalization", "HebrewNumberParsingState", "ContinueParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumberParsingState ContinueParsing
void System::Globalization::HebrewNumberParsingState::_set_ContinueParsing(::System::Globalization::HebrewNumberParsingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::_set_ContinueParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumberParsingState", "ContinueParsing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::HebrewNumberParsingState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumberParsingState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber
#include "System/Globalization/HebrewNumber.hpp"
// Including type: System.Globalization.HebrewNumberParsingContext
#include "System/Globalization/HebrewNumberParsingContext.hpp"
// Including type: System.Globalization.HebrewNumberParsingState
#include "System/Globalization/HebrewNumberParsingState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.HebrewNumber/HebrewValue[] s_hebrewValues
::ArrayW<::System::Globalization::HebrewNumber::HebrewValue> System::Globalization::HebrewNumber::_get_s_hebrewValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_get_s_hebrewValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::HebrewNumber::HebrewValue>>("System.Globalization", "HebrewNumber", "s_hebrewValues"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.HebrewNumber/HebrewValue[] s_hebrewValues
void System::Globalization::HebrewNumber::_set_s_hebrewValues(::ArrayW<::System::Globalization::HebrewNumber::HebrewValue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_set_s_hebrewValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber", "s_hebrewValues", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char s_maxHebrewNumberCh
::Il2CppChar System::Globalization::HebrewNumber::_get_s_maxHebrewNumberCh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_get_s_maxHebrewNumberCh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.Globalization", "HebrewNumber", "s_maxHebrewNumberCh"));
}
// Autogenerated static field setter
// Set static field: static private System.Char s_maxHebrewNumberCh
void System::Globalization::HebrewNumber::_set_s_maxHebrewNumberCh(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_set_s_maxHebrewNumberCh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber", "s_maxHebrewNumberCh", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.HebrewNumber/HS[] s_numberPasingState
::ArrayW<::System::Globalization::HebrewNumber::HS> System::Globalization::HebrewNumber::_get_s_numberPasingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_get_s_numberPasingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::HebrewNumber::HS>>("System.Globalization", "HebrewNumber", "s_numberPasingState"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.HebrewNumber/HS[] s_numberPasingState
void System::Globalization::HebrewNumber::_set_s_numberPasingState(::ArrayW<::System::Globalization::HebrewNumber::HS> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::_set_s_numberPasingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber", "s_numberPasingState", value));
}
// Autogenerated method: System.Globalization.HebrewNumber.ToString
::StringW System::Globalization::HebrewNumber::ToString(int Number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Number)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Number);
}
// Autogenerated method: System.Globalization.HebrewNumber.ParseByChar
::System::Globalization::HebrewNumberParsingState System::Globalization::HebrewNumber::ParseByChar(::Il2CppChar ch, ByRef<::System::Globalization::HebrewNumberParsingContext> context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::ParseByChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", "ParseByChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::HebrewNumberParsingState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, byref(context));
}
// Autogenerated method: System.Globalization.HebrewNumber.IsDigit
bool System::Globalization::HebrewNumber::IsDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.HebrewNumber..cctor
void System::Globalization::HebrewNumber::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HebrewNumber", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
