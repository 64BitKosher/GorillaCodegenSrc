// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber/HebrewToken
#include "System/Globalization/HebrewNumber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Invalid
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Invalid
void System::Globalization::HebrewNumber::HebrewToken::_set_Invalid(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit400
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit400() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit400");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit400"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit400
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit400(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit400");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit400", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit200_300
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit200_300() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit200_300");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit200_300"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit200_300
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit200_300(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit200_300");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit200_300", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit100
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit100() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit100");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit100"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit100
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit100(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit100");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit100", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit10
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit10"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit10
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit10(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit10", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit1
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit1"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit1
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit1(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit6_7
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit6_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit6_7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit6_7"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit6_7
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit6_7(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit6_7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit6_7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit7
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit7"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit7
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit7(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken Digit9
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_Digit9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_Digit9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "Digit9"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken Digit9
void System::Globalization::HebrewNumber::HebrewToken::_set_Digit9(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_Digit9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "Digit9", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken SingleQuote
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_SingleQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_SingleQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "SingleQuote"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken SingleQuote
void System::Globalization::HebrewNumber::HebrewToken::_set_SingleQuote(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_SingleQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "SingleQuote", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HebrewToken DoubleQuote
::System::Globalization::HebrewNumber::HebrewToken System::Globalization::HebrewNumber::HebrewToken::_get_DoubleQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_get_DoubleQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HebrewToken>("System.Globalization", "HebrewNumber/HebrewToken", "DoubleQuote"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HebrewToken DoubleQuote
void System::Globalization::HebrewNumber::HebrewToken::_set_DoubleQuote(::System::Globalization::HebrewNumber::HebrewToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::_set_DoubleQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HebrewToken", "DoubleQuote", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 value__
[[deprecated("Use field access instead!")]] int16_t& System::Globalization::HebrewNumber::HebrewToken::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewToken::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber/HebrewValue
#include "System/Globalization/HebrewNumber.hpp"
// Including type: System.Globalization.HebrewNumber/HebrewToken
// Already included the same include: System/Globalization/HebrewNumber.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Globalization.HebrewNumber/HebrewToken token
[[deprecated("Use field access instead!")]] ::System::Globalization::HebrewNumber::HebrewToken& System::Globalization::HebrewNumber::HebrewValue::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewValue::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Globalization::HebrewNumber::HebrewToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16 value
[[deprecated("Use field access instead!")]] int16_t& System::Globalization::HebrewNumber::HebrewValue::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HebrewValue::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.HebrewNumber/HebrewValue..ctor
// ABORTED elsewhere.  System::Globalization::HebrewNumber::HebrewValue::HebrewValue(::System::Globalization::HebrewNumber::HebrewToken token, int16_t value)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.HebrewNumber/HS
#include "System/Globalization/HebrewNumber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS _err
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get__err() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get__err");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "_err"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS _err
void System::Globalization::HebrewNumber::HS::_set__err(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set__err");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "_err", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS Start
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS Start
void System::Globalization::HebrewNumber::HS::_set_Start(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400
void System::Globalization::HebrewNumber::HS::_set_S400(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_400
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_400() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_400");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_400"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_400
void System::Globalization::HebrewNumber::HS::_set_S400_400(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_400");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_400", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_X00
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_X00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_X00");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_X00"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_X00
void System::Globalization::HebrewNumber::HS::_set_S400_X00(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_X00");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_X00", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_X0
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_X0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_X0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_X0"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_X0
void System::Globalization::HebrewNumber::HS::_set_S400_X0(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_X0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_X0", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X00_DQ
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X00_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X00_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X00_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X00_DQ
void System::Globalization::HebrewNumber::HS::_set_X00_DQ(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X00_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X00_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_X00_X0
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_X00_X0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_X00_X0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_X00_X0"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_X00_X0
void System::Globalization::HebrewNumber::HS::_set_S400_X00_X0(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_X00_X0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_X00_X0", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X0_DQ
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X0_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X0_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X0_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X0_DQ
void System::Globalization::HebrewNumber::HS::_set_X0_DQ(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X0_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X0_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X
void System::Globalization::HebrewNumber::HS::_set_X(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X0
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X0"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X0
void System::Globalization::HebrewNumber::HS::_set_X0(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X0", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X00
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X00");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X00"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X00
void System::Globalization::HebrewNumber::HS::_set_X00(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X00");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X00", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_DQ
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_DQ
void System::Globalization::HebrewNumber::HS::_set_S400_DQ(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_400_DQ
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_400_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_400_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_400_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_400_DQ
void System::Globalization::HebrewNumber::HS::_set_S400_400_DQ(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_400_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_400_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S400_400_100
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S400_400_100() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S400_400_100");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S400_400_100"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S400_400_100
void System::Globalization::HebrewNumber::HS::_set_S400_400_100(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S400_400_100");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S400_400_100", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S9
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S9"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S9
void System::Globalization::HebrewNumber::HS::_set_S9(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S9", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS X00_S9
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_X00_S9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_X00_S9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "X00_S9"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS X00_S9
void System::Globalization::HebrewNumber::HS::_set_X00_S9(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_X00_S9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "X00_S9", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS S9_DQ
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_S9_DQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_S9_DQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "S9_DQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS S9_DQ
void System::Globalization::HebrewNumber::HS::_set_S9_DQ(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_S9_DQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "S9_DQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.HebrewNumber/HS END
::System::Globalization::HebrewNumber::HS System::Globalization::HebrewNumber::HS::_get_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_get_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::HebrewNumber::HS>("System.Globalization", "HebrewNumber/HS", "END"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.HebrewNumber/HS END
void System::Globalization::HebrewNumber::HS::_set_END(::System::Globalization::HebrewNumber::HS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::_set_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HebrewNumber/HS", "END", value));
}
// Autogenerated instance field getter
// Get instance field: public System.SByte value__
[[deprecated("Use field access instead!")]] int8_t& System::Globalization::HebrewNumber::HS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HebrewNumber::HS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles None
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles None
void System::Globalization::NumberStyles::_set_None(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowLeadingWhite
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowLeadingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowLeadingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowLeadingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowLeadingWhite
void System::Globalization::NumberStyles::_set_AllowLeadingWhite(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowLeadingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowLeadingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowTrailingWhite
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowTrailingWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowTrailingWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowTrailingWhite"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowTrailingWhite
void System::Globalization::NumberStyles::_set_AllowTrailingWhite(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowTrailingWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowTrailingWhite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowLeadingSign
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowLeadingSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowLeadingSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowLeadingSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowLeadingSign
void System::Globalization::NumberStyles::_set_AllowLeadingSign(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowLeadingSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowLeadingSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowTrailingSign
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowTrailingSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowTrailingSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowTrailingSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowTrailingSign
void System::Globalization::NumberStyles::_set_AllowTrailingSign(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowTrailingSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowTrailingSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowParentheses
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowParentheses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowParentheses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowParentheses"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowParentheses
void System::Globalization::NumberStyles::_set_AllowParentheses(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowParentheses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowParentheses", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowDecimalPoint
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowDecimalPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowDecimalPoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowDecimalPoint"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowDecimalPoint
void System::Globalization::NumberStyles::_set_AllowDecimalPoint(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowDecimalPoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowDecimalPoint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowThousands
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowThousands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowThousands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowThousands"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowThousands
void System::Globalization::NumberStyles::_set_AllowThousands(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowThousands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowThousands", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowExponent
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowExponent"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowExponent
void System::Globalization::NumberStyles::_set_AllowExponent(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowExponent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowCurrencySymbol
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowCurrencySymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowCurrencySymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowCurrencySymbol
void System::Globalization::NumberStyles::_set_AllowCurrencySymbol(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowCurrencySymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowCurrencySymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles AllowHexSpecifier
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_AllowHexSpecifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_AllowHexSpecifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "AllowHexSpecifier"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles AllowHexSpecifier
void System::Globalization::NumberStyles::_set_AllowHexSpecifier(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_AllowHexSpecifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "AllowHexSpecifier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Integer
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Integer
void System::Globalization::NumberStyles::_set_Integer(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles HexNumber
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_HexNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_HexNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "HexNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles HexNumber
void System::Globalization::NumberStyles::_set_HexNumber(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_HexNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "HexNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Number
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Number"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Number
void System::Globalization::NumberStyles::_set_Number(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Float
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Float"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Float
void System::Globalization::NumberStyles::_set_Float(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Currency
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Currency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_Currency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Currency"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Currency
void System::Globalization::NumberStyles::_set_Currency(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_Currency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Currency", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.NumberStyles Any
::System::Globalization::NumberStyles System::Globalization::NumberStyles::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberStyles", "Any"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.NumberStyles Any
void System::Globalization::NumberStyles::_set_Any(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberStyles", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanFormat
#include "System/Globalization/TimeSpanFormat.hpp"
// Including type: System.Globalization.TimeSpanFormat/Pattern
#include "System/Globalization/TimeSpanFormat_Pattern.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Globalization.TimeSpanFormat/FormatLiterals PositiveInvariantFormatLiterals
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanFormat::_get_PositiveInvariantFormatLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::_get_PositiveInvariantFormatLiterals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanFormat::FormatLiterals>("System.Globalization", "TimeSpanFormat", "PositiveInvariantFormatLiterals"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Globalization.TimeSpanFormat/FormatLiterals PositiveInvariantFormatLiterals
void System::Globalization::TimeSpanFormat::_set_PositiveInvariantFormatLiterals(::System::Globalization::TimeSpanFormat::FormatLiterals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::_set_PositiveInvariantFormatLiterals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat", "PositiveInvariantFormatLiterals", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Globalization.TimeSpanFormat/FormatLiterals NegativeInvariantFormatLiterals
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanFormat::_get_NegativeInvariantFormatLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::_get_NegativeInvariantFormatLiterals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanFormat::FormatLiterals>("System.Globalization", "TimeSpanFormat", "NegativeInvariantFormatLiterals"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Globalization.TimeSpanFormat/FormatLiterals NegativeInvariantFormatLiterals
void System::Globalization::TimeSpanFormat::_set_NegativeInvariantFormatLiterals(::System::Globalization::TimeSpanFormat::FormatLiterals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::_set_NegativeInvariantFormatLiterals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat", "NegativeInvariantFormatLiterals", value));
}
// Autogenerated method: System.Globalization.TimeSpanFormat.AppendNonNegativeInt32
void System::Globalization::TimeSpanFormat::AppendNonNegativeInt32(::System::Text::StringBuilder* sb, int n, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::AppendNonNegativeInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "AppendNonNegativeInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, n, digits);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.Format
::StringW System::Globalization::TimeSpanFormat::Format(::System::TimeSpan value, ::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, formatProvider);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.TryFormat
bool System::Globalization::TimeSpanFormat::TryFormat(::System::TimeSpan value, ::System::Span_1<::Il2CppChar> destination, ByRef<int> charsWritten, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::TryFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "TryFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, destination, byref(charsWritten), format, formatProvider);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.FormatToBuilder
::System::Text::StringBuilder* System::Globalization::TimeSpanFormat::FormatToBuilder(::System::TimeSpan value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatToBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "FormatToBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, formatProvider);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.FormatStandard
::System::Text::StringBuilder* System::Globalization::TimeSpanFormat::FormatStandard(::System::TimeSpan value, bool isInvariant, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::TimeSpanFormat::Pattern pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatStandard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "FormatStandard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(isInvariant), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, isInvariant, format, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanFormat.FormatCustomized
::System::Text::StringBuilder* System::Globalization::TimeSpanFormat::FormatCustomized(::System::TimeSpan value, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatCustomized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", "FormatCustomized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dtfi), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, dtfi, result);
}
// Autogenerated method: System.Globalization.TimeSpanFormat..cctor
void System::Globalization::TimeSpanFormat::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanFormat/Pattern
#include "System/Globalization/TimeSpanFormat_Pattern.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanFormat/Pattern None
::System::Globalization::TimeSpanFormat::Pattern System::Globalization::TimeSpanFormat::Pattern::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanFormat::Pattern>("System.Globalization", "TimeSpanFormat/Pattern", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanFormat/Pattern None
void System::Globalization::TimeSpanFormat::Pattern::_set_None(::System::Globalization::TimeSpanFormat::Pattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat/Pattern", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanFormat/Pattern Minimum
::System::Globalization::TimeSpanFormat::Pattern System::Globalization::TimeSpanFormat::Pattern::_get_Minimum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_get_Minimum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanFormat::Pattern>("System.Globalization", "TimeSpanFormat/Pattern", "Minimum"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanFormat/Pattern Minimum
void System::Globalization::TimeSpanFormat::Pattern::_set_Minimum(::System::Globalization::TimeSpanFormat::Pattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_set_Minimum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat/Pattern", "Minimum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanFormat/Pattern Full
::System::Globalization::TimeSpanFormat::Pattern System::Globalization::TimeSpanFormat::Pattern::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanFormat::Pattern>("System.Globalization", "TimeSpanFormat/Pattern", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanFormat/Pattern Full
void System::Globalization::TimeSpanFormat::Pattern::_set_Full(::System::Globalization::TimeSpanFormat::Pattern value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanFormat/Pattern", "Full", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanFormat::Pattern::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::Pattern::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanFormat/FormatLiterals
#include "System/Globalization/TimeSpanFormat.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String AppCompatLiteral
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_AppCompatLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_AppCompatLiteral");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppCompatLiteral"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 dd
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_dd");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dd"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hh
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_hh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_hh");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hh"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 mm
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_mm");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mm"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ss
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_ss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_ss");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ss"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ff
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanFormat::FormatLiterals::dyn_ff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn_ff");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ff"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _literals
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::TimeSpanFormat::FormatLiterals::dyn__literals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::dyn__literals");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literals"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_Start
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_DayHourSep
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_DayHourSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_DayHourSep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DayHourSep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_HourMinuteSep
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_HourMinuteSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_HourMinuteSep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HourMinuteSep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_MinuteSecondSep
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_MinuteSecondSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_MinuteSecondSep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MinuteSecondSep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_SecondFractionSep
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_SecondFractionSep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_SecondFractionSep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SecondFractionSep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.get_End
::StringW System::Globalization::TimeSpanFormat::FormatLiterals::get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::get_End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.InitInvariant
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanFormat::FormatLiterals::InitInvariant(bool isNegative) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::InitInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanFormat/FormatLiterals", "InitInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isNegative)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanFormat::FormatLiterals, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isNegative);
}
// Autogenerated method: System.Globalization.TimeSpanFormat/FormatLiterals.Init
void System::Globalization::TimeSpanFormat::FormatLiterals::Init(::System::ReadOnlySpan_1<::Il2CppChar> format, bool useInvariantFieldLengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanFormat::FormatLiterals::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(useInvariantFieldLengths)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, useInvariantFieldLengths);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse
#include "System/Globalization/TimeSpanParse.hpp"
// Including type: System.Globalization.TimeSpanParse/ParseFailureKind
#include "System/Globalization/TimeSpanParse_ParseFailureKind.hpp"
// Including type: System.Globalization.TimeSpanParse/TimeSpanStandardStyles
#include "System/Globalization/TimeSpanParse_TimeSpanStandardStyles.hpp"
// Including type: System.Globalization.TimeSpanParse/TTT
#include "System/Globalization/TimeSpanParse_TTT.hpp"
// Including type: System.Globalization.TimeSpanParse/TimeSpanToken
#include "System/Globalization/TimeSpanParse_TimeSpanToken.hpp"
// Including type: System.Globalization.TimeSpanParse/TimeSpanTokenizer
#include "System/Globalization/TimeSpanParse_TimeSpanTokenizer.hpp"
// Including type: System.Globalization.TimeSpanParse/TimeSpanRawInfo
#include "System/Globalization/TimeSpanParse_TimeSpanRawInfo.hpp"
// Including type: System.Globalization.TimeSpanParse/TimeSpanResult
#include "System/Globalization/TimeSpanParse_TimeSpanResult.hpp"
// Including type: System.Globalization.TimeSpanParse/StringParser
#include "System/Globalization/TimeSpanParse_StringParser.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.TimeSpanStyles
#include "System/Globalization/TimeSpanStyles.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.TimeSpanParse.Pow10
int64_t System::Globalization::TimeSpanParse::Pow10(int pow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::Pow10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "Pow10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pow)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pow);
}
// Autogenerated method: System.Globalization.TimeSpanParse.TryTimeToTicks
bool System::Globalization::TimeSpanParse::TryTimeToTicks(bool positive, ::System::Globalization::TimeSpanParse::TimeSpanToken days, ::System::Globalization::TimeSpanParse::TimeSpanToken hours, ::System::Globalization::TimeSpanParse::TimeSpanToken minutes, ::System::Globalization::TimeSpanParse::TimeSpanToken seconds, ::System::Globalization::TimeSpanParse::TimeSpanToken fraction, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TryTimeToTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "TryTimeToTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positive), ::il2cpp_utils::ExtractType(days), ::il2cpp_utils::ExtractType(hours), ::il2cpp_utils::ExtractType(minutes), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(fraction), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, positive, days, hours, minutes, seconds, fraction, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.Parse
::System::TimeSpan System::Globalization::TimeSpanParse::Parse(::System::ReadOnlySpan_1<::Il2CppChar> input, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, formatProvider);
}
// Autogenerated method: System.Globalization.TimeSpanParse.TryParseExact
bool System::Globalization::TimeSpanParse::TryParseExact(::System::ReadOnlySpan_1<::Il2CppChar> input, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* formatProvider, ::System::Globalization::TimeSpanStyles styles, ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TryParseExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "TryParseExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, format, formatProvider, styles, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.TryParseTimeSpan
bool System::Globalization::TimeSpanParse::TryParseTimeSpan(::System::ReadOnlySpan_1<::Il2CppChar> input, ::System::Globalization::TimeSpanParse::TimeSpanStandardStyles style, ::System::IFormatProvider* formatProvider, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TryParseTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "TryParseTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(formatProvider), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, style, formatProvider, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.ProcessTerminalState
bool System::Globalization::TimeSpanParse::ProcessTerminalState(ByRef<::System::Globalization::TimeSpanParse::TimeSpanRawInfo> raw, ::System::Globalization::TimeSpanParse::TimeSpanStandardStyles style, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ProcessTerminalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "ProcessTerminalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(raw), style, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.ProcessTerminal_DHMSF
bool System::Globalization::TimeSpanParse::ProcessTerminal_DHMSF(ByRef<::System::Globalization::TimeSpanParse::TimeSpanRawInfo> raw, ::System::Globalization::TimeSpanParse::TimeSpanStandardStyles style, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ProcessTerminal_DHMSF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "ProcessTerminal_DHMSF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(raw), style, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.ProcessTerminal_HMS_F_D
bool System::Globalization::TimeSpanParse::ProcessTerminal_HMS_F_D(ByRef<::System::Globalization::TimeSpanParse::TimeSpanRawInfo> raw, ::System::Globalization::TimeSpanParse::TimeSpanStandardStyles style, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ProcessTerminal_HMS_F_D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "ProcessTerminal_HMS_F_D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(raw), style, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.ProcessTerminal_HM_S_D
bool System::Globalization::TimeSpanParse::ProcessTerminal_HM_S_D(ByRef<::System::Globalization::TimeSpanParse::TimeSpanRawInfo> raw, ::System::Globalization::TimeSpanParse::TimeSpanStandardStyles style, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ProcessTerminal_HM_S_D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "ProcessTerminal_HM_S_D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(raw), style, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.ProcessTerminal_HM
bool System::Globalization::TimeSpanParse::ProcessTerminal_HM(ByRef<::System::Globalization::TimeSpanParse::TimeSpanRawInfo> raw, ::System::Globalization::TimeSpanParse::TimeSpanStandardStyles style, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ProcessTerminal_HM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "ProcessTerminal_HM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(raw), style, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.ProcessTerminal_D
bool System::Globalization::TimeSpanParse::ProcessTerminal_D(ByRef<::System::Globalization::TimeSpanParse::TimeSpanRawInfo> raw, ::System::Globalization::TimeSpanParse::TimeSpanStandardStyles style, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ProcessTerminal_D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "ProcessTerminal_D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(raw), style, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.TryParseExactTimeSpan
bool System::Globalization::TimeSpanParse::TryParseExactTimeSpan(::System::ReadOnlySpan_1<::Il2CppChar> input, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::IFormatProvider* formatProvider, ::System::Globalization::TimeSpanStyles styles, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TryParseExactTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "TryParseExactTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, format, formatProvider, styles, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.TryParseByFormat
bool System::Globalization::TimeSpanParse::TryParseByFormat(::System::ReadOnlySpan_1<::Il2CppChar> input, ::System::ReadOnlySpan_1<::Il2CppChar> format, ::System::Globalization::TimeSpanStyles styles, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TryParseByFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "TryParseByFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, format, styles, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.ParseExactDigits
bool System::Globalization::TimeSpanParse::ParseExactDigits(ByRef<::System::Globalization::TimeSpanParse::TimeSpanTokenizer> tokenizer, int minDigitLength, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseExactDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "ParseExactDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenizer), ::il2cpp_utils::ExtractType(minDigitLength), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(tokenizer), minDigitLength, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.ParseExactDigits
bool System::Globalization::TimeSpanParse::ParseExactDigits(ByRef<::System::Globalization::TimeSpanParse::TimeSpanTokenizer> tokenizer, int minDigitLength, int maxDigitLength, ByRef<int> zeroes, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseExactDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "ParseExactDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenizer), ::il2cpp_utils::ExtractType(minDigitLength), ::il2cpp_utils::ExtractType(maxDigitLength), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(tokenizer), minDigitLength, maxDigitLength, byref(zeroes), byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse.ParseExactLiteral
bool System::Globalization::TimeSpanParse::ParseExactLiteral(ByRef<::System::Globalization::TimeSpanParse::TimeSpanTokenizer> tokenizer, ::System::Text::StringBuilder* enquotedString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseExactLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "ParseExactLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenizer), ::il2cpp_utils::ExtractType(enquotedString)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(tokenizer), enquotedString);
}
// Autogenerated method: System.Globalization.TimeSpanParse.TryParseTimeSpanConstant
bool System::Globalization::TimeSpanParse::TryParseTimeSpanConstant(::System::ReadOnlySpan_1<::Il2CppChar> input, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TryParseTimeSpanConstant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TimeSpanParse", "TryParseTimeSpanConstant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/ParseFailureKind
#include "System/Globalization/TimeSpanParse_ParseFailureKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/ParseFailureKind None
::System::Globalization::TimeSpanParse::ParseFailureKind System::Globalization::TimeSpanParse::ParseFailureKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::ParseFailureKind>("System.Globalization", "TimeSpanParse/ParseFailureKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/ParseFailureKind None
void System::Globalization::TimeSpanParse::ParseFailureKind::_set_None(::System::Globalization::TimeSpanParse::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/ParseFailureKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/ParseFailureKind ArgumentNull
::System::Globalization::TimeSpanParse::ParseFailureKind System::Globalization::TimeSpanParse::ParseFailureKind::_get_ArgumentNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::_get_ArgumentNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::ParseFailureKind>("System.Globalization", "TimeSpanParse/ParseFailureKind", "ArgumentNull"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/ParseFailureKind ArgumentNull
void System::Globalization::TimeSpanParse::ParseFailureKind::_set_ArgumentNull(::System::Globalization::TimeSpanParse::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::_set_ArgumentNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/ParseFailureKind", "ArgumentNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/ParseFailureKind Format
::System::Globalization::TimeSpanParse::ParseFailureKind System::Globalization::TimeSpanParse::ParseFailureKind::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::ParseFailureKind>("System.Globalization", "TimeSpanParse/ParseFailureKind", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/ParseFailureKind Format
void System::Globalization::TimeSpanParse::ParseFailureKind::_set_Format(::System::Globalization::TimeSpanParse::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/ParseFailureKind", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/ParseFailureKind FormatWithParameter
::System::Globalization::TimeSpanParse::ParseFailureKind System::Globalization::TimeSpanParse::ParseFailureKind::_get_FormatWithParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::_get_FormatWithParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::ParseFailureKind>("System.Globalization", "TimeSpanParse/ParseFailureKind", "FormatWithParameter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/ParseFailureKind FormatWithParameter
void System::Globalization::TimeSpanParse::ParseFailureKind::_set_FormatWithParameter(::System::Globalization::TimeSpanParse::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::_set_FormatWithParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/ParseFailureKind", "FormatWithParameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/ParseFailureKind Overflow
::System::Globalization::TimeSpanParse::ParseFailureKind System::Globalization::TimeSpanParse::ParseFailureKind::_get_Overflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::_get_Overflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::ParseFailureKind>("System.Globalization", "TimeSpanParse/ParseFailureKind", "Overflow"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/ParseFailureKind Overflow
void System::Globalization::TimeSpanParse::ParseFailureKind::_set_Overflow(::System::Globalization::TimeSpanParse::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::_set_Overflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/ParseFailureKind", "Overflow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Globalization::TimeSpanParse::ParseFailureKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::ParseFailureKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/TimeSpanStandardStyles
#include "System/Globalization/TimeSpanParse_TimeSpanStandardStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/TimeSpanStandardStyles None
::System::Globalization::TimeSpanParse::TimeSpanStandardStyles System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TimeSpanStandardStyles>("System.Globalization", "TimeSpanParse/TimeSpanStandardStyles", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/TimeSpanStandardStyles None
void System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_set_None(::System::Globalization::TimeSpanParse::TimeSpanStandardStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TimeSpanStandardStyles", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/TimeSpanStandardStyles Invariant
::System::Globalization::TimeSpanParse::TimeSpanStandardStyles System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_get_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TimeSpanStandardStyles>("System.Globalization", "TimeSpanParse/TimeSpanStandardStyles", "Invariant"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/TimeSpanStandardStyles Invariant
void System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_set_Invariant(::System::Globalization::TimeSpanParse::TimeSpanStandardStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_set_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TimeSpanStandardStyles", "Invariant", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/TimeSpanStandardStyles Localized
::System::Globalization::TimeSpanParse::TimeSpanStandardStyles System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_get_Localized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_get_Localized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TimeSpanStandardStyles>("System.Globalization", "TimeSpanParse/TimeSpanStandardStyles", "Localized"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/TimeSpanStandardStyles Localized
void System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_set_Localized(::System::Globalization::TimeSpanParse::TimeSpanStandardStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_set_Localized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TimeSpanStandardStyles", "Localized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/TimeSpanStandardStyles RequireFull
::System::Globalization::TimeSpanParse::TimeSpanStandardStyles System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_get_RequireFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_get_RequireFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TimeSpanStandardStyles>("System.Globalization", "TimeSpanParse/TimeSpanStandardStyles", "RequireFull"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/TimeSpanStandardStyles RequireFull
void System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_set_RequireFull(::System::Globalization::TimeSpanParse::TimeSpanStandardStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_set_RequireFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TimeSpanStandardStyles", "RequireFull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/TimeSpanStandardStyles Any
::System::Globalization::TimeSpanParse::TimeSpanStandardStyles System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TimeSpanStandardStyles>("System.Globalization", "TimeSpanParse/TimeSpanStandardStyles", "Any"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/TimeSpanStandardStyles Any
void System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_set_Any(::System::Globalization::TimeSpanParse::TimeSpanStandardStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TimeSpanStandardStyles", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Globalization::TimeSpanParse::TimeSpanStandardStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanStandardStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/TTT
#include "System/Globalization/TimeSpanParse_TTT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/TTT None
::System::Globalization::TimeSpanParse::TTT System::Globalization::TimeSpanParse::TTT::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TTT>("System.Globalization", "TimeSpanParse/TTT", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/TTT None
void System::Globalization::TimeSpanParse::TTT::_set_None(::System::Globalization::TimeSpanParse::TTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TTT", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/TTT End
::System::Globalization::TimeSpanParse::TTT System::Globalization::TimeSpanParse::TTT::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TTT>("System.Globalization", "TimeSpanParse/TTT", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/TTT End
void System::Globalization::TimeSpanParse::TTT::_set_End(::System::Globalization::TimeSpanParse::TTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TTT", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/TTT Num
::System::Globalization::TimeSpanParse::TTT System::Globalization::TimeSpanParse::TTT::_get_Num() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_get_Num");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TTT>("System.Globalization", "TimeSpanParse/TTT", "Num"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/TTT Num
void System::Globalization::TimeSpanParse::TTT::_set_Num(::System::Globalization::TimeSpanParse::TTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_set_Num");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TTT", "Num", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/TTT Sep
::System::Globalization::TimeSpanParse::TTT System::Globalization::TimeSpanParse::TTT::_get_Sep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_get_Sep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TTT>("System.Globalization", "TimeSpanParse/TTT", "Sep"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/TTT Sep
void System::Globalization::TimeSpanParse::TTT::_set_Sep(::System::Globalization::TimeSpanParse::TTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_set_Sep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TTT", "Sep", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanParse/TTT NumOverflow
::System::Globalization::TimeSpanParse::TTT System::Globalization::TimeSpanParse::TTT::_get_NumOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_get_NumOverflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanParse::TTT>("System.Globalization", "TimeSpanParse/TTT", "NumOverflow"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanParse/TTT NumOverflow
void System::Globalization::TimeSpanParse::TTT::_set_NumOverflow(::System::Globalization::TimeSpanParse::TTT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::_set_NumOverflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanParse/TTT", "NumOverflow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Globalization::TimeSpanParse::TTT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TTT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/TimeSpanToken
#include "System/Globalization/TimeSpanParse_TimeSpanToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/TTT _ttt
[[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TTT& System::Globalization::TimeSpanParse::TimeSpanToken::dyn__ttt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::dyn__ttt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ttt"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::TTT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _num
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanParse::TimeSpanToken::dyn__num() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::dyn__num");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_num"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _zeroes
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanParse::TimeSpanToken::dyn__zeroes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::dyn__zeroes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zeroes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> _sep
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::Globalization::TimeSpanParse::TimeSpanToken::dyn__sep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::dyn__sep");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sep"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanToken..ctor
System::Globalization::TimeSpanParse::TimeSpanToken::TimeSpanToken(::System::Globalization::TimeSpanParse::TTT type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanToken..ctor
System::Globalization::TimeSpanParse::TimeSpanToken::TimeSpanToken(int number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, number);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanToken..ctor
System::Globalization::TimeSpanParse::TimeSpanToken::TimeSpanToken(int number, int leadingZeroes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(leadingZeroes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, number, leadingZeroes);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanToken..ctor
// ABORTED elsewhere.  System::Globalization::TimeSpanParse::TimeSpanToken::TimeSpanToken(::System::Globalization::TimeSpanParse::TTT type, int number, int leadingZeroes, ::System::ReadOnlySpan_1<::Il2CppChar> separator)
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanToken.IsInvalidFraction
bool System::Globalization::TimeSpanParse::TimeSpanToken::IsInvalidFraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanToken::IsInvalidFraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsInvalidFraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/TimeSpanTokenizer
#include "System/Globalization/TimeSpanParse_TimeSpanTokenizer.hpp"
// Including type: System.Globalization.TimeSpanParse/TimeSpanToken
#include "System/Globalization/TimeSpanParse_TimeSpanToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ReadOnlySpan`1<System.Char> _value
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::Globalization::TimeSpanParse::TimeSpanTokenizer::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::dyn__value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanParse::TimeSpanTokenizer::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::dyn__pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanTokenizer..ctor
System::Globalization::TimeSpanParse::TimeSpanTokenizer::TimeSpanTokenizer(::System::ReadOnlySpan_1<::Il2CppChar> input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanTokenizer..ctor
// ABORTED elsewhere.  System::Globalization::TimeSpanParse::TimeSpanTokenizer::TimeSpanTokenizer(::System::ReadOnlySpan_1<::Il2CppChar> input, int startPosition)
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanTokenizer.GetNextToken
::System::Globalization::TimeSpanParse::TimeSpanToken System::Globalization::TimeSpanParse::TimeSpanTokenizer::GetNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::GetNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanParse::TimeSpanToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanTokenizer.get_EOL
bool System::Globalization::TimeSpanParse::TimeSpanTokenizer::get_EOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::get_EOL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_EOL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanTokenizer.BackOne
void System::Globalization::TimeSpanParse::TimeSpanTokenizer::BackOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::BackOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BackOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanTokenizer.get_NextChar
::Il2CppChar System::Globalization::TimeSpanParse::TimeSpanTokenizer::get_NextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanTokenizer::get_NextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/TimeSpanRawInfo
#include "System/Globalization/TimeSpanParse_TimeSpanRawInfo.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.TimeSpanParse/TimeSpanResult
#include "System/Globalization/TimeSpanParse_TimeSpanResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/TTT _lastSeenTTT
[[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TTT& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__lastSeenTTT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__lastSeenTTT");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSeenTTT"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::TTT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _tokenCount
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__tokenCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__tokenCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tokenCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _sepCount
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__sepCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__sepCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sepCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _numCount
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TimeSpanFormat/FormatLiterals _posLoc
[[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanFormat::FormatLiterals& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__posLoc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__posLoc");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posLoc"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanFormat::FormatLiterals*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TimeSpanFormat/FormatLiterals _negLoc
[[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanFormat::FormatLiterals& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__negLoc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__negLoc");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_negLoc"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanFormat::FormatLiterals*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _posLocInit
[[deprecated("Use field access instead!")]] bool& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__posLocInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__posLocInit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posLocInit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _negLocInit
[[deprecated("Use field access instead!")]] bool& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__negLocInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__negLocInit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_negLocInit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fullPosPattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__fullPosPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__fullPosPattern");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullPosPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fullNegPattern
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__fullNegPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__fullNegPattern");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullNegPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/TimeSpanToken _numbers0
[[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TimeSpanToken& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numbers0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numbers0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numbers0"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::TimeSpanToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/TimeSpanToken _numbers1
[[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TimeSpanToken& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numbers1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numbers1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numbers1"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::TimeSpanToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/TimeSpanToken _numbers2
[[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TimeSpanToken& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numbers2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numbers2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numbers2"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::TimeSpanToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/TimeSpanToken _numbers3
[[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TimeSpanToken& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numbers3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numbers3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numbers3"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::TimeSpanToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.TimeSpanParse/TimeSpanToken _numbers4
[[deprecated("Use field access instead!")]] ::System::Globalization::TimeSpanParse::TimeSpanToken& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numbers4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__numbers4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numbers4"))->offset;
  return *reinterpret_cast<::System::Globalization::TimeSpanParse::TimeSpanToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> _literals0
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literals0"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> _literals1
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literals1"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> _literals2
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literals2"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> _literals3
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literals3"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> _literals4
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literals4"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ReadOnlySpan`1<System.Char> _literals5
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::dyn__literals5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literals5"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.get_PositiveInvariant
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PositiveInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanFormat::FormatLiterals, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.get_NegativeInvariant
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NegativeInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanFormat::FormatLiterals, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.get_PositiveLocalized
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveLocalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_PositiveLocalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PositiveLocalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanFormat::FormatLiterals, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.get_NegativeLocalized
::System::Globalization::TimeSpanFormat::FormatLiterals System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeLocalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::get_NegativeLocalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NegativeLocalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TimeSpanFormat::FormatLiterals, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.FullAppCompatMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullAppCompatMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullAppCompatMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullAppCompatMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.PartialAppCompatMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::PartialAppCompatMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::PartialAppCompatMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PartialAppCompatMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.FullMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.FullDMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullDMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.FullHMMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullHMMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.FullDHMMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullDHMMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.FullHMSMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullHMSMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.FullDHMSMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMSMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullDHMSMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullDHMSMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.FullHMSFMatch
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSFMatch(::System::Globalization::TimeSpanFormat::FormatLiterals pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::FullHMSFMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FullHMSFMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.Init
void System::Globalization::TimeSpanParse::TimeSpanRawInfo::Init(::System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dtfi);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.ProcessToken
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::ProcessToken(ByRef<::System::Globalization::TimeSpanParse::TimeSpanToken> tok, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::ProcessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ProcessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tok), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(tok), byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.AddSep
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddSep(::System::ReadOnlySpan_1<::Il2CppChar> sep, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddSep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddSep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sep), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sep, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanRawInfo.AddNum
bool System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddNum(::System::Globalization::TimeSpanParse::TimeSpanToken num, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanRawInfo::AddNum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddNum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, num, byref(result));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TimeSpanParse/TimeSpanResult
#include "System/Globalization/TimeSpanParse_TimeSpanResult.hpp"
// Including type: System.Globalization.TimeSpanParse/ParseFailureKind
#include "System/Globalization/TimeSpanParse_ParseFailureKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.TimeSpan parsedTimeSpan
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::Globalization::TimeSpanParse::TimeSpanResult::dyn_parsedTimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::dyn_parsedTimeSpan");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsedTimeSpan"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _throwOnFailure
[[deprecated("Use field access instead!")]] bool& System::Globalization::TimeSpanParse::TimeSpanResult::dyn__throwOnFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::dyn__throwOnFailure");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_throwOnFailure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanResult..ctor
System::Globalization::TimeSpanParse::TimeSpanResult::TimeSpanResult(bool throwOnFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(throwOnFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, throwOnFailure);
}
// Autogenerated method: System.Globalization.TimeSpanParse/TimeSpanResult.SetFailure
bool System::Globalization::TimeSpanParse::TimeSpanResult::SetFailure(::System::Globalization::TimeSpanParse::ParseFailureKind kind, ::StringW resourceKey, ::Il2CppObject* messageArgument, ::StringW argumentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::TimeSpanResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kind), ::il2cpp_utils::ExtractType(resourceKey), ::il2cpp_utils::ExtractType(messageArgument), ::il2cpp_utils::ExtractType(argumentName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, kind, resourceKey, messageArgument, argumentName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanParse/StringParser
#include "System/Globalization/TimeSpanParse_StringParser.hpp"
// Including type: System.Globalization.TimeSpanParse/TimeSpanResult
#include "System/Globalization/TimeSpanParse_TimeSpanResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ReadOnlySpan`1<System.Char> _str
[[deprecated("Use field access instead!")]] ::System::ReadOnlySpan_1<::Il2CppChar>& System::Globalization::TimeSpanParse::StringParser::dyn__str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::StringParser::dyn__str");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_str"))->offset;
  return *reinterpret_cast<::System::ReadOnlySpan_1<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _ch
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Globalization::TimeSpanParse::StringParser::dyn__ch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::StringParser::dyn__ch");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ch"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanParse::StringParser::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::StringParser::dyn__pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _len
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanParse::StringParser::dyn__len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::StringParser::dyn__len");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TimeSpanParse/StringParser.NextChar
void System::Globalization::TimeSpanParse::StringParser::NextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::StringParser::NextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "NextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/StringParser.NextNonDigit
::Il2CppChar System::Globalization::TimeSpanParse::StringParser::NextNonDigit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::StringParser::NextNonDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "NextNonDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TimeSpanParse/StringParser.TryParse
bool System::Globalization::TimeSpanParse::StringParser::TryParse(::System::ReadOnlySpan_1<::Il2CppChar> input, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::StringParser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse/StringParser.ParseInt
bool System::Globalization::TimeSpanParse::StringParser::ParseInt(int max, ByRef<int> i, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::StringParser::ParseInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, max, byref(i), byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse/StringParser.ParseTime
bool System::Globalization::TimeSpanParse::StringParser::ParseTime(ByRef<int64_t> time, ByRef<::System::Globalization::TimeSpanParse::TimeSpanResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::StringParser::ParseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(time), byref(result));
}
// Autogenerated method: System.Globalization.TimeSpanParse/StringParser.SkipBlanks
void System::Globalization::TimeSpanParse::StringParser::SkipBlanks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanParse::StringParser::SkipBlanks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SkipBlanks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TimeSpanStyles
#include "System/Globalization/TimeSpanStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanStyles None
::System::Globalization::TimeSpanStyles System::Globalization::TimeSpanStyles::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanStyles::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanStyles>("System.Globalization", "TimeSpanStyles", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanStyles None
void System::Globalization::TimeSpanStyles::_set_None(::System::Globalization::TimeSpanStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanStyles::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanStyles", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.TimeSpanStyles AssumeNegative
::System::Globalization::TimeSpanStyles System::Globalization::TimeSpanStyles::_get_AssumeNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanStyles::_get_AssumeNegative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TimeSpanStyles>("System.Globalization", "TimeSpanStyles", "AssumeNegative"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.TimeSpanStyles AssumeNegative
void System::Globalization::TimeSpanStyles::_set_AssumeNegative(::System::Globalization::TimeSpanStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanStyles::_set_AssumeNegative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TimeSpanStyles", "AssumeNegative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::TimeSpanStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TimeSpanStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory UppercaseLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_UppercaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_UppercaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "UppercaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory UppercaseLetter
void System::Globalization::UnicodeCategory::_set_UppercaseLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_UppercaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "UppercaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LowercaseLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LowercaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_LowercaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LowercaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LowercaseLetter
void System::Globalization::UnicodeCategory::_set_LowercaseLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_LowercaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LowercaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory TitlecaseLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_TitlecaseLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_TitlecaseLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "TitlecaseLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory TitlecaseLetter
void System::Globalization::UnicodeCategory::_set_TitlecaseLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_TitlecaseLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "TitlecaseLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ModifierLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ModifierLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ModifierLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ModifierLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ModifierLetter
void System::Globalization::UnicodeCategory::_set_ModifierLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ModifierLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ModifierLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherLetter
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherLetter"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherLetter
void System::Globalization::UnicodeCategory::_set_OtherLetter(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherLetter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory NonSpacingMark
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_NonSpacingMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_NonSpacingMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "NonSpacingMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory NonSpacingMark
void System::Globalization::UnicodeCategory::_set_NonSpacingMark(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_NonSpacingMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "NonSpacingMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory SpacingCombiningMark
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_SpacingCombiningMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_SpacingCombiningMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "SpacingCombiningMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory SpacingCombiningMark
void System::Globalization::UnicodeCategory::_set_SpacingCombiningMark(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_SpacingCombiningMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "SpacingCombiningMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory EnclosingMark
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_EnclosingMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_EnclosingMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "EnclosingMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory EnclosingMark
void System::Globalization::UnicodeCategory::_set_EnclosingMark(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_EnclosingMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "EnclosingMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory DecimalDigitNumber
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_DecimalDigitNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_DecimalDigitNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "DecimalDigitNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory DecimalDigitNumber
void System::Globalization::UnicodeCategory::_set_DecimalDigitNumber(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_DecimalDigitNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "DecimalDigitNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LetterNumber
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LetterNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_LetterNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LetterNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LetterNumber
void System::Globalization::UnicodeCategory::_set_LetterNumber(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_LetterNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LetterNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherNumber
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherNumber
void System::Globalization::UnicodeCategory::_set_OtherNumber(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory SpaceSeparator
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_SpaceSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_SpaceSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "SpaceSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory SpaceSeparator
void System::Globalization::UnicodeCategory::_set_SpaceSeparator(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_SpaceSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "SpaceSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory LineSeparator
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_LineSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_LineSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "LineSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory LineSeparator
void System::Globalization::UnicodeCategory::_set_LineSeparator(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_LineSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "LineSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ParagraphSeparator
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ParagraphSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ParagraphSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ParagraphSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ParagraphSeparator
void System::Globalization::UnicodeCategory::_set_ParagraphSeparator(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ParagraphSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ParagraphSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Control
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Control() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_Control");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Control"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Control
void System::Globalization::UnicodeCategory::_set_Control(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_Control");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Control", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Format
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Format
void System::Globalization::UnicodeCategory::_set_Format(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory Surrogate
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_Surrogate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_Surrogate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "Surrogate"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory Surrogate
void System::Globalization::UnicodeCategory::_set_Surrogate(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_Surrogate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "Surrogate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory PrivateUse
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_PrivateUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_PrivateUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "PrivateUse"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory PrivateUse
void System::Globalization::UnicodeCategory::_set_PrivateUse(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_PrivateUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "PrivateUse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ConnectorPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ConnectorPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ConnectorPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ConnectorPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ConnectorPunctuation
void System::Globalization::UnicodeCategory::_set_ConnectorPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ConnectorPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ConnectorPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory DashPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_DashPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_DashPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "DashPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory DashPunctuation
void System::Globalization::UnicodeCategory::_set_DashPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_DashPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "DashPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OpenPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OpenPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OpenPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OpenPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OpenPunctuation
void System::Globalization::UnicodeCategory::_set_OpenPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OpenPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OpenPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ClosePunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ClosePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ClosePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ClosePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ClosePunctuation
void System::Globalization::UnicodeCategory::_set_ClosePunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ClosePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ClosePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory InitialQuotePunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_InitialQuotePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_InitialQuotePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "InitialQuotePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory InitialQuotePunctuation
void System::Globalization::UnicodeCategory::_set_InitialQuotePunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_InitialQuotePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "InitialQuotePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory FinalQuotePunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_FinalQuotePunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_FinalQuotePunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "FinalQuotePunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory FinalQuotePunctuation
void System::Globalization::UnicodeCategory::_set_FinalQuotePunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_FinalQuotePunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "FinalQuotePunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherPunctuation
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherPunctuation
void System::Globalization::UnicodeCategory::_set_OtherPunctuation(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory MathSymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_MathSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_MathSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "MathSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory MathSymbol
void System::Globalization::UnicodeCategory::_set_MathSymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_MathSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "MathSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory CurrencySymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_CurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_CurrencySymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "CurrencySymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory CurrencySymbol
void System::Globalization::UnicodeCategory::_set_CurrencySymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_CurrencySymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "CurrencySymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory ModifierSymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_ModifierSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_ModifierSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "ModifierSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory ModifierSymbol
void System::Globalization::UnicodeCategory::_set_ModifierSymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_ModifierSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "ModifierSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherSymbol
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherSymbol
void System::Globalization::UnicodeCategory::_set_OtherSymbol(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.UnicodeCategory OtherNotAssigned
::System::Globalization::UnicodeCategory System::Globalization::UnicodeCategory::_get_OtherNotAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_get_OtherNotAssigned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::UnicodeCategory>("System.Globalization", "UnicodeCategory", "OtherNotAssigned"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.UnicodeCategory OtherNotAssigned
void System::Globalization::UnicodeCategory::_set_OtherNotAssigned(::System::Globalization::UnicodeCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::_set_OtherNotAssigned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UnicodeCategory", "OtherNotAssigned", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::UnicodeCategory::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UnicodeCategory::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.GlobalizationMode
#include "System/Globalization/GlobalizationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean <Invariant>k__BackingField
bool System::Globalization::GlobalizationMode::_get_$Invariant$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GlobalizationMode::_get_$Invariant$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("System.Globalization", "GlobalizationMode", "<Invariant>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean <Invariant>k__BackingField
void System::Globalization::GlobalizationMode::_set_$Invariant$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GlobalizationMode::_set_$Invariant$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GlobalizationMode", "<Invariant>k__BackingField", value));
}
// Autogenerated method: System.Globalization.GlobalizationMode.get_Invariant
bool System::Globalization::GlobalizationMode::get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GlobalizationMode::get_Invariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GlobalizationMode", "get_Invariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GlobalizationMode.GetGlobalizationInvariantMode
bool System::Globalization::GlobalizationMode::GetGlobalizationInvariantMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GlobalizationMode::GetGlobalizationInvariantMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GlobalizationMode", "GetGlobalizationInvariantMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GlobalizationMode..cctor
void System::Globalization::GlobalizationMode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GlobalizationMode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GlobalizationMode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerMillisecond
int64_t System::Globalization::Calendar::_get_TicksPerMillisecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_TicksPerMillisecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerMillisecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerMillisecond
void System::Globalization::Calendar::_set_TicksPerMillisecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_TicksPerMillisecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerMillisecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerSecond
int64_t System::Globalization::Calendar::_get_TicksPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_TicksPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerSecond
void System::Globalization::Calendar::_set_TicksPerSecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_TicksPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerMinute
int64_t System::Globalization::Calendar::_get_TicksPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_TicksPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerMinute"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerMinute
void System::Globalization::Calendar::_set_TicksPerMinute(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_TicksPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerHour
int64_t System::Globalization::Calendar::_get_TicksPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_TicksPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerHour"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerHour
void System::Globalization::Calendar::_set_TicksPerHour(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_TicksPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerHour", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerDay
int64_t System::Globalization::Calendar::_get_TicksPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_TicksPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerDay"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerDay
void System::Globalization::Calendar::_set_TicksPerDay(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_TicksPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerDay", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerSecond
int System::Globalization::Calendar::_get_MillisPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_MillisPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerSecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerSecond
void System::Globalization::Calendar::_set_MillisPerSecond(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_MillisPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerMinute
int System::Globalization::Calendar::_get_MillisPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_MillisPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerMinute"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerMinute
void System::Globalization::Calendar::_set_MillisPerMinute(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_MillisPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerHour
int System::Globalization::Calendar::_get_MillisPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_MillisPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerHour"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerHour
void System::Globalization::Calendar::_set_MillisPerHour(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_MillisPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerHour", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerDay
int System::Globalization::Calendar::_get_MillisPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_MillisPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerDay"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerDay
void System::Globalization::Calendar::_set_MillisPerDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_MillisPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerDay", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPerYear
int System::Globalization::Calendar::_get_DaysPerYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_DaysPerYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPerYear"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPerYear
void System::Globalization::Calendar::_set_DaysPerYear(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_DaysPerYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPerYear", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer4Years
int System::Globalization::Calendar::_get_DaysPer4Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_DaysPer4Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer4Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer4Years
void System::Globalization::Calendar::_set_DaysPer4Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_DaysPer4Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer4Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer100Years
int System::Globalization::Calendar::_get_DaysPer100Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_DaysPer100Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer100Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer100Years
void System::Globalization::Calendar::_set_DaysPer100Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_DaysPer100Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer100Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer400Years
int System::Globalization::Calendar::_get_DaysPer400Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_DaysPer400Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer400Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer400Years
void System::Globalization::Calendar::_set_DaysPer400Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_DaysPer400Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer400Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysTo10000
int System::Globalization::Calendar::_get_DaysTo10000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_DaysTo10000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysTo10000"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysTo10000
void System::Globalization::Calendar::_set_DaysTo10000(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_DaysTo10000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysTo10000", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 MaxMillis
int64_t System::Globalization::Calendar::_get_MaxMillis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_MaxMillis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "MaxMillis"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 MaxMillis
void System::Globalization::Calendar::_set_MaxMillis(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_MaxMillis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MaxMillis", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN
int System::Globalization::Calendar::_get_CAL_GREGORIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN
void System::Globalization::Calendar::_set_CAL_GREGORIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_US
int System::Globalization::Calendar::_get_CAL_GREGORIAN_US() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN_US");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_US"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_US
void System::Globalization::Calendar::_set_CAL_GREGORIAN_US(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN_US");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_US", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JAPAN
int System::Globalization::Calendar::_get_CAL_JAPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_JAPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JAPAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JAPAN
void System::Globalization::Calendar::_set_CAL_JAPAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_JAPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JAPAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_TAIWAN
int System::Globalization::Calendar::_get_CAL_TAIWAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_TAIWAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_TAIWAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_TAIWAN
void System::Globalization::Calendar::_set_CAL_TAIWAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_TAIWAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_TAIWAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_KOREA
int System::Globalization::Calendar::_get_CAL_KOREA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_KOREA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_KOREA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_KOREA
void System::Globalization::Calendar::_set_CAL_KOREA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_KOREA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_KOREA", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_HIJRI
int System::Globalization::Calendar::_get_CAL_HIJRI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_HIJRI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_HIJRI"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_HIJRI
void System::Globalization::Calendar::_set_CAL_HIJRI(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_HIJRI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_HIJRI", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_THAI
int System::Globalization::Calendar::_get_CAL_THAI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_THAI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_THAI"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_THAI
void System::Globalization::Calendar::_set_CAL_THAI(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_THAI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_THAI", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_HEBREW
int System::Globalization::Calendar::_get_CAL_HEBREW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_HEBREW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_HEBREW"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_HEBREW
void System::Globalization::Calendar::_set_CAL_HEBREW(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_HEBREW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_HEBREW", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_ME_FRENCH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_ME_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN_ME_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_ME_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_ME_FRENCH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_ME_FRENCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN_ME_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_ME_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_ARABIC
int System::Globalization::Calendar::_get_CAL_GREGORIAN_ARABIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN_ARABIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_ARABIC"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_ARABIC
void System::Globalization::Calendar::_set_CAL_GREGORIAN_ARABIC(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN_ARABIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_ARABIC", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_XLIT_ENGLISH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_ENGLISH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_ENGLISH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_ENGLISH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_XLIT_ENGLISH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_ENGLISH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_ENGLISH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_ENGLISH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_XLIT_FRENCH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_XLIT_FRENCH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_FRENCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JULIAN
int System::Globalization::Calendar::_get_CAL_JULIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_JULIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JULIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JULIAN
void System::Globalization::Calendar::_set_CAL_JULIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_JULIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JULIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JAPANESELUNISOLAR
int System::Globalization::Calendar::_get_CAL_JAPANESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_JAPANESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JAPANESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JAPANESELUNISOLAR
void System::Globalization::Calendar::_set_CAL_JAPANESELUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_JAPANESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JAPANESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_CHINESELUNISOLAR
int System::Globalization::Calendar::_get_CAL_CHINESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_CHINESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_CHINESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_CHINESELUNISOLAR
void System::Globalization::Calendar::_set_CAL_CHINESELUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_CHINESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_CHINESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_SAKA
int System::Globalization::Calendar::_get_CAL_SAKA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_SAKA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_SAKA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_SAKA
void System::Globalization::Calendar::_set_CAL_SAKA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_SAKA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_SAKA", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_CHN
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_CHN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_LUNAR_ETO_CHN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_CHN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_CHN
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_CHN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_LUNAR_ETO_CHN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_CHN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_KOR
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_KOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_LUNAR_ETO_KOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_KOR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_KOR
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_KOR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_LUNAR_ETO_KOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_KOR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_ROKUYOU
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_ROKUYOU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_LUNAR_ETO_ROKUYOU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_ROKUYOU"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_ROKUYOU
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_ROKUYOU(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_LUNAR_ETO_ROKUYOU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_ROKUYOU", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_KOREANLUNISOLAR
int System::Globalization::Calendar::_get_CAL_KOREANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_KOREANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_KOREANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_KOREANLUNISOLAR
void System::Globalization::Calendar::_set_CAL_KOREANLUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_KOREANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_KOREANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_TAIWANLUNISOLAR
int System::Globalization::Calendar::_get_CAL_TAIWANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_TAIWANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_TAIWANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_TAIWANLUNISOLAR
void System::Globalization::Calendar::_set_CAL_TAIWANLUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_TAIWANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_TAIWANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_PERSIAN
int System::Globalization::Calendar::_get_CAL_PERSIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_PERSIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_PERSIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_PERSIAN
void System::Globalization::Calendar::_set_CAL_PERSIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_PERSIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_PERSIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_UMALQURA
int System::Globalization::Calendar::_get_CAL_UMALQURA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CAL_UMALQURA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_UMALQURA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_UMALQURA
void System::Globalization::Calendar::_set_CAL_UMALQURA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CAL_UMALQURA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_UMALQURA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 CurrentEra
int System::Globalization::Calendar::_get_CurrentEra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_get_CurrentEra");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CurrentEra"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 CurrentEra
void System::Globalization::Calendar::_set_CurrentEra(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::_set_CurrentEra");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CurrentEra", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_currentEraValue
[[deprecated("Use field access instead!")]] int& System::Globalization::Calendar::dyn_m_currentEraValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::dyn_m_currentEraValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentEraValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isReadOnly
[[deprecated("Use field access instead!")]] bool& System::Globalization::Calendar::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 twoDigitYearMax
[[deprecated("Use field access instead!")]] int& System::Globalization::Calendar::dyn_twoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::dyn_twoDigitYearMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twoDigitYearMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.Calendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::Calendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::Calendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_ID
int System::Globalization::Calendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_BaseCalendarID
int System::Globalization::Calendar::get_BaseCalendarID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_BaseCalendarID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_IsReadOnly
bool System::Globalization::Calendar::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.Clone
::Il2CppObject* System::Globalization::Calendar::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.ReadOnly
::System::Globalization::Calendar* System::Globalization::Calendar::ReadOnly(::System::Globalization::Calendar* calendar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "Calendar", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calendar);
}
// Autogenerated method: System.Globalization.Calendar.VerifyWritable
void System::Globalization::Calendar::VerifyWritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::VerifyWritable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyWritable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.SetReadOnlyState
void System::Globalization::Calendar::SetReadOnlyState(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::SetReadOnlyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReadOnlyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.Calendar.get_CurrentEraValue
int System::Globalization::Calendar::get_CurrentEraValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_CurrentEraValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.GetDayOfMonth
int System::Globalization::Calendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::Calendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetDaysInMonth
int System::Globalization::Calendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.Calendar.GetDaysInYear
int System::Globalization::Calendar::GetDaysInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetDaysInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.GetEra
int System::Globalization::Calendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetEra");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.get_Eras
::ArrayW<int> System::Globalization::Calendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.GetMonth
int System::Globalization::Calendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetMonthsInYear
int System::Globalization::Calendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.GetYear
int System::Globalization::Calendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.IsLeapYear
bool System::Globalization::Calendar::IsLeapYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year);
}
// Autogenerated method: System.Globalization.Calendar.IsLeapYear
bool System::Globalization::Calendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.ToDateTime
::System::DateTime System::Globalization::Calendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond);
}
// Autogenerated method: System.Globalization.Calendar.ToDateTime
::System::DateTime System::Globalization::Calendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.Calendar.TryToDateTime
bool System::Globalization::Calendar::TryToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::TryToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era, byref(result));
}
// Autogenerated method: System.Globalization.Calendar.IsValidYear
bool System::Globalization::Calendar::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::IsValidYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.IsValidMonth
bool System::Globalization::Calendar::IsValidMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::IsValidMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.Calendar.IsValidDay
bool System::Globalization::Calendar::IsValidDay(int year, int month, int day, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::IsValidDay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, month, day, era);
}
// Autogenerated method: System.Globalization.Calendar.get_TwoDigitYearMax
int System::Globalization::Calendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.set_TwoDigitYearMax
void System::Globalization::Calendar::set_TwoDigitYearMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::set_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.Calendar.ToFourDigitYear
int System::Globalization::Calendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated method: System.Globalization.Calendar.TimeToTicks
int64_t System::Globalization::Calendar::TimeToTicks(int hour, int minute, int second, int millisecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::TimeToTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "Calendar", "TimeToTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hour, minute, second, millisecond);
}
// Autogenerated method: System.Globalization.Calendar.GetSystemTwoDigitYearSetting
int System::Globalization::Calendar::GetSystemTwoDigitYearSetting(int CalID, int defaultYearValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Calendar::GetSystemTwoDigitYearSetting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "Calendar", "GetSystemTwoDigitYearSetting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(CalID), ::il2cpp_utils::ExtractType(defaultYearValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, CalID, defaultYearValue);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.CalendarData
#include "System/Globalization/CalendarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 MAX_CALENDARS
int System::Globalization::CalendarData::_get_MAX_CALENDARS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_get_MAX_CALENDARS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CalendarData", "MAX_CALENDARS"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MAX_CALENDARS
void System::Globalization::CalendarData::_set_MAX_CALENDARS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_set_MAX_CALENDARS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarData", "MAX_CALENDARS", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.CalendarData Invariant
::System::Globalization::CalendarData* System::Globalization::CalendarData::_get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_get_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CalendarData*>("System.Globalization", "CalendarData", "Invariant"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.CalendarData Invariant
void System::Globalization::CalendarData::_set_Invariant(::System::Globalization::CalendarData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_set_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarData", "Invariant", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] HEBREW_MONTH_NAMES
::ArrayW<::StringW> System::Globalization::CalendarData::_get_HEBREW_MONTH_NAMES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_get_HEBREW_MONTH_NAMES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "CalendarData", "HEBREW_MONTH_NAMES"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] HEBREW_MONTH_NAMES
void System::Globalization::CalendarData::_set_HEBREW_MONTH_NAMES(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_set_HEBREW_MONTH_NAMES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarData", "HEBREW_MONTH_NAMES", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] HEBREW_LEAP_MONTH_NAMES
::ArrayW<::StringW> System::Globalization::CalendarData::_get_HEBREW_LEAP_MONTH_NAMES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_get_HEBREW_LEAP_MONTH_NAMES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "CalendarData", "HEBREW_LEAP_MONTH_NAMES"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] HEBREW_LEAP_MONTH_NAMES
void System::Globalization::CalendarData::_set_HEBREW_LEAP_MONTH_NAMES(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::_set_HEBREW_LEAP_MONTH_NAMES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarData", "HEBREW_LEAP_MONTH_NAMES", value));
}
// Autogenerated instance field getter
// Get instance field: System.String sNativeName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CalendarData::dyn_sNativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_sNativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sNativeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saShortDates
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saShortDates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saShortDates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saShortDates"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saYearMonths
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saYearMonths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saYearMonths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saYearMonths"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saLongDates
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saLongDates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saLongDates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saLongDates"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String sMonthDay
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CalendarData::dyn_sMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_sMonthDay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sMonthDay"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saEraNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevEraNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saAbbrevEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saAbbrevEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevEnglishEraNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saAbbrevEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saAbbrevEnglishEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevEnglishEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saDayNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevDayNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saAbbrevDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saAbbrevDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saSuperShortDayNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saSuperShortDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saSuperShortDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saSuperShortDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saMonthNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevMonthNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saAbbrevMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saAbbrevMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saMonthGenitiveNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saMonthGenitiveNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saMonthGenitiveNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saMonthGenitiveNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevMonthGenitiveNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saAbbrevMonthGenitiveNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saAbbrevMonthGenitiveNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevMonthGenitiveNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saLeapYearMonthNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CalendarData::dyn_saLeapYearMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_saLeapYearMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saLeapYearMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 iTwoDigitYearMax
[[deprecated("Use field access instead!")]] int& System::Globalization::CalendarData::dyn_iTwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_iTwoDigitYearMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iTwoDigitYearMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 iCurrentEra
[[deprecated("Use field access instead!")]] int& System::Globalization::CalendarData::dyn_iCurrentEra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_iCurrentEra");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iCurrentEra"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean bUseUserOverrides
[[deprecated("Use field access instead!")]] bool& System::Globalization::CalendarData::dyn_bUseUserOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::dyn_bUseUserOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bUseUserOverrides"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CalendarData..cctor
void System::Globalization::CalendarData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CalendarData.InitializeEraNames
void System::Globalization::CalendarData::InitializeEraNames(::StringW localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::InitializeEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(calendarId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.GetJapaneseEraNames
::ArrayW<::StringW> System::Globalization::CalendarData::GetJapaneseEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::GetJapaneseEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "GetJapaneseEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CalendarData.GetJapaneseEnglishEraNames
::ArrayW<::StringW> System::Globalization::CalendarData::GetJapaneseEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::GetJapaneseEnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "GetJapaneseEnglishEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CalendarData.InitializeAbbreviatedEraNames
void System::Globalization::CalendarData::InitializeAbbreviatedEraNames(::StringW localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::InitializeAbbreviatedEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAbbreviatedEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(calendarId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.GetCalendarData
::System::Globalization::CalendarData* System::Globalization::CalendarData::GetCalendarData(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::GetCalendarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "GetCalendarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CalendarData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.CalendarIdToCultureName
::StringW System::Globalization::CalendarData::CalendarIdToCultureName(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::CalendarIdToCultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "CalendarIdToCultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.nativeGetTwoDigitYearMax
int System::Globalization::CalendarData::nativeGetTwoDigitYearMax(int calID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::nativeGetTwoDigitYearMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "nativeGetTwoDigitYearMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calID);
}
// Autogenerated method: System.Globalization.CalendarData.nativeGetCalendarData
bool System::Globalization::CalendarData::nativeGetCalendarData(::System::Globalization::CalendarData* data, ::StringW localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::nativeGetCalendarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "nativeGetCalendarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.fill_calendar_data
bool System::Globalization::CalendarData::fill_calendar_data(::StringW localeName, int datetimeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CalendarData::fill_calendar_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fill_calendar_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(datetimeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localeName, datetimeIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.GregorianCalendar
#include "System/Globalization/GregorianCalendar.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth365
::ArrayW<int> System::Globalization::GregorianCalendar::_get_DaysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_get_DaysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Globalization", "GregorianCalendar", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth365
void System::Globalization::GregorianCalendar::_set_DaysToMonth365(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_set_DaysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth366
::ArrayW<int> System::Globalization::GregorianCalendar::_get_DaysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_get_DaysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Globalization", "GregorianCalendar", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth366
void System::Globalization::GregorianCalendar::_set_DaysToMonth366(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_set_DaysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "DaysToMonth366", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.Calendar s_defaultInstance
::System::Globalization::Calendar* System::Globalization::GregorianCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::Calendar*>("System.Globalization", "GregorianCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.Calendar s_defaultInstance
void System::Globalization::GregorianCalendar::_set_s_defaultInstance(::System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "s_defaultInstance", value));
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.GregorianCalendarTypes m_type
[[deprecated("Use field access instead!")]] ::System::Globalization::GregorianCalendarTypes& System::Globalization::GregorianCalendar::dyn_m_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::dyn_m_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_type"))->offset;
  return *reinterpret_cast<::System::Globalization::GregorianCalendarTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.GregorianCalendar.OnDeserialized
void System::Globalization::GregorianCalendar::OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDefaultInstance
::System::Globalization::Calendar* System::Globalization::GregorianCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDatePart
int System::Globalization::GregorianCalendar::GetDatePart(int64_t ticks, int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDatePart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::GregorianCalendar*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ticks, part);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetAbsoluteDate
int64_t System::Globalization::GregorianCalendar::GetAbsoluteDate(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetAbsoluteDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendar", "GetAbsoluteDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.Globalization.GregorianCalendar..cctor
void System::Globalization::GregorianCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::GregorianCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::GregorianCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_ID
int System::Globalization::GregorianCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDayOfMonth
int System::Globalization::GregorianCalendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::GregorianCalendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDaysInMonth
int System::Globalization::GregorianCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDaysInYear
int System::Globalization::GregorianCalendar::GetDaysInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetDaysInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetEra
int System::Globalization::GregorianCalendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetEra");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_Eras
::ArrayW<int> System::Globalization::GregorianCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetMonth
int System::Globalization::GregorianCalendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetMonthsInYear
int System::Globalization::GregorianCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetYear
int System::Globalization::GregorianCalendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::GetYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.IsLeapYear
bool System::Globalization::GregorianCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.ToDateTime
::System::DateTime System::Globalization::GregorianCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.TryToDateTime
bool System::Globalization::GregorianCalendar::TryToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, ByRef<::System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::TryToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era, byref(result));
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_TwoDigitYearMax
int System::Globalization::GregorianCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.set_TwoDigitYearMax
void System::Globalization::GregorianCalendar::set_TwoDigitYearMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::set_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.GregorianCalendar.ToFourDigitYear
int System::Globalization::GregorianCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 era
[[deprecated("Use field access instead!")]] int& System::Globalization::EraInfo::dyn_era() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_era");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "era"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 ticks
[[deprecated("Use field access instead!")]] int64_t& System::Globalization::EraInfo::dyn_ticks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_ticks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ticks"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 yearOffset
[[deprecated("Use field access instead!")]] int& System::Globalization::EraInfo::dyn_yearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_yearOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yearOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 minEraYear
[[deprecated("Use field access instead!")]] int& System::Globalization::EraInfo::dyn_minEraYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_minEraYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minEraYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 maxEraYear
[[deprecated("Use field access instead!")]] int& System::Globalization::EraInfo::dyn_maxEraYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_maxEraYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxEraYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String eraName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::EraInfo::dyn_eraName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_eraName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eraName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String abbrevEraName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::EraInfo::dyn_abbrevEraName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_abbrevEraName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbrevEraName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String englishEraName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::EraInfo::dyn_englishEraName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EraInfo::dyn_englishEraName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "englishEraName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth365
::ArrayW<int> System::Globalization::GregorianCalendarHelper::_get_DaysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::_get_DaysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Globalization", "GregorianCalendarHelper", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth365
void System::Globalization::GregorianCalendarHelper::_set_DaysToMonth365(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::_set_DaysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarHelper", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth366
::ArrayW<int> System::Globalization::GregorianCalendarHelper::_get_DaysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::_get_DaysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Globalization", "GregorianCalendarHelper", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth366
void System::Globalization::GregorianCalendarHelper::_set_DaysToMonth366(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::_set_DaysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarHelper", "DaysToMonth366", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_maxYear
[[deprecated("Use field access instead!")]] int& System::Globalization::GregorianCalendarHelper::dyn_m_maxYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_maxYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_minYear
[[deprecated("Use field access instead!")]] int& System::Globalization::GregorianCalendarHelper::dyn_m_minYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_minYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.Calendar m_Cal
[[deprecated("Use field access instead!")]] ::System::Globalization::Calendar*& System::Globalization::GregorianCalendarHelper::dyn_m_Cal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_Cal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cal"))->offset;
  return *reinterpret_cast<::System::Globalization::Calendar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.EraInfo[] m_EraInfo
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Globalization::EraInfo*>& System::Globalization::GregorianCalendarHelper::dyn_m_EraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_EraInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EraInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Globalization::EraInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] m_eras
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Globalization::GregorianCalendarHelper::dyn_m_eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_eras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eras"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.DateTime m_minDate
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Globalization::GregorianCalendarHelper::dyn_m_minDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::dyn_m_minDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.get_MaxYear
int System::Globalization::GregorianCalendarHelper::get_MaxYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::get_MaxYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetYearOffset
int System::Globalization::GregorianCalendarHelper::GetYearOffset(int year, int era, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetYearOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetYearOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era), ::il2cpp_utils::ExtractType(throwOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era, throwOnError);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetGregorianYear
int System::Globalization::GregorianCalendarHelper::GetGregorianYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetGregorianYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGregorianYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.IsValidYear
bool System::Globalization::GregorianCalendarHelper::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::IsValidYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDatePart
int System::Globalization::GregorianCalendarHelper::GetDatePart(int64_t ticks, int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetDatePart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::GregorianCalendarHelper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ticks, part);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetAbsoluteDate
int64_t System::Globalization::GregorianCalendarHelper::GetAbsoluteDate(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetAbsoluteDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "GetAbsoluteDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.DateToTicks
int64_t System::Globalization::GregorianCalendarHelper::DateToTicks(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::DateToTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "DateToTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.TimeToTicks
int64_t System::Globalization::GregorianCalendarHelper::TimeToTicks(int hour, int minute, int second, int millisecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::TimeToTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "TimeToTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hour, minute, second, millisecond);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.CheckTicksRange
void System::Globalization::GregorianCalendarHelper::CheckTicksRange(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::CheckTicksRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTicksRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ticks);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDayOfMonth
int System::Globalization::GregorianCalendarHelper::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetDayOfMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDayOfWeek
::System::DayOfWeek System::Globalization::GregorianCalendarHelper::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDaysInMonth
int System::Globalization::GregorianCalendarHelper::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetDaysInMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDaysInYear
int System::Globalization::GregorianCalendarHelper::GetDaysInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetDaysInYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaysInYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetEra
int System::Globalization::GregorianCalendarHelper::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetEra");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.get_Eras
::ArrayW<int> System::Globalization::GregorianCalendarHelper::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::get_Eras");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetMonth
int System::Globalization::GregorianCalendarHelper::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetMonthsInYear
int System::Globalization::GregorianCalendarHelper::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetMonthsInYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetYear
int System::Globalization::GregorianCalendarHelper::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::GetYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.IsLeapYear
bool System::Globalization::GregorianCalendarHelper::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.ToDateTime
::System::DateTime System::Globalization::GregorianCalendarHelper::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(era)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.ToFourDigitYear
int System::Globalization::GregorianCalendarHelper::ToFourDigitYear(int year, int twoDigitYearMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::ToFourDigitYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(twoDigitYearMax)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, twoDigitYearMax);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper..cctor
void System::Globalization::GregorianCalendarHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.GregorianCalendarTypes
#include "System/Globalization/GregorianCalendarTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes Localized
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_Localized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_Localized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "Localized"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes Localized
void System::Globalization::GregorianCalendarTypes::_set_Localized(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_Localized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "Localized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes USEnglish
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_USEnglish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_USEnglish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "USEnglish"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes USEnglish
void System::Globalization::GregorianCalendarTypes::_set_USEnglish(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_USEnglish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "USEnglish", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes MiddleEastFrench
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_MiddleEastFrench() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_MiddleEastFrench");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "MiddleEastFrench"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes MiddleEastFrench
void System::Globalization::GregorianCalendarTypes::_set_MiddleEastFrench(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_MiddleEastFrench");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "MiddleEastFrench", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes Arabic
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_Arabic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_Arabic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "Arabic"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes Arabic
void System::Globalization::GregorianCalendarTypes::_set_Arabic(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_Arabic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "Arabic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes TransliteratedEnglish
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_TransliteratedEnglish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_TransliteratedEnglish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "TransliteratedEnglish"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes TransliteratedEnglish
void System::Globalization::GregorianCalendarTypes::_set_TransliteratedEnglish(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_TransliteratedEnglish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "TransliteratedEnglish", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.GregorianCalendarTypes TransliteratedFrench
::System::Globalization::GregorianCalendarTypes System::Globalization::GregorianCalendarTypes::_get_TransliteratedFrench() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_get_TransliteratedFrench");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::GregorianCalendarTypes>("System.Globalization", "GregorianCalendarTypes", "TransliteratedFrench"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.GregorianCalendarTypes TransliteratedFrench
void System::Globalization::GregorianCalendarTypes::_set_TransliteratedFrench(::System::Globalization::GregorianCalendarTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::_set_TransliteratedFrench");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarTypes", "TransliteratedFrench", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Globalization::GregorianCalendarTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::GregorianCalendarTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.HijriCalendar
#include "System/Globalization/HijriCalendar.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 HijriEra
int System::Globalization::HijriCalendar::_get_HijriEra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::_get_HijriEra");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "HijriCalendar", "HijriEra"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 HijriEra
void System::Globalization::HijriCalendar::_set_HijriEra(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::_set_HijriEra");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HijriCalendar", "HijriEra", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] HijriMonthDays
::ArrayW<int> System::Globalization::HijriCalendar::_get_HijriMonthDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::_get_HijriMonthDays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Globalization", "HijriCalendar", "HijriMonthDays"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] HijriMonthDays
void System::Globalization::HijriCalendar::_set_HijriMonthDays(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::_set_HijriMonthDays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HijriCalendar", "HijriMonthDays", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMinValue
::System::DateTime System::Globalization::HijriCalendar::_get_calendarMinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::_get_calendarMinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Globalization", "HijriCalendar", "calendarMinValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMinValue
void System::Globalization::HijriCalendar::_set_calendarMinValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::_set_calendarMinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HijriCalendar", "calendarMinValue", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMaxValue
::System::DateTime System::Globalization::HijriCalendar::_get_calendarMaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::_get_calendarMaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Globalization", "HijriCalendar", "calendarMaxValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMaxValue
void System::Globalization::HijriCalendar::_set_calendarMaxValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::_set_calendarMaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "HijriCalendar", "calendarMaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HijriAdvance
[[deprecated("Use field access instead!")]] int& System::Globalization::HijriCalendar::dyn_m_HijriAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::dyn_m_HijriAdvance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HijriAdvance"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetAbsoluteDateHijri
int64_t System::Globalization::HijriCalendar::GetAbsoluteDateHijri(int y, int m, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetAbsoluteDateHijri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbsoluteDateHijri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, y, m, d);
}
// Autogenerated method: System.Globalization.HijriCalendar.DaysUpToHijriYear
int64_t System::Globalization::HijriCalendar::DaysUpToHijriYear(int HijriYear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::DaysUpToHijriYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DaysUpToHijriYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(HijriYear)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, HijriYear);
}
// Autogenerated method: System.Globalization.HijriCalendar.get_HijriAdjustment
int System::Globalization::HijriCalendar::get_HijriAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::get_HijriAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HijriAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetAdvanceHijriDate
int System::Globalization::HijriCalendar::GetAdvanceHijriDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetAdvanceHijriDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HijriCalendar", "GetAdvanceHijriDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.HijriCalendar.CheckTicksRange
void System::Globalization::HijriCalendar::CheckTicksRange(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::CheckTicksRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HijriCalendar", "CheckTicksRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ticks);
}
// Autogenerated method: System.Globalization.HijriCalendar.CheckEraRange
void System::Globalization::HijriCalendar::CheckEraRange(int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::CheckEraRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HijriCalendar", "CheckEraRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(era)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, era);
}
// Autogenerated method: System.Globalization.HijriCalendar.CheckYearRange
void System::Globalization::HijriCalendar::CheckYearRange(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::CheckYearRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HijriCalendar", "CheckYearRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.HijriCalendar.CheckYearMonthRange
void System::Globalization::HijriCalendar::CheckYearMonthRange(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::CheckYearMonthRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HijriCalendar", "CheckYearMonthRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetDatePart
int System::Globalization::HijriCalendar::GetDatePart(int64_t ticks, int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetDatePart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::HijriCalendar*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ticks, part);
}
// Autogenerated method: System.Globalization.HijriCalendar..cctor
void System::Globalization::HijriCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "HijriCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.HijriCalendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::HijriCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.HijriCalendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::HijriCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.HijriCalendar.get_ID
int System::Globalization::HijriCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetDayOfMonth
int System::Globalization::HijriCalendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::HijriCalendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetDaysInMonth
int System::Globalization::HijriCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetDaysInYear
int System::Globalization::HijriCalendar::GetDaysInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetDaysInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetEra
int System::Globalization::HijriCalendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetEra");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.HijriCalendar.get_Eras
::ArrayW<int> System::Globalization::HijriCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetMonth
int System::Globalization::HijriCalendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetMonthsInYear
int System::Globalization::HijriCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.HijriCalendar.GetYear
int System::Globalization::HijriCalendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::GetYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.HijriCalendar.IsLeapYear
bool System::Globalization::HijriCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.HijriCalendar.ToDateTime
::System::DateTime System::Globalization::HijriCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.HijriCalendar.get_TwoDigitYearMax
int System::Globalization::HijriCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.HijriCalendar.set_TwoDigitYearMax
void System::Globalization::HijriCalendar::set_TwoDigitYearMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::set_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.HijriCalendar.ToFourDigitYear
int System::Globalization::HijriCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::HijriCalendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.JapaneseCalendar
#include "System/Globalization/JapaneseCalendar.hpp"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMinValue
::System::DateTime System::Globalization::JapaneseCalendar::_get_calendarMinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_get_calendarMinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Globalization", "JapaneseCalendar", "calendarMinValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMinValue
void System::Globalization::JapaneseCalendar::_set_calendarMinValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_set_calendarMinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "calendarMinValue", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.EraInfo[] japaneseEraInfo
::ArrayW<::System::Globalization::EraInfo*> System::Globalization::JapaneseCalendar::_get_japaneseEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_get_japaneseEraInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::EraInfo*>>("System.Globalization", "JapaneseCalendar", "japaneseEraInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.EraInfo[] japaneseEraInfo
void System::Globalization::JapaneseCalendar::_set_japaneseEraInfo(::ArrayW<::System::Globalization::EraInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_set_japaneseEraInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "japaneseEraInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.Calendar s_defaultInstance
::System::Globalization::Calendar* System::Globalization::JapaneseCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::Calendar*>("System.Globalization", "JapaneseCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.Calendar s_defaultInstance
void System::Globalization::JapaneseCalendar::_set_s_defaultInstance(::System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "s_defaultInstance", value));
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.GregorianCalendarHelper helper
[[deprecated("Use field access instead!")]] ::System::Globalization::GregorianCalendarHelper*& System::Globalization::JapaneseCalendar::dyn_helper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::dyn_helper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "helper"))->offset;
  return *reinterpret_cast<::System::Globalization::GregorianCalendarHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetEraInfo
::ArrayW<::System::Globalization::EraInfo*> System::Globalization::JapaneseCalendar::GetEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetEraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "GetEraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::EraInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetErasFromRegistry
::ArrayW<::System::Globalization::EraInfo*> System::Globalization::JapaneseCalendar::GetErasFromRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetErasFromRegistry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "GetErasFromRegistry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::EraInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDefaultInstance
::System::Globalization::Calendar* System::Globalization::JapaneseCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.EraNames
::ArrayW<::StringW> System::Globalization::JapaneseCalendar::EraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::EraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "EraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.EnglishEraNames
::ArrayW<::StringW> System::Globalization::JapaneseCalendar::EnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::EnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", "EnglishEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar..cctor
void System::Globalization::JapaneseCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::JapaneseCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::JapaneseCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_ID
int System::Globalization::JapaneseCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDaysInMonth
int System::Globalization::JapaneseCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDaysInYear
int System::Globalization::JapaneseCalendar::GetDaysInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetDaysInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDayOfMonth
int System::Globalization::JapaneseCalendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::JapaneseCalendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetMonthsInYear
int System::Globalization::JapaneseCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetEra
int System::Globalization::JapaneseCalendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetEra");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetMonth
int System::Globalization::JapaneseCalendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetYear
int System::Globalization::JapaneseCalendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::GetYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.IsLeapYear
bool System::Globalization::JapaneseCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.ToDateTime
::System::DateTime System::Globalization::JapaneseCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.ToFourDigitYear
int System::Globalization::JapaneseCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_Eras
::ArrayW<int> System::Globalization::JapaneseCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.IsValidYear
bool System::Globalization::JapaneseCalendar::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::IsValidYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_TwoDigitYearMax
int System::Globalization::JapaneseCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.set_TwoDigitYearMax
void System::Globalization::JapaneseCalendar::set_TwoDigitYearMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::JapaneseCalendar::set_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.NumberFormatInfo invariantInfo
::System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::_get_invariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::_get_invariantInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberFormatInfo*>("System.Globalization", "NumberFormatInfo", "invariantInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.NumberFormatInfo invariantInfo
void System::Globalization::NumberFormatInfo::_set_invariantInfo(::System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::_set_invariantInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberFormatInfo", "invariantInfo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.NumberStyles InvalidNumberStyles
::System::Globalization::NumberStyles System::Globalization::NumberFormatInfo::_get_InvalidNumberStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::_get_InvalidNumberStyles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberStyles>("System.Globalization", "NumberFormatInfo", "InvalidNumberStyles"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.NumberStyles InvalidNumberStyles
void System::Globalization::NumberFormatInfo::_set_InvalidNumberStyles(::System::Globalization::NumberStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::_set_InvalidNumberStyles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "NumberFormatInfo", "InvalidNumberStyles", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] numberGroupSizes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Globalization::NumberFormatInfo::dyn_numberGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_numberGroupSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberGroupSizes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] currencyGroupSizes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Globalization::NumberFormatInfo::dyn_currencyGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyGroupSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyGroupSizes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] percentGroupSizes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Globalization::NumberFormatInfo::dyn_percentGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentGroupSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentGroupSizes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String positiveSign
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_positiveSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_positiveSign");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positiveSign"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String negativeSign
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_negativeSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_negativeSign");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "negativeSign"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String numberDecimalSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_numberDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_numberDecimalSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberDecimalSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String numberGroupSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_numberGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_numberGroupSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberGroupSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String currencyGroupSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_currencyGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyGroupSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyGroupSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String currencyDecimalSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_currencyDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyDecimalSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyDecimalSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String currencySymbol
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_currencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String ansiCurrencySymbol
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_ansiCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_ansiCurrencySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ansiCurrencySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String nanSymbol
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_nanSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_nanSymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nanSymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String positiveInfinitySymbol
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_positiveInfinitySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_positiveInfinitySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positiveInfinitySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String negativeInfinitySymbol
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_negativeInfinitySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_negativeInfinitySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "negativeInfinitySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String percentDecimalSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_percentDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentDecimalSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentDecimalSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String percentGroupSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_percentGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentGroupSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentGroupSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String percentSymbol
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_percentSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentSymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentSymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String perMilleSymbol
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::NumberFormatInfo::dyn_perMilleSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_perMilleSymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perMilleSymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] nativeDigits
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::NumberFormatInfo::dyn_nativeDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_nativeDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeDigits"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_dataItem
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberFormatInfo::dyn_m_dataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_m_dataItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dataItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 numberDecimalDigits
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberFormatInfo::dyn_numberDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_numberDecimalDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberDecimalDigits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 currencyDecimalDigits
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberFormatInfo::dyn_currencyDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyDecimalDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyDecimalDigits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 currencyPositivePattern
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberFormatInfo::dyn_currencyPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyPositivePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyPositivePattern"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 currencyNegativePattern
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberFormatInfo::dyn_currencyNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_currencyNegativePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyNegativePattern"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 numberNegativePattern
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberFormatInfo::dyn_numberNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_numberNegativePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberNegativePattern"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 percentPositivePattern
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberFormatInfo::dyn_percentPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentPositivePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentPositivePattern"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 percentNegativePattern
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberFormatInfo::dyn_percentNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentNegativePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentNegativePattern"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 percentDecimalDigits
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberFormatInfo::dyn_percentDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_percentDecimalDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "percentDecimalDigits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 digitSubstitution
[[deprecated("Use field access instead!")]] int& System::Globalization::NumberFormatInfo::dyn_digitSubstitution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_digitSubstitution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "digitSubstitution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isReadOnly
[[deprecated("Use field access instead!")]] bool& System::Globalization::NumberFormatInfo::dyn_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_useUserOverride
[[deprecated("Use field access instead!")]] bool& System::Globalization::NumberFormatInfo::dyn_m_useUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_m_useUserOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useUserOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isInvariant
[[deprecated("Use field access instead!")]] bool& System::Globalization::NumberFormatInfo::dyn_m_isInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_m_isInvariant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isInvariant"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean validForParseAsNumber
[[deprecated("Use field access instead!")]] bool& System::Globalization::NumberFormatInfo::dyn_validForParseAsNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_validForParseAsNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validForParseAsNumber"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean validForParseAsCurrency
[[deprecated("Use field access instead!")]] bool& System::Globalization::NumberFormatInfo::dyn_validForParseAsCurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::dyn_validForParseAsCurrency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validForParseAsCurrency"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.OnSerializing
void System::Globalization::NumberFormatInfo::OnSerializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.OnDeserializing
void System::Globalization::NumberFormatInfo::OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.OnDeserialized
void System::Globalization::NumberFormatInfo::OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.VerifyWritable
void System::Globalization::NumberFormatInfo::VerifyWritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::VerifyWritable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyWritable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_InvariantInfo
::System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::get_InvariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_InvariantInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "get_InvariantInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.GetInstance
::System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::GetInstance(::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, formatProvider);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.Clone
::Il2CppObject* System::Globalization::NumberFormatInfo::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::NumberFormatInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyDecimalDigits
int System::Globalization::NumberFormatInfo::get_CurrencyDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyDecimalDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyDecimalSeparator
::StringW System::Globalization::NumberFormatInfo::get_CurrencyDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyDecimalSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyDecimalSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_IsReadOnly
bool System::Globalization::NumberFormatInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyGroupSizes
::ArrayW<int> System::Globalization::NumberFormatInfo::get_CurrencyGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyGroupSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyGroupSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberGroupSizes
::ArrayW<int> System::Globalization::NumberFormatInfo::get_NumberGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NumberGroupSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberGroupSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentGroupSizes
::ArrayW<int> System::Globalization::NumberFormatInfo::get_PercentGroupSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentGroupSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentGroupSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyGroupSeparator
::StringW System::Globalization::NumberFormatInfo::get_CurrencyGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyGroupSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencySymbol
::StringW System::Globalization::NumberFormatInfo::get_CurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencySymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencySymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrentInfo
::System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::get_CurrentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "get_CurrentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NaNSymbol
::StringW System::Globalization::NumberFormatInfo::get_NaNSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NaNSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NaNSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.set_NaNSymbol
void System::Globalization::NumberFormatInfo::set_NaNSymbol(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::set_NaNSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NaNSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyNegativePattern
int System::Globalization::NumberFormatInfo::get_CurrencyNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyNegativePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyNegativePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberNegativePattern
int System::Globalization::NumberFormatInfo::get_NumberNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NumberNegativePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberNegativePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentPositivePattern
int System::Globalization::NumberFormatInfo::get_PercentPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentPositivePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentPositivePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentNegativePattern
int System::Globalization::NumberFormatInfo::get_PercentNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentNegativePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentNegativePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NegativeInfinitySymbol
::StringW System::Globalization::NumberFormatInfo::get_NegativeInfinitySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NegativeInfinitySymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NegativeInfinitySymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NegativeSign
::StringW System::Globalization::NumberFormatInfo::get_NegativeSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NegativeSign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NegativeSign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberDecimalDigits
int System::Globalization::NumberFormatInfo::get_NumberDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NumberDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberDecimalDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberDecimalSeparator
::StringW System::Globalization::NumberFormatInfo::get_NumberDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NumberDecimalSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberDecimalSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_NumberGroupSeparator
::StringW System::Globalization::NumberFormatInfo::get_NumberGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_NumberGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberGroupSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_CurrencyPositivePattern
int System::Globalization::NumberFormatInfo::get_CurrencyPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_CurrencyPositivePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrencyPositivePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PositiveInfinitySymbol
::StringW System::Globalization::NumberFormatInfo::get_PositiveInfinitySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PositiveInfinitySymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositiveInfinitySymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PositiveSign
::StringW System::Globalization::NumberFormatInfo::get_PositiveSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PositiveSign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositiveSign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentDecimalDigits
int System::Globalization::NumberFormatInfo::get_PercentDecimalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentDecimalDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentDecimalDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentDecimalSeparator
::StringW System::Globalization::NumberFormatInfo::get_PercentDecimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentDecimalSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentDecimalSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentGroupSeparator
::StringW System::Globalization::NumberFormatInfo::get_PercentGroupSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentGroupSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentGroupSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PercentSymbol
::StringW System::Globalization::NumberFormatInfo::get_PercentSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PercentSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.get_PerMilleSymbol
::StringW System::Globalization::NumberFormatInfo::get_PerMilleSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::get_PerMilleSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PerMilleSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.GetFormat
::Il2CppObject* System::Globalization::NumberFormatInfo::GetFormat(::System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::GetFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::NumberFormatInfo*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.ReadOnly
::System::Globalization::NumberFormatInfo* System::Globalization::NumberFormatInfo::ReadOnly(::System::Globalization::NumberFormatInfo* nfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nfi)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nfi);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.ValidateParseStyleInteger
void System::Globalization::NumberFormatInfo::ValidateParseStyleInteger(::System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::ValidateParseStyleInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "ValidateParseStyleInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, style);
}
// Autogenerated method: System.Globalization.NumberFormatInfo.ValidateParseStyleFloatingPoint
void System::Globalization::NumberFormatInfo::ValidateParseStyleFloatingPoint(::System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::NumberFormatInfo::ValidateParseStyleFloatingPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "NumberFormatInfo", "ValidateParseStyleFloatingPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, style);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TaiwanCalendar
#include "System/Globalization/TaiwanCalendar.hpp"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.EraInfo[] taiwanEraInfo
::ArrayW<::System::Globalization::EraInfo*> System::Globalization::TaiwanCalendar::_get_taiwanEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_get_taiwanEraInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::EraInfo*>>("System.Globalization", "TaiwanCalendar", "taiwanEraInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.EraInfo[] taiwanEraInfo
void System::Globalization::TaiwanCalendar::_set_taiwanEraInfo(::ArrayW<::System::Globalization::EraInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_set_taiwanEraInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "taiwanEraInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.Calendar s_defaultInstance
::System::Globalization::Calendar* System::Globalization::TaiwanCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::Calendar*>("System.Globalization", "TaiwanCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.Calendar s_defaultInstance
void System::Globalization::TaiwanCalendar::_set_s_defaultInstance(::System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "s_defaultInstance", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMinValue
::System::DateTime System::Globalization::TaiwanCalendar::_get_calendarMinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_get_calendarMinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Globalization", "TaiwanCalendar", "calendarMinValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMinValue
void System::Globalization::TaiwanCalendar::_set_calendarMinValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::_set_calendarMinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "calendarMinValue", value));
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.GregorianCalendarHelper helper
[[deprecated("Use field access instead!")]] ::System::Globalization::GregorianCalendarHelper*& System::Globalization::TaiwanCalendar::dyn_helper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::dyn_helper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "helper"))->offset;
  return *reinterpret_cast<::System::Globalization::GregorianCalendarHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDefaultInstance
::System::Globalization::Calendar* System::Globalization::TaiwanCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TaiwanCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar..cctor
void System::Globalization::TaiwanCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TaiwanCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::TaiwanCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::TaiwanCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_ID
int System::Globalization::TaiwanCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDaysInMonth
int System::Globalization::TaiwanCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDaysInYear
int System::Globalization::TaiwanCalendar::GetDaysInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetDaysInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDayOfMonth
int System::Globalization::TaiwanCalendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::TaiwanCalendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetMonthsInYear
int System::Globalization::TaiwanCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetEra
int System::Globalization::TaiwanCalendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetEra");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetMonth
int System::Globalization::TaiwanCalendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetYear
int System::Globalization::TaiwanCalendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::GetYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.IsLeapYear
bool System::Globalization::TaiwanCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.ToDateTime
::System::DateTime System::Globalization::TaiwanCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_Eras
::ArrayW<int> System::Globalization::TaiwanCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_TwoDigitYearMax
int System::Globalization::TaiwanCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.set_TwoDigitYearMax
void System::Globalization::TaiwanCalendar::set_TwoDigitYearMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::set_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.ToFourDigitYear
int System::Globalization::TaiwanCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TaiwanCalendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.TextInfo s_Invariant
::System::Globalization::TextInfo* System::Globalization::TextInfo::_get_s_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::_get_s_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::TextInfo*>("System.Globalization", "TextInfo", "s_Invariant"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.TextInfo s_Invariant
void System::Globalization::TextInfo::_set_s_Invariant(::System::Globalization::TextInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::_set_s_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfo", "s_Invariant", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 wordSeparatorMask
int System::Globalization::TextInfo::_get_wordSeparatorMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::_get_wordSeparatorMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "TextInfo", "wordSeparatorMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 wordSeparatorMask
void System::Globalization::TextInfo::_set_wordSeparatorMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::_set_wordSeparatorMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfo", "wordSeparatorMask", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_listSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::TextInfo::dyn_m_listSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_listSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_listSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isReadOnly
[[deprecated("Use field access instead!")]] bool& System::Globalization::TextInfo::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_cultureName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::TextInfo::dyn_m_cultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_cultureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureData m_cultureData
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureData*& System::Globalization::TextInfo::dyn_m_cultureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_cultureData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureData"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_textInfoName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::TextInfo::dyn_m_textInfoName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_textInfoName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textInfoName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> m_IsAsciiCasingSameAsInvariant
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Globalization::TextInfo::dyn_m_IsAsciiCasingSameAsInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_IsAsciiCasingSameAsInvariant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsAsciiCasingSameAsInvariant"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String customCultureName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::TextInfo::dyn_customCultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_customCultureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customCultureName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_nDataItem
[[deprecated("Use field access instead!")]] int& System::Globalization::TextInfo::dyn_m_nDataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_nDataItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nDataItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_useUserOverride
[[deprecated("Use field access instead!")]] bool& System::Globalization::TextInfo::dyn_m_useUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_useUserOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useUserOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_win32LangID
[[deprecated("Use field access instead!")]] int& System::Globalization::TextInfo::dyn_m_win32LangID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::dyn_m_win32LangID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_win32LangID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.TextInfo.get_Invariant
::System::Globalization::TextInfo* System::Globalization::TextInfo::get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::get_Invariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "get_Invariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TextInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.OnDeserializing
void System::Globalization::TextInfo::OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.TextInfo.OnDeserialized
void System::Globalization::TextInfo::OnDeserialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.OnDeserialized
void System::Globalization::TextInfo::OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.TextInfo.OnSerializing
void System::Globalization::TextInfo::OnSerializing(::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.TextInfo.get_CultureName
::StringW System::Globalization::TextInfo::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.get_IsReadOnly
bool System::Globalization::TextInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.Clone
::Il2CppObject* System::Globalization::TextInfo::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::TextInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.ReadOnly
::System::Globalization::TextInfo* System::Globalization::TextInfo::ReadOnly(::System::Globalization::TextInfo* textInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TextInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textInfo);
}
// Autogenerated method: System.Globalization.TextInfo.SetReadOnlyState
void System::Globalization::TextInfo::SetReadOnlyState(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::SetReadOnlyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReadOnlyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.TextInfo.ToLower
::Il2CppChar System::Globalization::TextInfo::ToLower(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToLower");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::TextInfo*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToLower
::StringW System::Globalization::TextInfo::ToLower(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToLower");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::TextInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToLowerAsciiInvariant
::Il2CppChar System::Globalization::TextInfo::ToLowerAsciiInvariant(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToLowerAsciiInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "ToLowerAsciiInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpper
::Il2CppChar System::Globalization::TextInfo::ToUpper(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpper");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::TextInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpper
::StringW System::Globalization::TextInfo::ToUpper(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpper");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::TextInfo*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpperAsciiInvariant
::Il2CppChar System::Globalization::TextInfo::ToUpperAsciiInvariant(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpperAsciiInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "ToUpperAsciiInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.IsAscii
bool System::Globalization::TextInfo::IsAscii(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::IsAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "IsAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.get_IsAsciiCasingSameAsInvariant
bool System::Globalization::TextInfo::get_IsAsciiCasingSameAsInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::get_IsAsciiCasingSameAsInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAsciiCasingSameAsInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.ToTitleCase
::StringW System::Globalization::TextInfo::ToTitleCase(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToTitleCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToTitleCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.AddNonLetter
int System::Globalization::TextInfo::AddNonLetter(ByRef<::System::Text::StringBuilder*> result, ByRef<::StringW> input, int inputIndex, int charLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::AddNonLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "AddNonLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inputIndex), ::il2cpp_utils::ExtractType(charLen)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(result), byref(input), inputIndex, charLen);
}
// Autogenerated method: System.Globalization.TextInfo.AddTitlecaseLetter
int System::Globalization::TextInfo::AddTitlecaseLetter(ByRef<::System::Text::StringBuilder*> result, ByRef<::StringW> input, int inputIndex, int charLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::AddTitlecaseLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTitlecaseLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inputIndex), ::il2cpp_utils::ExtractType(charLen)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(result), byref(input), inputIndex, charLen);
}
// Autogenerated method: System.Globalization.TextInfo.IsWordSeparator
bool System::Globalization::TextInfo::IsWordSeparator(::System::Globalization::UnicodeCategory category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::IsWordSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "IsWordSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, category);
}
// Autogenerated method: System.Globalization.TextInfo.IsLetterCategory
bool System::Globalization::TextInfo::IsLetterCategory(::System::Globalization::UnicodeCategory uc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::IsLetterCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfo", "IsLetterCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uc);
}
// Autogenerated method: System.Globalization.TextInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Globalization::TextInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::TextInfo*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpperInternal
::StringW System::Globalization::TextInfo::ToUpperInternal(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpperInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpperInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToLowerInternal
::StringW System::Globalization::TextInfo::ToLowerInternal(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToLowerInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLowerInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpperInternal
::Il2CppChar System::Globalization::TextInfo::ToUpperInternal(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpperInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpperInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToLowerInternal
::Il2CppChar System::Globalization::TextInfo::ToLowerInternal(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToLowerInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLowerInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.TextInfo.ToUpperAsciiInvariant
void System::Globalization::TextInfo::ToUpperAsciiInvariant(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::Span_1<::Il2CppChar> destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToUpperAsciiInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpperAsciiInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, destination);
}
// Autogenerated method: System.Globalization.TextInfo.ChangeCase
void System::Globalization::TextInfo::ChangeCase(::System::ReadOnlySpan_1<::Il2CppChar> source, ::System::Span_1<::Il2CppChar> destination, bool toUpper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ChangeCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(toUpper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, destination, toUpper);
}
// Autogenerated method: System.Globalization.TextInfo.Equals
bool System::Globalization::TextInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Globalization.TextInfo.GetHashCode
int System::Globalization::TextInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TextInfo.ToString
::StringW System::Globalization::TextInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.ThaiBuddhistCalendar
#include "System/Globalization/ThaiBuddhistCalendar.hpp"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.EraInfo[] thaiBuddhistEraInfo
::ArrayW<::System::Globalization::EraInfo*> System::Globalization::ThaiBuddhistCalendar::_get_thaiBuddhistEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::_get_thaiBuddhistEraInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::EraInfo*>>("System.Globalization", "ThaiBuddhistCalendar", "thaiBuddhistEraInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.EraInfo[] thaiBuddhistEraInfo
void System::Globalization::ThaiBuddhistCalendar::_set_thaiBuddhistEraInfo(::ArrayW<::System::Globalization::EraInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::_set_thaiBuddhistEraInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "ThaiBuddhistCalendar", "thaiBuddhistEraInfo", value));
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.GregorianCalendarHelper helper
[[deprecated("Use field access instead!")]] ::System::Globalization::GregorianCalendarHelper*& System::Globalization::ThaiBuddhistCalendar::dyn_helper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::dyn_helper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "helper"))->offset;
  return *reinterpret_cast<::System::Globalization::GregorianCalendarHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar..cctor
void System::Globalization::ThaiBuddhistCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "ThaiBuddhistCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::ThaiBuddhistCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::ThaiBuddhistCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.get_ID
int System::Globalization::ThaiBuddhistCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth
int System::Globalization::ThaiBuddhistCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.GetDaysInYear
int System::Globalization::ThaiBuddhistCalendar::GetDaysInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::GetDaysInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth
int System::Globalization::ThaiBuddhistCalendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::ThaiBuddhistCalendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear
int System::Globalization::ThaiBuddhistCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.GetEra
int System::Globalization::ThaiBuddhistCalendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::GetEra");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.GetMonth
int System::Globalization::ThaiBuddhistCalendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.GetYear
int System::Globalization::ThaiBuddhistCalendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::GetYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.IsLeapYear
bool System::Globalization::ThaiBuddhistCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.ToDateTime
::System::DateTime System::Globalization::ThaiBuddhistCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.get_Eras
::ArrayW<int> System::Globalization::ThaiBuddhistCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.get_TwoDigitYearMax
int System::Globalization::ThaiBuddhistCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.set_TwoDigitYearMax
void System::Globalization::ThaiBuddhistCalendar::set_TwoDigitYearMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::set_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear
int System::Globalization::ThaiBuddhistCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ThaiBuddhistCalendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.UmAlQuraCalendar
#include "System/Globalization/UmAlQuraCalendar.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.UmAlQuraCalendar/DateMapping[] HijriYearInfo
::ArrayW<::System::Globalization::UmAlQuraCalendar::DateMapping> System::Globalization::UmAlQuraCalendar::_get_HijriYearInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::_get_HijriYearInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::UmAlQuraCalendar::DateMapping>>("System.Globalization", "UmAlQuraCalendar", "HijriYearInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.UmAlQuraCalendar/DateMapping[] HijriYearInfo
void System::Globalization::UmAlQuraCalendar::_set_HijriYearInfo(::ArrayW<::System::Globalization::UmAlQuraCalendar::DateMapping> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::_set_HijriYearInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UmAlQuraCalendar", "HijriYearInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.DateTime minDate
::System::DateTime System::Globalization::UmAlQuraCalendar::_get_minDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::_get_minDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Globalization", "UmAlQuraCalendar", "minDate"));
}
// Autogenerated static field setter
// Set static field: static System.DateTime minDate
void System::Globalization::UmAlQuraCalendar::_set_minDate(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::_set_minDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UmAlQuraCalendar", "minDate", value));
}
// Autogenerated static field getter
// Get static field: static System.DateTime maxDate
::System::DateTime System::Globalization::UmAlQuraCalendar::_get_maxDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::_get_maxDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Globalization", "UmAlQuraCalendar", "maxDate"));
}
// Autogenerated static field setter
// Set static field: static System.DateTime maxDate
void System::Globalization::UmAlQuraCalendar::_set_maxDate(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::_set_maxDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "UmAlQuraCalendar", "maxDate", value));
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.InitDateMapping
::ArrayW<::System::Globalization::UmAlQuraCalendar::DateMapping> System::Globalization::UmAlQuraCalendar::InitDateMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::InitDateMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "UmAlQuraCalendar", "InitDateMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::UmAlQuraCalendar::DateMapping>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.ConvertHijriToGregorian
void System::Globalization::UmAlQuraCalendar::ConvertHijriToGregorian(int HijriYear, int HijriMonth, int HijriDay, ByRef<int> yg, ByRef<int> mg, ByRef<int> dg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::ConvertHijriToGregorian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "UmAlQuraCalendar", "ConvertHijriToGregorian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(HijriYear), ::il2cpp_utils::ExtractType(HijriMonth), ::il2cpp_utils::ExtractType(HijriDay), ::il2cpp_utils::ExtractType(yg), ::il2cpp_utils::ExtractType(mg), ::il2cpp_utils::ExtractType(dg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, HijriYear, HijriMonth, HijriDay, byref(yg), byref(mg), byref(dg));
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.GetAbsoluteDateUmAlQura
int64_t System::Globalization::UmAlQuraCalendar::GetAbsoluteDateUmAlQura(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::GetAbsoluteDateUmAlQura");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "UmAlQuraCalendar", "GetAbsoluteDateUmAlQura", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.CheckTicksRange
void System::Globalization::UmAlQuraCalendar::CheckTicksRange(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::CheckTicksRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "UmAlQuraCalendar", "CheckTicksRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ticks);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.CheckEraRange
void System::Globalization::UmAlQuraCalendar::CheckEraRange(int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::CheckEraRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "UmAlQuraCalendar", "CheckEraRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(era)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, era);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.CheckYearRange
void System::Globalization::UmAlQuraCalendar::CheckYearRange(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::CheckYearRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "UmAlQuraCalendar", "CheckYearRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.CheckYearMonthRange
void System::Globalization::UmAlQuraCalendar::CheckYearMonthRange(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::CheckYearMonthRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "UmAlQuraCalendar", "CheckYearMonthRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.ConvertGregorianToHijri
void System::Globalization::UmAlQuraCalendar::ConvertGregorianToHijri(::System::DateTime time, ByRef<int> HijriYear, ByRef<int> HijriMonth, ByRef<int> HijriDay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::ConvertGregorianToHijri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "UmAlQuraCalendar", "ConvertGregorianToHijri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(HijriYear), ::il2cpp_utils::ExtractType(HijriMonth), ::il2cpp_utils::ExtractType(HijriDay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, byref(HijriYear), byref(HijriMonth), byref(HijriDay));
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.GetDatePart
int System::Globalization::UmAlQuraCalendar::GetDatePart(::System::DateTime time, int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::GetDatePart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::UmAlQuraCalendar*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time, part);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.RealGetDaysInYear
int System::Globalization::UmAlQuraCalendar::RealGetDaysInYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::RealGetDaysInYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "UmAlQuraCalendar", "RealGetDaysInYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar..cctor
void System::Globalization::UmAlQuraCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "UmAlQuraCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.get_MinSupportedDateTime
::System::DateTime System::Globalization::UmAlQuraCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.get_MaxSupportedDateTime
::System::DateTime System::Globalization::UmAlQuraCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.get_BaseCalendarID
int System::Globalization::UmAlQuraCalendar::get_BaseCalendarID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::get_BaseCalendarID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.get_ID
int System::Globalization::UmAlQuraCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.GetDayOfMonth
int System::Globalization::UmAlQuraCalendar::GetDayOfMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.GetDayOfWeek
::System::DayOfWeek System::Globalization::UmAlQuraCalendar::GetDayOfWeek(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.GetDaysInMonth
int System::Globalization::UmAlQuraCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.GetDaysInYear
int System::Globalization::UmAlQuraCalendar::GetDaysInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::GetDaysInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.GetEra
int System::Globalization::UmAlQuraCalendar::GetEra(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::GetEra");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.get_Eras
::ArrayW<int> System::Globalization::UmAlQuraCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.GetMonth
int System::Globalization::UmAlQuraCalendar::GetMonth(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.GetMonthsInYear
int System::Globalization::UmAlQuraCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.GetYear
int System::Globalization::UmAlQuraCalendar::GetYear(::System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::GetYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.IsLeapYear
bool System::Globalization::UmAlQuraCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.ToDateTime
::System::DateTime System::Globalization::UmAlQuraCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.get_TwoDigitYearMax
int System::Globalization::UmAlQuraCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.set_TwoDigitYearMax
void System::Globalization::UmAlQuraCalendar::set_TwoDigitYearMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::set_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar.ToFourDigitYear
int System::Globalization::UmAlQuraCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::Calendar*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, year);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.UmAlQuraCalendar/DateMapping
#include "System/Globalization/UmAlQuraCalendar.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 HijriMonthsLengthFlags
[[deprecated("Use field access instead!")]] int& System::Globalization::UmAlQuraCalendar::DateMapping::dyn_HijriMonthsLengthFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::DateMapping::dyn_HijriMonthsLengthFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HijriMonthsLengthFlags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.DateTime GregorianDate
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Globalization::UmAlQuraCalendar::DateMapping::dyn_GregorianDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::DateMapping::dyn_GregorianDate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GregorianDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.UmAlQuraCalendar/DateMapping..ctor
System::Globalization::UmAlQuraCalendar::DateMapping::DateMapping(int MonthsLengthFlags, int GYear, int GMonth, int GDay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::UmAlQuraCalendar::DateMapping::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(MonthsLengthFlags), ::il2cpp_utils::ExtractType(GYear), ::il2cpp_utils::ExtractType(GMonth), ::il2cpp_utils::ExtractType(GDay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, MonthsLengthFlags, GYear, GMonth, GDay);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String source
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::SortKey::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] key
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Globalization::SortKey::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Globalization.CompareOptions options
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareOptions& System::Globalization::SortKey::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 lcid
[[deprecated("Use field access instead!")]] int& System::Globalization::SortKey::dyn_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::dyn_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.SortKey.Compare
int System::Globalization::SortKey::Compare(::System::Globalization::SortKey* sortkey1, ::System::Globalization::SortKey* sortkey2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "SortKey", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortkey1), ::il2cpp_utils::ExtractType(sortkey2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sortkey1, sortkey2);
}
// Autogenerated method: System.Globalization.SortKey.get_OriginalString
::StringW System::Globalization::SortKey::get_OriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::get_OriginalString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::SortKey*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.get_KeyData
::ArrayW<uint8_t> System::Globalization::SortKey::get_KeyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::get_KeyData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::SortKey*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.Equals
bool System::Globalization::SortKey::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.SortKey.GetHashCode
int System::Globalization::SortKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.SortKey.ToString
::StringW System::Globalization::SortKey::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::SortKey::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.ISimpleCollator
#include "System/Globalization/ISimpleCollator.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.ISimpleCollator.GetSortKey
::System::Globalization::SortKey* System::Globalization::ISimpleCollator::GetSortKey(::StringW source, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ISimpleCollator::GetSortKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::ISimpleCollator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.ISimpleCollator.Compare
int System::Globalization::ISimpleCollator::Compare(::StringW s1, int idx1, int len1, ::StringW s2, int idx2, int len2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ISimpleCollator::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::ISimpleCollator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, idx1, len1, s2, idx2, len2, options);
}
// Autogenerated method: System.Globalization.ISimpleCollator.IsPrefix
bool System::Globalization::ISimpleCollator::IsPrefix(::StringW src, ::StringW target, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ISimpleCollator::IsPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::ISimpleCollator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, src, target, opt);
}
// Autogenerated method: System.Globalization.ISimpleCollator.IsSuffix
bool System::Globalization::ISimpleCollator::IsSuffix(::StringW src, ::StringW target, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ISimpleCollator::IsSuffix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::ISimpleCollator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, src, target, opt);
}
// Autogenerated method: System.Globalization.ISimpleCollator.IndexOf
int System::Globalization::ISimpleCollator::IndexOf(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ISimpleCollator::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::ISimpleCollator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: System.Globalization.ISimpleCollator.LastIndexOf
int System::Globalization::ISimpleCollator::LastIndexOf(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::ISimpleCollator::LastIndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::ISimpleCollator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Globalization.CultureData/NumberFormatEntryManaged
#include "System/Globalization/CultureData_NumberFormatEntryManaged.hpp"
// Including type: System.Globalization.CalendarData
#include "System/Globalization/CalendarData.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureData s_Invariant
::System::Globalization::CultureData* System::Globalization::CultureData::_get_s_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::_get_s_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureData*>("System.Globalization", "CultureData", "s_Invariant"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureData s_Invariant
void System::Globalization::CultureData::_set_s_Invariant(::System::Globalization::CultureData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::_set_s_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureData", "s_Invariant", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String sAM1159
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureData::dyn_sAM1159() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sAM1159");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sAM1159"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sPM2359
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureData::dyn_sPM2359() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sPM2359");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sPM2359"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sTimeSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureData::dyn_sTimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sTimeSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sTimeSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] saLongTimes
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CultureData::dyn_saLongTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_saLongTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saLongTimes"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] saShortTimes
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CultureData::dyn_saShortTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_saShortTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saShortTimes"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iFirstDayOfWeek
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureData::dyn_iFirstDayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iFirstDayOfWeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iFirstDayOfWeek"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iFirstWeekOfYear
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureData::dyn_iFirstWeekOfYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iFirstWeekOfYear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iFirstWeekOfYear"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] waCalendars
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Globalization::CultureData::dyn_waCalendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_waCalendars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waCalendars"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CalendarData[] calendars
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Globalization::CalendarData*>& System::Globalization::CultureData::dyn_calendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_calendars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendars"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Globalization::CalendarData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sISO639Language
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureData::dyn_sISO639Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sISO639Language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sISO639Language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String sRealName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureData::dyn_sRealName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sRealName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sRealName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean bUseOverrides
[[deprecated("Use field access instead!")]] bool& System::Globalization::CultureData::dyn_bUseOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_bUseOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bUseOverrides"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 calendarId
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureData::dyn_calendarId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_calendarId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendarId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 numberIndex
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureData::dyn_numberIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_numberIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultAnsiCodePage
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureData::dyn_iDefaultAnsiCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultAnsiCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultAnsiCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultOemCodePage
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureData::dyn_iDefaultOemCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultOemCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultOemCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultMacCodePage
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureData::dyn_iDefaultMacCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultMacCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultMacCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iDefaultEbcdicCodePage
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureData::dyn_iDefaultEbcdicCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_iDefaultEbcdicCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDefaultEbcdicCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRightToLeft
[[deprecated("Use field access instead!")]] bool& System::Globalization::CultureData::dyn_isRightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_isRightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sListSeparator
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureData::dyn_sListSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::dyn_sListSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sListSeparator"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CultureData.get_Invariant
::System::Globalization::CultureData* System::Globalization::CultureData::get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_Invariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "get_Invariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
::System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(::StringW cultureName, bool useUserOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureName), ::il2cpp_utils::ExtractType(useUserOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cultureName, useUserOverride);
}
// Autogenerated method: System.Globalization.CultureData.GetCultureData
::System::Globalization::CultureData* System::Globalization::CultureData::GetCultureData(::StringW cultureName, bool useUserOverride, int datetimeIndex, int calendarId, int numberIndex, ::StringW iso2lang, int ansiCodePage, int oemCodePage, int macCodePage, int ebcdicCodePage, bool rightToLeft, ::StringW listSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCultureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetCultureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureName), ::il2cpp_utils::ExtractType(useUserOverride), ::il2cpp_utils::ExtractType(datetimeIndex), ::il2cpp_utils::ExtractType(calendarId), ::il2cpp_utils::ExtractType(numberIndex), ::il2cpp_utils::ExtractType(iso2lang), ::il2cpp_utils::ExtractType(ansiCodePage), ::il2cpp_utils::ExtractType(oemCodePage), ::il2cpp_utils::ExtractType(macCodePage), ::il2cpp_utils::ExtractType(ebcdicCodePage), ::il2cpp_utils::ExtractType(rightToLeft), ::il2cpp_utils::ExtractType(listSeparator)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cultureName, useUserOverride, datetimeIndex, calendarId, numberIndex, iso2lang, ansiCodePage, oemCodePage, macCodePage, ebcdicCodePage, rightToLeft, listSeparator);
}
// Autogenerated method: System.Globalization.CultureData.fill_culture_data
void System::Globalization::CultureData::fill_culture_data(int datetimeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::fill_culture_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fill_culture_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datetimeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, datetimeIndex);
}
// Autogenerated method: System.Globalization.CultureData.GetCalendar
::System::Globalization::CalendarData* System::Globalization::CultureData::GetCalendar(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCalendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CalendarData*, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.get_LongTimes
::ArrayW<::StringW> System::Globalization::CultureData::get_LongTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_LongTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_ShortTimes
::ArrayW<::StringW> System::Globalization::CultureData::get_ShortTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_ShortTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShortTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SISO639LANGNAME
::StringW System::Globalization::CultureData::get_SISO639LANGNAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SISO639LANGNAME");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SISO639LANGNAME", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IFIRSTDAYOFWEEK
int System::Globalization::CultureData::get_IFIRSTDAYOFWEEK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_IFIRSTDAYOFWEEK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IFIRSTDAYOFWEEK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IFIRSTWEEKOFYEAR
int System::Globalization::CultureData::get_IFIRSTWEEKOFYEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_IFIRSTWEEKOFYEAR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IFIRSTWEEKOFYEAR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SAM1159
::StringW System::Globalization::CultureData::get_SAM1159() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SAM1159");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SAM1159", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SPM2359
::StringW System::Globalization::CultureData::get_SPM2359() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SPM2359");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SPM2359", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_TimeSeparator
::StringW System::Globalization::CultureData::get_TimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_TimeSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_CalendarIds
::ArrayW<int> System::Globalization::CultureData::get_CalendarIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_CalendarIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CalendarIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.GetCalendarIds
::ArrayW<::System::Globalization::CalendarId> System::Globalization::CultureData::GetCalendarIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetCalendarIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalendarIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::CalendarId>, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_IsInvariantCulture
bool System::Globalization::CultureData::get_IsInvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_IsInvariantCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInvariantCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_CultureName
::StringW System::Globalization::CultureData::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_SCOMPAREINFO
::StringW System::Globalization::CultureData::get_SCOMPAREINFO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_SCOMPAREINFO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SCOMPAREINFO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_STEXTINFO
::StringW System::Globalization::CultureData::get_STEXTINFO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_STEXTINFO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_STEXTINFO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.get_UseUserOverride
bool System::Globalization::CultureData::get_UseUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::get_UseUserOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseUserOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureData.EraNames
::ArrayW<::StringW> System::Globalization::CultureData::EraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::EraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbrevEraNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbrevEraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbrevEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbrevEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedEnglishEraNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedEnglishEraNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedEnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedEnglishEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.ShortDates
::ArrayW<::StringW> System::Globalization::CultureData::ShortDates(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::ShortDates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShortDates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.LongDates
::ArrayW<::StringW> System::Globalization::CultureData::LongDates(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::LongDates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LongDates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.YearMonths
::ArrayW<::StringW> System::Globalization::CultureData::YearMonths(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::YearMonths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "YearMonths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.DayNames
::ArrayW<::StringW> System::Globalization::CultureData::DayNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::DayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedDayNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedDayNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.MonthNames
::ArrayW<::StringW> System::Globalization::CultureData::MonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::MonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.GenitiveMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::GenitiveMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenitiveMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.AbbreviatedGenitiveMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::AbbreviatedGenitiveMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::AbbreviatedGenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbbreviatedGenitiveMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.LeapYearMonthNames
::ArrayW<::StringW> System::Globalization::CultureData::LeapYearMonthNames(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::LeapYearMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeapYearMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.MonthDay
::StringW System::Globalization::CultureData::MonthDay(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::MonthDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MonthDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.DateSeparator
::StringW System::Globalization::CultureData::DateSeparator(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::DateSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DateSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CultureData.GetDateSeparator
::StringW System::Globalization::CultureData::GetDateSeparator(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetDateSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetDateSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: System.Globalization.CultureData.GetSeparator
::StringW System::Globalization::CultureData::GetSeparator(::StringW format, ::StringW timeParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "GetSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(timeParts)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, timeParts);
}
// Autogenerated method: System.Globalization.CultureData.IndexOfTimePart
int System::Globalization::CultureData::IndexOfTimePart(::StringW format, int startIndex, ::StringW timeParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::IndexOfTimePart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "IndexOfTimePart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(timeParts)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, startIndex, timeParts);
}
// Autogenerated method: System.Globalization.CultureData.UnescapeNlsString
::StringW System::Globalization::CultureData::UnescapeNlsString(::StringW str, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::UnescapeNlsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "UnescapeNlsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end);
}
// Autogenerated method: System.Globalization.CultureData.ReescapeWin32Strings
::ArrayW<::StringW> System::Globalization::CultureData::ReescapeWin32Strings(::ArrayW<::StringW> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::ReescapeWin32Strings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "ReescapeWin32Strings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Globalization.CultureData.ReescapeWin32String
::StringW System::Globalization::CultureData::ReescapeWin32String(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::ReescapeWin32String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "ReescapeWin32String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Globalization.CultureData.strlen
int System::Globalization::CultureData::strlen(uint8_t* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::strlen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "strlen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Globalization.CultureData.idx2string
::StringW System::Globalization::CultureData::idx2string(uint8_t* data, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::idx2string");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "idx2string", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, idx);
}
// Autogenerated method: System.Globalization.CultureData.create_group_sizes_array
::ArrayW<int> System::Globalization::CultureData::create_group_sizes_array(int gs0, int gs1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::create_group_sizes_array");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "create_group_sizes_array", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gs0), ::il2cpp_utils::ExtractType(gs1)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method, gs0, gs1);
}
// Autogenerated method: System.Globalization.CultureData.GetNFIValues
void System::Globalization::CultureData::GetNFIValues(::System::Globalization::NumberFormatInfo* nfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::GetNFIValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNFIValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nfi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nfi);
}
// Autogenerated method: System.Globalization.CultureData.fill_number_data
uint8_t* System::Globalization::CultureData::fill_number_data(int index, ByRef<::System::Globalization::CultureData::NumberFormatEntryManaged> nfe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureData::fill_number_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureData", "fill_number_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(nfe)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index, byref(nfe));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.CodePageDataItem
#include "System/Globalization/CodePageDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] sep
::ArrayW<::Il2CppChar> System::Globalization::CodePageDataItem::_get_sep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::_get_sep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "CodePageDataItem", "sep"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] sep
void System::Globalization::CodePageDataItem::_set_sep(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::_set_sep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CodePageDataItem", "sep", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_dataIndex
[[deprecated("Use field access instead!")]] int& System::Globalization::CodePageDataItem::dyn_m_dataIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_dataIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dataIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_uiFamilyCodePage
[[deprecated("Use field access instead!")]] int& System::Globalization::CodePageDataItem::dyn_m_uiFamilyCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_uiFamilyCodePage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_uiFamilyCodePage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_webName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CodePageDataItem::dyn_m_webName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_webName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_webName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_headerName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CodePageDataItem::dyn_m_headerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_headerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_bodyName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CodePageDataItem::dyn_m_bodyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_bodyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bodyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_flags
[[deprecated("Use field access instead!")]] uint& System::Globalization::CodePageDataItem::dyn_m_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::dyn_m_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CodePageDataItem.CreateString
::StringW System::Globalization::CodePageDataItem::CreateString(::StringW pStrings, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CodePageDataItem", "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStrings), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pStrings, index);
}
// Autogenerated method: System.Globalization.CodePageDataItem.get_WebName
::StringW System::Globalization::CodePageDataItem::get_WebName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::get_WebName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WebName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CodePageDataItem.get_HeaderName
::StringW System::Globalization::CodePageDataItem::get_HeaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::get_HeaderName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HeaderName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CodePageDataItem..cctor
void System::Globalization::CodePageDataItem::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CodePageDataItem::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CodePageDataItem", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.EncodingTable
#include "System/Globalization/EncodingTable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.CodePageDataItem
#include "System/Globalization/CodePageDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.InternalEncodingDataItem[] encodingDataPtr
::ArrayW<::System::Globalization::InternalEncodingDataItem> System::Globalization::EncodingTable::_get_encodingDataPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_encodingDataPtr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::InternalEncodingDataItem>>("System.Globalization", "EncodingTable", "encodingDataPtr"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.InternalEncodingDataItem[] encodingDataPtr
void System::Globalization::EncodingTable::_set_encodingDataPtr(::ArrayW<::System::Globalization::InternalEncodingDataItem> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_encodingDataPtr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "encodingDataPtr", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.InternalCodePageDataItem[] codePageDataPtr
::ArrayW<::System::Globalization::InternalCodePageDataItem> System::Globalization::EncodingTable::_get_codePageDataPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_codePageDataPtr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Globalization::InternalCodePageDataItem>>("System.Globalization", "EncodingTable", "codePageDataPtr"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.InternalCodePageDataItem[] codePageDataPtr
void System::Globalization::EncodingTable::_set_codePageDataPtr(::ArrayW<::System::Globalization::InternalCodePageDataItem> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_codePageDataPtr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "codePageDataPtr", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 lastEncodingItem
int System::Globalization::EncodingTable::_get_lastEncodingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_lastEncodingItem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "EncodingTable", "lastEncodingItem"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lastEncodingItem
void System::Globalization::EncodingTable::_set_lastEncodingItem(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_lastEncodingItem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "lastEncodingItem", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> hashByName
::System::Collections::Generic::Dictionary_2<::StringW, int>* System::Globalization::EncodingTable::_get_hashByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_hashByName");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, int>*>("System.Globalization", "EncodingTable", "hashByName")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> hashByName
void System::Globalization::EncodingTable::_set_hashByName(::System::Collections::Generic::Dictionary_2<::StringW, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_hashByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "hashByName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CodePageDataItem> hashByCodePage
::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CodePageDataItem*>* System::Globalization::EncodingTable::_get_hashByCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_get_hashByCodePage");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CodePageDataItem*>*>("System.Globalization", "EncodingTable", "hashByCodePage")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CodePageDataItem> hashByCodePage
void System::Globalization::EncodingTable::_set_hashByCodePage(::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CodePageDataItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::_set_hashByCodePage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "EncodingTable", "hashByCodePage", value));
}
// Autogenerated method: System.Globalization.EncodingTable.GetNumEncodingItems
int System::Globalization::EncodingTable::GetNumEncodingItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::GetNumEncodingItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetNumEncodingItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.EncodingTable.ENC
::System::Globalization::InternalEncodingDataItem System::Globalization::EncodingTable::ENC(::StringW name, uint16_t cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::ENC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "ENC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::InternalEncodingDataItem, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, cp);
}
// Autogenerated method: System.Globalization.EncodingTable.MapCodePageDataItem
::System::Globalization::InternalCodePageDataItem System::Globalization::EncodingTable::MapCodePageDataItem(uint16_t cp, uint16_t fcp, ::StringW names, uint flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::MapCodePageDataItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "MapCodePageDataItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp), ::il2cpp_utils::ExtractType(fcp), ::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::InternalCodePageDataItem, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp, fcp, names, flags);
}
// Autogenerated method: System.Globalization.EncodingTable..cctor
void System::Globalization::EncodingTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.EncodingTable.internalGetCodePageFromName
int System::Globalization::EncodingTable::internalGetCodePageFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::internalGetCodePageFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "internalGetCodePageFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.EncodingTable.GetCodePageFromName
int System::Globalization::EncodingTable::GetCodePageFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::GetCodePageFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetCodePageFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.EncodingTable.GetCodePageDataItem
::System::Globalization::CodePageDataItem* System::Globalization::EncodingTable::GetCodePageDataItem(int codepage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::EncodingTable::GetCodePageDataItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "EncodingTable", "GetCodePageDataItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codepage)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CodePageDataItem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, codepage);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TextInfoToUpperData
#include "System/Globalization/TextInfoToUpperData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_00e0_0586
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_00e0_0586() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_00e0_0586");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_00e0_0586"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_00e0_0586
void System::Globalization::TextInfoToUpperData::_set_range_00e0_0586(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_00e0_0586");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_00e0_0586", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_1e01_1ff3
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_1e01_1ff3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_1e01_1ff3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_1e01_1ff3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_1e01_1ff3
void System::Globalization::TextInfoToUpperData::_set_range_1e01_1ff3(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_1e01_1ff3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_1e01_1ff3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2170_2184
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_2170_2184() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_2170_2184");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_2170_2184"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2170_2184
void System::Globalization::TextInfoToUpperData::_set_range_2170_2184(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_2170_2184");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2170_2184", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_24d0_24e9
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_24d0_24e9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_24d0_24e9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_24d0_24e9"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_24d0_24e9
void System::Globalization::TextInfoToUpperData::_set_range_24d0_24e9(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_24d0_24e9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_24d0_24e9", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c30_2ce3
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_2c30_2ce3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_2c30_2ce3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_2c30_2ce3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c30_2ce3
void System::Globalization::TextInfoToUpperData::_set_range_2c30_2ce3(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_2c30_2ce3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2c30_2ce3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2d00_2d25
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_2d00_2d25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_2d00_2d25");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_2d00_2d25"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2d00_2d25
void System::Globalization::TextInfoToUpperData::_set_range_2d00_2d25(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_2d00_2d25");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_2d00_2d25", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a641_a697
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_a641_a697() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_a641_a697");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_a641_a697"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a641_a697
void System::Globalization::TextInfoToUpperData::_set_range_a641_a697(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_a641_a697");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_a641_a697", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a723_a78c
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToUpperData::_get_range_a723_a78c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_get_range_a723_a78c");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToUpperData", "range_a723_a78c"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a723_a78c
void System::Globalization::TextInfoToUpperData::_set_range_a723_a78c(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::_set_range_a723_a78c");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToUpperData", "range_a723_a78c", value));
}
// Autogenerated method: System.Globalization.TextInfoToUpperData..cctor
void System::Globalization::TextInfoToUpperData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToUpperData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfoToUpperData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.TextInfoToLowerData
#include "System/Globalization/TextInfoToLowerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_00c0_0556
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_00c0_0556() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_00c0_0556");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_00c0_0556"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_00c0_0556
void System::Globalization::TextInfoToLowerData::_set_range_00c0_0556(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_00c0_0556");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_00c0_0556", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_10a0_10c5
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_10a0_10c5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_10a0_10c5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_10a0_10c5"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_10a0_10c5
void System::Globalization::TextInfoToLowerData::_set_range_10a0_10c5(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_10a0_10c5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_10a0_10c5", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_1e00_1ffc
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_1e00_1ffc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_1e00_1ffc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_1e00_1ffc"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_1e00_1ffc
void System::Globalization::TextInfoToLowerData::_set_range_1e00_1ffc(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_1e00_1ffc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_1e00_1ffc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2160_216f
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_2160_216f() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_2160_216f");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_2160_216f"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2160_216f
void System::Globalization::TextInfoToLowerData::_set_range_2160_216f(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_2160_216f");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2160_216f", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_24b6_24cf
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_24b6_24cf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_24b6_24cf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_24b6_24cf"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_24b6_24cf
void System::Globalization::TextInfoToLowerData::_set_range_24b6_24cf(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_24b6_24cf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_24b6_24cf", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c00_2c2e
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_2c00_2c2e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_2c00_2c2e");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_2c00_2c2e"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c00_2c2e
void System::Globalization::TextInfoToLowerData::_set_range_2c00_2c2e(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_2c00_2c2e");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2c00_2c2e", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_2c60_2ce2
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_2c60_2ce2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_2c60_2ce2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_2c60_2ce2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_2c60_2ce2
void System::Globalization::TextInfoToLowerData::_set_range_2c60_2ce2(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_2c60_2ce2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_2c60_2ce2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a640_a696
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_a640_a696() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_a640_a696");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_a640_a696"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a640_a696
void System::Globalization::TextInfoToLowerData::_set_range_a640_a696(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_a640_a696");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_a640_a696", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] range_a722_a78b
::ArrayW<::Il2CppChar> System::Globalization::TextInfoToLowerData::_get_range_a722_a78b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_get_range_a722_a78b");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Globalization", "TextInfoToLowerData", "range_a722_a78b"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] range_a722_a78b
void System::Globalization::TextInfoToLowerData::_set_range_a722_a78b(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::_set_range_a722_a78b");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TextInfoToLowerData", "range_a722_a78b", value));
}
// Autogenerated method: System.Globalization.TextInfoToLowerData..cctor
void System::Globalization::TextInfoToLowerData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::TextInfoToLowerData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "TextInfoToLowerData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CultureInfo/Data
#include "System/Globalization/CultureInfo_Data.hpp"
// Including type: System.Globalization.CultureInfo/OnCultureInfoChangedDelegate
#include "System/Globalization/CultureInfo_OnCultureInfoChangedDelegate.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.CultureTypes
#include "System/Globalization/CultureTypes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo invariant_culture_info
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_invariant_culture_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_invariant_culture_info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "invariant_culture_info"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo invariant_culture_info
void System::Globalization::CultureInfo::_set_invariant_culture_info(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_invariant_culture_info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "invariant_culture_info", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object shared_table_lock
::Il2CppObject* System::Globalization::CultureInfo::_get_shared_table_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_shared_table_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Globalization", "CultureInfo", "shared_table_lock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object shared_table_lock
void System::Globalization::CultureInfo::_set_shared_table_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_shared_table_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_table_lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo default_current_culture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_default_current_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_default_current_culture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "default_current_culture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo default_current_culture
void System::Globalization::CultureInfo::_set_default_current_culture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_default_current_culture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "default_current_culture", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 InvariantCultureId
int System::Globalization::CultureInfo::_get_InvariantCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_InvariantCultureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CultureInfo", "InvariantCultureId"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 InvariantCultureId
void System::Globalization::CultureInfo::_set_InvariantCultureId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_InvariantCultureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "InvariantCultureId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CalendarTypeBits
int System::Globalization::CultureInfo::_get_CalendarTypeBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_CalendarTypeBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CultureInfo", "CalendarTypeBits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CalendarTypeBits
void System::Globalization::CultureInfo::_set_CalendarTypeBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_CalendarTypeBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "CalendarTypeBits", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 LOCALE_INVARIANT
int System::Globalization::CultureInfo::_get_LOCALE_INVARIANT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_LOCALE_INVARIANT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CultureInfo", "LOCALE_INVARIANT"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 LOCALE_INVARIANT
void System::Globalization::CultureInfo::_set_LOCALE_INVARIANT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_LOCALE_INVARIANT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "LOCALE_INVARIANT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MSG_READONLY
::StringW System::Globalization::CultureInfo::_get_MSG_READONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_MSG_READONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "CultureInfo", "MSG_READONLY"));
}
// Autogenerated static field setter
// Set static field: static private System.String MSG_READONLY
void System::Globalization::CultureInfo::_set_MSG_READONLY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_MSG_READONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "MSG_READONLY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentUICulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentUICulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentUICulture
void System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentUICulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentUICulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentUICulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_s_DefaultThreadCurrentCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentCulture"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo s_DefaultThreadCurrentCulture
void System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentCulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_s_DefaultThreadCurrentCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "s_DefaultThreadCurrentCulture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> shared_by_number
::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CultureInfo*>* System::Globalization::CultureInfo::_get_shared_by_number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_shared_by_number");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CultureInfo*>*>("System.Globalization", "CultureInfo", "shared_by_number")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> shared_by_number
void System::Globalization::CultureInfo::_set_shared_by_number(::System::Collections::Generic::Dictionary_2<int, ::System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_shared_by_number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_by_number", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> shared_by_name
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::CultureInfo*>* System::Globalization::CultureInfo::_get_shared_by_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_shared_by_name");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::CultureInfo*>*>("System.Globalization", "CultureInfo", "shared_by_name")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> shared_by_name
void System::Globalization::CultureInfo::_set_shared_by_name(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Globalization::CultureInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_shared_by_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "shared_by_name", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CultureInfo s_UserPreferredCultureInfoInAppX
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::_get_s_UserPreferredCultureInfoInAppX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_s_UserPreferredCultureInfoInAppX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("System.Globalization", "CultureInfo", "s_UserPreferredCultureInfoInAppX"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CultureInfo s_UserPreferredCultureInfoInAppX
void System::Globalization::CultureInfo::_set_s_UserPreferredCultureInfoInAppX(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_s_UserPreferredCultureInfoInAppX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "s_UserPreferredCultureInfoInAppX", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsTaiwanSku
bool System::Globalization::CultureInfo::_get_IsTaiwanSku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_get_IsTaiwanSku");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CultureInfo", "IsTaiwanSku"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsTaiwanSku
void System::Globalization::CultureInfo::_set_IsTaiwanSku(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::_set_IsTaiwanSku");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CultureInfo", "IsTaiwanSku", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isReadOnly
[[deprecated("Use field access instead!")]] bool& System::Globalization::CultureInfo::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cultureID
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureInfo::dyn_cultureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_cultureID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cultureID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parent_lcid
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureInfo::dyn_parent_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_parent_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent_lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 datetime_index
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureInfo::dyn_datetime_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_datetime_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "datetime_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 number_index
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureInfo::dyn_number_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_number_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "number_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 default_calendar_type
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureInfo::dyn_default_calendar_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_default_calendar_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "default_calendar_type"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useUserOverride
[[deprecated("Use field access instead!")]] bool& System::Globalization::CultureInfo::dyn_m_useUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_useUserOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useUserOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.NumberFormatInfo numInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::NumberFormatInfo*& System::Globalization::CultureInfo::dyn_numInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_numInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::NumberFormatInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.DateTimeFormatInfo dateTimeInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::DateTimeFormatInfo*& System::Globalization::CultureInfo::dyn_dateTimeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_dateTimeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTimeInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::DateTimeFormatInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TextInfo textInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::TextInfo*& System::Globalization::CultureInfo::dyn_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_textInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String englishname
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureInfo::dyn_englishname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_englishname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "englishname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nativename
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureInfo::dyn_nativename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_nativename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso3lang
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureInfo::dyn_iso3lang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_iso3lang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso3lang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso2lang
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureInfo::dyn_iso2lang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_iso2lang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso2lang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String win3lang
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureInfo::dyn_win3lang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_win3lang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "win3lang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String territory
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::CultureInfo::dyn_territory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_territory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "territory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] native_calendar_names
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Globalization::CultureInfo::dyn_native_calendar_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_native_calendar_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native_calendar_names"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo compareInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::Globalization::CultureInfo::dyn_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Void* textinfo_data
[[deprecated("Use field access instead!")]] void*& System::Globalization::CultureInfo::dyn_textinfo_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_textinfo_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textinfo_data"))->offset;
  return *reinterpret_cast<void**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_dataItem
[[deprecated("Use field access instead!")]] int& System::Globalization::CultureInfo::dyn_m_dataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_dataItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dataItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.Calendar calendar
[[deprecated("Use field access instead!")]] ::System::Globalization::Calendar*& System::Globalization::CultureInfo::dyn_calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_calendar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendar"))->offset;
  return *reinterpret_cast<::System::Globalization::Calendar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo parent_culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::Globalization::CultureInfo::dyn_parent_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_parent_culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean constructed
[[deprecated("Use field access instead!")]] bool& System::Globalization::CultureInfo::dyn_constructed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_constructed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constructed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] cached_serialized_form
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Globalization::CultureInfo::dyn_cached_serialized_form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_cached_serialized_form");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cached_serialized_form"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CultureData m_cultureData
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureData*& System::Globalization::CultureInfo::dyn_m_cultureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_cultureData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureData"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isInherited
[[deprecated("Use field access instead!")]] bool& System::Globalization::CultureInfo::dyn_m_isInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::dyn_m_isInherited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isInherited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CultureInfo.get__cultureData
::System::Globalization::CultureData* System::Globalization::CultureInfo::get__cultureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get__cultureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__cultureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get__isInherited
bool System::Globalization::CultureInfo::get__isInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get__isInherited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__isInherited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_InvariantCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_InvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_InvariantCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_InvariantCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_CurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CurrentCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_CurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_CurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_CurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructCurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::ConstructCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ConstructCurrentCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "ConstructCurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructCurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::ConstructCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ConstructCurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "ConstructCurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Territory
::StringW System::Globalization::CultureInfo::get_Territory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Territory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Territory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get__name
::StringW System::Globalization::CultureInfo::get__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get__name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_LCID
int System::Globalization::CultureInfo::get_LCID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_LCID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Name
::StringW System::Globalization::CultureInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Calendar
::System::Globalization::Calendar* System::Globalization::CultureInfo::get_Calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Calendar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_Parent
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_Parent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_TextInfo
::System::Globalization::TextInfo* System::Globalization::CultureInfo::get_TextInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_TextInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TextInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.Clone
::Il2CppObject* System::Globalization::CultureInfo::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.GetCultures
::ArrayW<::System::Globalization::CultureInfo*> System::Globalization::CultureInfo::GetCultures(::System::Globalization::CultureTypes types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetCultures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "GetCultures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::CultureInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: System.Globalization.CultureInfo.GetTextInfoData
::System::Globalization::CultureInfo::Data System::Globalization::CultureInfo::GetTextInfoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetTextInfoData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextInfoData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo::Data, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ReadOnly
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::ReadOnly(::System::Globalization::CultureInfo* ci) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ci)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ci);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CompareInfo
::System::Globalization::CompareInfo* System::Globalization::CultureInfo::get_CompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CompareInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CompareInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_IsNeutralCulture
bool System::Globalization::CultureInfo::get_IsNeutralCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_IsNeutralCulture");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.CheckNeutral
void System::Globalization::CultureInfo::CheckNeutral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CheckNeutral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNeutral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_NumberFormat
::System::Globalization::NumberFormatInfo* System::Globalization::CultureInfo::get_NumberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_NumberFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::NumberFormatInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.set_NumberFormat
void System::Globalization::CultureInfo::set_NumberFormat(::System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::set_NumberFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DateTimeFormat
::System::Globalization::DateTimeFormatInfo* System::Globalization::CultureInfo::get_DateTimeFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_DateTimeFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.set_DateTimeFormat
void System::Globalization::CultureInfo::set_DateTimeFormat(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::set_DateTimeFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.get_EnglishName
::StringW System::Globalization::CultureInfo::get_EnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_EnglishName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_IsReadOnly
bool System::Globalization::CultureInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.GetFormat
::Il2CppObject* System::Globalization::CultureInfo::GetFormat(::System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.CultureInfo.Construct
void System::Globalization::CultureInfo::Construct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.construct_internal_locale_from_lcid
bool System::Globalization::CultureInfo::construct_internal_locale_from_lcid(int lcid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::construct_internal_locale_from_lcid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "construct_internal_locale_from_lcid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lcid)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lcid);
}
// Autogenerated method: System.Globalization.CultureInfo.construct_internal_locale_from_name
bool System::Globalization::CultureInfo::construct_internal_locale_from_name(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::construct_internal_locale_from_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "construct_internal_locale_from_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.get_current_locale_name
::StringW System::Globalization::CultureInfo::get_current_locale_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_current_locale_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_current_locale_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.internal_get_cultures
::ArrayW<::System::Globalization::CultureInfo*> System::Globalization::CultureInfo::internal_get_cultures(bool neutral, bool specific, bool installed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::internal_get_cultures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "internal_get_cultures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(neutral), ::il2cpp_utils::ExtractType(specific), ::il2cpp_utils::ExtractType(installed)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Globalization::CultureInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, neutral, specific, installed);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructInvariant
void System::Globalization::CultureInfo::ConstructInvariant(bool read_only) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ConstructInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(read_only)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, read_only);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateTextInfo
::System::Globalization::TextInfo* System::Globalization::CultureInfo::CreateTextInfo(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateTextInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::TextInfo*, false>(this, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.CultureInfo.insert_into_shared_tables
void System::Globalization::CultureInfo::insert_into_shared_tables(::System::Globalization::CultureInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::insert_into_shared_tables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "insert_into_shared_tables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.CultureInfo.GetCultureInfo
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::GetCultureInfo(int culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetCultureInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "GetCultureInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture);
}
// Autogenerated method: System.Globalization.CultureInfo.GetCultureInfo
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::GetCultureInfo(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetCultureInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "GetCultureInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateCulture(::StringW name, bool reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(reference)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, reference);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateSpecificCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateSpecificCulture(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateSpecificCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateSpecificCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.ConstructLocaleFromName
bool System::Globalization::CultureInfo::ConstructLocaleFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ConstructLocaleFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructLocaleFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateSpecificCultureFromNeutral
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::CreateSpecificCultureFromNeutral(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateSpecificCultureFromNeutral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateSpecificCultureFromNeutral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.get_CalendarType
int System::Globalization::CultureInfo::get_CalendarType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_CalendarType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CalendarType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateCalendar
::System::Globalization::Calendar* System::Globalization::CultureInfo::CreateCalendar(int calendarType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateCalendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateCalendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::Calendar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, calendarType);
}
// Autogenerated method: System.Globalization.CultureInfo.CreateNotFoundException
::System::Exception* System::Globalization::CultureInfo::CreateNotFoundException(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::CreateNotFoundException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "CreateNotFoundException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DefaultThreadCurrentCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_DefaultThreadCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_DefaultThreadCurrentCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_DefaultThreadCurrentCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_DefaultThreadCurrentUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_DefaultThreadCurrentUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_DefaultThreadCurrentUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_DefaultThreadCurrentUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_SortName
::StringW System::Globalization::CultureInfo::get_SortName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_SortName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_UserDefaultUICulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_UserDefaultUICulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_UserDefaultUICulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_UserDefaultUICulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_UserDefaultCulture
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::get_UserDefaultCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_UserDefaultCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "get_UserDefaultCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.InitializeUserPreferredCultureInfoInAppX
void System::Globalization::CultureInfo::InitializeUserPreferredCultureInfoInAppX(::System::Globalization::CultureInfo::OnCultureInfoChangedDelegate* onCultureInfoChangedInAppX) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::InitializeUserPreferredCultureInfoInAppX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "InitializeUserPreferredCultureInfoInAppX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onCultureInfoChangedInAppX)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, onCultureInfoChangedInAppX);
}
// Autogenerated method: System.Globalization.CultureInfo.OnCultureInfoChangedInAppX
void System::Globalization::CultureInfo::OnCultureInfoChangedInAppX(::StringW language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::OnCultureInfoChangedInAppX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "OnCultureInfoChangedInAppX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(language)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, language);
}
// Autogenerated method: System.Globalization.CultureInfo.GetCultureInfoForUserPreferredLanguageInAppX
::System::Globalization::CultureInfo* System::Globalization::CultureInfo::GetCultureInfoForUserPreferredLanguageInAppX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetCultureInfoForUserPreferredLanguageInAppX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "GetCultureInfoForUserPreferredLanguageInAppX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.get_HasInvariantCultureName
bool System::Globalization::CultureInfo::get_HasInvariantCultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::get_HasInvariantCultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasInvariantCultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.VerifyCultureName
bool System::Globalization::CultureInfo::VerifyCultureName(::StringW cultureName, bool throwException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::VerifyCultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", "VerifyCultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureName), ::il2cpp_utils::ExtractType(throwException)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cultureName, throwException);
}
// Autogenerated method: System.Globalization.CultureInfo..cctor
void System::Globalization::CultureInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.Equals
bool System::Globalization::CultureInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CultureInfo.GetHashCode
int System::Globalization::CultureInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureInfo.ToString
::StringW System::Globalization::CultureInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CultureInfo/OnCultureInfoChangedDelegate
#include "System/Globalization/CultureInfo_OnCultureInfoChangedDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.CultureInfo/OnCultureInfoChangedDelegate.Invoke
void System::Globalization::CultureInfo::OnCultureInfoChangedDelegate::Invoke(::StringW language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CultureInfo::OnCultureInfoChangedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::CultureInfo::OnCultureInfoChangedDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, language);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.IdnMapping
#include "System/Globalization/IdnMapping.hpp"
// Including type: System.Globalization.Punycode
#include "System/Globalization/Punycode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean allow_unassigned
[[deprecated("Use field access instead!")]] bool& System::Globalization::IdnMapping::dyn_allow_unassigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::dyn_allow_unassigned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allow_unassigned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean use_std3
[[deprecated("Use field access instead!")]] bool& System::Globalization::IdnMapping::dyn_use_std3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::dyn_use_std3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "use_std3"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.Punycode puny
[[deprecated("Use field access instead!")]] ::System::Globalization::Punycode*& System::Globalization::IdnMapping::dyn_puny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::dyn_puny");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "puny"))->offset;
  return *reinterpret_cast<::System::Globalization::Punycode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.IdnMapping.GetAscii
::StringW System::Globalization::IdnMapping::GetAscii(::StringW unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, unicode);
}
// Autogenerated method: System.Globalization.IdnMapping.GetAscii
::StringW System::Globalization::IdnMapping::GetAscii(::StringW unicode, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, unicode, index, count);
}
// Autogenerated method: System.Globalization.IdnMapping.Convert
::StringW System::Globalization::IdnMapping::Convert(::StringW input, int index, int count, bool toAscii) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(toAscii)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, index, count, toAscii);
}
// Autogenerated method: System.Globalization.IdnMapping.ToAscii
::StringW System::Globalization::IdnMapping::ToAscii(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::ToAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyLength
void System::Globalization::IdnMapping::VerifyLength(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::VerifyLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.NamePrep
::StringW System::Globalization::IdnMapping::NamePrep(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::NamePrep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NamePrep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyProhibitedCharacters
void System::Globalization::IdnMapping::VerifyProhibitedCharacters(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::VerifyProhibitedCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyProhibitedCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.VerifyStd3AsciiRules
void System::Globalization::IdnMapping::VerifyStd3AsciiRules(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::VerifyStd3AsciiRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyStd3AsciiRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.GetUnicode
::StringW System::Globalization::IdnMapping::GetUnicode(::StringW ascii) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ascii)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ascii);
}
// Autogenerated method: System.Globalization.IdnMapping.GetUnicode
::StringW System::Globalization::IdnMapping::GetUnicode(::StringW ascii, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ascii), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ascii, index, count);
}
// Autogenerated method: System.Globalization.IdnMapping.ToUnicode
::StringW System::Globalization::IdnMapping::ToUnicode(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::ToUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.IdnMapping.Equals
bool System::Globalization::IdnMapping::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Globalization.IdnMapping.GetHashCode
int System::Globalization::IdnMapping::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::IdnMapping::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.Bootstring
#include "System/Globalization/Bootstring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Char delimiter
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Globalization::Bootstring::dyn_delimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_delimiter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delimiter"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 base_num
[[deprecated("Use field access instead!")]] int& System::Globalization::Bootstring::dyn_base_num() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_base_num");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "base_num"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 tmin
[[deprecated("Use field access instead!")]] int& System::Globalization::Bootstring::dyn_tmin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_tmin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 tmax
[[deprecated("Use field access instead!")]] int& System::Globalization::Bootstring::dyn_tmax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_tmax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 skew
[[deprecated("Use field access instead!")]] int& System::Globalization::Bootstring::dyn_skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_skew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skew"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 damp
[[deprecated("Use field access instead!")]] int& System::Globalization::Bootstring::dyn_damp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_damp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "damp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 initial_bias
[[deprecated("Use field access instead!")]] int& System::Globalization::Bootstring::dyn_initial_bias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_initial_bias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initial_bias"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 initial_n
[[deprecated("Use field access instead!")]] int& System::Globalization::Bootstring::dyn_initial_n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::dyn_initial_n");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initial_n"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.Bootstring.Encode
::StringW System::Globalization::Bootstring::Encode(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated method: System.Globalization.Bootstring.EncodeDigit
::Il2CppChar System::Globalization::Bootstring::EncodeDigit(int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::EncodeDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, d);
}
// Autogenerated method: System.Globalization.Bootstring.DecodeDigit
int System::Globalization::Bootstring::DecodeDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::DecodeDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Globalization.Bootstring.Adapt
int System::Globalization::Bootstring::Adapt(int delta, int numPoints, bool firstTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::Adapt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Adapt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta), ::il2cpp_utils::ExtractType(numPoints), ::il2cpp_utils::ExtractType(firstTime)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delta, numPoints, firstTime);
}
// Autogenerated method: System.Globalization.Bootstring.Decode
::StringW System::Globalization::Bootstring::Decode(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::Bootstring::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s, offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Globalization.Punycode
#include "System/Globalization/Punycode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.RegionInfo
#include "System/Globalization/RegionInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.RegionInfo currentRegion
::System::Globalization::RegionInfo* System::Globalization::RegionInfo::_get_currentRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::_get_currentRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::RegionInfo*>("System.Globalization", "RegionInfo", "currentRegion"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.RegionInfo currentRegion
void System::Globalization::RegionInfo::_set_currentRegion(::System::Globalization::RegionInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::_set_currentRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "RegionInfo", "currentRegion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 regionId
[[deprecated("Use field access instead!")]] int& System::Globalization::RegionInfo::dyn_regionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_regionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regionId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso2Name
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::RegionInfo::dyn_iso2Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_iso2Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso2Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iso3Name
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::RegionInfo::dyn_iso3Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_iso3Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iso3Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String win3Name
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::RegionInfo::dyn_win3Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_win3Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "win3Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String englishName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::RegionInfo::dyn_englishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_englishName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "englishName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nativeName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::RegionInfo::dyn_nativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_nativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currencySymbol
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::RegionInfo::dyn_currencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_currencySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String isoCurrencySymbol
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::RegionInfo::dyn_isoCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_isoCurrencySymbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isoCurrencySymbol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currencyEnglishName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::RegionInfo::dyn_currencyEnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_currencyEnglishName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyEnglishName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String currencyNativeName
[[deprecated("Use field access instead!")]] ::StringW& System::Globalization::RegionInfo::dyn_currencyNativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::dyn_currencyNativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyNativeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrentRegion
::System::Globalization::RegionInfo* System::Globalization::RegionInfo::get_CurrentRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrentRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "RegionInfo", "get_CurrentRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::RegionInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.GetByTerritory
bool System::Globalization::RegionInfo::GetByTerritory(::System::Globalization::CultureInfo* ci) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::GetByTerritory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByTerritory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ci)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ci);
}
// Autogenerated method: System.Globalization.RegionInfo.construct_internal_region_from_name
bool System::Globalization::RegionInfo::construct_internal_region_from_name(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::construct_internal_region_from_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "construct_internal_region_from_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencyEnglishName
::StringW System::Globalization::RegionInfo::get_CurrencyEnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrencyEnglishName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencySymbol
::StringW System::Globalization::RegionInfo::get_CurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrencySymbol");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_DisplayName
::StringW System::Globalization::RegionInfo::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_DisplayName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_EnglishName
::StringW System::Globalization::RegionInfo::get_EnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_EnglishName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_GeoId
int System::Globalization::RegionInfo::get_GeoId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_GeoId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_IsMetric
bool System::Globalization::RegionInfo::get_IsMetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_IsMetric");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ISOCurrencySymbol
::StringW System::Globalization::RegionInfo::get_ISOCurrencySymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_ISOCurrencySymbol");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_NativeName
::StringW System::Globalization::RegionInfo::get_NativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_NativeName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_CurrencyNativeName
::StringW System::Globalization::RegionInfo::get_CurrencyNativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_CurrencyNativeName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_Name
::StringW System::Globalization::RegionInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ThreeLetterISORegionName
::StringW System::Globalization::RegionInfo::get_ThreeLetterISORegionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_ThreeLetterISORegionName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_ThreeLetterWindowsRegionName
::StringW System::Globalization::RegionInfo::get_ThreeLetterWindowsRegionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_ThreeLetterWindowsRegionName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.get_TwoLetterISORegionName
::StringW System::Globalization::RegionInfo::get_TwoLetterISORegionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::get_TwoLetterISORegionName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Globalization::RegionInfo*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.ClearCachedData
void System::Globalization::RegionInfo::ClearCachedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::ClearCachedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "RegionInfo", "ClearCachedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.Equals
bool System::Globalization::RegionInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Globalization.RegionInfo.GetHashCode
int System::Globalization::RegionInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.RegionInfo.ToString
::StringW System::Globalization::RegionInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::RegionInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ConditionalAttribute
#include "System/Diagnostics/ConditionalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <ConditionString>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ConditionalAttribute::dyn_$ConditionString$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ConditionalAttribute::dyn_$ConditionString$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConditionString>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackTraceHiddenAttribute
#include "System/Diagnostics/StackTraceHiddenAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerStepThroughAttribute
#include "System/Diagnostics/DebuggerStepThroughAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerHiddenAttribute
#include "System/Diagnostics/DebuggerHiddenAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerNonUserCodeAttribute
#include "System/Diagnostics/DebuggerNonUserCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.DebuggableAttribute/DebuggingModes m_debuggingModes
[[deprecated("Use field access instead!")]] ::System::Diagnostics::DebuggableAttribute::DebuggingModes& System::Diagnostics::DebuggableAttribute::dyn_m_debuggingModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::dyn_m_debuggingModes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_debuggingModes"))->offset;
  return *reinterpret_cast<::System::Diagnostics::DebuggableAttribute::DebuggingModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute/DebuggingModes
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes None
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes None
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes Default
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes Default
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes DisableOptimizations
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes DisableOptimizations
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes IgnoreSymbolStoreSequencePoints
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes IgnoreSymbolStoreSequencePoints
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes EnableEditAndContinue
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes EnableEditAndContinue
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::DebuggableAttribute::DebuggingModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableState
#include "System/Diagnostics/DebuggerBrowsableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Never
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Never
void System::Diagnostics::DebuggerBrowsableState::_set_Never(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Collapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_Collapsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Collapsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
void System::Diagnostics::DebuggerBrowsableState::_set_Collapsed(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_Collapsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Collapsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_RootHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_RootHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "RootHidden"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
void System::Diagnostics::DebuggerBrowsableState::_set_RootHidden(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_RootHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "RootHidden", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::DebuggerBrowsableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableAttribute
#include "System/Diagnostics/DebuggerBrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.DebuggerBrowsableState state
[[deprecated("Use field access instead!")]] ::System::Diagnostics::DebuggerBrowsableState& System::Diagnostics::DebuggerBrowsableAttribute::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableAttribute::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Diagnostics::DebuggerBrowsableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerTypeProxyAttribute
#include "System/Diagnostics/DebuggerTypeProxyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String typeName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DebuggerTypeProxyAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerTypeProxyAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerDisplayAttribute
#include "System/Diagnostics/DebuggerDisplayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String type
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.DebuggerDisplayAttribute.set_Name
void System::Diagnostics::DebuggerDisplayAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.DebuggerDisplayAttribute.set_Type
void System::Diagnostics::DebuggerDisplayAttribute::set_Type(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Debugger
#include "System/Diagnostics/Debugger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultCategory
::StringW System::Diagnostics::Debugger::_get_DefaultCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::_get_DefaultCategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "Debugger", "DefaultCategory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultCategory
void System::Diagnostics::Debugger::_set_DefaultCategory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::_set_DefaultCategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Debugger", "DefaultCategory", value));
}
// Autogenerated method: System.Diagnostics.Debugger.Break
void System::Diagnostics::Debugger::Break() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::Break");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "Break", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsLogging
bool System::Diagnostics::Debugger::IsLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::IsLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.Log_icall
void System::Diagnostics::Debugger::Log_icall(int level, ByRef<::StringW> category, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::Log_icall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "Log_icall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level, byref(category), byref(message));
}
// Autogenerated method: System.Diagnostics.Debugger.Log
void System::Diagnostics::Debugger::Log(int level, ::StringW category, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level, category, message);
}
// Autogenerated method: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency
void System::Diagnostics::Debugger::NotifyOfCrossThreadDependency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::NotifyOfCrossThreadDependency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "NotifyOfCrossThreadDependency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger..cctor
void System::Diagnostics::Debugger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 OFFSET_UNKNOWN
int System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OFFSET_UNKNOWN
void System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ilOffset
[[deprecated("Use field access instead!")]] int& System::Diagnostics::StackFrame::dyn_ilOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_ilOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ilOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nativeOffset
[[deprecated("Use field access instead!")]] int& System::Diagnostics::StackFrame::dyn_nativeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_nativeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 methodAddress
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::StackFrame::dyn_methodAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodAddress"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 methodIndex
[[deprecated("Use field access instead!")]] uint& System::Diagnostics::StackFrame::dyn_methodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodBase methodBase
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodBase*& System::Diagnostics::StackFrame::dyn_methodBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodBase"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fileName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::StackFrame::dyn_fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
[[deprecated("Use field access instead!")]] int& System::Diagnostics::StackFrame::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 columnNumber
[[deprecated("Use field access instead!")]] int& System::Diagnostics::StackFrame::dyn_columnNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_columnNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "columnNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String internalMethodName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::StackFrame::dyn_internalMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_internalMethodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalMethodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.StackFrame.get_frame_info
bool System::Diagnostics::StackFrame::get_frame_info(int skip, bool needFileInfo, ByRef<::System::Reflection::MethodBase*> method, ByRef<int> iloffset, ByRef<int> native_offset, ByRef<::StringW> file, ByRef<int> line, ByRef<int> column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::get_frame_info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackFrame", "get_frame_info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skip), ::il2cpp_utils::ExtractType(needFileInfo), ::il2cpp_utils::ExtractIndependentType<::System::Reflection::MethodBase*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skip, needFileInfo, byref(method), byref(iloffset), byref(native_offset), byref(file), byref(line), byref(column));
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileLineNumber
int System::Diagnostics::StackFrame::GetFileLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetFileLineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::StackFrame*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileColumnNumber
int System::Diagnostics::StackFrame::GetFileColumnNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetFileColumnNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::StackFrame*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileName
::StringW System::Diagnostics::StackFrame::GetFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetFileName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::StackFrame*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetSecureFileName
::StringW System::Diagnostics::StackFrame::GetSecureFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetILOffset
int System::Diagnostics::StackFrame::GetILOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetILOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::StackFrame*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethod
::System::Reflection::MethodBase* System::Diagnostics::StackFrame::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::StackFrame*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetNativeOffset
int System::Diagnostics::StackFrame::GetNativeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetNativeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::StackFrame*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodAddress
int64_t System::Diagnostics::StackFrame::GetMethodAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethodAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodIndex
uint System::Diagnostics::StackFrame::GetMethodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethodIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetInternalMethodName
::StringW System::Diagnostics::StackFrame::GetInternalMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetInternalMethodName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInternalMethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.ToString
::StringW System::Diagnostics::StackFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
// Including type: System.Diagnostics.StackTrace/TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 METHODS_TO_SKIP
int System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 METHODS_TO_SKIP
void System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP", value));
}
// Autogenerated static field getter
// Get static field: static private System.String prefix
::StringW System::Diagnostics::StackTrace::_get_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_prefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "StackTrace", "prefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String prefix
void System::Diagnostics::StackTrace::_set_prefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_prefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "prefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isAotidSet
bool System::Diagnostics::StackTrace::_get_isAotidSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_isAotidSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "StackTrace", "isAotidSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isAotidSet
void System::Diagnostics::StackTrace::_set_isAotidSet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_isAotidSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "isAotidSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.String aotid
::StringW System::Diagnostics::StackTrace::_get_aotid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_aotid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "StackTrace", "aotid"));
}
// Autogenerated static field setter
// Set static field: static private System.String aotid
void System::Diagnostics::StackTrace::_set_aotid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_aotid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "aotid", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.StackFrame[] frames
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Diagnostics::StackFrame*>& System::Diagnostics::StackTrace::dyn_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frames"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::StackFrame*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.StackTrace[] captured_traces
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Diagnostics::StackTrace*>& System::Diagnostics::StackTrace::dyn_captured_traces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_captured_traces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "captured_traces"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::StackTrace*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debug_info
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::StackTrace::dyn_debug_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_debug_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debug_info"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.StackTrace.init_frames
void System::Diagnostics::StackTrace::init_frames(int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::init_frames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "init_frames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipFrames), ::il2cpp_utils::ExtractType(fNeedFileInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_trace
::ArrayW<::System::Diagnostics::StackFrame*> System::Diagnostics::StackTrace::get_trace(::System::Exception* e, int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::get_trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "get_trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(skipFrames), ::il2cpp_utils::ExtractType(fNeedFileInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Diagnostics::StackFrame*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_FrameCount
int System::Diagnostics::StackTrace::get_FrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::get_FrameCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::StackTrace*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFrame
::System::Diagnostics::StackFrame* System::Diagnostics::StackTrace::GetFrame(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::StackTrace*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::StackFrame*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFrames
::ArrayW<::System::Diagnostics::StackFrame*> System::Diagnostics::StackTrace::GetFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetFrames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::StackTrace*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Diagnostics::StackFrame*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetAotId
::StringW System::Diagnostics::StackTrace::GetAotId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetAotId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "GetAotId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.AddFrames
bool System::Diagnostics::StackTrace::AddFrames(::System::Text::StringBuilder* sb, bool separator, ByRef<bool> isAsync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::AddFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sb, separator, byref(isAsync));
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFullNameForStackTrace
void System::Diagnostics::StackTrace::GetFullNameForStackTrace(::System::Text::StringBuilder* sb, ::System::Reflection::MethodBase* mi, bool needsNewLine, ByRef<bool> skipped, ByRef<bool> isAsync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetFullNameForStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullNameForStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(mi), ::il2cpp_utils::ExtractType(needsNewLine), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb, mi, needsNewLine, byref(skipped), byref(isAsync));
}
// Autogenerated method: System.Diagnostics.StackTrace.ConvertAsyncStateMachineMethod
void System::Diagnostics::StackTrace::ConvertAsyncStateMachineMethod(ByRef<::System::Reflection::MethodBase*> method, ByRef<::System::Type*> declaringType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::ConvertAsyncStateMachineMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "ConvertAsyncStateMachineMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(declaringType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(method), byref(declaringType));
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::StringW System::Diagnostics::StackTrace::ToString(::System::Diagnostics::StackTrace::TraceFormat traceFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, traceFormat);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::StringW System::Diagnostics::StackTrace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackTrace/TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/TraceFormat Normal
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/TraceFormat Normal
void System::Diagnostics::StackTrace::TraceFormat::_set_Normal(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/TraceFormat TrailingNewLine
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/TraceFormat TrailingNewLine
void System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/TraceFormat NoResourceLookup
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/TraceFormat NoResourceLookup
void System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::StackTrace::TraceFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Contracts.Contract
#include "System/Diagnostics/Contracts/Contract.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventLevel
#include "System/Diagnostics/Tracing/EventLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel LogAlways
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_LogAlways() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_LogAlways");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "LogAlways"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel LogAlways
void System::Diagnostics::Tracing::EventLevel::_set_LogAlways(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_LogAlways");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "LogAlways", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel Critical
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_Critical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_Critical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "Critical"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel Critical
void System::Diagnostics::Tracing::EventLevel::_set_Critical(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_Critical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "Critical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel Error
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel Error
void System::Diagnostics::Tracing::EventLevel::_set_Error(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel Warning
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel Warning
void System::Diagnostics::Tracing::EventLevel::_set_Warning(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel Informational
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_Informational() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_Informational");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "Informational"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel Informational
void System::Diagnostics::Tracing::EventLevel::_set_Informational(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_Informational");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "Informational", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventLevel Verbose
::System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventLevel>("System.Diagnostics.Tracing", "EventLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventLevel Verbose
void System::Diagnostics::Tracing::EventLevel::_set_Verbose(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventLevel", "Verbose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventKeywords
#include "System/Diagnostics/Tracing/EventKeywords.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords None
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords None
void System::Diagnostics::Tracing::EventKeywords::_set_None(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords All
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords All
void System::Diagnostics::Tracing::EventKeywords::_set_All(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords MicrosoftTelemetry
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_MicrosoftTelemetry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_MicrosoftTelemetry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "MicrosoftTelemetry"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords MicrosoftTelemetry
void System::Diagnostics::Tracing::EventKeywords::_set_MicrosoftTelemetry(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_MicrosoftTelemetry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "MicrosoftTelemetry", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords WdiContext
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_WdiContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_WdiContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "WdiContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords WdiContext
void System::Diagnostics::Tracing::EventKeywords::_set_WdiContext(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_WdiContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "WdiContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords WdiDiagnostic
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_WdiDiagnostic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_WdiDiagnostic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "WdiDiagnostic"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords WdiDiagnostic
void System::Diagnostics::Tracing::EventKeywords::_set_WdiDiagnostic(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_WdiDiagnostic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "WdiDiagnostic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords Sqm
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_Sqm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_Sqm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "Sqm"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords Sqm
void System::Diagnostics::Tracing::EventKeywords::_set_Sqm(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_Sqm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "Sqm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords AuditFailure
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_AuditFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_AuditFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "AuditFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords AuditFailure
void System::Diagnostics::Tracing::EventKeywords::_set_AuditFailure(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_AuditFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "AuditFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords AuditSuccess
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_AuditSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_AuditSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "AuditSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords AuditSuccess
void System::Diagnostics::Tracing::EventKeywords::_set_AuditSuccess(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_AuditSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "AuditSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords CorrelationHint
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_CorrelationHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_CorrelationHint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "CorrelationHint"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords CorrelationHint
void System::Diagnostics::Tracing::EventKeywords::_set_CorrelationHint(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_CorrelationHint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "CorrelationHint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords EventLogClassic
::System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventKeywords::_get_EventLogClassic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_get_EventLogClassic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Diagnostics.Tracing", "EventKeywords", "EventLogClassic"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords EventLogClassic
void System::Diagnostics::Tracing::EventKeywords::_set_EventLogClassic(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::_set_EventLogClassic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventKeywords", "EventLogClassic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 value__
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Tracing::EventKeywords::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventKeywords::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventAttribute
#include "System/Diagnostics/Tracing/EventAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <EventId>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventAttribute::dyn_$EventId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$EventId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EventId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventLevel <Level>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventLevel& System::Diagnostics::Tracing::EventAttribute::dyn_$Level$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$Level$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Level>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Tracing.EventKeywords <Keywords>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventKeywords& System::Diagnostics::Tracing::EventAttribute::dyn_$Keywords$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$Keywords$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Keywords>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Tracing::EventKeywords*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventAttribute::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.set_EventId
void System::Diagnostics::Tracing::EventAttribute::set_EventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::set_EventId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EventId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.set_Level
void System::Diagnostics::Tracing::EventAttribute::set_Level(::System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::set_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.set_Keywords
void System::Diagnostics::Tracing::EventAttribute::set_Keywords(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::set_Keywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Keywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventAttribute.set_Message
void System::Diagnostics::Tracing::EventAttribute::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventAttribute::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
// Including type: System.Diagnostics.Tracing.EventSource/EventData
#include "System/Diagnostics/Tracing/EventSource_EventData.hpp"
// Including type: System.Diagnostics.Tracing.EventLevel
#include "System/Diagnostics/Tracing/EventLevel.hpp"
// Including type: System.Diagnostics.Tracing.EventKeywords
#include "System/Diagnostics/Tracing/EventKeywords.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventSource::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.set_Name
void System::Diagnostics::Tracing::EventSource::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled(::System::Diagnostics::Tracing::EventLevel level, ::System::Diagnostics::Tracing::EventKeywords keywords) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(keywords)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, level, keywords);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Dispose
void System::Diagnostics::Tracing::EventSource::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventSource*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Dispose
void System::Diagnostics::Tracing::EventSource::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::Tracing::EventSource*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, int arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, ::StringW arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, int arg1, int arg2, int arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2, arg3);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, int64_t arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, int64_t arg1, ::StringW arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, args);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, ::StringW arg1, ::StringW arg2, ::StringW arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2, arg3);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventCore
void System::Diagnostics::Tracing::EventSource::WriteEventCore(int eventId, int eventDataCount, ::System::Diagnostics::Tracing::EventSource::EventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::WriteEventCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEventCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(eventDataCount), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, eventDataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Finalize
void System::Diagnostics::Tracing::EventSource::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSource/EventData
#include "System/Diagnostics/Tracing/EventSource_EventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr <DataPointer>k__BackingField
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Diagnostics::Tracing::EventSource::EventData::dyn_$DataPointer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::dyn_$DataPointer$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DataPointer>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Size>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventSource::EventData::dyn_$Size$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::dyn_$Size$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Size>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Reserved>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Tracing::EventSource::EventData::dyn_$Reserved$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::dyn_$Reserved$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Reserved>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/EventData.set_DataPointer
void System::Diagnostics::Tracing::EventSource::EventData::set_DataPointer(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::set_DataPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_DataPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/EventData.set_Size
void System::Diagnostics::Tracing::EventSource::EventData::set_Size(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::set_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/EventData.set_Reserved
void System::Diagnostics::Tracing::EventSource::EventData::set_Reserved(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::EventData::set_Reserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Reserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSourceAttribute
#include "System/Diagnostics/Tracing/EventSourceAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Guid>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventSourceAttribute::dyn_$Guid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::dyn_$Guid$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Guid>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Tracing::EventSourceAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSourceAttribute.set_Guid
void System::Diagnostics::Tracing::EventSourceAttribute::set_Guid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::set_Guid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Guid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSourceAttribute.set_Name
void System::Diagnostics::Tracing::EventSourceAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSourceAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.NonEventAttribute
#include "System/Diagnostics/Tracing/NonEventAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.CodeAnalysis.DisallowNullAttribute
#include "System/Diagnostics/CodeAnalysis/DisallowNullAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.CodeAnalysis.NotNullAttribute
#include "System/Diagnostics/CodeAnalysis/NotNullAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Configuration.Assemblies.AssemblyHashAlgorithm
#include "System/Configuration/Assemblies/AssemblyHashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm None
::System::Configuration::Assemblies::AssemblyHashAlgorithm System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::Assemblies::AssemblyHashAlgorithm>("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm None
void System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_None(::System::Configuration::Assemblies::AssemblyHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm MD5
::System::Configuration::Assemblies::AssemblyHashAlgorithm System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_MD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_MD5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::Assemblies::AssemblyHashAlgorithm>("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "MD5"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm MD5
void System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_MD5(::System::Configuration::Assemblies::AssemblyHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_MD5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "MD5", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm SHA1
::System::Configuration::Assemblies::AssemblyHashAlgorithm System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::Assemblies::AssemblyHashAlgorithm>("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "SHA1"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm SHA1
void System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_SHA1(::System::Configuration::Assemblies::AssemblyHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm SHA256
::System::Configuration::Assemblies::AssemblyHashAlgorithm System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::Assemblies::AssemblyHashAlgorithm>("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "SHA256"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm SHA256
void System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_SHA256(::System::Configuration::Assemblies::AssemblyHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm SHA384
::System::Configuration::Assemblies::AssemblyHashAlgorithm System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::Assemblies::AssemblyHashAlgorithm>("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "SHA384"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm SHA384
void System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_SHA384(::System::Configuration::Assemblies::AssemblyHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm SHA512
::System::Configuration::Assemblies::AssemblyHashAlgorithm System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_SHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_get_SHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::Assemblies::AssemblyHashAlgorithm>("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "SHA512"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.Assemblies.AssemblyHashAlgorithm SHA512
void System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_SHA512(::System::Configuration::Assemblies::AssemblyHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::_set_SHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration.Assemblies", "AssemblyHashAlgorithm", "SHA512", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Configuration::Assemblies::AssemblyHashAlgorithm::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyHashAlgorithm::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Configuration.Assemblies.AssemblyVersionCompatibility
#include "System/Configuration/Assemblies/AssemblyVersionCompatibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Configuration.Assemblies.AssemblyVersionCompatibility SameMachine
::System::Configuration::Assemblies::AssemblyVersionCompatibility System::Configuration::Assemblies::AssemblyVersionCompatibility::_get_SameMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyVersionCompatibility::_get_SameMachine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::Assemblies::AssemblyVersionCompatibility>("System.Configuration.Assemblies", "AssemblyVersionCompatibility", "SameMachine"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.Assemblies.AssemblyVersionCompatibility SameMachine
void System::Configuration::Assemblies::AssemblyVersionCompatibility::_set_SameMachine(::System::Configuration::Assemblies::AssemblyVersionCompatibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyVersionCompatibility::_set_SameMachine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration.Assemblies", "AssemblyVersionCompatibility", "SameMachine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.Assemblies.AssemblyVersionCompatibility SameProcess
::System::Configuration::Assemblies::AssemblyVersionCompatibility System::Configuration::Assemblies::AssemblyVersionCompatibility::_get_SameProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyVersionCompatibility::_get_SameProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::Assemblies::AssemblyVersionCompatibility>("System.Configuration.Assemblies", "AssemblyVersionCompatibility", "SameProcess"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.Assemblies.AssemblyVersionCompatibility SameProcess
void System::Configuration::Assemblies::AssemblyVersionCompatibility::_set_SameProcess(::System::Configuration::Assemblies::AssemblyVersionCompatibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyVersionCompatibility::_set_SameProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration.Assemblies", "AssemblyVersionCompatibility", "SameProcess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.Assemblies.AssemblyVersionCompatibility SameDomain
::System::Configuration::Assemblies::AssemblyVersionCompatibility System::Configuration::Assemblies::AssemblyVersionCompatibility::_get_SameDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyVersionCompatibility::_get_SameDomain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::Assemblies::AssemblyVersionCompatibility>("System.Configuration.Assemblies", "AssemblyVersionCompatibility", "SameDomain"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.Assemblies.AssemblyVersionCompatibility SameDomain
void System::Configuration::Assemblies::AssemblyVersionCompatibility::_set_SameDomain(::System::Configuration::Assemblies::AssemblyVersionCompatibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyVersionCompatibility::_set_SameDomain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration.Assemblies", "AssemblyVersionCompatibility", "SameDomain", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Configuration::Assemblies::AssemblyVersionCompatibility::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::Assemblies::AssemblyVersionCompatibility::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Comparer
#include "System/Collections/Comparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Comparer Default
::System::Collections::Comparer* System::Collections::Comparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Comparer*>("System.Collections", "Comparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Comparer Default
void System::Collections::Comparer::_set_Default(::System::Collections::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Comparer", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Comparer DefaultInvariant
::System::Collections::Comparer* System::Collections::Comparer::_get_DefaultInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_get_DefaultInvariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Comparer*>("System.Collections", "Comparer", "DefaultInvariant"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Comparer DefaultInvariant
void System::Collections::Comparer::_set_DefaultInvariant(::System::Collections::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_set_DefaultInvariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Comparer", "DefaultInvariant", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo _compareInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::Collections::Comparer::dyn__compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::dyn__compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Comparer.GetObjectData
void System::Collections::Comparer::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Comparer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Comparer.Compare
int System::Collections::Comparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Comparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.Comparer..cctor
void System::Collections::Comparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "Comparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _key
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::DictionaryEntry::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::dyn__key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::DictionaryEntry::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::dyn__value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.DictionaryEntry..ctor
// ABORTED elsewhere.  System::Collections::DictionaryEntry::DictionaryEntry(::Il2CppObject* key, ::Il2CppObject* value)
// Autogenerated method: System.Collections.DictionaryEntry.get_Key
::Il2CppObject* System::Collections::DictionaryEntry::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.DictionaryEntry.get_Value
::Il2CppObject* System::Collections::DictionaryEntry::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.HashHelpers
#include "System/Collections/HashHelpers.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32[] primes
::ArrayW<int> System::Collections::HashHelpers::_get_primes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_get_primes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Collections", "HashHelpers", "primes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32[] primes
void System::Collections::HashHelpers::_set_primes(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_set_primes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "HashHelpers", "primes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> s_serializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::HashHelpers::_get_s_serializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_get_s_serializationInfoTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*>("System.Collections", "HashHelpers", "s_serializationInfoTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> s_serializationInfoTable
void System::Collections::HashHelpers::_set_s_serializationInfoTable(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_set_s_serializationInfoTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "HashHelpers", "s_serializationInfoTable", value));
}
// Autogenerated method: System.Collections.HashHelpers.IsPrime
bool System::Collections::HashHelpers::IsPrime(int candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::IsPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "IsPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, candidate);
}
// Autogenerated method: System.Collections.HashHelpers.GetPrime
int System::Collections::HashHelpers::GetPrime(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::GetPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "GetPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, min);
}
// Autogenerated method: System.Collections.HashHelpers.ExpandPrime
int System::Collections::HashHelpers::ExpandPrime(int oldSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::ExpandPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "ExpandPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oldSize);
}
// Autogenerated method: System.Collections.HashHelpers.get_SerializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::HashHelpers::get_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::get_SerializationInfoTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "get_SerializationInfoTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.HashHelpers..cctor
void System::Collections::HashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.ICollection.CopyTo
void System::Collections::ICollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ICollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ICollection*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ICollection.get_Count
int System::Collections::ICollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ICollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ICollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::ICollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ICollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ICollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ICollection.get_IsSynchronized
bool System::Collections::ICollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ICollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ICollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IComparer.Compare
int System::Collections::IComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IComparer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IDictionary.get_Item
::Il2CppObject* System::Collections::IDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.IDictionary.set_Item
void System::Collections::IDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.IDictionary.get_Keys
::System::Collections::ICollection* System::Collections::IDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.get_Values
::System::Collections::ICollection* System::Collections::IDictionary::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.Contains
bool System::Collections::IDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.IDictionary.Add
void System::Collections::IDictionary::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.IDictionary.Clear
void System::Collections::IDictionary::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.get_IsReadOnly
bool System::Collections::IDictionary::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.get_IsFixedSize
bool System::Collections::IDictionary::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::IDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.Remove
void System::Collections::IDictionary::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionary*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Key
::Il2CppObject* System::Collections::IDictionaryEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionaryEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionaryEnumerator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Value
::Il2CppObject* System::Collections::IDictionaryEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionaryEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionaryEnumerator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::IDictionaryEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionaryEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IDictionaryEnumerator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::IEnumerable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerable::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IEnumerable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEnumerator.MoveNext
bool System::Collections::IEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IEnumerator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Collections::IEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IEnumerator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IEnumerator.Reset
void System::Collections::IEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IEnumerator*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEqualityComparer.Equals
bool System::Collections::IEqualityComparer::Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IEqualityComparer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.IEqualityComparer.GetHashCode
int System::Collections::IEqualityComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IEqualityComparer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IList.get_Item
::Il2CppObject* System::Collections::IList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.IList.set_Item
void System::Collections::IList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.IList.Add
int System::Collections::IList::Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Contains
bool System::Collections::IList::Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Clear
void System::Collections::IList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IList.get_IsReadOnly
bool System::Collections::IList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IList.get_IsFixedSize
bool System::Collections::IList::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IList.IndexOf
int System::Collections::IList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Insert
void System::Collections::IList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.IList.Remove
void System::Collections::IList::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.RemoveAt
void System::Collections::IList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IStructuralComparable
#include "System/Collections/IStructuralComparable.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IStructuralComparable.CompareTo
int System::Collections::IStructuralComparable::CompareTo(::Il2CppObject* other, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IStructuralComparable::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IStructuralComparable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other, comparer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IStructuralEquatable
#include "System/Collections/IStructuralEquatable.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IStructuralEquatable.Equals
bool System::Collections::IStructuralEquatable::Equals(::Il2CppObject* other, ::System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IStructuralEquatable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IStructuralEquatable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, comparer);
}
// Autogenerated method: System.Collections.IStructuralEquatable.GetHashCode
int System::Collections::IStructuralEquatable::GetHashCode(::System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IStructuralEquatable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::IStructuralEquatable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, comparer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal
#include "System/Collections/ListDictionaryInternal.hpp"
// Including type: System.Collections.ListDictionaryInternal/NodeEnumerator
#include "System/Collections/ListDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.ListDictionaryInternal/NodeKeyValueCollection
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection.hpp"
// Including type: System.Collections.ListDictionaryInternal/DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal/DictionaryNode head
[[deprecated("Use field access instead!")]] ::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
[[deprecated("Use field access instead!")]] int& System::Collections::ListDictionaryInternal::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Collections::ListDictionaryInternal::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::ListDictionaryInternal::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Item
::Il2CppObject* System::Collections::ListDictionaryInternal::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.set_Item
void System::Collections::ListDictionaryInternal::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Count
int System::Collections::ListDictionaryInternal::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Keys
::System::Collections::ICollection* System::Collections::ListDictionaryInternal::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_Keys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_IsReadOnly
bool System::Collections::ListDictionaryInternal::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_IsFixedSize
bool System::Collections::ListDictionaryInternal::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_IsSynchronized
bool System::Collections::ListDictionaryInternal::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_SyncRoot
::Il2CppObject* System::Collections::ListDictionaryInternal::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Values
::System::Collections::ICollection* System::Collections::ListDictionaryInternal::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Add
void System::Collections::ListDictionaryInternal::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Clear
void System::Collections::ListDictionaryInternal::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Contains
bool System::Collections::ListDictionaryInternal::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.CopyTo
void System::Collections::ListDictionaryInternal::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::ListDictionaryInternal::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ListDictionaryInternal::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Remove
void System::Collections::ListDictionaryInternal::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/NodeEnumerator
#include "System/Collections/ListDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.ListDictionaryInternal/DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal list
[[deprecated("Use field access instead!")]] ::System::Collections::ListDictionaryInternal*& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal/DictionaryNode current
[[deprecated("Use field access instead!")]] ::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
[[deprecated("Use field access instead!")]] int& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean start
[[deprecated("Use field access instead!")]] bool& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.get_Current
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeEnumerator*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::ListDictionaryInternal::NodeEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeEnumerator*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.get_Key
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.get_Value
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.MoveNext
bool System::Collections::ListDictionaryInternal::NodeEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeEnumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.Reset
void System::Collections::ListDictionaryInternal::NodeEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeEnumerator*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/NodeKeyValueCollection
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection.hpp"
// Including type: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal list
[[deprecated("Use field access instead!")]] ::System::Collections::ListDictionaryInternal*& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
[[deprecated("Use field access instead!")]] bool& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeKeyValueCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeKeyValueCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection.System.Collections.ICollection.get_IsSynchronized
bool System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeKeyValueCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeKeyValueCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeKeyValueCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Collections.ListDictionaryInternal/DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal list
[[deprecated("Use field access instead!")]] ::System::Collections::ListDictionaryInternal*& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal/DictionaryNode current
[[deprecated("Use field access instead!")]] ::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
[[deprecated("Use field access instead!")]] int& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
[[deprecated("Use field access instead!")]] bool& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean start
[[deprecated("Use field access instead!")]] bool& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator.get_Current
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator.MoveNext
bool System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator.Reset
void System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object key
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::ListDictionaryInternal::DictionaryNode::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::DictionaryNode::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::ListDictionaryInternal::DictionaryNode::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::DictionaryNode::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.ListDictionaryInternal/DictionaryNode next
[[deprecated("Use field access instead!")]] ::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::DictionaryNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::DictionaryNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CompatibleComparer
#include "System/Collections/CompatibleComparer.hpp"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.IHashCodeProvider _hcp
[[deprecated("Use field access instead!")]] ::System::Collections::IHashCodeProvider*& System::Collections::CompatibleComparer::dyn__hcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::dyn__hcp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hcp"))->offset;
  return *reinterpret_cast<::System::Collections::IHashCodeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.IComparer _comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::Collections::CompatibleComparer::dyn__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::dyn__comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CompatibleComparer.get_HashCodeProvider
::System::Collections::IHashCodeProvider* System::Collections::CompatibleComparer::get_HashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::get_HashCodeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashCodeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IHashCodeProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CompatibleComparer.get_Comparer
::System::Collections::IComparer* System::Collections::CompatibleComparer::get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::get_Comparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IComparer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CompatibleComparer.Equals
bool System::Collections::CompatibleComparer::Equals(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CompatibleComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.CompatibleComparer.Compare
int System::Collections::CompatibleComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.CompatibleComparer.GetHashCode
int System::Collections::CompatibleComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CompatibleComparer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CaseInsensitiveComparer
#include "System/Collections/CaseInsensitiveComparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo _compareInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::Collections::CaseInsensitiveComparer::dyn__compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveComparer::dyn__compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CaseInsensitiveComparer.Compare
int System::Collections::CaseInsensitiveComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CaseInsensitiveComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CaseInsensitiveHashCodeProvider
#include "System/Collections/CaseInsensitiveHashCodeProvider.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Globalization.CompareInfo _compareInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::Collections::CaseInsensitiveHashCodeProvider::dyn__compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveHashCodeProvider::dyn__compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode
int System::Collections::CaseInsensitiveHashCodeProvider::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveHashCodeProvider::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CaseInsensitiveHashCodeProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CollectionBase
#include "System/Collections/CollectionBase.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::CollectionBase::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CollectionBase.get_InnerList
::System::Collections::ArrayList* System::Collections::CollectionBase::get_InnerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::get_InnerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.get_List
::System::Collections::IList* System::Collections::CollectionBase::get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::get_List");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_List", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.get_Count
int System::Collections::CollectionBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.Clear
void System::Collections::CollectionBase::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.RemoveAt
void System::Collections::CollectionBase::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.get_IsReadOnly
bool System::Collections::CollectionBase::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.get_IsFixedSize
bool System::Collections::CollectionBase::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.ICollection.get_IsSynchronized
bool System::Collections::CollectionBase::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::CollectionBase::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo
void System::Collections::CollectionBase::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.get_Item
::Il2CppObject* System::Collections::CollectionBase::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.set_Item
void System::Collections::CollectionBase::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Contains
bool System::Collections::CollectionBase::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Add
int System::Collections::CollectionBase::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Remove
void System::Collections::CollectionBase::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.IndexOf
int System::Collections::CollectionBase::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Insert
void System::Collections::CollectionBase::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.GetEnumerator
::System::Collections::IEnumerator* System::Collections::CollectionBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnSet
void System::Collections::CollectionBase::OnSet(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Collections.CollectionBase.OnInsert
void System::Collections::CollectionBase::OnInsert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnInsert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnClear
void System::Collections::CollectionBase::OnClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnClear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnRemove
void System::Collections::CollectionBase::OnRemove(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnRemove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnValidate
void System::Collections::CollectionBase::OnValidate(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnSetComplete
void System::Collections::CollectionBase::OnSetComplete(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnSetComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Collections.CollectionBase.OnInsertComplete
void System::Collections::CollectionBase::OnInsertComplete(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnInsertComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnClearComplete
void System::Collections::CollectionBase::OnClearComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnClearComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnRemoveComplete
void System::Collections::CollectionBase::OnRemoveComplete(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnRemoveComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
