// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseEnterEvent
#include "UnityEngine/UIElements/MouseEnterEvent.hpp"
// Including type: UnityEngine.UIElements.MouseEnterEvent/<>c
#include "UnityEngine/UIElements/MouseEnterEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.MouseEnterEvent..cctor
void UnityEngine::UIElements::MouseEnterEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseEnterEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseEnterEvent.Init
void UnityEngine::UIElements::MouseEnterEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::MouseEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseEnterEvent.LocalInit
void UnityEngine::UIElements::MouseEnterEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseEnterEvent/<>c
#include "UnityEngine/UIElements/MouseEnterEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.MouseEnterEvent/<>c <>9
::UnityEngine::UIElements::MouseEnterEvent::$$c* UnityEngine::UIElements::MouseEnterEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::MouseEnterEvent::$$c*>("UnityEngine.UIElements", "MouseEnterEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.MouseEnterEvent/<>c <>9
void UnityEngine::UIElements::MouseEnterEvent::$$c::_set_$$9(::UnityEngine::UIElements::MouseEnterEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "MouseEnterEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.MouseEnterEvent/<>c..cctor
void UnityEngine::UIElements::MouseEnterEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseEnterEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseEnterEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::MouseEnterEvent* UnityEngine::UIElements::MouseEnterEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::MouseEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseLeaveEvent
#include "UnityEngine/UIElements/MouseLeaveEvent.hpp"
// Including type: UnityEngine.UIElements.MouseLeaveEvent/<>c
#include "UnityEngine/UIElements/MouseLeaveEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.MouseLeaveEvent..cctor
void UnityEngine::UIElements::MouseLeaveEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseLeaveEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseLeaveEvent.Init
void UnityEngine::UIElements::MouseLeaveEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::MouseEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseLeaveEvent.LocalInit
void UnityEngine::UIElements::MouseLeaveEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseLeaveEvent/<>c
#include "UnityEngine/UIElements/MouseLeaveEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.MouseLeaveEvent/<>c <>9
::UnityEngine::UIElements::MouseLeaveEvent::$$c* UnityEngine::UIElements::MouseLeaveEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::MouseLeaveEvent::$$c*>("UnityEngine.UIElements", "MouseLeaveEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.MouseLeaveEvent/<>c <>9
void UnityEngine::UIElements::MouseLeaveEvent::$$c::_set_$$9(::UnityEngine::UIElements::MouseLeaveEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "MouseLeaveEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.MouseLeaveEvent/<>c..cctor
void UnityEngine::UIElements::MouseLeaveEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseLeaveEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseLeaveEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::MouseLeaveEvent* UnityEngine::UIElements::MouseLeaveEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::MouseLeaveEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseEnterWindowEvent
#include "UnityEngine/UIElements/MouseEnterWindowEvent.hpp"
// Including type: UnityEngine.UIElements.MouseEnterWindowEvent/<>c
#include "UnityEngine/UIElements/MouseEnterWindowEvent_--c.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.MouseEnterWindowEvent..cctor
void UnityEngine::UIElements::MouseEnterWindowEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterWindowEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseEnterWindowEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseEnterWindowEvent.Init
void UnityEngine::UIElements::MouseEnterWindowEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterWindowEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::MouseEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseEnterWindowEvent.LocalInit
void UnityEngine::UIElements::MouseEnterWindowEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterWindowEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseEnterWindowEvent.PostDispatch
void UnityEngine::UIElements::MouseEnterWindowEvent::PostDispatch(::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterWindowEvent::PostDispatch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::MouseEventBase_1<T>*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, panel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseEnterWindowEvent/<>c
#include "UnityEngine/UIElements/MouseEnterWindowEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.MouseEnterWindowEvent/<>c <>9
::UnityEngine::UIElements::MouseEnterWindowEvent::$$c* UnityEngine::UIElements::MouseEnterWindowEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterWindowEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::MouseEnterWindowEvent::$$c*>("UnityEngine.UIElements", "MouseEnterWindowEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.MouseEnterWindowEvent/<>c <>9
void UnityEngine::UIElements::MouseEnterWindowEvent::$$c::_set_$$9(::UnityEngine::UIElements::MouseEnterWindowEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterWindowEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "MouseEnterWindowEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.MouseEnterWindowEvent/<>c..cctor
void UnityEngine::UIElements::MouseEnterWindowEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterWindowEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseEnterWindowEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseEnterWindowEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::MouseEnterWindowEvent* UnityEngine::UIElements::MouseEnterWindowEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEnterWindowEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::MouseEnterWindowEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseLeaveWindowEvent
#include "UnityEngine/UIElements/MouseLeaveWindowEvent.hpp"
// Including type: UnityEngine.UIElements.MouseLeaveWindowEvent/<>c
#include "UnityEngine/UIElements/MouseLeaveWindowEvent_--c.hpp"
// Including type: UnityEngine.Event
#include "UnityEngine/Event.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.MouseLeaveWindowEvent.GetPooled
::UnityEngine::UIElements::MouseLeaveWindowEvent* UnityEngine::UIElements::MouseLeaveWindowEvent::GetPooled(::UnityEngine::Event* systemEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveWindowEvent::GetPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseLeaveWindowEvent", "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::MouseLeaveWindowEvent*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, systemEvent);
}
// Autogenerated method: UnityEngine.UIElements.MouseLeaveWindowEvent..cctor
void UnityEngine::UIElements::MouseLeaveWindowEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveWindowEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseLeaveWindowEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseLeaveWindowEvent.Init
void UnityEngine::UIElements::MouseLeaveWindowEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveWindowEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::MouseEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseLeaveWindowEvent.LocalInit
void UnityEngine::UIElements::MouseLeaveWindowEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveWindowEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseLeaveWindowEvent.PostDispatch
void UnityEngine::UIElements::MouseLeaveWindowEvent::PostDispatch(::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveWindowEvent::PostDispatch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::MouseEventBase_1<T>*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, panel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseLeaveWindowEvent/<>c
#include "UnityEngine/UIElements/MouseLeaveWindowEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.MouseLeaveWindowEvent/<>c <>9
::UnityEngine::UIElements::MouseLeaveWindowEvent::$$c* UnityEngine::UIElements::MouseLeaveWindowEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveWindowEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::MouseLeaveWindowEvent::$$c*>("UnityEngine.UIElements", "MouseLeaveWindowEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.MouseLeaveWindowEvent/<>c <>9
void UnityEngine::UIElements::MouseLeaveWindowEvent::$$c::_set_$$9(::UnityEngine::UIElements::MouseLeaveWindowEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveWindowEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "MouseLeaveWindowEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.MouseLeaveWindowEvent/<>c..cctor
void UnityEngine::UIElements::MouseLeaveWindowEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveWindowEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseLeaveWindowEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseLeaveWindowEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::MouseLeaveWindowEvent* UnityEngine::UIElements::MouseLeaveWindowEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseLeaveWindowEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::MouseLeaveWindowEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseOverEvent
#include "UnityEngine/UIElements/MouseOverEvent.hpp"
// Including type: UnityEngine.UIElements.MouseOverEvent/<>c
#include "UnityEngine/UIElements/MouseOverEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.MouseOverEvent..cctor
void UnityEngine::UIElements::MouseOverEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseOverEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseOverEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseOverEvent/<>c
#include "UnityEngine/UIElements/MouseOverEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.MouseOverEvent/<>c <>9
::UnityEngine::UIElements::MouseOverEvent::$$c* UnityEngine::UIElements::MouseOverEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseOverEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::MouseOverEvent::$$c*>("UnityEngine.UIElements", "MouseOverEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.MouseOverEvent/<>c <>9
void UnityEngine::UIElements::MouseOverEvent::$$c::_set_$$9(::UnityEngine::UIElements::MouseOverEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseOverEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "MouseOverEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.MouseOverEvent/<>c..cctor
void UnityEngine::UIElements::MouseOverEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseOverEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseOverEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseOverEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::MouseOverEvent* UnityEngine::UIElements::MouseOverEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseOverEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::MouseOverEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseOutEvent
#include "UnityEngine/UIElements/MouseOutEvent.hpp"
// Including type: UnityEngine.UIElements.MouseOutEvent/<>c
#include "UnityEngine/UIElements/MouseOutEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.MouseOutEvent..cctor
void UnityEngine::UIElements::MouseOutEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseOutEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseOutEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseOutEvent/<>c
#include "UnityEngine/UIElements/MouseOutEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.MouseOutEvent/<>c <>9
::UnityEngine::UIElements::MouseOutEvent::$$c* UnityEngine::UIElements::MouseOutEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseOutEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::MouseOutEvent::$$c*>("UnityEngine.UIElements", "MouseOutEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.MouseOutEvent/<>c <>9
void UnityEngine::UIElements::MouseOutEvent::$$c::_set_$$9(::UnityEngine::UIElements::MouseOutEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseOutEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "MouseOutEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.MouseOutEvent/<>c..cctor
void UnityEngine::UIElements::MouseOutEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseOutEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseOutEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.MouseOutEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::MouseOutEvent* UnityEngine::UIElements::MouseOutEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseOutEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::MouseOutEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.ContextualMenuPopulateEvent
#include "UnityEngine/UIElements/ContextualMenuPopulateEvent.hpp"
// Including type: UnityEngine.UIElements.ContextualMenuPopulateEvent/<>c
#include "UnityEngine/UIElements/ContextualMenuPopulateEvent_--c.hpp"
// Including type: UnityEngine.UIElements.DropdownMenu
#include "UnityEngine/UIElements/DropdownMenu.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
// Including type: UnityEngine.UIElements.ContextualMenuManager
#include "UnityEngine/UIElements/ContextualMenuManager.hpp"
// Including type: UnityEngine.UIElements.IEventHandler
#include "UnityEngine/UIElements/IEventHandler.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.DropdownMenu <menu>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DropdownMenu*& UnityEngine::UIElements::ContextualMenuPopulateEvent::dyn_$menu$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::dyn_$menu$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<menu>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::DropdownMenu**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.EventBase <triggerEvent>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::EventBase*& UnityEngine::UIElements::ContextualMenuPopulateEvent::dyn_$triggerEvent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::dyn_$triggerEvent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<triggerEvent>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::EventBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.ContextualMenuManager m_ContextualMenuManager
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ContextualMenuManager*& UnityEngine::UIElements::ContextualMenuPopulateEvent::dyn_m_ContextualMenuManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::dyn_m_ContextualMenuManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContextualMenuManager"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::ContextualMenuManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent.get_menu
::UnityEngine::UIElements::DropdownMenu* UnityEngine::UIElements::ContextualMenuPopulateEvent::get_menu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::get_menu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_menu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::DropdownMenu*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent.set_menu
void UnityEngine::UIElements::ContextualMenuPopulateEvent::set_menu(::UnityEngine::UIElements::DropdownMenu* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::set_menu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_menu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent.get_triggerEvent
::UnityEngine::UIElements::EventBase* UnityEngine::UIElements::ContextualMenuPopulateEvent::get_triggerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::get_triggerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::EventBase*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent.set_triggerEvent
void UnityEngine::UIElements::ContextualMenuPopulateEvent::set_triggerEvent(::UnityEngine::UIElements::EventBase* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::set_triggerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triggerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent.GetPooled
::UnityEngine::UIElements::ContextualMenuPopulateEvent* UnityEngine::UIElements::ContextualMenuPopulateEvent::GetPooled(::UnityEngine::UIElements::EventBase* triggerEvent, ::UnityEngine::UIElements::DropdownMenu* menu, ::UnityEngine::UIElements::IEventHandler* target, ::UnityEngine::UIElements::ContextualMenuManager* menuManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::GetPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "ContextualMenuPopulateEvent", "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triggerEvent), ::il2cpp_utils::ExtractType(menu), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(menuManager)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::ContextualMenuPopulateEvent*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, triggerEvent, menu, target, menuManager);
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent..cctor
void UnityEngine::UIElements::ContextualMenuPopulateEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "ContextualMenuPopulateEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent.Init
void UnityEngine::UIElements::ContextualMenuPopulateEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::MouseEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent.LocalInit
void UnityEngine::UIElements::ContextualMenuPopulateEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent.PostDispatch
void UnityEngine::UIElements::ContextualMenuPopulateEvent::PostDispatch(::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::PostDispatch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::MouseEventBase_1<T>*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, panel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.ContextualMenuPopulateEvent/<>c
#include "UnityEngine/UIElements/ContextualMenuPopulateEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.ContextualMenuPopulateEvent/<>c <>9
::UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c* UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c*>("UnityEngine.UIElements", "ContextualMenuPopulateEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.ContextualMenuPopulateEvent/<>c <>9
void UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c::_set_$$9(::UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "ContextualMenuPopulateEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent/<>c..cctor
void UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "ContextualMenuPopulateEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.ContextualMenuPopulateEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::ContextualMenuPopulateEvent* UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ContextualMenuPopulateEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::ContextualMenuPopulateEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.MouseEventsHelper
#include "UnityEngine/UIElements/MouseEventsHelper.hpp"
// Including type: UnityEngine.UIElements.MouseEventBase`1
#include "UnityEngine/UIElements/MouseEventBase_1.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.IMouseEvent
#include "UnityEngine/UIElements/IMouseEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.MouseEventsHelper.SendMouseOverMouseOut
void UnityEngine::UIElements::MouseEventsHelper::SendMouseOverMouseOut(::UnityEngine::UIElements::VisualElement* previousTopElementUnderMouse, ::UnityEngine::UIElements::VisualElement* currentTopElementUnderMouse, ::UnityEngine::UIElements::IMouseEvent* triggerEvent, ::UnityEngine::Vector2 mousePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::MouseEventsHelper::SendMouseOverMouseOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "MouseEventsHelper", "SendMouseOverMouseOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousTopElementUnderMouse), ::il2cpp_utils::ExtractType(currentTopElementUnderMouse), ::il2cpp_utils::ExtractType(triggerEvent), ::il2cpp_utils::ExtractType(mousePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previousTopElementUnderMouse, currentTopElementUnderMouse, triggerEvent, mousePosition);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerEventsHelper
#include "UnityEngine/UIElements/PointerEventsHelper.hpp"
// Including type: UnityEngine.UIElements.PointerEventBase`1
#include "UnityEngine/UIElements/PointerEventBase_1.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.IPointerEvent
#include "UnityEngine/UIElements/IPointerEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerEventsHelper.SendOverOut
void UnityEngine::UIElements::PointerEventsHelper::SendOverOut(::UnityEngine::UIElements::VisualElement* previousTopElementUnderPointer, ::UnityEngine::UIElements::VisualElement* currentTopElementUnderPointer, ::UnityEngine::UIElements::IPointerEvent* triggerEvent, ::UnityEngine::Vector2 position, int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEventsHelper::SendOverOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerEventsHelper", "SendOverOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousTopElementUnderPointer), ::il2cpp_utils::ExtractType(currentTopElementUnderPointer), ::il2cpp_utils::ExtractType(triggerEvent), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(pointerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previousTopElementUnderPointer, currentTopElementUnderPointer, triggerEvent, position, pointerId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigationEventDispatchingStrategy
#include "UnityEngine/UIElements/NavigationEventDispatchingStrategy.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.NavigationEventDispatchingStrategy.CanDispatchEvent
bool UnityEngine::UIElements::NavigationEventDispatchingStrategy::CanDispatchEvent(::UnityEngine::UIElements::EventBase* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationEventDispatchingStrategy::CanDispatchEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::NavigationEventDispatchingStrategy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, evt);
}
// Autogenerated method: UnityEngine.UIElements.NavigationEventDispatchingStrategy.DispatchEvent
void UnityEngine::UIElements::NavigationEventDispatchingStrategy::DispatchEvent(::UnityEngine::UIElements::EventBase* evt, ::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationEventDispatchingStrategy::DispatchEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::NavigationEventDispatchingStrategy*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt, panel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.INavigationEvent
#include "UnityEngine/UIElements/INavigationEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.INavigationEvent.get_shiftKey
bool UnityEngine::UIElements::INavigationEvent::get_shiftKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::INavigationEvent::get_shiftKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::INavigationEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.INavigationEvent.get_altKey
bool UnityEngine::UIElements::INavigationEvent::get_altKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::INavigationEvent::get_altKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::INavigationEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigationDeviceType
#include "UnityEngine/UIElements/NavigationDeviceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.NavigationDeviceType Unknown
::UnityEngine::UIElements::NavigationDeviceType UnityEngine::UIElements::NavigationDeviceType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationDeviceType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationDeviceType>("UnityEngine.UIElements", "NavigationDeviceType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.NavigationDeviceType Unknown
void UnityEngine::UIElements::NavigationDeviceType::_set_Unknown(::UnityEngine::UIElements::NavigationDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationDeviceType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationDeviceType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.NavigationDeviceType Keyboard
::UnityEngine::UIElements::NavigationDeviceType UnityEngine::UIElements::NavigationDeviceType::_get_Keyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationDeviceType::_get_Keyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationDeviceType>("UnityEngine.UIElements", "NavigationDeviceType", "Keyboard"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.NavigationDeviceType Keyboard
void UnityEngine::UIElements::NavigationDeviceType::_set_Keyboard(::UnityEngine::UIElements::NavigationDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationDeviceType::_set_Keyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationDeviceType", "Keyboard", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.NavigationDeviceType NonKeyboard
::UnityEngine::UIElements::NavigationDeviceType UnityEngine::UIElements::NavigationDeviceType::_get_NonKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationDeviceType::_get_NonKeyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationDeviceType>("UnityEngine.UIElements", "NavigationDeviceType", "NonKeyboard"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.NavigationDeviceType NonKeyboard
void UnityEngine::UIElements::NavigationDeviceType::_set_NonKeyboard(::UnityEngine::UIElements::NavigationDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationDeviceType::_set_NonKeyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationDeviceType", "NonKeyboard", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::NavigationDeviceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationDeviceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigationMoveEvent
#include "UnityEngine/UIElements/NavigationMoveEvent.hpp"
// Including type: UnityEngine.UIElements.NavigationMoveEvent/<>c
#include "UnityEngine/UIElements/NavigationMoveEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.NavigationMoveEvent/Direction <direction>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::NavigationMoveEvent::Direction& UnityEngine::UIElements::NavigationMoveEvent::dyn_$direction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::dyn_$direction$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<direction>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::NavigationMoveEvent::Direction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <move>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UIElements::NavigationMoveEvent::dyn_$move$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::dyn_$move$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<move>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent.DetermineMoveDirection
::UnityEngine::UIElements::NavigationMoveEvent::Direction UnityEngine::UIElements::NavigationMoveEvent::DetermineMoveDirection(float x, float y, float deadZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::DetermineMoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationMoveEvent", "DetermineMoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(deadZone)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::NavigationMoveEvent::Direction, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, deadZone);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent.get_direction
::UnityEngine::UIElements::NavigationMoveEvent::Direction UnityEngine::UIElements::NavigationMoveEvent::get_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::get_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::NavigationMoveEvent::Direction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent.set_direction
void UnityEngine::UIElements::NavigationMoveEvent::set_direction(::UnityEngine::UIElements::NavigationMoveEvent::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent.set_move
void UnityEngine::UIElements::NavigationMoveEvent::set_move(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::set_move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent.GetPooled
::UnityEngine::UIElements::NavigationMoveEvent* UnityEngine::UIElements::NavigationMoveEvent::GetPooled(::UnityEngine::Vector2 moveVector, ::UnityEngine::EventModifiers modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::GetPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationMoveEvent", "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveVector), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::NavigationMoveEvent*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, moveVector, modifiers);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent.GetPooled
::UnityEngine::UIElements::NavigationMoveEvent* UnityEngine::UIElements::NavigationMoveEvent::GetPooled(::UnityEngine::Vector2 moveVector, ::UnityEngine::UIElements::NavigationDeviceType deviceType, ::UnityEngine::EventModifiers modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::GetPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationMoveEvent", "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveVector), ::il2cpp_utils::ExtractType(deviceType), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::NavigationMoveEvent*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, moveVector, deviceType, modifiers);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent.GetPooled
::UnityEngine::UIElements::NavigationMoveEvent* UnityEngine::UIElements::NavigationMoveEvent::GetPooled(::UnityEngine::UIElements::NavigationMoveEvent::Direction direction, ::UnityEngine::EventModifiers modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::GetPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationMoveEvent", "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::NavigationMoveEvent*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, direction, modifiers);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent.GetPooled
::UnityEngine::UIElements::NavigationMoveEvent* UnityEngine::UIElements::NavigationMoveEvent::GetPooled(::UnityEngine::UIElements::NavigationMoveEvent::Direction direction, ::UnityEngine::UIElements::NavigationDeviceType deviceType, ::UnityEngine::EventModifiers modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::GetPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationMoveEvent", "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(deviceType), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::NavigationMoveEvent*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, direction, deviceType, modifiers);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent..cctor
void UnityEngine::UIElements::NavigationMoveEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationMoveEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent.Init
void UnityEngine::UIElements::NavigationMoveEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::NavigationEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent.LocalInit
void UnityEngine::UIElements::NavigationMoveEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigationMoveEvent/Direction
#include "UnityEngine/UIElements/NavigationMoveEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction None
::UnityEngine::UIElements::NavigationMoveEvent::Direction UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationMoveEvent::Direction>("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction None
void UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_None(::UnityEngine::UIElements::NavigationMoveEvent::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Left
::UnityEngine::UIElements::NavigationMoveEvent::Direction UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationMoveEvent::Direction>("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Left
void UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Left(::UnityEngine::UIElements::NavigationMoveEvent::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Up
::UnityEngine::UIElements::NavigationMoveEvent::Direction UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationMoveEvent::Direction>("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Up"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Up
void UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Up(::UnityEngine::UIElements::NavigationMoveEvent::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Right
::UnityEngine::UIElements::NavigationMoveEvent::Direction UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationMoveEvent::Direction>("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Right
void UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Right(::UnityEngine::UIElements::NavigationMoveEvent::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Down
::UnityEngine::UIElements::NavigationMoveEvent::Direction UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationMoveEvent::Direction>("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Down"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Down
void UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Down(::UnityEngine::UIElements::NavigationMoveEvent::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Next
::UnityEngine::UIElements::NavigationMoveEvent::Direction UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Next");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationMoveEvent::Direction>("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Next"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Next
void UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Next(::UnityEngine::UIElements::NavigationMoveEvent::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Next");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Next", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Previous
::UnityEngine::UIElements::NavigationMoveEvent::Direction UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_get_Previous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationMoveEvent::Direction>("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Previous"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.NavigationMoveEvent/Direction Previous
void UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Previous(::UnityEngine::UIElements::NavigationMoveEvent::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::_set_Previous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationMoveEvent/Direction", "Previous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::NavigationMoveEvent::Direction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::Direction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigationMoveEvent/<>c
#include "UnityEngine/UIElements/NavigationMoveEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.NavigationMoveEvent/<>c <>9
::UnityEngine::UIElements::NavigationMoveEvent::$$c* UnityEngine::UIElements::NavigationMoveEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationMoveEvent::$$c*>("UnityEngine.UIElements", "NavigationMoveEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.NavigationMoveEvent/<>c <>9
void UnityEngine::UIElements::NavigationMoveEvent::$$c::_set_$$9(::UnityEngine::UIElements::NavigationMoveEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationMoveEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent/<>c..cctor
void UnityEngine::UIElements::NavigationMoveEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationMoveEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.NavigationMoveEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::NavigationMoveEvent* UnityEngine::UIElements::NavigationMoveEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationMoveEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::NavigationMoveEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigationCancelEvent
#include "UnityEngine/UIElements/NavigationCancelEvent.hpp"
// Including type: UnityEngine.UIElements.NavigationCancelEvent/<>c
#include "UnityEngine/UIElements/NavigationCancelEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.NavigationCancelEvent..cctor
void UnityEngine::UIElements::NavigationCancelEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationCancelEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationCancelEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigationCancelEvent/<>c
#include "UnityEngine/UIElements/NavigationCancelEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.NavigationCancelEvent/<>c <>9
::UnityEngine::UIElements::NavigationCancelEvent::$$c* UnityEngine::UIElements::NavigationCancelEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationCancelEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationCancelEvent::$$c*>("UnityEngine.UIElements", "NavigationCancelEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.NavigationCancelEvent/<>c <>9
void UnityEngine::UIElements::NavigationCancelEvent::$$c::_set_$$9(::UnityEngine::UIElements::NavigationCancelEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationCancelEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationCancelEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.NavigationCancelEvent/<>c..cctor
void UnityEngine::UIElements::NavigationCancelEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationCancelEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationCancelEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.NavigationCancelEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::NavigationCancelEvent* UnityEngine::UIElements::NavigationCancelEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationCancelEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::NavigationCancelEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigationSubmitEvent
#include "UnityEngine/UIElements/NavigationSubmitEvent.hpp"
// Including type: UnityEngine.UIElements.NavigationSubmitEvent/<>c
#include "UnityEngine/UIElements/NavigationSubmitEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.NavigationSubmitEvent..cctor
void UnityEngine::UIElements::NavigationSubmitEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationSubmitEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationSubmitEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigationSubmitEvent/<>c
#include "UnityEngine/UIElements/NavigationSubmitEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.NavigationSubmitEvent/<>c <>9
::UnityEngine::UIElements::NavigationSubmitEvent::$$c* UnityEngine::UIElements::NavigationSubmitEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationSubmitEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigationSubmitEvent::$$c*>("UnityEngine.UIElements", "NavigationSubmitEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.NavigationSubmitEvent/<>c <>9
void UnityEngine::UIElements::NavigationSubmitEvent::$$c::_set_$$9(::UnityEngine::UIElements::NavigationSubmitEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationSubmitEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigationSubmitEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.NavigationSubmitEvent/<>c..cctor
void UnityEngine::UIElements::NavigationSubmitEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationSubmitEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigationSubmitEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.NavigationSubmitEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::NavigationSubmitEvent* UnityEngine::UIElements::NavigationSubmitEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigationSubmitEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::NavigationSubmitEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.AttachToPanelEvent
#include "UnityEngine/UIElements/AttachToPanelEvent.hpp"
// Including type: UnityEngine.UIElements.AttachToPanelEvent/<>c
#include "UnityEngine/UIElements/AttachToPanelEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.AttachToPanelEvent..cctor
void UnityEngine::UIElements::AttachToPanelEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::AttachToPanelEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "AttachToPanelEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.AttachToPanelEvent/<>c
#include "UnityEngine/UIElements/AttachToPanelEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.AttachToPanelEvent/<>c <>9
::UnityEngine::UIElements::AttachToPanelEvent::$$c* UnityEngine::UIElements::AttachToPanelEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::AttachToPanelEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::AttachToPanelEvent::$$c*>("UnityEngine.UIElements", "AttachToPanelEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.AttachToPanelEvent/<>c <>9
void UnityEngine::UIElements::AttachToPanelEvent::$$c::_set_$$9(::UnityEngine::UIElements::AttachToPanelEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::AttachToPanelEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "AttachToPanelEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.AttachToPanelEvent/<>c..cctor
void UnityEngine::UIElements::AttachToPanelEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::AttachToPanelEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "AttachToPanelEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.AttachToPanelEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::AttachToPanelEvent* UnityEngine::UIElements::AttachToPanelEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::AttachToPanelEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::AttachToPanelEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.DetachFromPanelEvent
#include "UnityEngine/UIElements/DetachFromPanelEvent.hpp"
// Including type: UnityEngine.UIElements.DetachFromPanelEvent/<>c
#include "UnityEngine/UIElements/DetachFromPanelEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.DetachFromPanelEvent..cctor
void UnityEngine::UIElements::DetachFromPanelEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DetachFromPanelEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "DetachFromPanelEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.DetachFromPanelEvent/<>c
#include "UnityEngine/UIElements/DetachFromPanelEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.DetachFromPanelEvent/<>c <>9
::UnityEngine::UIElements::DetachFromPanelEvent::$$c* UnityEngine::UIElements::DetachFromPanelEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DetachFromPanelEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::DetachFromPanelEvent::$$c*>("UnityEngine.UIElements", "DetachFromPanelEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.DetachFromPanelEvent/<>c <>9
void UnityEngine::UIElements::DetachFromPanelEvent::$$c::_set_$$9(::UnityEngine::UIElements::DetachFromPanelEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DetachFromPanelEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "DetachFromPanelEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.DetachFromPanelEvent/<>c..cctor
void UnityEngine::UIElements::DetachFromPanelEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DetachFromPanelEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "DetachFromPanelEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.DetachFromPanelEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::DetachFromPanelEvent* UnityEngine::UIElements::DetachFromPanelEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DetachFromPanelEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::DetachFromPanelEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerCaptureDispatchingStrategy
#include "UnityEngine/UIElements/PointerCaptureDispatchingStrategy.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerCaptureDispatchingStrategy.CanDispatchEvent
bool UnityEngine::UIElements::PointerCaptureDispatchingStrategy::CanDispatchEvent(::UnityEngine::UIElements::EventBase* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerCaptureDispatchingStrategy::CanDispatchEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerCaptureDispatchingStrategy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, evt);
}
// Autogenerated method: UnityEngine.UIElements.PointerCaptureDispatchingStrategy.DispatchEvent
void UnityEngine::UIElements::PointerCaptureDispatchingStrategy::DispatchEvent(::UnityEngine::UIElements::EventBase* evt, ::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerCaptureDispatchingStrategy::DispatchEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerCaptureDispatchingStrategy*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt, panel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerDeviceState
#include "UnityEngine/UIElements/PointerDeviceState.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
// Including type: UnityEngine.UIElements.ContextType
#include "UnityEngine/UIElements/ContextType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UIElements.PointerDeviceState/PointerLocation[] s_PlayerPointerLocations
::ArrayW<::UnityEngine::UIElements::PointerDeviceState::PointerLocation> UnityEngine::UIElements::PointerDeviceState::_get_s_PlayerPointerLocations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::_get_s_PlayerPointerLocations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::UIElements::PointerDeviceState::PointerLocation>>("UnityEngine.UIElements", "PointerDeviceState", "s_PlayerPointerLocations"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UIElements.PointerDeviceState/PointerLocation[] s_PlayerPointerLocations
void UnityEngine::UIElements::PointerDeviceState::_set_s_PlayerPointerLocations(::ArrayW<::UnityEngine::UIElements::PointerDeviceState::PointerLocation> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::_set_s_PlayerPointerLocations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerDeviceState", "s_PlayerPointerLocations", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32[] s_PressedButtons
::ArrayW<int> UnityEngine::UIElements::PointerDeviceState::_get_s_PressedButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::_get_s_PressedButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("UnityEngine.UIElements", "PointerDeviceState", "s_PressedButtons"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] s_PressedButtons
void UnityEngine::UIElements::PointerDeviceState::_set_s_PressedButtons(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::_set_s_PressedButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerDeviceState", "s_PressedButtons", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.UIElements.IPanel[] s_PlayerPanelWithSoftPointerCapture
::ArrayW<::UnityEngine::UIElements::IPanel*> UnityEngine::UIElements::PointerDeviceState::_get_s_PlayerPanelWithSoftPointerCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::_get_s_PlayerPanelWithSoftPointerCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::UIElements::IPanel*>>("UnityEngine.UIElements", "PointerDeviceState", "s_PlayerPanelWithSoftPointerCapture"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.UIElements.IPanel[] s_PlayerPanelWithSoftPointerCapture
void UnityEngine::UIElements::PointerDeviceState::_set_s_PlayerPanelWithSoftPointerCapture(::ArrayW<::UnityEngine::UIElements::IPanel*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::_set_s_PlayerPanelWithSoftPointerCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerDeviceState", "s_PlayerPanelWithSoftPointerCapture", value));
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.RemovePanelData
void UnityEngine::UIElements::PointerDeviceState::RemovePanelData(::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::RemovePanelData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "RemovePanelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(panel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, panel);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.SavePointerPosition
void UnityEngine::UIElements::PointerDeviceState::SavePointerPosition(int pointerId, ::UnityEngine::Vector2 position, ::UnityEngine::UIElements::IPanel* panel, ::UnityEngine::UIElements::ContextType contextType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::SavePointerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "SavePointerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(panel), ::il2cpp_utils::ExtractType(contextType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId, position, panel, contextType);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.PressButton
void UnityEngine::UIElements::PointerDeviceState::PressButton(int pointerId, int buttonId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PressButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "PressButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId), ::il2cpp_utils::ExtractType(buttonId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId, buttonId);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.ReleaseButton
void UnityEngine::UIElements::PointerDeviceState::ReleaseButton(int pointerId, int buttonId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::ReleaseButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "ReleaseButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId), ::il2cpp_utils::ExtractType(buttonId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId, buttonId);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.ReleaseAllButtons
void UnityEngine::UIElements::PointerDeviceState::ReleaseAllButtons(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::ReleaseAllButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "ReleaseAllButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.GetPointerPosition
::UnityEngine::Vector2 UnityEngine::UIElements::PointerDeviceState::GetPointerPosition(int pointerId, ::UnityEngine::UIElements::ContextType contextType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::GetPointerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "GetPointerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId), ::il2cpp_utils::ExtractType(contextType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId, contextType);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.GetPanel
::UnityEngine::UIElements::IPanel* UnityEngine::UIElements::PointerDeviceState::GetPanel(int pointerId, ::UnityEngine::UIElements::ContextType contextType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::GetPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "GetPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId), ::il2cpp_utils::ExtractType(contextType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::IPanel*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId, contextType);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.HasFlagFast
bool UnityEngine::UIElements::PointerDeviceState::HasFlagFast(::UnityEngine::UIElements::PointerDeviceState::LocationFlag flagSet, ::UnityEngine::UIElements::PointerDeviceState::LocationFlag flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::HasFlagFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "HasFlagFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flagSet), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flagSet, flag);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.HasLocationFlag
bool UnityEngine::UIElements::PointerDeviceState::HasLocationFlag(int pointerId, ::UnityEngine::UIElements::ContextType contextType, ::UnityEngine::UIElements::PointerDeviceState::LocationFlag flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::HasLocationFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "HasLocationFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId), ::il2cpp_utils::ExtractType(contextType), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId, contextType, flag);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.GetPressedButtons
int UnityEngine::UIElements::PointerDeviceState::GetPressedButtons(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::GetPressedButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "GetPressedButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.HasAdditionalPressedButtons
bool UnityEngine::UIElements::PointerDeviceState::HasAdditionalPressedButtons(int pointerId, int exceptButtonId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::HasAdditionalPressedButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "HasAdditionalPressedButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId), ::il2cpp_utils::ExtractType(exceptButtonId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId, exceptButtonId);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.SetPlayerPanelWithSoftPointerCapture
void UnityEngine::UIElements::PointerDeviceState::SetPlayerPanelWithSoftPointerCapture(int pointerId, ::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::SetPlayerPanelWithSoftPointerCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "SetPlayerPanelWithSoftPointerCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId), ::il2cpp_utils::ExtractType(panel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId, panel);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState.GetPlayerPanelWithSoftPointerCapture
::UnityEngine::UIElements::IPanel* UnityEngine::UIElements::PointerDeviceState::GetPlayerPanelWithSoftPointerCapture(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::GetPlayerPanelWithSoftPointerCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", "GetPlayerPanelWithSoftPointerCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::IPanel*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState..cctor
void UnityEngine::UIElements::PointerDeviceState::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDeviceState", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerDeviceState/LocationFlag
#include "UnityEngine/UIElements/PointerDeviceState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.PointerDeviceState/LocationFlag None
::UnityEngine::UIElements::PointerDeviceState::LocationFlag UnityEngine::UIElements::PointerDeviceState::LocationFlag::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::LocationFlag::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerDeviceState::LocationFlag>("UnityEngine.UIElements", "PointerDeviceState/LocationFlag", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.PointerDeviceState/LocationFlag None
void UnityEngine::UIElements::PointerDeviceState::LocationFlag::_set_None(::UnityEngine::UIElements::PointerDeviceState::LocationFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::LocationFlag::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerDeviceState/LocationFlag", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.PointerDeviceState/LocationFlag OutsidePanel
::UnityEngine::UIElements::PointerDeviceState::LocationFlag UnityEngine::UIElements::PointerDeviceState::LocationFlag::_get_OutsidePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::LocationFlag::_get_OutsidePanel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerDeviceState::LocationFlag>("UnityEngine.UIElements", "PointerDeviceState/LocationFlag", "OutsidePanel"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.PointerDeviceState/LocationFlag OutsidePanel
void UnityEngine::UIElements::PointerDeviceState::LocationFlag::_set_OutsidePanel(::UnityEngine::UIElements::PointerDeviceState::LocationFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::LocationFlag::_set_OutsidePanel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerDeviceState/LocationFlag", "OutsidePanel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::PointerDeviceState::LocationFlag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::LocationFlag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerDeviceState/PointerLocation
#include "UnityEngine/UIElements/PointerDeviceState.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
// Including type: UnityEngine.UIElements.PointerDeviceState/LocationFlag
// Already included the same include: UnityEngine/UIElements/PointerDeviceState.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <Position>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UIElements::PointerDeviceState::PointerLocation::dyn_$Position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PointerLocation::dyn_$Position$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Position>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.IPanel <Panel>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::IPanel*& UnityEngine::UIElements::PointerDeviceState::PointerLocation::dyn_$Panel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PointerLocation::dyn_$Panel$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Panel>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::IPanel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.PointerDeviceState/LocationFlag <Flags>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PointerDeviceState::LocationFlag& UnityEngine::UIElements::PointerDeviceState::PointerLocation::dyn_$Flags$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PointerLocation::dyn_$Flags$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Flags>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::PointerDeviceState::LocationFlag*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState/PointerLocation.get_Position
::UnityEngine::Vector2 UnityEngine::UIElements::PointerDeviceState::PointerLocation::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PointerLocation::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState/PointerLocation.set_Position
void UnityEngine::UIElements::PointerDeviceState::PointerLocation::set_Position(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PointerLocation::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState/PointerLocation.get_Panel
::UnityEngine::UIElements::IPanel* UnityEngine::UIElements::PointerDeviceState::PointerLocation::get_Panel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PointerLocation::get_Panel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Panel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::IPanel*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState/PointerLocation.set_Panel
void UnityEngine::UIElements::PointerDeviceState::PointerLocation::set_Panel(::UnityEngine::UIElements::IPanel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PointerLocation::set_Panel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Panel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState/PointerLocation.get_Flags
::UnityEngine::UIElements::PointerDeviceState::LocationFlag UnityEngine::UIElements::PointerDeviceState::PointerLocation::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PointerLocation::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PointerDeviceState::LocationFlag, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState/PointerLocation.set_Flags
void UnityEngine::UIElements::PointerDeviceState::PointerLocation::set_Flags(::UnityEngine::UIElements::PointerDeviceState::LocationFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PointerLocation::set_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PointerDeviceState/PointerLocation.SetLocation
void UnityEngine::UIElements::PointerDeviceState::PointerLocation::SetLocation(::UnityEngine::Vector2 position, ::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDeviceState::PointerLocation::SetLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(panel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, panel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerEventDispatchingStrategy
#include "UnityEngine/UIElements/PointerEventDispatchingStrategy.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerEventDispatchingStrategy.CanDispatchEvent
bool UnityEngine::UIElements::PointerEventDispatchingStrategy::CanDispatchEvent(::UnityEngine::UIElements::EventBase* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEventDispatchingStrategy::CanDispatchEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventDispatchingStrategy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, evt);
}
// Autogenerated method: UnityEngine.UIElements.PointerEventDispatchingStrategy.DispatchEvent
void UnityEngine::UIElements::PointerEventDispatchingStrategy::DispatchEvent(::UnityEngine::UIElements::EventBase* evt, ::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEventDispatchingStrategy::DispatchEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventDispatchingStrategy*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt, panel);
}
// Autogenerated method: UnityEngine.UIElements.PointerEventDispatchingStrategy.SendEventToTarget
void UnityEngine::UIElements::PointerEventDispatchingStrategy::SendEventToTarget(::UnityEngine::UIElements::EventBase* evt, ::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEventDispatchingStrategy::SendEventToTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerEventDispatchingStrategy", "SendEventToTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(panel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, evt, panel);
}
// Autogenerated method: UnityEngine.UIElements.PointerEventDispatchingStrategy.SetBestTargetForEvent
void UnityEngine::UIElements::PointerEventDispatchingStrategy::SetBestTargetForEvent(::UnityEngine::UIElements::EventBase* evt, ::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEventDispatchingStrategy::SetBestTargetForEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerEventDispatchingStrategy", "SetBestTargetForEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(panel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, evt, panel);
}
// Autogenerated method: UnityEngine.UIElements.PointerEventDispatchingStrategy.UpdateElementUnderPointer
void UnityEngine::UIElements::PointerEventDispatchingStrategy::UpdateElementUnderPointer(::UnityEngine::UIElements::EventBase* evt, ::UnityEngine::UIElements::IPanel* panel, ByRef<::UnityEngine::UIElements::VisualElement*> elementUnderPointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEventDispatchingStrategy::UpdateElementUnderPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerEventDispatchingStrategy", "UpdateElementUnderPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(panel), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::UIElements::VisualElement*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, evt, panel, byref(elementUnderPointer));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerType
#include "UnityEngine/UIElements/PointerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String mouse
::StringW UnityEngine::UIElements::PointerType::_get_mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::_get_mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.UIElements", "PointerType", "mouse"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String mouse
void UnityEngine::UIElements::PointerType::_set_mouse(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::_set_mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerType", "mouse", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String touch
::StringW UnityEngine::UIElements::PointerType::_get_touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::_get_touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.UIElements", "PointerType", "touch"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String touch
void UnityEngine::UIElements::PointerType::_set_touch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::_set_touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerType", "touch", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String pen
::StringW UnityEngine::UIElements::PointerType::_get_pen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::_get_pen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.UIElements", "PointerType", "pen"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String pen
void UnityEngine::UIElements::PointerType::_set_pen(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::_set_pen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerType", "pen", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String unknown
::StringW UnityEngine::UIElements::PointerType::_get_unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::_get_unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.UIElements", "PointerType", "unknown"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String unknown
void UnityEngine::UIElements::PointerType::_set_unknown(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::_set_unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerType", "unknown", value));
}
// Autogenerated method: UnityEngine.UIElements.PointerType.GetPointerType
::StringW UnityEngine::UIElements::PointerType::GetPointerType(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::GetPointerType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerType", "GetPointerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerId);
}
// Autogenerated method: UnityEngine.UIElements.PointerType.IsDirectManipulationDevice
bool UnityEngine::UIElements::PointerType::IsDirectManipulationDevice(::StringW pointerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::IsDirectManipulationDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerType", "IsDirectManipulationDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerType);
}
// Autogenerated method: UnityEngine.UIElements.PointerType..cctor
void UnityEngine::UIElements::PointerType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerType::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerType", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerId
#include "UnityEngine/UIElements/PointerId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 maxPointers
int UnityEngine::UIElements::PointerId::_get_maxPointers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_get_maxPointers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UIElements", "PointerId", "maxPointers"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 maxPointers
void UnityEngine::UIElements::PointerId::_set_maxPointers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_set_maxPointers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerId", "maxPointers", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 invalidPointerId
int UnityEngine::UIElements::PointerId::_get_invalidPointerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_get_invalidPointerId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UIElements", "PointerId", "invalidPointerId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 invalidPointerId
void UnityEngine::UIElements::PointerId::_set_invalidPointerId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_set_invalidPointerId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerId", "invalidPointerId", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 mousePointerId
int UnityEngine::UIElements::PointerId::_get_mousePointerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_get_mousePointerId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UIElements", "PointerId", "mousePointerId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 mousePointerId
void UnityEngine::UIElements::PointerId::_set_mousePointerId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_set_mousePointerId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerId", "mousePointerId", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 touchPointerIdBase
int UnityEngine::UIElements::PointerId::_get_touchPointerIdBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_get_touchPointerIdBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UIElements", "PointerId", "touchPointerIdBase"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 touchPointerIdBase
void UnityEngine::UIElements::PointerId::_set_touchPointerIdBase(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_set_touchPointerIdBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerId", "touchPointerIdBase", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 touchPointerCount
int UnityEngine::UIElements::PointerId::_get_touchPointerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_get_touchPointerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UIElements", "PointerId", "touchPointerCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 touchPointerCount
void UnityEngine::UIElements::PointerId::_set_touchPointerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_set_touchPointerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerId", "touchPointerCount", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 penPointerIdBase
int UnityEngine::UIElements::PointerId::_get_penPointerIdBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_get_penPointerIdBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UIElements", "PointerId", "penPointerIdBase"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 penPointerIdBase
void UnityEngine::UIElements::PointerId::_set_penPointerIdBase(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_set_penPointerIdBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerId", "penPointerIdBase", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 penPointerCount
int UnityEngine::UIElements::PointerId::_get_penPointerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_get_penPointerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UIElements", "PointerId", "penPointerCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 penPointerCount
void UnityEngine::UIElements::PointerId::_set_penPointerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_set_penPointerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerId", "penPointerCount", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] hoveringPointers
::ArrayW<int> UnityEngine::UIElements::PointerId::_get_hoveringPointers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_get_hoveringPointers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("UnityEngine.UIElements", "PointerId", "hoveringPointers"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] hoveringPointers
void UnityEngine::UIElements::PointerId::_set_hoveringPointers(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::_set_hoveringPointers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerId", "hoveringPointers", value));
}
// Autogenerated method: UnityEngine.UIElements.PointerId..cctor
void UnityEngine::UIElements::PointerId::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerId::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerId", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.IPointerEvent
#include "UnityEngine/UIElements/IPointerEvent.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.PenStatus
#include "UnityEngine/PenStatus.hpp"
// Including type: UnityEngine.EventModifiers
#include "UnityEngine/EventModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_pointerId
int UnityEngine::UIElements::IPointerEvent::get_pointerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_pointerId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_pointerType
::StringW UnityEngine::UIElements::IPointerEvent::get_pointerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_pointerType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_isPrimary
bool UnityEngine::UIElements::IPointerEvent::get_isPrimary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_isPrimary");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_button
int UnityEngine::UIElements::IPointerEvent::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_button");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_pressedButtons
int UnityEngine::UIElements::IPointerEvent::get_pressedButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_pressedButtons");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_position
::UnityEngine::Vector3 UnityEngine::UIElements::IPointerEvent::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_localPosition
::UnityEngine::Vector3 UnityEngine::UIElements::IPointerEvent::get_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_localPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_deltaPosition
::UnityEngine::Vector3 UnityEngine::UIElements::IPointerEvent::get_deltaPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_deltaPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_deltaTime
float UnityEngine::UIElements::IPointerEvent::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_deltaTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_clickCount
int UnityEngine::UIElements::IPointerEvent::get_clickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_clickCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_pressure
float UnityEngine::UIElements::IPointerEvent::get_pressure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_pressure");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_tangentialPressure
float UnityEngine::UIElements::IPointerEvent::get_tangentialPressure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_tangentialPressure");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_altitudeAngle
float UnityEngine::UIElements::IPointerEvent::get_altitudeAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_altitudeAngle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_azimuthAngle
float UnityEngine::UIElements::IPointerEvent::get_azimuthAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_azimuthAngle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_twist
float UnityEngine::UIElements::IPointerEvent::get_twist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_twist");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_tilt
::UnityEngine::Vector2 UnityEngine::UIElements::IPointerEvent::get_tilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_tilt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_penStatus
::UnityEngine::PenStatus UnityEngine::UIElements::IPointerEvent::get_penStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_penStatus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PenStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_radius
::UnityEngine::Vector2 UnityEngine::UIElements::IPointerEvent::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_radius");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_radiusVariance
::UnityEngine::Vector2 UnityEngine::UIElements::IPointerEvent::get_radiusVariance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_radiusVariance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_modifiers
::UnityEngine::EventModifiers UnityEngine::UIElements::IPointerEvent::get_modifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_modifiers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventModifiers, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_shiftKey
bool UnityEngine::UIElements::IPointerEvent::get_shiftKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_shiftKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_ctrlKey
bool UnityEngine::UIElements::IPointerEvent::get_ctrlKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_ctrlKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_commandKey
bool UnityEngine::UIElements::IPointerEvent::get_commandKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_commandKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_altKey
bool UnityEngine::UIElements::IPointerEvent::get_altKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_altKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEvent.get_actionKey
bool UnityEngine::UIElements::IPointerEvent::get_actionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEvent::get_actionKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEvent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.IPointerEventInternal
#include "UnityEngine/UIElements/IPointerEventInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.IPointerEventInternal.get_triggeredByOS
bool UnityEngine::UIElements::IPointerEventInternal::get_triggeredByOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEventInternal::get_triggeredByOS");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEventInternal*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEventInternal.set_triggeredByOS
void UnityEngine::UIElements::IPointerEventInternal::set_triggeredByOS(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEventInternal::set_triggeredByOS");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEventInternal*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEventInternal.get_recomputeTopElementUnderPointer
bool UnityEngine::UIElements::IPointerEventInternal::get_recomputeTopElementUnderPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEventInternal::get_recomputeTopElementUnderPointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEventInternal*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IPointerEventInternal.set_recomputeTopElementUnderPointer
void UnityEngine::UIElements::IPointerEventInternal::set_recomputeTopElementUnderPointer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IPointerEventInternal::set_recomputeTopElementUnderPointer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IPointerEventInternal*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerEventHelper
#include "UnityEngine/UIElements/PointerEventHelper.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
// Including type: UnityEngine.EventType
#include "UnityEngine/EventType.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.EventModifiers
#include "UnityEngine/EventModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerEventHelper.GetPooled
::UnityEngine::UIElements::EventBase* UnityEngine::UIElements::PointerEventHelper::GetPooled(::UnityEngine::EventType eventType, ::UnityEngine::Vector3 mousePosition, ::UnityEngine::Vector2 delta, int button, int clickCount, ::UnityEngine::EventModifiers modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEventHelper::GetPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerEventHelper", "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(mousePosition), ::il2cpp_utils::ExtractType(delta), ::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(clickCount), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::EventBase*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventType, mousePosition, delta, button, clickCount, modifiers);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerDownEvent
#include "UnityEngine/UIElements/PointerDownEvent.hpp"
// Including type: UnityEngine.UIElements.PointerDownEvent/<>c
#include "UnityEngine/UIElements/PointerDownEvent_--c.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerDownEvent..cctor
void UnityEngine::UIElements::PointerDownEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDownEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDownEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerDownEvent.Init
void UnityEngine::UIElements::PointerDownEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDownEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerDownEvent.LocalInit
void UnityEngine::UIElements::PointerDownEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDownEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerDownEvent.PostDispatch
void UnityEngine::UIElements::PointerDownEvent::PostDispatch(::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDownEvent::PostDispatch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, panel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerDownEvent/<>c
#include "UnityEngine/UIElements/PointerDownEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.PointerDownEvent/<>c <>9
::UnityEngine::UIElements::PointerDownEvent::$$c* UnityEngine::UIElements::PointerDownEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDownEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerDownEvent::$$c*>("UnityEngine.UIElements", "PointerDownEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.PointerDownEvent/<>c <>9
void UnityEngine::UIElements::PointerDownEvent::$$c::_set_$$9(::UnityEngine::UIElements::PointerDownEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDownEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerDownEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.PointerDownEvent/<>c..cctor
void UnityEngine::UIElements::PointerDownEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDownEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerDownEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerDownEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::PointerDownEvent* UnityEngine::UIElements::PointerDownEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerDownEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PointerDownEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerMoveEvent
#include "UnityEngine/UIElements/PointerMoveEvent.hpp"
// Including type: UnityEngine.UIElements.PointerMoveEvent/<>c
#include "UnityEngine/UIElements/PointerMoveEvent_--c.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isHandledByDraggable>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::UIElements::PointerMoveEvent::dyn_$isHandledByDraggable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::dyn_$isHandledByDraggable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isHandledByDraggable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.PointerMoveEvent.get_isHandledByDraggable
bool UnityEngine::UIElements::PointerMoveEvent::get_isHandledByDraggable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::get_isHandledByDraggable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHandledByDraggable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerMoveEvent.set_isHandledByDraggable
void UnityEngine::UIElements::PointerMoveEvent::set_isHandledByDraggable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::set_isHandledByDraggable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isHandledByDraggable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PointerMoveEvent..cctor
void UnityEngine::UIElements::PointerMoveEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerMoveEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerMoveEvent.Init
void UnityEngine::UIElements::PointerMoveEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerMoveEvent.LocalInit
void UnityEngine::UIElements::PointerMoveEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerMoveEvent.PostDispatch
void UnityEngine::UIElements::PointerMoveEvent::PostDispatch(::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::PostDispatch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, panel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerMoveEvent/<>c
#include "UnityEngine/UIElements/PointerMoveEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.PointerMoveEvent/<>c <>9
::UnityEngine::UIElements::PointerMoveEvent::$$c* UnityEngine::UIElements::PointerMoveEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerMoveEvent::$$c*>("UnityEngine.UIElements", "PointerMoveEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.PointerMoveEvent/<>c <>9
void UnityEngine::UIElements::PointerMoveEvent::$$c::_set_$$9(::UnityEngine::UIElements::PointerMoveEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerMoveEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.PointerMoveEvent/<>c..cctor
void UnityEngine::UIElements::PointerMoveEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerMoveEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerMoveEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::PointerMoveEvent* UnityEngine::UIElements::PointerMoveEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerMoveEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PointerMoveEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerStationaryEvent
#include "UnityEngine/UIElements/PointerStationaryEvent.hpp"
// Including type: UnityEngine.UIElements.PointerStationaryEvent/<>c
#include "UnityEngine/UIElements/PointerStationaryEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerStationaryEvent..cctor
void UnityEngine::UIElements::PointerStationaryEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerStationaryEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerStationaryEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerStationaryEvent.Init
void UnityEngine::UIElements::PointerStationaryEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerStationaryEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerStationaryEvent.LocalInit
void UnityEngine::UIElements::PointerStationaryEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerStationaryEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerStationaryEvent/<>c
#include "UnityEngine/UIElements/PointerStationaryEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.PointerStationaryEvent/<>c <>9
::UnityEngine::UIElements::PointerStationaryEvent::$$c* UnityEngine::UIElements::PointerStationaryEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerStationaryEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerStationaryEvent::$$c*>("UnityEngine.UIElements", "PointerStationaryEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.PointerStationaryEvent/<>c <>9
void UnityEngine::UIElements::PointerStationaryEvent::$$c::_set_$$9(::UnityEngine::UIElements::PointerStationaryEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerStationaryEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerStationaryEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.PointerStationaryEvent/<>c..cctor
void UnityEngine::UIElements::PointerStationaryEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerStationaryEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerStationaryEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerStationaryEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::PointerStationaryEvent* UnityEngine::UIElements::PointerStationaryEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerStationaryEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PointerStationaryEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerUpEvent
#include "UnityEngine/UIElements/PointerUpEvent.hpp"
// Including type: UnityEngine.UIElements.PointerUpEvent/<>c
#include "UnityEngine/UIElements/PointerUpEvent_--c.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerUpEvent..cctor
void UnityEngine::UIElements::PointerUpEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerUpEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerUpEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerUpEvent.Init
void UnityEngine::UIElements::PointerUpEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerUpEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerUpEvent.LocalInit
void UnityEngine::UIElements::PointerUpEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerUpEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerUpEvent.PostDispatch
void UnityEngine::UIElements::PointerUpEvent::PostDispatch(::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerUpEvent::PostDispatch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, panel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerUpEvent/<>c
#include "UnityEngine/UIElements/PointerUpEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.PointerUpEvent/<>c <>9
::UnityEngine::UIElements::PointerUpEvent::$$c* UnityEngine::UIElements::PointerUpEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerUpEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerUpEvent::$$c*>("UnityEngine.UIElements", "PointerUpEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.PointerUpEvent/<>c <>9
void UnityEngine::UIElements::PointerUpEvent::$$c::_set_$$9(::UnityEngine::UIElements::PointerUpEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerUpEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerUpEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.PointerUpEvent/<>c..cctor
void UnityEngine::UIElements::PointerUpEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerUpEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerUpEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerUpEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::PointerUpEvent* UnityEngine::UIElements::PointerUpEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerUpEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PointerUpEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerCancelEvent
#include "UnityEngine/UIElements/PointerCancelEvent.hpp"
// Including type: UnityEngine.UIElements.PointerCancelEvent/<>c
#include "UnityEngine/UIElements/PointerCancelEvent_--c.hpp"
// Including type: UnityEngine.UIElements.IPanel
#include "UnityEngine/UIElements/IPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerCancelEvent..cctor
void UnityEngine::UIElements::PointerCancelEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerCancelEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerCancelEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerCancelEvent.Init
void UnityEngine::UIElements::PointerCancelEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerCancelEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerCancelEvent.LocalInit
void UnityEngine::UIElements::PointerCancelEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerCancelEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerCancelEvent.PostDispatch
void UnityEngine::UIElements::PointerCancelEvent::PostDispatch(::UnityEngine::UIElements::IPanel* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerCancelEvent::PostDispatch");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, panel);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerCancelEvent/<>c
#include "UnityEngine/UIElements/PointerCancelEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.PointerCancelEvent/<>c <>9
::UnityEngine::UIElements::PointerCancelEvent::$$c* UnityEngine::UIElements::PointerCancelEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerCancelEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerCancelEvent::$$c*>("UnityEngine.UIElements", "PointerCancelEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.PointerCancelEvent/<>c <>9
void UnityEngine::UIElements::PointerCancelEvent::$$c::_set_$$9(::UnityEngine::UIElements::PointerCancelEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerCancelEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerCancelEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.PointerCancelEvent/<>c..cctor
void UnityEngine::UIElements::PointerCancelEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerCancelEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerCancelEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerCancelEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::PointerCancelEvent* UnityEngine::UIElements::PointerCancelEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerCancelEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PointerCancelEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.ClickEvent
#include "UnityEngine/UIElements/ClickEvent.hpp"
// Including type: UnityEngine.UIElements.ClickEvent/<>c
#include "UnityEngine/UIElements/ClickEvent_--c.hpp"
// Including type: UnityEngine.UIElements.PointerUpEvent
#include "UnityEngine/UIElements/PointerUpEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.ClickEvent.GetPooled
::UnityEngine::UIElements::ClickEvent* UnityEngine::UIElements::ClickEvent::GetPooled(::UnityEngine::UIElements::PointerUpEvent* pointerEvent, int clickCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ClickEvent::GetPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "ClickEvent", "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent), ::il2cpp_utils::ExtractType(clickCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::ClickEvent*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEvent, clickCount);
}
// Autogenerated method: UnityEngine.UIElements.ClickEvent..cctor
void UnityEngine::UIElements::ClickEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ClickEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "ClickEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.ClickEvent.Init
void UnityEngine::UIElements::ClickEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ClickEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.ClickEvent.LocalInit
void UnityEngine::UIElements::ClickEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ClickEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.ClickEvent/<>c
#include "UnityEngine/UIElements/ClickEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.ClickEvent/<>c <>9
::UnityEngine::UIElements::ClickEvent::$$c* UnityEngine::UIElements::ClickEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ClickEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::ClickEvent::$$c*>("UnityEngine.UIElements", "ClickEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.ClickEvent/<>c <>9
void UnityEngine::UIElements::ClickEvent::$$c::_set_$$9(::UnityEngine::UIElements::ClickEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ClickEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "ClickEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.ClickEvent/<>c..cctor
void UnityEngine::UIElements::ClickEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ClickEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "ClickEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.ClickEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::ClickEvent* UnityEngine::UIElements::ClickEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::ClickEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::ClickEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerEnterEvent
#include "UnityEngine/UIElements/PointerEnterEvent.hpp"
// Including type: UnityEngine.UIElements.PointerEnterEvent/<>c
#include "UnityEngine/UIElements/PointerEnterEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerEnterEvent..cctor
void UnityEngine::UIElements::PointerEnterEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEnterEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerEnterEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerEnterEvent.Init
void UnityEngine::UIElements::PointerEnterEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEnterEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerEnterEvent.LocalInit
void UnityEngine::UIElements::PointerEnterEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEnterEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerEnterEvent/<>c
#include "UnityEngine/UIElements/PointerEnterEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.PointerEnterEvent/<>c <>9
::UnityEngine::UIElements::PointerEnterEvent::$$c* UnityEngine::UIElements::PointerEnterEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEnterEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerEnterEvent::$$c*>("UnityEngine.UIElements", "PointerEnterEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.PointerEnterEvent/<>c <>9
void UnityEngine::UIElements::PointerEnterEvent::$$c::_set_$$9(::UnityEngine::UIElements::PointerEnterEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEnterEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerEnterEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.PointerEnterEvent/<>c..cctor
void UnityEngine::UIElements::PointerEnterEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEnterEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerEnterEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerEnterEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::PointerEnterEvent* UnityEngine::UIElements::PointerEnterEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEnterEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PointerEnterEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerLeaveEvent
#include "UnityEngine/UIElements/PointerLeaveEvent.hpp"
// Including type: UnityEngine.UIElements.PointerLeaveEvent/<>c
#include "UnityEngine/UIElements/PointerLeaveEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerLeaveEvent..cctor
void UnityEngine::UIElements::PointerLeaveEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerLeaveEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerLeaveEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerLeaveEvent.Init
void UnityEngine::UIElements::PointerLeaveEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerLeaveEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::PointerEventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerLeaveEvent.LocalInit
void UnityEngine::UIElements::PointerLeaveEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerLeaveEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerLeaveEvent/<>c
#include "UnityEngine/UIElements/PointerLeaveEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.PointerLeaveEvent/<>c <>9
::UnityEngine::UIElements::PointerLeaveEvent::$$c* UnityEngine::UIElements::PointerLeaveEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerLeaveEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerLeaveEvent::$$c*>("UnityEngine.UIElements", "PointerLeaveEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.PointerLeaveEvent/<>c <>9
void UnityEngine::UIElements::PointerLeaveEvent::$$c::_set_$$9(::UnityEngine::UIElements::PointerLeaveEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerLeaveEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerLeaveEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.PointerLeaveEvent/<>c..cctor
void UnityEngine::UIElements::PointerLeaveEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerLeaveEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerLeaveEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerLeaveEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::PointerLeaveEvent* UnityEngine::UIElements::PointerLeaveEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerLeaveEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PointerLeaveEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerOverEvent
#include "UnityEngine/UIElements/PointerOverEvent.hpp"
// Including type: UnityEngine.UIElements.PointerOverEvent/<>c
#include "UnityEngine/UIElements/PointerOverEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerOverEvent..cctor
void UnityEngine::UIElements::PointerOverEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerOverEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerOverEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerOverEvent/<>c
#include "UnityEngine/UIElements/PointerOverEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.PointerOverEvent/<>c <>9
::UnityEngine::UIElements::PointerOverEvent::$$c* UnityEngine::UIElements::PointerOverEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerOverEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerOverEvent::$$c*>("UnityEngine.UIElements", "PointerOverEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.PointerOverEvent/<>c <>9
void UnityEngine::UIElements::PointerOverEvent::$$c::_set_$$9(::UnityEngine::UIElements::PointerOverEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerOverEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerOverEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.PointerOverEvent/<>c..cctor
void UnityEngine::UIElements::PointerOverEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerOverEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerOverEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerOverEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::PointerOverEvent* UnityEngine::UIElements::PointerOverEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerOverEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PointerOverEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerOutEvent
#include "UnityEngine/UIElements/PointerOutEvent.hpp"
// Including type: UnityEngine.UIElements.PointerOutEvent/<>c
#include "UnityEngine/UIElements/PointerOutEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.PointerOutEvent..cctor
void UnityEngine::UIElements::PointerOutEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerOutEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerOutEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PointerOutEvent/<>c
#include "UnityEngine/UIElements/PointerOutEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.PointerOutEvent/<>c <>9
::UnityEngine::UIElements::PointerOutEvent::$$c* UnityEngine::UIElements::PointerOutEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerOutEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PointerOutEvent::$$c*>("UnityEngine.UIElements", "PointerOutEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.PointerOutEvent/<>c <>9
void UnityEngine::UIElements::PointerOutEvent::$$c::_set_$$9(::UnityEngine::UIElements::PointerOutEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerOutEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PointerOutEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.PointerOutEvent/<>c..cctor
void UnityEngine::UIElements::PointerOutEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerOutEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerOutEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PointerOutEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::PointerOutEvent* UnityEngine::UIElements::PointerOutEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerOutEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PointerOutEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PropagationPaths
#include "UnityEngine/UIElements/PropagationPaths.hpp"
// Including type: UnityEngine.UIElements.PropagationPaths/<>c
#include "UnityEngine/UIElements/PropagationPaths_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.ObjectPool`1
#include "UnityEngine/UIElements/ObjectPool_1.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.UIElements.ObjectPool`1<UnityEngine.UIElements.PropagationPaths> s_Pool
::UnityEngine::UIElements::ObjectPool_1<::UnityEngine::UIElements::PropagationPaths*>* UnityEngine::UIElements::PropagationPaths::_get_s_Pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::_get_s_Pool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::ObjectPool_1<::UnityEngine::UIElements::PropagationPaths*>*>("UnityEngine.UIElements", "PropagationPaths", "s_Pool"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.UIElements.ObjectPool`1<UnityEngine.UIElements.PropagationPaths> s_Pool
void UnityEngine::UIElements::PropagationPaths::_set_s_Pool(::UnityEngine::UIElements::ObjectPool_1<::UnityEngine::UIElements::PropagationPaths*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::_set_s_Pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PropagationPaths", "s_Pool", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_DefaultPropagationDepth
int UnityEngine::UIElements::PropagationPaths::_get_k_DefaultPropagationDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::_get_k_DefaultPropagationDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UIElements", "PropagationPaths", "k_DefaultPropagationDepth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_DefaultPropagationDepth
void UnityEngine::UIElements::PropagationPaths::_set_k_DefaultPropagationDepth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::_set_k_DefaultPropagationDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PropagationPaths", "k_DefaultPropagationDepth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_DefaultTargetCount
int UnityEngine::UIElements::PropagationPaths::_get_k_DefaultTargetCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::_get_k_DefaultTargetCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UIElements", "PropagationPaths", "k_DefaultTargetCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_DefaultTargetCount
void UnityEngine::UIElements::PropagationPaths::_set_k_DefaultTargetCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::_set_k_DefaultTargetCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PropagationPaths", "k_DefaultTargetCount", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> trickleDownPath
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*& UnityEngine::UIElements::PropagationPaths::dyn_trickleDownPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::dyn_trickleDownPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trickleDownPath"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> targetElements
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*& UnityEngine::UIElements::PropagationPaths::dyn_targetElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::dyn_targetElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetElements"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> bubbleUpPath
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*& UnityEngine::UIElements::PropagationPaths::dyn_bubbleUpPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::dyn_bubbleUpPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bubbleUpPath"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.PropagationPaths.Build
::UnityEngine::UIElements::PropagationPaths* UnityEngine::UIElements::PropagationPaths::Build(::UnityEngine::UIElements::VisualElement* elem, ::UnityEngine::UIElements::EventBase* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PropagationPaths", "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elem), ::il2cpp_utils::ExtractType(evt)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PropagationPaths*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elem, evt);
}
// Autogenerated method: UnityEngine.UIElements.PropagationPaths.Release
void UnityEngine::UIElements::PropagationPaths::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PropagationPaths..cctor
void UnityEngine::UIElements::PropagationPaths::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PropagationPaths", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PropagationPaths/<>c
#include "UnityEngine/UIElements/PropagationPaths_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.PropagationPaths/<>c <>9
::UnityEngine::UIElements::PropagationPaths::$$c* UnityEngine::UIElements::PropagationPaths::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PropagationPaths::$$c*>("UnityEngine.UIElements", "PropagationPaths/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.PropagationPaths/<>c <>9
void UnityEngine::UIElements::PropagationPaths::$$c::_set_$$9(::UnityEngine::UIElements::PropagationPaths::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PropagationPaths/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.PropagationPaths/<>c..cctor
void UnityEngine::UIElements::PropagationPaths::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PropagationPaths/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PropagationPaths/<>c.<.cctor>b__12_0
::UnityEngine::UIElements::PropagationPaths* UnityEngine::UIElements::PropagationPaths::$$c::$_cctor$b__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PropagationPaths::$$c::<.cctor>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PropagationPaths*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.CustomStyleResolvedEvent
#include "UnityEngine/UIElements/CustomStyleResolvedEvent.hpp"
// Including type: UnityEngine.UIElements.CustomStyleResolvedEvent/<>c
#include "UnityEngine/UIElements/CustomStyleResolvedEvent_--c.hpp"
// Including type: UnityEngine.UIElements.ICustomStyle
#include "UnityEngine/UIElements/ICustomStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.CustomStyleResolvedEvent.get_customStyle
::UnityEngine::UIElements::ICustomStyle* UnityEngine::UIElements::CustomStyleResolvedEvent::get_customStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::CustomStyleResolvedEvent::get_customStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::ICustomStyle*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.CustomStyleResolvedEvent..cctor
void UnityEngine::UIElements::CustomStyleResolvedEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::CustomStyleResolvedEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "CustomStyleResolvedEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.CustomStyleResolvedEvent/<>c
#include "UnityEngine/UIElements/CustomStyleResolvedEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.CustomStyleResolvedEvent/<>c <>9
::UnityEngine::UIElements::CustomStyleResolvedEvent::$$c* UnityEngine::UIElements::CustomStyleResolvedEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::CustomStyleResolvedEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::CustomStyleResolvedEvent::$$c*>("UnityEngine.UIElements", "CustomStyleResolvedEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.CustomStyleResolvedEvent/<>c <>9
void UnityEngine::UIElements::CustomStyleResolvedEvent::$$c::_set_$$9(::UnityEngine::UIElements::CustomStyleResolvedEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::CustomStyleResolvedEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "CustomStyleResolvedEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.CustomStyleResolvedEvent/<>c..cctor
void UnityEngine::UIElements::CustomStyleResolvedEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::CustomStyleResolvedEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "CustomStyleResolvedEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.CustomStyleResolvedEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::CustomStyleResolvedEvent* UnityEngine::UIElements::CustomStyleResolvedEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::CustomStyleResolvedEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::CustomStyleResolvedEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.TooltipEvent
#include "UnityEngine/UIElements/TooltipEvent.hpp"
// Including type: UnityEngine.UIElements.TooltipEvent/<>c
#include "UnityEngine/UIElements/TooltipEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <tooltip>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::UIElements::TooltipEvent::dyn_$tooltip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::dyn_$tooltip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tooltip>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect <rect>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& UnityEngine::UIElements::TooltipEvent::dyn_$rect$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::dyn_$rect$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rect>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.TooltipEvent.set_tooltip
void UnityEngine::UIElements::TooltipEvent::set_tooltip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::set_tooltip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tooltip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.TooltipEvent.set_rect
void UnityEngine::UIElements::TooltipEvent::set_rect(::UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::set_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.TooltipEvent..cctor
void UnityEngine::UIElements::TooltipEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "TooltipEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.TooltipEvent.Init
void UnityEngine::UIElements::TooltipEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::EventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.TooltipEvent.LocalInit
void UnityEngine::UIElements::TooltipEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.TooltipEvent/<>c
#include "UnityEngine/UIElements/TooltipEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.TooltipEvent/<>c <>9
::UnityEngine::UIElements::TooltipEvent::$$c* UnityEngine::UIElements::TooltipEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::TooltipEvent::$$c*>("UnityEngine.UIElements", "TooltipEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.TooltipEvent/<>c <>9
void UnityEngine::UIElements::TooltipEvent::$$c::_set_$$9(::UnityEngine::UIElements::TooltipEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "TooltipEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.TooltipEvent/<>c..cctor
void UnityEngine::UIElements::TooltipEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "TooltipEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.TooltipEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::TooltipEvent* UnityEngine::UIElements::TooltipEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TooltipEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::TooltipEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.StylePropertyNameCollection
#include "UnityEngine/UIElements/StylePropertyNameCollection.hpp"
// Including type: UnityEngine.UIElements.StylePropertyNameCollection/Enumerator
#include "UnityEngine/UIElements/StylePropertyNameCollection_Enumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<UnityEngine.UIElements.StylePropertyName> propertiesList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>*& UnityEngine::UIElements::StylePropertyNameCollection::dyn_propertiesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyNameCollection::dyn_propertiesList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertiesList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.StylePropertyNameCollection..ctor
// ABORTED elsewhere.  UnityEngine::UIElements::StylePropertyNameCollection::StylePropertyNameCollection(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>* list)
// Autogenerated method: UnityEngine.UIElements.StylePropertyNameCollection.GetEnumerator
::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator UnityEngine::UIElements::StylePropertyNameCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyNameCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.StylePropertyNameCollection.System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StylePropertyName>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StylePropertyName>* UnityEngine::UIElements::StylePropertyNameCollection::System_Collections_Generic_IEnumerable$UnityEngine_UIElements_StylePropertyName$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyNameCollection::System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StylePropertyName>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::UIElements::StylePropertyNameCollection), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StylePropertyName>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.StylePropertyNameCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::UIElements::StylePropertyNameCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyNameCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::UIElements::StylePropertyNameCollection), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UIElements.StylePropertyNameCollection/Enumerator
#include "UnityEngine/UIElements/StylePropertyNameCollection_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/Enumerator<UnityEngine.UIElements.StylePropertyName> m_Enumerator
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>::Enumerator& UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::dyn_m_Enumerator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.StylePropertyNameCollection/Enumerator..ctor
// ABORTED elsewhere.  UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::Enumerator(typename ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>::Enumerator enumerator)
// Autogenerated method: UnityEngine.UIElements.StylePropertyNameCollection/Enumerator.MoveNext
bool UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.StylePropertyNameCollection/Enumerator.get_Current
::UnityEngine::UIElements::StylePropertyName UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::StylePropertyName, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.StylePropertyNameCollection/Enumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.StylePropertyNameCollection/Enumerator.Reset
void UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.StylePropertyNameCollection/Enumerator.Dispose
void UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::UIElements::StylePropertyNameCollection::Enumerator), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.TransitionRunEvent
#include "UnityEngine/UIElements/TransitionRunEvent.hpp"
// Including type: UnityEngine.UIElements.TransitionRunEvent/<>c
#include "UnityEngine/UIElements/TransitionRunEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.TransitionRunEvent..cctor
void UnityEngine::UIElements::TransitionRunEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionRunEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "TransitionRunEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.TransitionRunEvent/<>c
#include "UnityEngine/UIElements/TransitionRunEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.TransitionRunEvent/<>c <>9
::UnityEngine::UIElements::TransitionRunEvent::$$c* UnityEngine::UIElements::TransitionRunEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionRunEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::TransitionRunEvent::$$c*>("UnityEngine.UIElements", "TransitionRunEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.TransitionRunEvent/<>c <>9
void UnityEngine::UIElements::TransitionRunEvent::$$c::_set_$$9(::UnityEngine::UIElements::TransitionRunEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionRunEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "TransitionRunEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.TransitionRunEvent/<>c..cctor
void UnityEngine::UIElements::TransitionRunEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionRunEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "TransitionRunEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.TransitionRunEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::TransitionRunEvent* UnityEngine::UIElements::TransitionRunEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionRunEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::TransitionRunEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.TransitionStartEvent
#include "UnityEngine/UIElements/TransitionStartEvent.hpp"
// Including type: UnityEngine.UIElements.TransitionStartEvent/<>c
#include "UnityEngine/UIElements/TransitionStartEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.TransitionStartEvent..cctor
void UnityEngine::UIElements::TransitionStartEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionStartEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "TransitionStartEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.TransitionStartEvent/<>c
#include "UnityEngine/UIElements/TransitionStartEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.TransitionStartEvent/<>c <>9
::UnityEngine::UIElements::TransitionStartEvent::$$c* UnityEngine::UIElements::TransitionStartEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionStartEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::TransitionStartEvent::$$c*>("UnityEngine.UIElements", "TransitionStartEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.TransitionStartEvent/<>c <>9
void UnityEngine::UIElements::TransitionStartEvent::$$c::_set_$$9(::UnityEngine::UIElements::TransitionStartEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionStartEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "TransitionStartEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.TransitionStartEvent/<>c..cctor
void UnityEngine::UIElements::TransitionStartEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionStartEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "TransitionStartEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.TransitionStartEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::TransitionStartEvent* UnityEngine::UIElements::TransitionStartEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionStartEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::TransitionStartEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.TransitionEndEvent
#include "UnityEngine/UIElements/TransitionEndEvent.hpp"
// Including type: UnityEngine.UIElements.TransitionEndEvent/<>c
#include "UnityEngine/UIElements/TransitionEndEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.TransitionEndEvent..cctor
void UnityEngine::UIElements::TransitionEndEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionEndEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "TransitionEndEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.TransitionEndEvent/<>c
#include "UnityEngine/UIElements/TransitionEndEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.TransitionEndEvent/<>c <>9
::UnityEngine::UIElements::TransitionEndEvent::$$c* UnityEngine::UIElements::TransitionEndEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionEndEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::TransitionEndEvent::$$c*>("UnityEngine.UIElements", "TransitionEndEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.TransitionEndEvent/<>c <>9
void UnityEngine::UIElements::TransitionEndEvent::$$c::_set_$$9(::UnityEngine::UIElements::TransitionEndEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionEndEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "TransitionEndEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.TransitionEndEvent/<>c..cctor
void UnityEngine::UIElements::TransitionEndEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionEndEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "TransitionEndEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.TransitionEndEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::TransitionEndEvent* UnityEngine::UIElements::TransitionEndEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionEndEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::TransitionEndEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.TransitionCancelEvent
#include "UnityEngine/UIElements/TransitionCancelEvent.hpp"
// Including type: UnityEngine.UIElements.TransitionCancelEvent/<>c
#include "UnityEngine/UIElements/TransitionCancelEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.TransitionCancelEvent..cctor
void UnityEngine::UIElements::TransitionCancelEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionCancelEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "TransitionCancelEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.TransitionCancelEvent/<>c
#include "UnityEngine/UIElements/TransitionCancelEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.TransitionCancelEvent/<>c <>9
::UnityEngine::UIElements::TransitionCancelEvent::$$c* UnityEngine::UIElements::TransitionCancelEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionCancelEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::TransitionCancelEvent::$$c*>("UnityEngine.UIElements", "TransitionCancelEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.TransitionCancelEvent/<>c <>9
void UnityEngine::UIElements::TransitionCancelEvent::$$c::_set_$$9(::UnityEngine::UIElements::TransitionCancelEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionCancelEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "TransitionCancelEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.TransitionCancelEvent/<>c..cctor
void UnityEngine::UIElements::TransitionCancelEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionCancelEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "TransitionCancelEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.TransitionCancelEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::TransitionCancelEvent* UnityEngine::UIElements::TransitionCancelEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::TransitionCancelEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::TransitionCancelEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.IMGUIEvent
#include "UnityEngine/UIElements/IMGUIEvent.hpp"
// Including type: UnityEngine.UIElements.IMGUIEvent/<>c
#include "UnityEngine/UIElements/IMGUIEvent_--c.hpp"
// Including type: UnityEngine.Event
#include "UnityEngine/Event.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.IMGUIEvent.GetPooled
::UnityEngine::UIElements::IMGUIEvent* UnityEngine::UIElements::IMGUIEvent::GetPooled(::UnityEngine::Event* systemEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IMGUIEvent::GetPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "IMGUIEvent", "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::IMGUIEvent*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, systemEvent);
}
// Autogenerated method: UnityEngine.UIElements.IMGUIEvent..cctor
void UnityEngine::UIElements::IMGUIEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IMGUIEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "IMGUIEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IMGUIEvent.Init
void UnityEngine::UIElements::IMGUIEvent::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IMGUIEvent::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::EventBase_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IMGUIEvent.LocalInit
void UnityEngine::UIElements::IMGUIEvent::LocalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IMGUIEvent::LocalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.IMGUIEvent/<>c
#include "UnityEngine/UIElements/IMGUIEvent_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.IMGUIEvent/<>c <>9
::UnityEngine::UIElements::IMGUIEvent::$$c* UnityEngine::UIElements::IMGUIEvent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IMGUIEvent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::IMGUIEvent::$$c*>("UnityEngine.UIElements", "IMGUIEvent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.IMGUIEvent/<>c <>9
void UnityEngine::UIElements::IMGUIEvent::$$c::_set_$$9(::UnityEngine::UIElements::IMGUIEvent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IMGUIEvent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "IMGUIEvent/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.UIElements.IMGUIEvent/<>c..cctor
void UnityEngine::UIElements::IMGUIEvent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IMGUIEvent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "IMGUIEvent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.IMGUIEvent/<>c.<.cctor>b__0_0
::UnityEngine::UIElements::IMGUIEvent* UnityEngine::UIElements::IMGUIEvent::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IMGUIEvent::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::IMGUIEvent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.BaseFieldMouseDragger
#include "UnityEngine/UIElements/BaseFieldMouseDragger.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.BaseFieldMouseDragger.SetDragZone
void UnityEngine::UIElements::BaseFieldMouseDragger::SetDragZone(::UnityEngine::UIElements::VisualElement* dragElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseFieldMouseDragger::SetDragZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDragZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dragElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dragElement);
}
// Autogenerated method: UnityEngine.UIElements.BaseFieldMouseDragger.SetDragZone
void UnityEngine::UIElements::BaseFieldMouseDragger::SetDragZone(::UnityEngine::UIElements::VisualElement* dragElement, ::UnityEngine::Rect hotZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::BaseFieldMouseDragger::SetDragZone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BaseFieldMouseDragger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dragElement, hotZone);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.Focusable
#include "UnityEngine/UIElements/Focusable.hpp"
// Including type: UnityEngine.UIElements.FocusController
#include "UnityEngine/UIElements/FocusController.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <focusable>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::UIElements::Focusable::dyn_$focusable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::dyn_$focusable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<focusable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <tabIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::Focusable::dyn_$tabIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::dyn_$tabIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tabIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DelegatesFocus
[[deprecated("Use field access instead!")]] bool& UnityEngine::UIElements::Focusable::dyn_m_DelegatesFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::dyn_m_DelegatesFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelegatesFocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ExcludeFromFocusRing
[[deprecated("Use field access instead!")]] bool& UnityEngine::UIElements::Focusable::dyn_m_ExcludeFromFocusRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::dyn_m_ExcludeFromFocusRing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExcludeFromFocusRing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.get_focusController
::UnityEngine::UIElements::FocusController* UnityEngine::UIElements::Focusable::get_focusController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::get_focusController");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::Focusable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::FocusController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.get_focusable
bool UnityEngine::UIElements::Focusable::get_focusable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::get_focusable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_focusable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.set_focusable
void UnityEngine::UIElements::Focusable::set_focusable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::set_focusable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_focusable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.get_tabIndex
int UnityEngine::UIElements::Focusable::get_tabIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::get_tabIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tabIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.set_tabIndex
void UnityEngine::UIElements::Focusable::set_tabIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::set_tabIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tabIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.get_delegatesFocus
bool UnityEngine::UIElements::Focusable::get_delegatesFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::get_delegatesFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delegatesFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.set_delegatesFocus
void UnityEngine::UIElements::Focusable::set_delegatesFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::set_delegatesFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delegatesFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.get_excludeFromFocusRing
bool UnityEngine::UIElements::Focusable::get_excludeFromFocusRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::get_excludeFromFocusRing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_excludeFromFocusRing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.set_excludeFromFocusRing
void UnityEngine::UIElements::Focusable::set_excludeFromFocusRing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::set_excludeFromFocusRing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_excludeFromFocusRing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.get_canGrabFocus
bool UnityEngine::UIElements::Focusable::get_canGrabFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::get_canGrabFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::Focusable*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.Focus
void UnityEngine::UIElements::Focusable::Focus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::Focus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::Focusable*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.Blur
void UnityEngine::UIElements::Focusable::Blur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::Blur");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::Focusable*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.BlurImmediately
void UnityEngine::UIElements::Focusable::BlurImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::BlurImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlurImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.GetFocusDelegate
::UnityEngine::UIElements::Focusable* UnityEngine::UIElements::Focusable::GetFocusDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::GetFocusDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFocusDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::Focusable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.GetFirstFocusableChild
::UnityEngine::UIElements::Focusable* UnityEngine::UIElements::Focusable::GetFirstFocusableChild(::UnityEngine::UIElements::VisualElement* ve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::GetFirstFocusableChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "Focusable", "GetFirstFocusableChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ve)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::Focusable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ve);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.ProcessEvent
void UnityEngine::UIElements::Focusable::ProcessEvent(::UnityEngine::UIElements::EventBase* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::ProcessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.ExecuteDefaultAction
void UnityEngine::UIElements::Focusable::ExecuteDefaultAction(::UnityEngine::UIElements::EventBase* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::ExecuteDefaultAction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::CallbackEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: UnityEngine.UIElements.Focusable.ExecuteDefaultActionDisabled
void UnityEngine::UIElements::Focusable::ExecuteDefaultActionDisabled(::UnityEngine::UIElements::EventBase* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::Focusable::ExecuteDefaultActionDisabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::CallbackEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.FocusChangeDirection
#include "UnityEngine/UIElements/FocusChangeDirection.hpp"
// Including type: UnityEngine.UIElements.FocusController
#include "UnityEngine/UIElements/FocusController.hpp"
// Including type: UnityEngine.UIElements.Focusable
#include "UnityEngine/UIElements/Focusable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.UIElements.FocusChangeDirection <unspecified>k__BackingField
::UnityEngine::UIElements::FocusChangeDirection* UnityEngine::UIElements::FocusChangeDirection::_get_$unspecified$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::_get_$unspecified$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::FocusChangeDirection*>("UnityEngine.UIElements", "FocusChangeDirection", "<unspecified>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.UIElements.FocusChangeDirection <unspecified>k__BackingField
void UnityEngine::UIElements::FocusChangeDirection::_set_$unspecified$k__BackingField(::UnityEngine::UIElements::FocusChangeDirection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::_set_$unspecified$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "FocusChangeDirection", "<unspecified>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.UIElements.FocusChangeDirection <none>k__BackingField
::UnityEngine::UIElements::FocusChangeDirection* UnityEngine::UIElements::FocusChangeDirection::_get_$none$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::_get_$none$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::FocusChangeDirection*>("UnityEngine.UIElements", "FocusChangeDirection", "<none>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.UIElements.FocusChangeDirection <none>k__BackingField
void UnityEngine::UIElements::FocusChangeDirection::_set_$none$k__BackingField(::UnityEngine::UIElements::FocusChangeDirection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::_set_$none$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "FocusChangeDirection", "<none>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.UIElements.FocusChangeDirection <lastValue>k__BackingField
::UnityEngine::UIElements::FocusChangeDirection* UnityEngine::UIElements::FocusChangeDirection::_get_$lastValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::_get_$lastValue$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::FocusChangeDirection*>("UnityEngine.UIElements", "FocusChangeDirection", "<lastValue>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.UIElements.FocusChangeDirection <lastValue>k__BackingField
void UnityEngine::UIElements::FocusChangeDirection::_set_$lastValue$k__BackingField(::UnityEngine::UIElements::FocusChangeDirection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::_set_$lastValue$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "FocusChangeDirection", "<lastValue>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_Value
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::FocusChangeDirection::dyn_m_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::dyn_m_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.FocusChangeDirection.get_unspecified
::UnityEngine::UIElements::FocusChangeDirection* UnityEngine::UIElements::FocusChangeDirection::get_unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::get_unspecified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "FocusChangeDirection", "get_unspecified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::FocusChangeDirection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusChangeDirection.get_none
::UnityEngine::UIElements::FocusChangeDirection* UnityEngine::UIElements::FocusChangeDirection::get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::get_none");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "FocusChangeDirection", "get_none", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::FocusChangeDirection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusChangeDirection.get_lastValue
::UnityEngine::UIElements::FocusChangeDirection* UnityEngine::UIElements::FocusChangeDirection::get_lastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::get_lastValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "FocusChangeDirection", "get_lastValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::FocusChangeDirection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusChangeDirection.System.IDisposable.Dispose
void UnityEngine::UIElements::FocusChangeDirection::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::FocusChangeDirection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusChangeDirection.Dispose
void UnityEngine::UIElements::FocusChangeDirection::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::FocusChangeDirection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusChangeDirection.ApplyTo
void UnityEngine::UIElements::FocusChangeDirection::ApplyTo(::UnityEngine::UIElements::FocusController* focusController, ::UnityEngine::UIElements::Focusable* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::ApplyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::FocusChangeDirection*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusController, f);
}
// Autogenerated method: UnityEngine.UIElements.FocusChangeDirection..cctor
void UnityEngine::UIElements::FocusChangeDirection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusChangeDirection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "FocusChangeDirection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.IFocusRing
#include "UnityEngine/UIElements/IFocusRing.hpp"
// Including type: UnityEngine.UIElements.FocusChangeDirection
#include "UnityEngine/UIElements/FocusChangeDirection.hpp"
// Including type: UnityEngine.UIElements.Focusable
#include "UnityEngine/UIElements/Focusable.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.IFocusRing.GetFocusChangeDirection
::UnityEngine::UIElements::FocusChangeDirection* UnityEngine::UIElements::IFocusRing::GetFocusChangeDirection(::UnityEngine::UIElements::Focusable* currentFocusable, ::UnityEngine::UIElements::EventBase* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IFocusRing::GetFocusChangeDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IFocusRing*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::FocusChangeDirection*, false>(this, ___internal__method, currentFocusable, e);
}
// Autogenerated method: UnityEngine.UIElements.IFocusRing.GetNextFocusable
::UnityEngine::UIElements::Focusable* UnityEngine::UIElements::IFocusRing::GetNextFocusable(::UnityEngine::UIElements::Focusable* currentFocusable, ::UnityEngine::UIElements::FocusChangeDirection* direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::IFocusRing::GetNextFocusable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::IFocusRing*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::Focusable*, false>(this, ___internal__method, currentFocusable, direction);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.FocusController
#include "UnityEngine/UIElements/FocusController.hpp"
// Including type: UnityEngine.UIElements.Focusable
#include "UnityEngine/UIElements/Focusable.hpp"
// Including type: UnityEngine.UIElements.IFocusRing
#include "UnityEngine/UIElements/IFocusRing.hpp"
// Including type: UnityEngine.UIElements.TextElement
#include "UnityEngine/UIElements/TextElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.FocusChangeDirection
#include "UnityEngine/UIElements/FocusChangeDirection.hpp"
// Including type: UnityEngine.UIElements.DispatchMode
#include "UnityEngine/UIElements/DispatchMode.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.UIElements.IFocusRing <focusRing>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::IFocusRing*& UnityEngine::UIElements::FocusController::dyn_$focusRing$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::dyn_$focusRing$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<focusRing>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::IFocusRing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.TextElement m_SelectedTextElement
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::TextElement*& UnityEngine::UIElements::FocusController::dyn_m_SelectedTextElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::dyn_m_SelectedTextElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectedTextElement"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::TextElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.UIElements.FocusController/FocusedElement> m_FocusedElements
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::FocusController::FocusedElement>*& UnityEngine::UIElements::FocusController::dyn_m_FocusedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::dyn_m_FocusedElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FocusedElements"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::FocusController::FocusedElement>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.Focusable m_LastFocusedElement
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Focusable*& UnityEngine::UIElements::FocusController::dyn_m_LastFocusedElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::dyn_m_LastFocusedElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastFocusedElement"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::Focusable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.UIElements.Focusable m_LastPendingFocusedElement
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::Focusable*& UnityEngine::UIElements::FocusController::dyn_m_LastPendingFocusedElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::dyn_m_LastPendingFocusedElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPendingFocusedElement"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::Focusable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_PendingFocusCount
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::FocusController::dyn_m_PendingFocusCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::dyn_m_PendingFocusCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PendingFocusCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <imguiKeyboardControl>k__BackingField
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::FocusController::dyn_$imguiKeyboardControl$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::dyn_$imguiKeyboardControl$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<imguiKeyboardControl>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.get_focusRing
::UnityEngine::UIElements::IFocusRing* UnityEngine::UIElements::FocusController::get_focusRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::get_focusRing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_focusRing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::IFocusRing*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.set_selectedTextElement
void UnityEngine::UIElements::FocusController::set_selectedTextElement(::UnityEngine::UIElements::TextElement* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::set_selectedTextElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectedTextElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.get_focusedElement
::UnityEngine::UIElements::Focusable* UnityEngine::UIElements::FocusController::get_focusedElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::get_focusedElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_focusedElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::Focusable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.IsFocused
bool UnityEngine::UIElements::FocusController::IsFocused(::UnityEngine::UIElements::Focusable* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::IsFocused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFocused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, f);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.GetRetargetedFocusedElement
::UnityEngine::UIElements::Focusable* UnityEngine::UIElements::FocusController::GetRetargetedFocusedElement(::UnityEngine::UIElements::VisualElement* retargetAgainst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::GetRetargetedFocusedElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRetargetedFocusedElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(retargetAgainst)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::Focusable*, false>(this, ___internal__method, retargetAgainst);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.GetLeafFocusedElement
::UnityEngine::UIElements::Focusable* UnityEngine::UIElements::FocusController::GetLeafFocusedElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::GetLeafFocusedElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeafFocusedElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::Focusable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.IsLocalElement
bool UnityEngine::UIElements::FocusController::IsLocalElement(::UnityEngine::UIElements::Focusable* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::IsLocalElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, f);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.IsPendingFocus
bool UnityEngine::UIElements::FocusController::IsPendingFocus(::UnityEngine::UIElements::Focusable* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::IsPendingFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPendingFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, f);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.SetFocusToLastFocusedElement
void UnityEngine::UIElements::FocusController::SetFocusToLastFocusedElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::SetFocusToLastFocusedElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFocusToLastFocusedElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.BlurLastFocusedElement
void UnityEngine::UIElements::FocusController::BlurLastFocusedElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::BlurLastFocusedElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlurLastFocusedElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.DoFocusChange
void UnityEngine::UIElements::FocusController::DoFocusChange(::UnityEngine::UIElements::Focusable* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::DoFocusChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFocusChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.ProcessPendingFocusChange
void UnityEngine::UIElements::FocusController::ProcessPendingFocusChange(::UnityEngine::UIElements::Focusable* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::ProcessPendingFocusChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPendingFocusChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.FocusNextInDirection
::UnityEngine::UIElements::Focusable* UnityEngine::UIElements::FocusController::FocusNextInDirection(::UnityEngine::UIElements::FocusChangeDirection* direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::FocusNextInDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FocusNextInDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::Focusable*, false>(this, ___internal__method, direction);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.AboutToReleaseFocus
void UnityEngine::UIElements::FocusController::AboutToReleaseFocus(::UnityEngine::UIElements::Focusable* focusable, ::UnityEngine::UIElements::Focusable* willGiveFocusTo, ::UnityEngine::UIElements::FocusChangeDirection* direction, ::UnityEngine::UIElements::DispatchMode dispatchMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::AboutToReleaseFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AboutToReleaseFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusable), ::il2cpp_utils::ExtractType(willGiveFocusTo), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(dispatchMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusable, willGiveFocusTo, direction, dispatchMode);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.ReleaseFocus
void UnityEngine::UIElements::FocusController::ReleaseFocus(::UnityEngine::UIElements::Focusable* focusable, ::UnityEngine::UIElements::Focusable* willGiveFocusTo, ::UnityEngine::UIElements::FocusChangeDirection* direction, ::UnityEngine::UIElements::DispatchMode dispatchMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::ReleaseFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusable), ::il2cpp_utils::ExtractType(willGiveFocusTo), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(dispatchMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusable, willGiveFocusTo, direction, dispatchMode);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.AboutToGrabFocus
void UnityEngine::UIElements::FocusController::AboutToGrabFocus(::UnityEngine::UIElements::Focusable* focusable, ::UnityEngine::UIElements::Focusable* willTakeFocusFrom, ::UnityEngine::UIElements::FocusChangeDirection* direction, ::UnityEngine::UIElements::DispatchMode dispatchMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::AboutToGrabFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AboutToGrabFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusable), ::il2cpp_utils::ExtractType(willTakeFocusFrom), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(dispatchMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusable, willTakeFocusFrom, direction, dispatchMode);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.GrabFocus
void UnityEngine::UIElements::FocusController::GrabFocus(::UnityEngine::UIElements::Focusable* focusable, ::UnityEngine::UIElements::Focusable* willTakeFocusFrom, ::UnityEngine::UIElements::FocusChangeDirection* direction, bool bIsFocusDelegated, ::UnityEngine::UIElements::DispatchMode dispatchMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::GrabFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusable), ::il2cpp_utils::ExtractType(willTakeFocusFrom), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(bIsFocusDelegated), ::il2cpp_utils::ExtractType(dispatchMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusable, willTakeFocusFrom, direction, bIsFocusDelegated, dispatchMode);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.Blur
void UnityEngine::UIElements::FocusController::Blur(::UnityEngine::UIElements::Focusable* focusable, bool bIsFocusDelegated, ::UnityEngine::UIElements::DispatchMode dispatchMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::Blur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusable), ::il2cpp_utils::ExtractType(bIsFocusDelegated), ::il2cpp_utils::ExtractType(dispatchMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusable, bIsFocusDelegated, dispatchMode);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.SwitchFocus
void UnityEngine::UIElements::FocusController::SwitchFocus(::UnityEngine::UIElements::Focusable* newFocusedElement, bool bIsFocusDelegated, ::UnityEngine::UIElements::DispatchMode dispatchMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::SwitchFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newFocusedElement), ::il2cpp_utils::ExtractType(bIsFocusDelegated), ::il2cpp_utils::ExtractType(dispatchMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newFocusedElement, bIsFocusDelegated, dispatchMode);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.SwitchFocus
void UnityEngine::UIElements::FocusController::SwitchFocus(::UnityEngine::UIElements::Focusable* newFocusedElement, ::UnityEngine::UIElements::FocusChangeDirection* direction, bool bIsFocusDelegated, ::UnityEngine::UIElements::DispatchMode dispatchMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::SwitchFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newFocusedElement), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(bIsFocusDelegated), ::il2cpp_utils::ExtractType(dispatchMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newFocusedElement, direction, bIsFocusDelegated, dispatchMode);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.SwitchFocusOnEvent
void UnityEngine::UIElements::FocusController::SwitchFocusOnEvent(::UnityEngine::UIElements::EventBase* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::SwitchFocusOnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchFocusOnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.ReevaluateFocus
void UnityEngine::UIElements::FocusController::ReevaluateFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::ReevaluateFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReevaluateFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.GetFocusableParentForPointerEvent
bool UnityEngine::UIElements::FocusController::GetFocusableParentForPointerEvent(::UnityEngine::UIElements::Focusable* target, ByRef<::UnityEngine::UIElements::Focusable*> effectiveTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::GetFocusableParentForPointerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFocusableParentForPointerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::UIElements::Focusable*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target, byref(effectiveTarget));
}
// Autogenerated method: UnityEngine.UIElements.FocusController.get_imguiKeyboardControl
int UnityEngine::UIElements::FocusController::get_imguiKeyboardControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::get_imguiKeyboardControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_imguiKeyboardControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.set_imguiKeyboardControl
void UnityEngine::UIElements::FocusController::set_imguiKeyboardControl(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::set_imguiKeyboardControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_imguiKeyboardControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.FocusController.SyncIMGUIFocus
void UnityEngine::UIElements::FocusController::SyncIMGUIFocus(int imguiKeyboardControlID, ::UnityEngine::UIElements::Focusable* imguiContainerHavingKeyboardControl, bool forceSwitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::FocusController::SyncIMGUIFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncIMGUIFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(imguiKeyboardControlID), ::il2cpp_utils::ExtractType(imguiContainerHavingKeyboardControl), ::il2cpp_utils::ExtractType(forceSwitch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, imguiKeyboardControlID, imguiContainerHavingKeyboardControl, forceSwitch);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.DynamicAtlasSettings
#include "UnityEngine/UIElements/DynamicAtlasSettings.hpp"
// Including type: UnityEngine.UIElements.DynamicAtlasCustomFilter
#include "UnityEngine/UIElements/DynamicAtlasCustomFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_MinAtlasSize
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::DynamicAtlasSettings::dyn_m_MinAtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::dyn_m_MinAtlasSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinAtlasSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_MaxAtlasSize
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::DynamicAtlasSettings::dyn_m_MaxAtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::dyn_m_MaxAtlasSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxAtlasSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_MaxSubTextureSize
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::DynamicAtlasSettings::dyn_m_MaxSubTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::dyn_m_MaxSubTextureSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxSubTextureSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.DynamicAtlasFilters m_ActiveFilters
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DynamicAtlasFilters& UnityEngine::UIElements::DynamicAtlasSettings::dyn_m_ActiveFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::dyn_m_ActiveFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveFilters"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::DynamicAtlasFilters*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.DynamicAtlasCustomFilter m_CustomFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DynamicAtlasCustomFilter*& UnityEngine::UIElements::DynamicAtlasSettings::dyn_m_CustomFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::dyn_m_CustomFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::DynamicAtlasCustomFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.get_minAtlasSize
int UnityEngine::UIElements::DynamicAtlasSettings::get_minAtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::get_minAtlasSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minAtlasSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.set_minAtlasSize
void UnityEngine::UIElements::DynamicAtlasSettings::set_minAtlasSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::set_minAtlasSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minAtlasSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.get_maxAtlasSize
int UnityEngine::UIElements::DynamicAtlasSettings::get_maxAtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::get_maxAtlasSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxAtlasSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.set_maxAtlasSize
void UnityEngine::UIElements::DynamicAtlasSettings::set_maxAtlasSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::set_maxAtlasSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxAtlasSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.get_maxSubTextureSize
int UnityEngine::UIElements::DynamicAtlasSettings::get_maxSubTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::get_maxSubTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxSubTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.set_maxSubTextureSize
void UnityEngine::UIElements::DynamicAtlasSettings::set_maxSubTextureSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::set_maxSubTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxSubTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.get_activeFilters
::UnityEngine::UIElements::DynamicAtlasFilters UnityEngine::UIElements::DynamicAtlasSettings::get_activeFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::get_activeFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::DynamicAtlasFilters, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.set_activeFilters
void UnityEngine::UIElements::DynamicAtlasSettings::set_activeFilters(::UnityEngine::UIElements::DynamicAtlasFilters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::set_activeFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activeFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.get_defaultFilters
::UnityEngine::UIElements::DynamicAtlasFilters UnityEngine::UIElements::DynamicAtlasSettings::get_defaultFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::get_defaultFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "DynamicAtlasSettings", "get_defaultFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::DynamicAtlasFilters, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.get_customFilter
::UnityEngine::UIElements::DynamicAtlasCustomFilter* UnityEngine::UIElements::DynamicAtlasSettings::get_customFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::get_customFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::DynamicAtlasCustomFilter*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.set_customFilter
void UnityEngine::UIElements::DynamicAtlasSettings::set_customFilter(::UnityEngine::UIElements::DynamicAtlasCustomFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::set_customFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.DynamicAtlasSettings.get_defaults
::UnityEngine::UIElements::DynamicAtlasSettings* UnityEngine::UIElements::DynamicAtlasSettings::get_defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::DynamicAtlasSettings::get_defaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "DynamicAtlasSettings", "get_defaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::DynamicAtlasSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigateFocusRing
#include "UnityEngine/UIElements/NavigateFocusRing.hpp"
// Including type: UnityEngine.UIElements.NavigateFocusRing/ChangeDirection
#include "UnityEngine/UIElements/NavigateFocusRing_ChangeDirection.hpp"
// Including type: UnityEngine.UIElements.NavigateFocusRing/FocusableHierarchyTraversal
#include "UnityEngine/UIElements/NavigateFocusRing_FocusableHierarchyTraversal.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.VisualElementFocusRing
#include "UnityEngine/UIElements/VisualElementFocusRing.hpp"
// Including type: UnityEngine.UIElements.FocusChangeDirection
#include "UnityEngine/UIElements/FocusChangeDirection.hpp"
// Including type: UnityEngine.UIElements.FocusController
#include "UnityEngine/UIElements/FocusController.hpp"
// Including type: UnityEngine.UIElements.Focusable
#include "UnityEngine/UIElements/Focusable.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.NavigateFocusRing/ChangeDirection Left
::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection* UnityEngine::UIElements::NavigateFocusRing::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection*>("UnityEngine.UIElements", "NavigateFocusRing", "Left"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.NavigateFocusRing/ChangeDirection Left
void UnityEngine::UIElements::NavigateFocusRing::_set_Left(::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigateFocusRing", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.NavigateFocusRing/ChangeDirection Right
::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection* UnityEngine::UIElements::NavigateFocusRing::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection*>("UnityEngine.UIElements", "NavigateFocusRing", "Right"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.NavigateFocusRing/ChangeDirection Right
void UnityEngine::UIElements::NavigateFocusRing::_set_Right(::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigateFocusRing", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.NavigateFocusRing/ChangeDirection Up
::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection* UnityEngine::UIElements::NavigateFocusRing::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection*>("UnityEngine.UIElements", "NavigateFocusRing", "Up"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.NavigateFocusRing/ChangeDirection Up
void UnityEngine::UIElements::NavigateFocusRing::_set_Up(::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigateFocusRing", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.NavigateFocusRing/ChangeDirection Down
::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection* UnityEngine::UIElements::NavigateFocusRing::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection*>("UnityEngine.UIElements", "NavigateFocusRing", "Down"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.NavigateFocusRing/ChangeDirection Down
void UnityEngine::UIElements::NavigateFocusRing::_set_Down(::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigateFocusRing", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.FocusChangeDirection Next
::UnityEngine::UIElements::FocusChangeDirection* UnityEngine::UIElements::NavigateFocusRing::_get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_get_Next");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::FocusChangeDirection*>("UnityEngine.UIElements", "NavigateFocusRing", "Next"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.FocusChangeDirection Next
void UnityEngine::UIElements::NavigateFocusRing::_set_Next(::UnityEngine::UIElements::FocusChangeDirection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_set_Next");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigateFocusRing", "Next", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UIElements.FocusChangeDirection Previous
::UnityEngine::UIElements::FocusChangeDirection* UnityEngine::UIElements::NavigateFocusRing::_get_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_get_Previous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::FocusChangeDirection*>("UnityEngine.UIElements", "NavigateFocusRing", "Previous"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UIElements.FocusChangeDirection Previous
void UnityEngine::UIElements::NavigateFocusRing::_set_Previous(::UnityEngine::UIElements::FocusChangeDirection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::_set_Previous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "NavigateFocusRing", "Previous", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.UIElements.VisualElement m_Root
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& UnityEngine::UIElements::NavigateFocusRing::dyn_m_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::dyn_m_Root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Root"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::VisualElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.UIElements.VisualElementFocusRing m_Ring
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElementFocusRing*& UnityEngine::UIElements::NavigateFocusRing::dyn_m_Ring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::dyn_m_Ring");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ring"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::VisualElementFocusRing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing.get_focusController
::UnityEngine::UIElements::FocusController* UnityEngine::UIElements::NavigateFocusRing::get_focusController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::get_focusController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_focusController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::FocusController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing.GetFocusChangeDirection
::UnityEngine::UIElements::FocusChangeDirection* UnityEngine::UIElements::NavigateFocusRing::GetFocusChangeDirection(::UnityEngine::UIElements::Focusable* currentFocusable, ::UnityEngine::UIElements::EventBase* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::GetFocusChangeDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::NavigateFocusRing*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::FocusChangeDirection*, false>(this, ___internal__method, currentFocusable, e);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing.GetNextFocusable
::UnityEngine::UIElements::Focusable* UnityEngine::UIElements::NavigateFocusRing::GetNextFocusable(::UnityEngine::UIElements::Focusable* currentFocusable, ::UnityEngine::UIElements::FocusChangeDirection* direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::GetNextFocusable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::NavigateFocusRing*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::Focusable*, false>(this, ___internal__method, currentFocusable, direction);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing.GetNextFocusable2D
::UnityEngine::UIElements::Focusable* UnityEngine::UIElements::NavigateFocusRing::GetNextFocusable2D(::UnityEngine::UIElements::Focusable* currentFocusable, ::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection* direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::GetNextFocusable2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextFocusable2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentFocusable), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::Focusable*, false>(this, ___internal__method, currentFocusable, direction);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing.IsActive
bool UnityEngine::UIElements::NavigateFocusRing::IsActive(::UnityEngine::UIElements::VisualElement* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::IsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigateFocusRing", "IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing.IsNavigable
bool UnityEngine::UIElements::NavigateFocusRing::IsNavigable(::UnityEngine::UIElements::Focusable* focusable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::IsNavigable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigateFocusRing", "IsNavigable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, focusable);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing..cctor
void UnityEngine::UIElements::NavigateFocusRing::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "NavigateFocusRing", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigateFocusRing/ChangeDirection
#include "UnityEngine/UIElements/NavigateFocusRing_ChangeDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.NavigateFocusRing/FocusableHierarchyTraversal
#include "UnityEngine/UIElements/NavigateFocusRing_FocusableHierarchyTraversal.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.NavigateFocusRing/ChangeDirection
#include "UnityEngine/UIElements/NavigateFocusRing_ChangeDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UIElements.VisualElement currentFocusable
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::dyn_currentFocusable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::dyn_currentFocusable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentFocusable"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::VisualElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect validRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::dyn_validRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::dyn_validRect");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean firstPass
[[deprecated("Use field access instead!")]] bool& UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::dyn_firstPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::dyn_firstPass");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstPass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UIElements.NavigateFocusRing/ChangeDirection direction
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection*& UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::dyn_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::dyn_direction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direction"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::NavigateFocusRing::ChangeDirection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing/FocusableHierarchyTraversal.ValidateHierarchyTraversal
bool UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::ValidateHierarchyTraversal(::UnityEngine::UIElements::VisualElement* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::ValidateHierarchyTraversal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ValidateHierarchyTraversal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, v);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing/FocusableHierarchyTraversal.ValidateElement
bool UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::ValidateElement(::UnityEngine::UIElements::VisualElement* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::ValidateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, v);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing/FocusableHierarchyTraversal.Order
int UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::Order(::UnityEngine::UIElements::VisualElement* a, ::UnityEngine::UIElements::VisualElement* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing/FocusableHierarchyTraversal.StrictOrder
int UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::StrictOrder(::UnityEngine::UIElements::VisualElement* a, ::UnityEngine::UIElements::VisualElement* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::StrictOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "StrictOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing/FocusableHierarchyTraversal.StrictOrder
int UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::StrictOrder(::UnityEngine::Rect ra, ::UnityEngine::Rect rb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::StrictOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "StrictOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ra), ::il2cpp_utils::ExtractType(rb)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ra, rb);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing/FocusableHierarchyTraversal.TieBreaker
int UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::TieBreaker(::UnityEngine::Rect ra, ::UnityEngine::Rect rb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::TieBreaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TieBreaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ra), ::il2cpp_utils::ExtractType(rb)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ra, rb);
}
// Autogenerated method: UnityEngine.UIElements.NavigateFocusRing/FocusableHierarchyTraversal.GetBestOverall
::UnityEngine::UIElements::VisualElement* UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::GetBestOverall(::UnityEngine::UIElements::VisualElement* candidate, ::UnityEngine::UIElements::VisualElement* bestSoFar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::NavigateFocusRing::FocusableHierarchyTraversal::GetBestOverall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBestOverall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate), ::il2cpp_utils::ExtractType(bestSoFar)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::VisualElement*, false>(this, ___internal__method, candidate, bestSoFar);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PanelScaleMode
#include "UnityEngine/UIElements/PanelScaleMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.PanelScaleMode ConstantPixelSize
::UnityEngine::UIElements::PanelScaleMode UnityEngine::UIElements::PanelScaleMode::_get_ConstantPixelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScaleMode::_get_ConstantPixelSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PanelScaleMode>("UnityEngine.UIElements", "PanelScaleMode", "ConstantPixelSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.PanelScaleMode ConstantPixelSize
void UnityEngine::UIElements::PanelScaleMode::_set_ConstantPixelSize(::UnityEngine::UIElements::PanelScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScaleMode::_set_ConstantPixelSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PanelScaleMode", "ConstantPixelSize", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.PanelScaleMode ConstantPhysicalSize
::UnityEngine::UIElements::PanelScaleMode UnityEngine::UIElements::PanelScaleMode::_get_ConstantPhysicalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScaleMode::_get_ConstantPhysicalSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PanelScaleMode>("UnityEngine.UIElements", "PanelScaleMode", "ConstantPhysicalSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.PanelScaleMode ConstantPhysicalSize
void UnityEngine::UIElements::PanelScaleMode::_set_ConstantPhysicalSize(::UnityEngine::UIElements::PanelScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScaleMode::_set_ConstantPhysicalSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PanelScaleMode", "ConstantPhysicalSize", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.PanelScaleMode ScaleWithScreenSize
::UnityEngine::UIElements::PanelScaleMode UnityEngine::UIElements::PanelScaleMode::_get_ScaleWithScreenSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScaleMode::_get_ScaleWithScreenSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PanelScaleMode>("UnityEngine.UIElements", "PanelScaleMode", "ScaleWithScreenSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.PanelScaleMode ScaleWithScreenSize
void UnityEngine::UIElements::PanelScaleMode::_set_ScaleWithScreenSize(::UnityEngine::UIElements::PanelScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScaleMode::_set_ScaleWithScreenSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PanelScaleMode", "ScaleWithScreenSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::PanelScaleMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScaleMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PanelScreenMatchMode
#include "UnityEngine/UIElements/PanelScreenMatchMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.PanelScreenMatchMode MatchWidthOrHeight
::UnityEngine::UIElements::PanelScreenMatchMode UnityEngine::UIElements::PanelScreenMatchMode::_get_MatchWidthOrHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScreenMatchMode::_get_MatchWidthOrHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PanelScreenMatchMode>("UnityEngine.UIElements", "PanelScreenMatchMode", "MatchWidthOrHeight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.PanelScreenMatchMode MatchWidthOrHeight
void UnityEngine::UIElements::PanelScreenMatchMode::_set_MatchWidthOrHeight(::UnityEngine::UIElements::PanelScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScreenMatchMode::_set_MatchWidthOrHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PanelScreenMatchMode", "MatchWidthOrHeight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.PanelScreenMatchMode Shrink
::UnityEngine::UIElements::PanelScreenMatchMode UnityEngine::UIElements::PanelScreenMatchMode::_get_Shrink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScreenMatchMode::_get_Shrink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PanelScreenMatchMode>("UnityEngine.UIElements", "PanelScreenMatchMode", "Shrink"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.PanelScreenMatchMode Shrink
void UnityEngine::UIElements::PanelScreenMatchMode::_set_Shrink(::UnityEngine::UIElements::PanelScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScreenMatchMode::_set_Shrink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PanelScreenMatchMode", "Shrink", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIElements.PanelScreenMatchMode Expand
::UnityEngine::UIElements::PanelScreenMatchMode UnityEngine::UIElements::PanelScreenMatchMode::_get_Expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScreenMatchMode::_get_Expand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::PanelScreenMatchMode>("UnityEngine.UIElements", "PanelScreenMatchMode", "Expand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIElements.PanelScreenMatchMode Expand
void UnityEngine::UIElements::PanelScreenMatchMode::_set_Expand(::UnityEngine::UIElements::PanelScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScreenMatchMode::_set_Expand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PanelScreenMatchMode", "Expand", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::PanelScreenMatchMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelScreenMatchMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PanelSettings
#include "UnityEngine/UIElements/PanelSettings.hpp"
// Including type: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess
#include "UnityEngine/UIElements/PanelSettings_RuntimePanelAccess.hpp"
// Including type: UnityEngine.UIElements.ThemeStyleSheet
#include "UnityEngine/UIElements/ThemeStyleSheet.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.UIElements.UIDocumentList
#include "UnityEngine/UIElements/UIDocumentList.hpp"
// Including type: UnityEngine.UIElements.DynamicAtlasSettings
#include "UnityEngine/UIElements/DynamicAtlasSettings.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.UIElements.PanelTextSettings
#include "UnityEngine/UIElements/PanelTextSettings.hpp"
// Including type: UnityEngine.UIElements.StyleSheet
#include "UnityEngine/UIElements/StyleSheet.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.UIElements.BaseRuntimePanel
#include "UnityEngine/UIElements/BaseRuntimePanel.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
// Including type: UnityEngine.UIElements.UIDocument
#include "UnityEngine/UIElements/UIDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_DefaultSortingOrder
int UnityEngine::UIElements::PanelSettings::_get_k_DefaultSortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::_get_k_DefaultSortingOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UIElements", "PanelSettings", "k_DefaultSortingOrder"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_DefaultSortingOrder
void UnityEngine::UIElements::PanelSettings::_set_k_DefaultSortingOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::_set_k_DefaultSortingOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PanelSettings", "k_DefaultSortingOrder", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultScaleValue
float UnityEngine::UIElements::PanelSettings::_get_k_DefaultScaleValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::_get_k_DefaultScaleValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UIElements", "PanelSettings", "k_DefaultScaleValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultScaleValue
void UnityEngine::UIElements::PanelSettings::_set_k_DefaultScaleValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::_set_k_DefaultScaleValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PanelSettings", "k_DefaultScaleValue", value));
}
// Autogenerated static field getter
// Get static field: static System.String k_DefaultStyleSheetPath
::StringW UnityEngine::UIElements::PanelSettings::_get_k_DefaultStyleSheetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::_get_k_DefaultStyleSheetPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.UIElements", "PanelSettings", "k_DefaultStyleSheetPath"));
}
// Autogenerated static field setter
// Set static field: static System.String k_DefaultStyleSheetPath
void UnityEngine::UIElements::PanelSettings::_set_k_DefaultStyleSheetPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::_set_k_DefaultStyleSheetPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PanelSettings", "k_DefaultStyleSheetPath", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single DefaultDpi
float UnityEngine::UIElements::PanelSettings::_get_DefaultDpi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::_get_DefaultDpi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UIElements", "PanelSettings", "DefaultDpi"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DefaultDpi
void UnityEngine::UIElements::PanelSettings::_set_DefaultDpi(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::_set_DefaultDpi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "PanelSettings", "DefaultDpi", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.ThemeStyleSheet themeUss
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ThemeStyleSheet*& UnityEngine::UIElements::PanelSettings::dyn_themeUss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_themeUss");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "themeUss"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::ThemeStyleSheet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture m_TargetTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& UnityEngine::UIElements::PanelSettings::dyn_m_TargetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_TargetTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.PanelScaleMode m_ScaleMode
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PanelScaleMode& UnityEngine::UIElements::PanelSettings::dyn_m_ScaleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_ScaleMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScaleMode"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::PanelScaleMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ReferenceSpritePixelsPerUnit
[[deprecated("Use field access instead!")]] float& UnityEngine::UIElements::PanelSettings::dyn_m_ReferenceSpritePixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_ReferenceSpritePixelsPerUnit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReferenceSpritePixelsPerUnit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Scale
[[deprecated("Use field access instead!")]] float& UnityEngine::UIElements::PanelSettings::dyn_m_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ReferenceDpi
[[deprecated("Use field access instead!")]] float& UnityEngine::UIElements::PanelSettings::dyn_m_ReferenceDpi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_ReferenceDpi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReferenceDpi"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_FallbackDpi
[[deprecated("Use field access instead!")]] float& UnityEngine::UIElements::PanelSettings::dyn_m_FallbackDpi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_FallbackDpi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FallbackDpi"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2Int m_ReferenceResolution
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2Int& UnityEngine::UIElements::PanelSettings::dyn_m_ReferenceResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_ReferenceResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReferenceResolution"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2Int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.PanelScreenMatchMode m_ScreenMatchMode
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PanelScreenMatchMode& UnityEngine::UIElements::PanelSettings::dyn_m_ScreenMatchMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_ScreenMatchMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScreenMatchMode"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::PanelScreenMatchMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Match
[[deprecated("Use field access instead!")]] float& UnityEngine::UIElements::PanelSettings::dyn_m_Match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_Match");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Match"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SortingOrder
[[deprecated("Use field access instead!")]] float& UnityEngine::UIElements::PanelSettings::dyn_m_SortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_SortingOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SortingOrder"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_TargetDisplay
[[deprecated("Use field access instead!")]] int& UnityEngine::UIElements::PanelSettings::dyn_m_TargetDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_TargetDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetDisplay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ClearDepthStencil
[[deprecated("Use field access instead!")]] bool& UnityEngine::UIElements::PanelSettings::dyn_m_ClearDepthStencil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_ClearDepthStencil");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClearDepthStencil"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ClearColor
[[deprecated("Use field access instead!")]] bool& UnityEngine::UIElements::PanelSettings::dyn_m_ClearColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_ClearColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClearColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_ColorClearValue
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::UIElements::PanelSettings::dyn_m_ColorClearValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_ColorClearValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColorClearValue"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.PanelSettings/RuntimePanelAccess m_PanelAccess
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess*& UnityEngine::UIElements::PanelSettings::dyn_m_PanelAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_PanelAccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PanelAccess"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.UIElements.UIDocumentList m_AttachedUIDocumentsList
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::UIDocumentList*& UnityEngine::UIElements::PanelSettings::dyn_m_AttachedUIDocumentsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_AttachedUIDocumentsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachedUIDocumentsList"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::UIDocumentList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.DynamicAtlasSettings m_DynamicAtlasSettings
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::DynamicAtlasSettings*& UnityEngine::UIElements::PanelSettings::dyn_m_DynamicAtlasSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_DynamicAtlasSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DynamicAtlasSettings"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::DynamicAtlasSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader m_AtlasBlitShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& UnityEngine::UIElements::PanelSettings::dyn_m_AtlasBlitShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_AtlasBlitShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasBlitShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader m_RuntimeShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& UnityEngine::UIElements::PanelSettings::dyn_m_RuntimeShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_RuntimeShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RuntimeShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader m_RuntimeWorldShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& UnityEngine::UIElements::PanelSettings::dyn_m_RuntimeWorldShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_RuntimeWorldShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RuntimeWorldShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UIElements.PanelTextSettings textSettings
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PanelTextSettings*& UnityEngine::UIElements::PanelSettings::dyn_textSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_textSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textSettings"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::PanelTextSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect m_TargetRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& UnityEngine::UIElements::PanelSettings::dyn_m_TargetRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_TargetRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ResolvedScale
[[deprecated("Use field access instead!")]] float& UnityEngine::UIElements::PanelSettings::dyn_m_ResolvedScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_ResolvedScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ResolvedScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.StyleSheet m_OldThemeUss
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSheet*& UnityEngine::UIElements::PanelSettings::dyn_m_OldThemeUss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_OldThemeUss");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OldThemeUss"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::StyleSheet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <ScreenDPI>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::UIElements::PanelSettings::dyn_$ScreenDPI$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_$ScreenDPI$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ScreenDPI>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<UnityEngine.Vector2,UnityEngine.Vector2> m_AssignedScreenToPanel
[[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>*& UnityEngine::UIElements::PanelSettings::dyn_m_AssignedScreenToPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::dyn_m_AssignedScreenToPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AssignedScreenToPanel"))->offset;
  return *reinterpret_cast<::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_themeStyleSheet
::UnityEngine::UIElements::ThemeStyleSheet* UnityEngine::UIElements::PanelSettings::get_themeStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_themeStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_themeStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::ThemeStyleSheet*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_themeStyleSheet
void UnityEngine::UIElements::PanelSettings::set_themeStyleSheet(::UnityEngine::UIElements::ThemeStyleSheet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_themeStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_themeStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_targetTexture
::UnityEngine::RenderTexture* UnityEngine::UIElements::PanelSettings::get_targetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_targetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_targetTexture
void UnityEngine::UIElements::PanelSettings::set_targetTexture(::UnityEngine::RenderTexture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_targetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_scaleMode
::UnityEngine::UIElements::PanelScaleMode UnityEngine::UIElements::PanelSettings::get_scaleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_scaleMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scaleMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PanelScaleMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_scaleMode
void UnityEngine::UIElements::PanelSettings::set_scaleMode(::UnityEngine::UIElements::PanelScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_scaleMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scaleMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_referenceSpritePixelsPerUnit
float UnityEngine::UIElements::PanelSettings::get_referenceSpritePixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_referenceSpritePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceSpritePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_referenceSpritePixelsPerUnit
void UnityEngine::UIElements::PanelSettings::set_referenceSpritePixelsPerUnit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_referenceSpritePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referenceSpritePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_scale
float UnityEngine::UIElements::PanelSettings::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_scale
void UnityEngine::UIElements::PanelSettings::set_scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_referenceDpi
float UnityEngine::UIElements::PanelSettings::get_referenceDpi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_referenceDpi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceDpi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_referenceDpi
void UnityEngine::UIElements::PanelSettings::set_referenceDpi(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_referenceDpi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referenceDpi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_fallbackDpi
float UnityEngine::UIElements::PanelSettings::get_fallbackDpi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_fallbackDpi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackDpi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_fallbackDpi
void UnityEngine::UIElements::PanelSettings::set_fallbackDpi(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_fallbackDpi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackDpi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_referenceResolution
::UnityEngine::Vector2Int UnityEngine::UIElements::PanelSettings::get_referenceResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_referenceResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2Int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_referenceResolution
void UnityEngine::UIElements::PanelSettings::set_referenceResolution(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_referenceResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referenceResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_screenMatchMode
::UnityEngine::UIElements::PanelScreenMatchMode UnityEngine::UIElements::PanelSettings::get_screenMatchMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_screenMatchMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_screenMatchMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PanelScreenMatchMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_screenMatchMode
void UnityEngine::UIElements::PanelSettings::set_screenMatchMode(::UnityEngine::UIElements::PanelScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_screenMatchMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_screenMatchMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_match
float UnityEngine::UIElements::PanelSettings::get_match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_match
void UnityEngine::UIElements::PanelSettings::set_match(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_sortingOrder
float UnityEngine::UIElements::PanelSettings::get_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_sortingOrder
void UnityEngine::UIElements::PanelSettings::set_sortingOrder(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.ApplySortingOrder
void UnityEngine::UIElements::PanelSettings::ApplySortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::ApplySortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplySortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_targetDisplay
int UnityEngine::UIElements::PanelSettings::get_targetDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_targetDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_targetDisplay
void UnityEngine::UIElements::PanelSettings::set_targetDisplay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_targetDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_clearDepthStencil
bool UnityEngine::UIElements::PanelSettings::get_clearDepthStencil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_clearDepthStencil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearDepthStencil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_clearDepthStencil
void UnityEngine::UIElements::PanelSettings::set_clearDepthStencil(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_clearDepthStencil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clearDepthStencil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_depthClearValue
float UnityEngine::UIElements::PanelSettings::get_depthClearValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_depthClearValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthClearValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_clearColor
bool UnityEngine::UIElements::PanelSettings::get_clearColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_clearColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_clearColor
void UnityEngine::UIElements::PanelSettings::set_clearColor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_clearColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clearColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_colorClearValue
::UnityEngine::Color UnityEngine::UIElements::PanelSettings::get_colorClearValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_colorClearValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorClearValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_colorClearValue
void UnityEngine::UIElements::PanelSettings::set_colorClearValue(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_colorClearValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorClearValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_panel
::UnityEngine::UIElements::BaseRuntimePanel* UnityEngine::UIElements::PanelSettings::get_panel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_panel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_panel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::BaseRuntimePanel*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_visualTree
::UnityEngine::UIElements::VisualElement* UnityEngine::UIElements::PanelSettings::get_visualTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_visualTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_visualTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::VisualElement*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_dynamicAtlasSettings
::UnityEngine::UIElements::DynamicAtlasSettings* UnityEngine::UIElements::PanelSettings::get_dynamicAtlasSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_dynamicAtlasSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dynamicAtlasSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::DynamicAtlasSettings*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_dynamicAtlasSettings
void UnityEngine::UIElements::PanelSettings::set_dynamicAtlasSettings(::UnityEngine::UIElements::DynamicAtlasSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_dynamicAtlasSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dynamicAtlasSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.Reset
void UnityEngine::UIElements::PanelSettings::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.OnEnable
void UnityEngine::UIElements::PanelSettings::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.OnDisable
void UnityEngine::UIElements::PanelSettings::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.DisposePanel
void UnityEngine::UIElements::PanelSettings::DisposePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::DisposePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.get_ScreenDPI
float UnityEngine::UIElements::PanelSettings::get_ScreenDPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::get_ScreenDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScreenDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.set_ScreenDPI
void UnityEngine::UIElements::PanelSettings::set_ScreenDPI(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::set_ScreenDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScreenDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.UpdateScreenDPI
void UnityEngine::UIElements::PanelSettings::UpdateScreenDPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::UpdateScreenDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScreenDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.ApplyThemeStyleSheet
void UnityEngine::UIElements::PanelSettings::ApplyThemeStyleSheet(::UnityEngine::UIElements::VisualElement* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::ApplyThemeStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyThemeStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.InitializeShaders
void UnityEngine::UIElements::PanelSettings::InitializeShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::InitializeShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.ApplyPanelSettings
void UnityEngine::UIElements::PanelSettings::ApplyPanelSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::ApplyPanelSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyPanelSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.SetScreenToPanelSpaceFunction
void UnityEngine::UIElements::PanelSettings::SetScreenToPanelSpaceFunction(::System::Func_2<::UnityEngine::Vector2, ::UnityEngine::Vector2>* screentoPanelSpaceFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::SetScreenToPanelSpaceFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScreenToPanelSpaceFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screentoPanelSpaceFunction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, screentoPanelSpaceFunction);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.ResolveScale
float UnityEngine::UIElements::PanelSettings::ResolveScale(::UnityEngine::Rect targetRect, float screenDpi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::ResolveScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetRect), ::il2cpp_utils::ExtractType(screenDpi)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, targetRect, screenDpi);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.GetDisplayRect
::UnityEngine::Rect UnityEngine::UIElements::PanelSettings::GetDisplayRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::GetDisplayRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDisplayRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.AttachAndInsertUIDocumentToVisualTree
void UnityEngine::UIElements::PanelSettings::AttachAndInsertUIDocumentToVisualTree(::UnityEngine::UIElements::UIDocument* uiDocument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::AttachAndInsertUIDocumentToVisualTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachAndInsertUIDocumentToVisualTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uiDocument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uiDocument);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings.DetachUIDocument
void UnityEngine::UIElements::PanelSettings::DetachUIDocument(::UnityEngine::UIElements::UIDocument* uiDocument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::DetachUIDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachUIDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uiDocument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uiDocument);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess
#include "UnityEngine/UIElements/PanelSettings_RuntimePanelAccess.hpp"
// Including type: UnityEngine.UIElements.BaseRuntimePanel
#include "UnityEngine/UIElements/BaseRuntimePanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.UIElements.PanelSettings m_Settings
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PanelSettings*& UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::dyn_m_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::dyn_m_Settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Settings"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::PanelSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UIElements.BaseRuntimePanel m_RuntimePanel
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::BaseRuntimePanel*& UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::dyn_m_RuntimePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::dyn_m_RuntimePanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RuntimePanel"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::BaseRuntimePanel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess.get_isInitialized
bool UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess.get_panel
::UnityEngine::UIElements::BaseRuntimePanel* UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::get_panel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::get_panel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_panel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::BaseRuntimePanel*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess.DisposePanel
void UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::DisposePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::DisposePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess.SetTargetTexture
void UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::SetTargetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::SetTargetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTargetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess.SetSortingPriority
void UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::SetSortingPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::SetSortingPriority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSortingPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess.SetTargetDisplay
void UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::SetTargetDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::SetTargetDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTargetDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess.CreateRelatedRuntimePanel
::UnityEngine::UIElements::BaseRuntimePanel* UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::CreateRelatedRuntimePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::CreateRelatedRuntimePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRelatedRuntimePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::BaseRuntimePanel*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess.DisposeRelatedPanel
void UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::DisposeRelatedPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::DisposeRelatedPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeRelatedPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.PanelSettings/RuntimePanelAccess.MarkPotentiallyEmpty
void UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::MarkPotentiallyEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PanelSettings::RuntimePanelAccess::MarkPotentiallyEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkPotentiallyEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.RuntimeEventDispatcher
#include "UnityEngine/UIElements/RuntimeEventDispatcher.hpp"
// Including type: UnityEngine.UIElements.EventDispatcher
#include "UnityEngine/UIElements/EventDispatcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UIElements.RuntimeEventDispatcher.Create
::UnityEngine::UIElements::EventDispatcher* UnityEngine::UIElements::RuntimeEventDispatcher::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RuntimeEventDispatcher::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "RuntimeEventDispatcher", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::EventDispatcher*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.RuntimePanel
#include "UnityEngine/UIElements/RuntimePanel.hpp"
// Including type: UnityEngine.UIElements.PanelSettings
#include "UnityEngine/UIElements/PanelSettings.hpp"
// Including type: UnityEngine.UIElements.EventDispatcher
#include "UnityEngine/UIElements/EventDispatcher.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly UnityEngine.UIElements.EventDispatcher s_EventDispatcher
::UnityEngine::UIElements::EventDispatcher* UnityEngine::UIElements::RuntimePanel::_get_s_EventDispatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RuntimePanel::_get_s_EventDispatcher");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::EventDispatcher*>("UnityEngine.UIElements", "RuntimePanel", "s_EventDispatcher"));
}
// Autogenerated static field setter
// Set static field: static readonly UnityEngine.UIElements.EventDispatcher s_EventDispatcher
void UnityEngine::UIElements::RuntimePanel::_set_s_EventDispatcher(::UnityEngine::UIElements::EventDispatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RuntimePanel::_set_s_EventDispatcher");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UIElements", "RuntimePanel", "s_EventDispatcher", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.UIElements.PanelSettings m_PanelSettings
[[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PanelSettings*& UnityEngine::UIElements::RuntimePanel::dyn_m_PanelSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RuntimePanel::dyn_m_PanelSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PanelSettings"))->offset;
  return *reinterpret_cast<::UnityEngine::UIElements::PanelSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.RuntimePanel.get_panelSettings
::UnityEngine::UIElements::PanelSettings* UnityEngine::UIElements::RuntimePanel::get_panelSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RuntimePanel::get_panelSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::RuntimePanel*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::PanelSettings*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.RuntimePanel.Create
::UnityEngine::UIElements::RuntimePanel* UnityEngine::UIElements::RuntimePanel::Create(::UnityEngine::ScriptableObject* ownerObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RuntimePanel::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "RuntimePanel", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::RuntimePanel*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ownerObject);
}
// Autogenerated method: UnityEngine.UIElements.RuntimePanel.Update
void UnityEngine::UIElements::RuntimePanel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RuntimePanel::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::BaseVisualElementPanel*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UIElements.RuntimePanel..cctor
void UnityEngine::UIElements::RuntimePanel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::RuntimePanel::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "RuntimePanel", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIElements.UIDocumentList
#include "UnityEngine/UIElements/UIDocumentList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UIElements.UIDocument
#include "UnityEngine/UIElements/UIDocument.hpp"
// Including type: UnityEngine.UIElements.VisualElement
#include "UnityEngine/UIElements/VisualElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<UnityEngine.UIElements.UIDocument> m_AttachedUIDocuments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIDocument*>*& UnityEngine::UIElements::UIDocumentList::dyn_m_AttachedUIDocuments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UIDocumentList::dyn_m_AttachedUIDocuments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachedUIDocuments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIDocument*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UIElements.UIDocumentList.RemoveFromListAndFromVisualTree
void UnityEngine::UIElements::UIDocumentList::RemoveFromListAndFromVisualTree(::UnityEngine::UIElements::UIDocument* uiDocument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UIDocumentList::RemoveFromListAndFromVisualTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFromListAndFromVisualTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uiDocument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uiDocument);
}
// Autogenerated method: UnityEngine.UIElements.UIDocumentList.AddToListAndToVisualTree
void UnityEngine::UIElements::UIDocumentList::AddToListAndToVisualTree(::UnityEngine::UIElements::UIDocument* uiDocument, ::UnityEngine::UIElements::VisualElement* visualTree, int firstInsertIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UIDocumentList::AddToListAndToVisualTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToListAndToVisualTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uiDocument), ::il2cpp_utils::ExtractType(visualTree), ::il2cpp_utils::ExtractType(firstInsertIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uiDocument, visualTree, firstInsertIndex);
}
